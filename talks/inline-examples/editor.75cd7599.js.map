{"mappings":"k4BA4EAA,EA9DA,WAGK,SACHC,EAAYC,GAGPC,KACEC,mBAIFD,KACEE,iBAMFF,KACED,KAAOA,EAMTC,KACEG,OAAS,YAQhBL,EAAAM,UAAAC,eAAc,gBACPH,kBAAmB,GAO1BJ,EAAAM,UAAAE,gBAAe,gBACRL,oBAAqB,GAE9BH,EA9CA,GCPAS,EAMgB,+HCNb,IA4BHC,EA3BA,oBACEC,IAKKT,KACEU,UAAW,SAMlBD,EAAAL,UAAAO,QAAO,gBACKD,gBACHA,UAAW,OACXE,oBAQTH,EAAAL,UAAAQ,gBAAe,aACjBH,EAzBA,YCuCgBI,EAA0BC,EAAGC,UACpCD,EAAIC,EAAI,EAAID,EAAIC,GAAI,EAAK,WAqBlBC,EAAkBC,EAAKd,EAAQe,OACvCC,EAAIF,EAAIG,UACVH,EAAI,IAAMd,EAAM,OACX,KACEA,GAAUc,EAAIE,EAAI,GAAC,OACrBA,EAAI,MAEPE,OAAC,KACDH,EAAY,GAAC,IACVG,EAAI,EAAGA,EAAIF,IAAKE,KACfJ,EAAII,GAAKlB,EAAM,OACVkB,EAAI,UAGNH,EAAY,GAAC,IACjBG,EAAI,EAAGA,EAAIF,IAAKE,KACfJ,EAAII,IAAMlB,EAAM,OACXkB,WAINA,EAAI,EAAGA,EAAIF,IAAKE,EAAC,IAChBJ,EAAII,IAAMlB,EAAM,OACXkB,KACEJ,EAAII,GAAKlB,SACdc,EAAII,EAAI,GAAKlB,EAASA,EAASc,EAAII,GAC9BA,EAAI,EAEJA,SAKRF,EAAI,WASCG,EAAgBL,EAAKM,EAAOC,QACnCD,EAAQC,GAAG,KACVC,EAAMR,EAAIM,GAChBN,EAAIM,GAASN,EAAIO,GACjBP,EAAIO,GAAOC,IACTF,IACAC,YASUE,EAAOT,EAAKU,WACpBC,EAAYC,MAAMC,QAAQH,GAAQA,EAAI,CAAIA,GAC1CP,EAASQ,EAAUR,OAChBC,EAAI,EAAGA,EAAID,EAAQC,IAC1BJ,EAAIA,EAAIG,QAAUQ,EAAUP,YA2ChBU,EAAOC,EAAMC,OACrBC,EAAOF,EAAKZ,UACdc,IAASD,EAAKb,OAAM,OACf,UAEAC,EAAI,EAAGA,EAAIa,EAAMb,OACpBW,EAAKX,KAAOY,EAAKZ,GAAC,OACb,SAGJ,WC7KOc,WACP,WAOOC,WACP,WAQOC,SCdHC,EACS,mBAAbC,OAAOC,OACVD,OAAOC,OAAM,SACHrC,EAAQsC,MACZtC,MAAAA,EAAuC,MAAA,IAC/BuC,UAAS,sDAGfC,EAASJ,OAAOpC,GACbkB,EAAI,EAAGuB,EAAKC,UAAUzB,OAAQC,EAAIuB,IAAMvB,EAAC,KAC1CyB,EAASD,UAAUxB,MACrByB,MAAAA,UACSC,KAAOD,EACZA,EAAOE,eAAeD,KACxBJ,EAAOI,GAAOD,EAAOC,WAKtBJ,YAOCM,EAAMC,WACTC,KAAYD,SACdA,EAAOC,OAYLC,EACS,mBAAbb,OAAOc,OACVd,OAAOc,OAAM,SACHH,OACFG,EAAM,WACDF,KAAYD,EACrBG,EAAOC,KAAKJ,EAAOC,WAEdE,YAQCE,EAAQL,OAClBC,MACCA,KAAYD,EAAM,OACd,SAEDC,0cCgHVK,EA/JA,SAAAC,GAGK,SACHC,EAAYC,OAAZC,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKE,aAAeH,EAMpBC,EAAKG,iBAAmB,KAMxBH,EAAKI,aAAe,KAMpBJ,EAAKK,WAAa,cA7BDC,EAAAR,EAAAD,GAoCnBC,EAAAtD,UAAA+D,iBAAgB,SAACpE,EAAMqE,MAChBrE,GAASqE,OAGRC,EAASrE,KAAQiE,aAAUjE,KAAUiE,WAAU,IAC/CK,EAAmBD,EAAUtE,KAAUsE,EAAUtE,GAAI,KAChB,IAAvCuE,EAAiBC,QAAQH,IAC3BE,EAAiBhB,KAAKc,KAc1BV,EAAAtD,UAAAoE,cAAa,SAACC,GACqC,IAC3CC,EAAkB,iBAALD,EAAkB,IAAO5E,EAAM4E,GAASA,EACrD1E,EAAO2E,EAAI3E,KACZ2E,EAAIvE,SACPuE,EAAIvE,OAAMH,KAAQ8D,cAAY9D,UAG5B2E,EADEN,EAASrE,KAAQiE,YAAUjE,KAASiE,WAAWlE,MAEjDsE,EAAS,KACLO,EAAW5E,KAAQgE,eAAYhE,KAAUgE,aAAY,IACrDa,EAAe7E,KACd+D,mBAAgB/D,KAAU+D,iBAAgB,IAC3ChE,KAAQ6E,IACZA,EAAY7E,GAAQ,EACpB8E,EAAgB9E,GAAQ,KAExB6E,EAAY7E,WACLsB,EAAI,EAAGuB,EAAKyB,EAAUjD,OAAQC,EAAIuB,IAAMvB,MAU7B,KARhBsD,kBADmBN,EAAUhD,GACqCgD,EAChEhD,GACCyD,YAAYJ,GAEqDL,EAClEhD,GACCwC,KAAI7D,KAAO0E,KAEWA,EAAIzE,mBAAkB,CAC/C0E,GAAY,aAIdC,EAAY7E,GACY,IAAtB6E,EAAY7E,GAAW,KACrBgF,EAAKF,EAAgB9E,cAClB8E,EAAgB9E,GAChBgF,KAAE/E,KACFgF,oBAAoBjF,EAAMsC,UAE1BuC,EAAY7E,UAEd4E,IAOXjB,EAAAtD,UAAAQ,gBAAe,gBACRqD,YAAchB,EAAKjD,KAAMiE,aAUhCP,EAAAtD,UAAA6E,aAAY,SAAClF,eACEkE,YAAUjE,KAASiE,WAAWlE,SAAUmF,GAQvDxB,EAAAtD,UAAA+E,YAAW,SAACC,gBACAnB,aAGHmB,EACHA,KAAQpF,KAASiE,WACjB1B,OAAO8C,KAAIrF,KAAMiE,YAAY7C,OAAS,IAO5CsC,EAAAtD,UAAA4E,oBAAmB,SAACjF,EAAMqE,OAClBC,EAASrE,KAAQiE,YAAUjE,KAASiE,WAAWlE,MACjDsE,EAAS,KACLiB,EAAQjB,EAAUE,QAAQH,IAClB,IAAVkB,SACOvB,kBAAoBhE,KAAIC,KAAS+D,kBAExCM,EAAUiB,GAASjD,SACZ0B,iBAAiBhE,KAExBsE,EAAUkB,OAAOD,EAAO,GACC,IAArBjB,EAAUjD,eAAYpB,KACZiE,WAAWlE,OAMnC2D,EA7JA,CAAqBlD,GCnBrBgF,EAMQ,SANRA,EAaO,QAbPA,EAiBa,cAjBbA,EAkBO,QAlBPA,EAmBU,WAnBVA,EAoBW,YApBXA,EAqBU,WArBVA,EAsBM,OAtBNA,EAwBS,UAxBTA,EAyBU,WAzBVA,EA0BM,OA1BNA,EA2BQ,SA3BRA,EA4BW,YA5BXA,EA6BO,iBCSSC,EAAOtF,EAAQJ,EAAMqE,EAAUsB,EAAUC,MACnDD,GAAYA,IAAavF,IAC3BiE,EAAWA,EAASwB,KAAKF,IAEvBC,EAAQ,KACJE,EAAmBzB,EACzBA,EAAQ,WACNjE,EAAO6E,oBAAoBjF,EAAMqE,GACjCyB,EAAiBC,MAAK9F,KAAO6C,gBAG3BkD,EAAS,CACb5F,OAAQA,EACRJ,KAAMA,EACNqE,SAAUA,UAEZjE,EAAOgE,iBAAiBpE,EAAMqE,GACvB2B,WAuBOC,EAAW7F,EAAQJ,EAAMqE,EAAUsB,UAC1CD,EAAOtF,EAAQJ,EAAMqE,EAAUsB,GAAU,YAYlCO,EAAclD,GACxBA,GAAOA,EAAI5C,SACb4C,EAAI5C,OAAO6E,oBAAoBjC,EAAIhD,KAAMgD,EAAIqB,UAC7CnB,EAAMF,0eCkBMmD,EAAQnD,MAClBlB,MAAMC,QAAQiB,GAAG,IAAA,IACV1B,EAAI,EAAGuB,EAAKG,EAAI3B,OAAQC,EAAIuB,IAAMvB,EACzC4E,EAAclD,EAAI1B,SAGpB4E,EAA8DlD,OAIlEoD,EAhHA,SAAA1C,YACE2C,QAAAxC,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKyC,UAAY,WARIC,EAAAF,EAAA3C,GAevB2C,EAAAhG,UAAAmG,QAAO,kBACEF,eACF7B,cAAcgB,IASrBY,EAAAhG,UAAAoG,YAAW,uBACGH,WAYdD,EAAAhG,UAAAqG,GAAE,SAAC1G,EAAMqE,MACHvC,MAAMC,QAAQ/B,GAAI,SACd2G,EAAM3G,EAAKqB,OACXiE,EAAI,IAAOxD,MAAM6E,GACdrF,EAAI,EAAGA,EAAIqF,IAAOrF,EACzBgE,EAAKhE,GAAKoE,EAAMzF,KAAOD,EAAKsB,GAAI+C,UAE3BiB,SAEAI,EAAMzF,KAA8BD,EAAOqE,IAatDgC,EAAAhG,UAAAuG,KAAI,SAAC5G,EAAMqE,OACLrB,KACAlB,MAAMC,QAAQ/B,GAAI,KACd2G,EAAM3G,EAAKqB,OACjB2B,EAAG,IAAOlB,MAAM6E,WACPrF,EAAI,EAAGA,EAAIqF,IAAOrF,EACzB0B,EAAI1B,GAAK2E,EAAUhG,KAAOD,EAAKsB,GAAI+C,QAGrCrB,EAAMiD,EAAUhG,KAA8BD,EAAOqE,UAElC,EAAYwC,OAAS7D,EACnCA,GASTqD,EAAAhG,UAAAyG,GAAE,SAAC9G,EAAMqE,OACDrB,EAA6BqB,EAAUwC,UACzC7D,EACFmD,EAAQnD,WACClB,MAAMC,QAAQ/B,GAAI,IAAA,IAClBsB,EAAI,EAAGuB,EAAK7C,EAAKqB,OAAQC,EAAIuB,IAAMvB,EAACrB,KACtCgF,oBAAoBjF,EAAKsB,GAAI+C,aAG/BY,oBAAoBjF,EAAMqE,IAGrCgC,EA9FA,CAAyBU,EAAAC,kBCXTC,gCAEFC,MAAK,qCAQhB,IACCC,EAAc,WAWFC,EAAOC,UACdA,EAAIC,SAAWD,EAAIC,OAASC,SAASJ,QAOjCK,EAAO,0eCxBpBC,GAAA,SAAA/D,GAKK,SACHgE,EAAY1H,EAAMgD,EAAK2E,OAAvB9D,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAOV4D,EAAKb,IAAMA,EAQXa,EAAK8D,SAAWA,WAtBaC,EAAAF,EAAAhE,GAwBjCgE,EAxBA,CAAiC5H,GAqEjC+H,GAAA,SAAAnE,GAGK,SACHoE,EAAYC,OAAZlE,EACEH,EAAAI,KAAA7D,OAAAA,YAMAmH,EAAOvD,GAMPA,EAAKmE,QAAU,UAEI7C,IAAf4C,GACFlE,EAAKoE,cAAcF,YApBAH,EAAAE,EAAApE,GA8BvBoE,EAAAzH,UAAA6H,IAAG,SAAClF,OACEmF,cACKH,SAAO/H,KAAS+H,QAAQ/E,eAAeD,KAC9CmF,EAAKlI,KAAQ+H,QAAQhF,IAEhBmF,GAQTL,EAAAzH,UAAA+H,QAAO,uBACQJ,SAAWxF,OAAO8C,KAAIrF,KAAM+H,UAAO,IAQlDF,EAAAzH,UAAAgI,cAAa,uBACEL,SAAWzF,EAAM,QAAUyF,UAAO,IAMjDF,EAAAzH,UAAAiI,cAAa,wBACGN,SAOhBF,EAAAzH,UAAAkI,OAAM,SAACvF,EAAK2E,OACNa,EACJA,EAAYC,GAAmBzF,QAC1ByB,cAAa,IAAKgD,GAAYe,EAAWxF,EAAK2E,IACnDa,EAAYhI,OACPiE,cAAa,IAAKgD,GAAYe,EAAWxF,EAAK2E,KAUrDG,EAAAzH,UAAAqI,IAAG,SAAC1F,EAAKmF,EAAOQ,OACRrF,EAAMrD,KAAQ+H,UAAO/H,KAAU+H,QAAO,OACxCW,EACFrF,EAAON,GAAOmF,WAERR,EAAWrE,EAAON,GACxBM,EAAON,GAAOmF,EACVR,IAAaQ,GAAKlI,KACfsI,OAAOvF,EAAK2E,KAYvBG,EAAAzH,UAAA4H,cAAa,SAAC3E,EAAQqF,WACT3F,KAAOM,EAAMrD,KACjByI,IAAI1F,EAAKM,EAAON,GAAM2F,IAS/Bb,EAAAzH,UAAAuI,gBAAe,SAAC7F,GACTA,EAAOiF,SAGZzF,EAAMtC,KAAM+H,UAAO/H,KAAU+H,QAAO,IAAQjF,EAAOiF,UASrDF,EAAAzH,UAAAwI,MAAK,SAAC7F,EAAK2F,WACAX,SAAWhF,KAAG/C,KAAS+H,QAAO,KAC/BL,EAAQ1H,KAAQ+H,QAAQhF,eAClBgF,QAAQhF,GAChBQ,EAAOvD,KAAM+H,WAAO/H,KACjB+H,QAAU,MAEZW,GAAU1I,KACRsI,OAAOvF,EAAK2E,KAIzBG,EA1IA,CAAyBgB,EAAA9B,SA+InB+B,GAAoB,YAMVN,GAAmBzF,UAC1B+F,GAAqB9F,eAAeD,GACvC+F,GAAqB/F,GACpB+F,GAAqB/F,GAAG,UAAgBA,MAG/CgG,GAAenB,0gBChMfoB,GAnCA,SAAAvF,GAGK,SACHwF,EAAYC,OAAZtF,EAAA5D,KAEQmJ,EAAO,oDAD8B,IAAS5B,EAAQ6B,MAAK,KAAM,IAGjE,gBAEJF,EAAI,uBAGNtF,EAAAH,EAAAI,KAAA7D,KAAMmJ,IAAOnJ,MAURkJ,KAAOA,EAKZtF,EAAKyF,KAAI,iBAGTzF,EAAKuF,QAAUA,WA/BUG,GAAAL,EAAAxF,GAiC7BwF,EAjCA,CAA6BhC,gBCDbsC,GAAOC,EAAWC,OAC3BD,EAAS,MAAA,IACFE,GAAA3C,QAAe0C,0eC8RbE,GAAoBvC,SACpB,mBAAHA,EACFA,GAMHvF,MAAMC,QAAQsF,GAChBwC,EAASxC,GAETmC,GAA+C,mBAAdnC,EAAKyC,UAA2B,IAEjED,EAAM,CAD2DxC,sBAI1DwC,IAVN,IACCA,MAaRE,GAhQA,SAAArG,GAMK,SACHsG,EAAYC,OAAZpG,EACEH,EAAAI,KAAA7D,OAAAA,QAMA4D,EAAKqG,SAAM/E,EAMXtB,EAAKsG,cAAa,WAOlBtG,EAAKuG,OAAS,KAMdvG,EAAKwG,oBAAiBlF,EAMtBtB,EAAKyG,mBAAqB,KAE1BzG,EAAKO,iBACHmG,EAAAC,mBAAmB3G,EAAKsG,eACxBtG,EAAK4G,wBAGHR,KAGmE,mBAA/CA,EAA0BS,sBAC9B,KAEVC,EAAoCV,EAC1CpG,EAAK+G,YAAYD,QAEe,IAC1BE,EAAaZ,EACnBpG,EAAKoE,cAAc4C,mBAzDLC,GAAAd,EAAAtG,GAoEpBsG,EAAA3J,UAAA0K,MAAK,eACGA,EAAK,IAAOf,EAAO/J,KAClBqI,gBAAarI,KAAUoI,gBAAkB,MAEhD0C,EAAMC,gBAAe/K,KAAMgL,uBACrBN,EAAQ1K,KAAQiL,cAClBP,GACFI,EAAMH,YAAYD,EAASI,aAEvBI,EAAKlL,KAAQmL,kBACfD,GACFJ,EAAMM,SAASF,GAEVJ,GAWTf,EAAA3J,UAAA6K,YAAW,uBACsChD,IAAGjI,KAAMkK,gBAU1DH,EAAA3J,UAAAiL,MAAK,uBACSpB,KAUdF,EAAA3J,UAAA4K,gBAAe,uBACDd,eASdH,EAAA3J,UAAA+K,SAAQ,uBACMhB,QASdJ,EAAA3J,UAAAkL,iBAAgB,uBACFlB,gBAMdL,EAAA3J,UAAAmL,sBAAqB,gBACdhF,WAMPwD,EAAA3J,UAAAoK,uBAAsB,gBACXH,qBACPpE,EAAajG,KAAMqK,yBACdA,mBAAqB,UAEtBK,EAAQ1K,KAAQiL,cAClBP,IAAQ1K,KACLqK,mBAAqB5E,EACxBiF,EACAlF,EAAgBxF,KACXuL,sBAAqBvL,YAIzBuG,WAUPwD,EAAA3J,UAAAuK,YAAW,SAACD,QACLjC,IAAGzI,KAAMkK,cAAeQ,IAY/BX,EAAA3J,UAAAgL,SAAQ,SAACI,QACFrB,OAASqB,OACTpB,eAAkBoB,EAEnB7B,GAAoB6B,QADpBtG,OAECqB,WAYPwD,EAAA3J,UAAAqL,MAAK,SAACC,QACCzB,IAAMyB,OACNnF,WAUPwD,EAAA3J,UAAA2K,gBAAe,SAAC1B,QACTrE,oBACHsF,EAAAC,mBAAkBvK,KAAMkK,eAAalK,KAChCwK,6BAEFN,cAAgBb,OAChBlF,iBACHmG,EAAAC,mBAAkBvK,KAAMkK,eAAalK,KAChCwK,6BAEFA,0BAETT,EAlOA,CAAsBO,EAAAvD,+FCrDnB,IACG4E,GAAK,CAKTC,QAAO,UAKPC,KAAI,KAKJC,OAAM,IAKNC,OAAM,SAKNC,YAAW,cAKXC,OAAM,SASKC,GAAe,GAE5BA,GAAgBP,GAAMC,SAAY,EAAIO,KAAKC,GAAK,QAAW,IAC3DF,GAAgBP,GAAME,MAAQ,MAC9BK,GAAgBP,GAAMG,QAAU,EAChCI,GAAgBP,GAAMM,QAAU,KAAO,SAEvCI,GAAeV,GC3BL,IAAO9J,MAAM,YA6DPyK,GAAIC,EAAWzL,EAAGC,EAAGyL,EAAGC,EAAGC,EAAGC,UAC5CJ,EAAU,GAAKzL,EACfyL,EAAU,GAAKxL,EACfwL,EAAU,GAAKC,EACfD,EAAU,GAAKE,EACfF,EAAU,GAAKG,EACfH,EAAU,GAAKI,EACRJ,WA4BOK,GAAML,EAAWM,OACzBC,EAAID,EAAW,GACfE,EAAIF,EAAW,UACrBA,EAAW,GAAKN,EAAU,GAAKO,EAAIP,EAAU,GAAKQ,EAAIR,EAAU,GAChEM,EAAW,GAAKN,EAAU,GAAKO,EAAIP,EAAU,GAAKQ,EAAIR,EAAU,GACzDM,WA6DOG,GAAQT,EAAWU,EAAKC,EAAKC,EAAIC,EAAIC,EAAOC,EAAKC,OACzDC,EAAMrB,KAAKqB,IAAIH,GACfI,EAAMtB,KAAKsB,IAAIJ,UACrBd,EAAU,GAAKY,EAAKM,EACpBlB,EAAU,GAAKa,EAAKI,EACpBjB,EAAU,IAAMY,EAAKK,EACrBjB,EAAU,GAAKa,EAAKK,EACpBlB,EAAU,GAAKe,EAAMH,EAAKM,EAAMF,EAAMJ,EAAKK,EAAMP,EACjDV,EAAU,GAAKe,EAAMF,EAAKI,EAAMD,EAAMH,EAAKK,EAAMP,EAC1CX,WAqCOmB,GAAYvN,EAAQ2C,OA0BR6K,EAzBpBC,GAyBoBD,EAzBF7K,GA0Bb,GAAK6K,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAzBtCpE,GAAe,IAARqE,EAAW,QAEZ9M,EAAIgC,EAAO,GACX/B,EAAI+B,EAAO,GACX0J,EAAI1J,EAAO,GACX2J,EAAI3J,EAAO,GACX4J,EAAI5J,EAAO,GACX6J,EAAI7J,EAAO,UAEjB3C,EAAO,GAAKsM,EAAImB,EAChBzN,EAAO,IAAMY,EAAI6M,EACjBzN,EAAO,IAAMqM,EAAIoB,EACjBzN,EAAO,GAAKW,EAAI8M,EAChBzN,EAAO,IAAMqM,EAAIG,EAAIF,EAAIC,GAAKkB,EAC9BzN,EAAO,KAAOW,EAAI6L,EAAI5L,EAAI2L,GAAKkB,EAExBzN,WAkBO0N,GAASF,mBACJA,EAAIG,KAAI,MAAK,QCzQlCC,GACW,EADXA,GAEgB,EAFhBA,GAGS,EAHTA,GAIS,EAJTA,GAKS,EALTA,GAMQ,YCMQC,GAAeC,WACvBC,EAASC,KACN9M,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAQC,EAAIuB,IAAMvB,EACjD+M,GAAiBF,EAAQD,EAAY5M,WAEhC6M,WA0BOG,GAAOH,EAAQhG,EAAOoG,UAChCA,GACFA,EAAW,GAAKJ,EAAO,GAAKhG,EAC5BoG,EAAW,GAAKJ,EAAO,GAAKhG,EAC5BoG,EAAW,GAAKJ,EAAO,GAAKhG,EAC5BoG,EAAW,GAAKJ,EAAO,GAAKhG,EACrBoG,IAGLJ,EAAO,GAAKhG,EACZgG,EAAO,GAAKhG,EACZgG,EAAO,GAAKhG,EACZgG,EAAO,GAAKhG,YAYFqG,GAAML,EAAQI,UACxBA,GACFA,EAAW,GAAKJ,EAAO,GACvBI,EAAW,GAAKJ,EAAO,GACvBI,EAAW,GAAKJ,EAAO,GACvBI,EAAW,GAAKJ,EAAO,GAChBI,GAEAJ,EAAOM,iBAUFC,GAAyBP,EAAQpB,EAAGC,OAC9C2B,EAAIC,SAEND,EADE5B,EAAIoB,EAAO,GACRA,EAAO,GAAKpB,EACRoB,EAAO,GAAKpB,EAChBA,EAAIoB,EAAO,GAEX,GASKQ,GANVC,EADE5B,EAAImB,EAAO,GACRA,EAAO,GAAKnB,EACRmB,EAAO,GAAKnB,EAChBA,EAAImB,EAAO,GAEX,GAEeS,WAWRC,GAAmBV,EAAQrB,UAClCgC,GAAWX,EAAQrB,EAAW,GAAIA,EAAW,aAetCiC,GAAeC,EAASC,UAEpCD,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,YAaVF,GAAWX,EAAQpB,EAAGC,UAC7BmB,EAAO,IAAMpB,GAAKA,GAAKoB,EAAO,IAAMA,EAAO,IAAMnB,GAAKA,GAAKmB,EAAO,YAU3De,GAAuBf,EAAQrB,OACvCqC,EAAOhB,EAAO,GACdiB,EAAOjB,EAAO,GACdkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdpB,EAAID,EAAW,GACfE,EAAIF,EAAW,GACjByC,EAAevB,UACfjB,EAAIoC,EACNI,GAA8BvB,GACrBjB,EAAIsC,IACbE,GAA8BvB,IAE5BhB,EAAIoC,EACNG,GAA8BvB,GACrBhB,EAAIsC,IACbC,GAA8BvB,IAE5BuB,IAAiBvB,KACnBuB,EAAevB,IAEVuB,WAQOnB,YACNoB,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,YAY1BC,GAAeN,EAAMC,EAAMC,EAAMC,EAAMf,UACjDA,GACFA,EAAW,GAAKY,EAChBZ,EAAW,GAAKa,EAChBb,EAAW,GAAKc,EAChBd,EAAW,GAAKe,EACTf,IAECY,EAAMC,EAAMC,EAAMC,YASdI,GAAoBnB,UAC3BkB,GAAeD,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,EAAUjB,YAQlDoB,GAA6B7C,EAAYyB,OACjDxB,EAAID,EAAW,GACfE,EAAIF,EAAW,UACd2C,GAAe1C,EAAGC,EAAGD,EAAGC,EAAGuB,YAqBpBqB,GACdC,EACAC,EACArO,EACAsO,EACAxB,UAGOyB,GADQN,GAAoBnB,GACEsB,EAAiBC,EAAQrO,EAAKsO,YAoBrDE,GAAOjB,EAASC,UAE5BD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,YA+CVZ,GAAiBF,EAAQrB,GACnCA,EAAW,GAAKqB,EAAO,KACzBA,EAAO,GAAKrB,EAAW,IAErBA,EAAW,GAAKqB,EAAO,KACzBA,EAAO,GAAKrB,EAAW,IAErBA,EAAW,GAAKqB,EAAO,KACzBA,EAAO,GAAKrB,EAAW,IAErBA,EAAW,GAAKqB,EAAO,KACzBA,EAAO,GAAKrB,EAAW,aASXoD,GAAkB/B,EAAQD,WAC/B5M,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAQC,EAAIuB,IAAMvB,EACjD+M,GAAiBF,EAAQD,EAAY5M,WAEhC6M,WAWO6B,GACd7B,EACA0B,EACAC,EACArO,EACAsO,QAEOD,EAASrO,EAAKqO,GAAUC,EAC7BI,GAAShC,EAAQ0B,EAAgBC,GAASD,EAAgBC,EAAS,WAE9D3B,WAoBOgC,GAAShC,EAAQpB,EAAGC,GAClCmB,EAAO,GAAK/B,KAAKgE,IAAIjC,EAAO,GAAIpB,GAChCoB,EAAO,GAAK/B,KAAKgE,IAAIjC,EAAO,GAAInB,GAChCmB,EAAO,GAAK/B,KAAKiE,IAAIlC,EAAO,GAAIpB,GAChCoB,EAAO,GAAK/B,KAAKiE,IAAIlC,EAAO,GAAInB,YAYlBsD,GAAcnC,EAAQoC,OAChCC,SACJA,EAAMD,EAASE,GAActC,OAI7BqC,EAAMD,EAASG,GAAevC,OAI9BqC,EAAMD,EAASI,GAAYxC,KANlBqC,GAUTA,EAAMD,EAASK,GAAWzC,OAInB,WAuBOsC,GAActC,UACpBA,EAAO,GAAIA,EAAO,aASZuC,GAAevC,UACrBA,EAAO,GAAIA,EAAO,aASZ0C,GAAU1C,WACfA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,YA8CjD2C,GACdC,EACAC,EACAC,EACAC,EACA3C,OAEMI,EAAMqC,EAAaE,EAAK,GAAM,EAC9BtC,EAAMoC,EAAaE,EAAK,GAAM,EAC9BC,EAAc/E,KAAKsB,IAAIuD,GACvBG,EAAchF,KAAKqB,IAAIwD,GACvBI,EAAO1C,EAAKwC,EACZG,EAAO3C,EAAKyC,EACZG,EAAO3C,EAAKuC,EACZK,EAAO5C,EAAKwC,EACZrE,EAAIgE,EAAO,GACX/D,EAAI+D,EAAO,GACXU,EAAK1E,EAAIsE,EAAOG,EAChBE,EAAK3E,EAAIsE,EAAOG,EAChBG,EAAK5E,EAAIsE,EAAOG,EAChBI,EAAK7E,EAAIsE,EAAOG,EAChBK,EAAK7E,EAAIsE,EAAOC,EAChBO,EAAK9E,EAAIsE,EAAOC,EAChBQ,EAAK/E,EAAIsE,EAAOC,EAChBS,EAAKhF,EAAIsE,EAAOC,SACf9B,GACLrD,KAAKgE,IAAIqB,EAAIC,EAAIC,EAAIC,GACrBxF,KAAKgE,IAAIyB,EAAIC,EAAIC,EAAIC,GACrB5F,KAAKiE,IAAIoB,EAAIC,EAAIC,EAAIC,GACrBxF,KAAKiE,IAAIwB,EAAIC,EAAIC,EAAIC,GACrBzD,YAUY0D,GAAU9D,UACjBA,EAAO,GAAKA,EAAO,YAqBZ+D,GAAgBlD,EAASC,EAASV,OAC1C4D,EAAe5D,IA1YbiB,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,UA2YjC4C,GAAWpD,EAASC,IAClBD,EAAQ,GAAKC,EAAQ,GACvBkD,EAAa,GAAKnD,EAAQ,GAE1BmD,EAAa,GAAKlD,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBkD,EAAa,GAAKnD,EAAQ,GAE1BmD,EAAa,GAAKlD,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBkD,EAAa,GAAKnD,EAAQ,GAE1BmD,EAAa,GAAKlD,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBkD,EAAa,GAAKnD,EAAQ,GAE1BmD,EAAa,GAAKlD,EAAQ,IAG5BS,GAAoByC,GAEfA,WA2BOvB,GAAWzC,UACjBA,EAAO,GAAIA,EAAO,aASZwC,GAAYxC,UAClBA,EAAO,GAAIA,EAAO,aASZkE,GAASlE,UAChBA,EAAO,GAAKA,EAAO,YAUZiE,GAAWpD,EAASC,UAEhCD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,YAUVqD,GAAQnE,UACfA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,YA4GrCoE,GAAepE,EAAQqE,EAAajE,EAAYkE,OAC1DvE,EAAW,MACXuE,EAAY,UACRC,EAAQvE,EAAO,GAAKA,EAAO,GAC3BwE,EAASxE,EAAO,GAAKA,EAAO,GACzB7M,EAAI,EAAGA,EAAImR,IAAanR,EAC/B4M,EAAY3K,KACV4K,EAAO,GAAMuE,EAAQpR,EAAKmR,EAC1BtE,EAAO,GACPA,EAAO,GACPA,EAAO,GAAMwE,EAASrR,EAAKmR,EAC3BtE,EAAO,GAAMuE,EAAQpR,EAAKmR,EAC1BtE,EAAO,GACPA,EAAO,GACPA,EAAO,GAAMwE,EAASrR,EAAKmR,QAI/BvE,EAAW,CACTC,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGXqE,EAAYtE,EAAaA,EAAa,WAChC0E,EAAE,GACFC,EAAE,GACQC,GAAPxR,EAAI,EAAO4M,EAAY7M,QAAQC,EAAIwR,EAAGxR,GAAK,EAClDsR,EAAGrP,KAAK2K,EAAY5M,IACpBuR,EAAGtP,KAAK2K,EAAY5M,EAAI,WA5xBzB,SACyBsR,EAAIC,EAAItE,UAK3BkB,GAJMrD,KAAKgE,IAAIrK,MAAM,KAAM6M,GACrBxG,KAAKgE,IAAIrK,MAAM,KAAM8M,GACrBzG,KAAKiE,IAAItK,MAAM,KAAM6M,GACrBxG,KAAKiE,IAAItK,MAAM,KAAM8M,GACYtE,GAwxBvCwE,CAAmBH,EAAIC,EAAItE,kIC9wBjC,IA4NHyE,GA3NA,WAGK,SACHC,EAAYC,GAIPjT,KACEkT,MAAQD,EAAQ/J,KAQlBlJ,KACEmT,OAAsDF,EAAQG,MAQhEpT,KACEqT,aAA6BnO,IAAnB+N,EAAQ/E,OAAuB+E,EAAQ/E,OAAS,KAQ5DlO,KACEsT,kBACqBpO,IAAxB+N,EAAQM,YAA4BN,EAAQM,YAAc,KAKzDvT,KACEwT,sBACyBtO,IAA5B+N,EAAQQ,gBAAgCR,EAAQQ,gBAAe,MAK9DzT,KACE0T,aAA6BxO,IAAnB+N,EAAQU,QAAuBV,EAAQU,OAKnD3T,KACE4T,aAAS5T,KAAW0T,UAAO1T,KAASqT,SAKtCrT,KACE6T,wBAA0BZ,EAAQa,mBAKpC9T,KACE+T,iBAAmB,KAKrB/T,KACEgU,eAAiBf,EAAQgB,qBAMhCjB,EAAA5S,UAAA8T,SAAQ,uBACMN,WAQdZ,EAAA5S,UAAA+T,QAAO,uBACOjB,OAQdF,EAAA5S,UAAAgU,UAAS,uBACKf,SAQdL,EAAA5S,UAAAiU,SAAQ,uBACMlB,QAUdH,EAAA5S,UAAAkU,iBAAgB,uBACFN,gBAAkB9H,GAAelM,KAAMmT,SAQrDH,EAAA5S,UAAAmU,eAAc,uBACAjB,cAcdN,EAAA5S,UAAAoU,mBAAkB,uBACJhB,kBAQdR,EAAA5S,UAAAqU,SAAQ,uBACMf,SAQdV,EAAA5S,UAAAsU,UAAS,SAACf,QACHD,QAAUC,OACVC,aAAeD,IAAM3T,KAASqT,UAMrCL,EAAA5S,UAAAuU,mBAAkB,uBACJZ,kBAMdf,EAAA5S,UAAAwU,mBAAkB,SAACC,QACZd,iBAAmBc,GAQ1B7B,EAAA5S,UAAA0U,UAAS,SAAC5G,QACHmF,QAAUnF,OACV0F,aAAS5T,KAAW0T,UAAWxF,IAStC8E,EAAA5S,UAAA2U,eAAc,SAACxB,QACRD,aAAeC,GAStBP,EAAA5S,UAAA4U,sBAAqB,SAACC,QACfpB,wBAA0BoB,GAQjCjC,EAAA5S,UAAA8U,uBAAsB,uBACRrB,yBAEhBb,EAzNA,YCvCgBmC,GAAMjN,EAAOiI,EAAKC,UACzBjE,KAAKgE,IAAIhE,KAAKiE,IAAIlI,EAAOiI,GAAMC,OAY3BgF,YAIGjJ,KAELA,KAAKkJ,KAGR,SAAavI,OACTC,EAAyBZ,KAAMmJ,IAAIxI,UACjCC,EAAI,EAAIA,GAAK,YAmBXZ,MAELA,KAAKoJ,cAqBAC,GAAuB1I,EAAGC,EAAG0E,EAAII,EAAIH,EAAII,OACjDpD,EAAKgD,EAAKD,EACV9C,EAAKmD,EAAKD,KACL,IAAPnD,GAAmB,IAAPC,EAAQ,KAChB8G,IAAM3I,EAAI2E,GAAM/C,GAAM3B,EAAI8E,GAAMlD,IAAOD,EAAKA,EAAKC,EAAKA,GACxD8G,EAAI,GACNhE,EAAKC,EACLG,EAAKC,GACI2D,EAAI,IACbhE,GAAM/C,EAAK+G,EACX5D,GAAMlD,EAAK8G,UAGRC,GAAgB5I,EAAGC,EAAG0E,EAAII,YAWnB6D,GAAgBjE,EAAII,EAAIH,EAAII,OACpCpD,EAAKgD,EAAKD,EACV9C,EAAKmD,EAAKD,SACTnD,EAAKA,EAAKC,EAAKA,WAgERgH,GAAUC,UACC,IAAjBA,EAAwBzJ,KAAKC,YASvByJ,GAAUC,UAChBA,EAAiB3J,KAAKC,GAAM,aAUtB2J,GAAOjV,EAAGC,OAClBiV,EAAIlV,EAAIC,SACPiV,EAAIjV,EAAI,EAAIiV,EAAIjV,EAAIiV,WAWbC,GAAKnV,EAAGC,EAAG+L,UAClBhM,EAAIgM,GAAK/L,EAAID,ieC/LToV,GAAS,QAMTC,GAAYhK,KAAKC,GAAK8J,GAMtBE,GAAM,EAAKD,IAAYA,GAAWA,GAAWA,IAM7CE,GAAY,EAAI,KAAM,GAAK,IAAK,IAOhCC,GAAaJ,GAAS/J,KAAKoK,IAAIpK,KAAKqK,IAAIrK,KAAKC,GAAK,IAM/DqK,GAAA,SAAAhT,GAGK,SACHiT,EAAYxN,UACVzF,EAAAI,KAAA7D,KAAA,CACEkJ,KAAMA,EACNkK,MAAO/G,GAAMP,OACboC,OAAQkI,GACRzC,QAAQ,EACRJ,YAAa8C,GACbvC,mBAAkB,SAAY/C,EAAY4F,UACjC5F,EAAaqE,GAAKuB,EAAM,GAAKT,oBAZXU,GAAAF,EAAAjT,GAgBjCiT,EAhBA,CAAiC3D,IAwBpB8D,GAAW,KAClBJ,GAAkB,iBAClBA,GAAkB,mBAClBA,GAAkB,mBAClBA,GAAkB,mBAClBA,GAAkB,0DAWRK,GAAaC,EAAOC,EAAYC,OACxC7V,EAAS2V,EAAM3V,OACf8V,EAAYD,EAAgB,EAAIA,EAAgB,EAClDtU,EAASqU,OACE9R,IAAXvC,IAGAA,EAFEuU,EAAY,EAELH,EAAMvI,QAET,IAAO3M,MAAMT,YAGdC,EAAI,EAAGA,EAAID,EAAQC,GAAK6V,EAAS,CACxCvU,EAAOtB,GAAM8U,GAAYY,EAAM1V,GAAM,QACjC0L,EAAImJ,GAAS/J,KAAKoK,IAAIpK,KAAKqK,IAAKrK,KAAKC,KAAO2K,EAAM1V,EAAI,GAAK,IAAO,MAClE0L,EAAIuJ,GACNvJ,EAAIuJ,GACKvJ,GAAKuJ,KACdvJ,GAAKuJ,IAEP3T,EAAOtB,EAAI,GAAK0L,SAEXpK,WAWOwU,GAAWJ,EAAOC,EAAYC,OACtC7V,EAAS2V,EAAM3V,OACf8V,EAAYD,EAAgB,EAAIA,EAAgB,EAClDtU,EAASqU,OACE9R,IAAXvC,IAGAA,EAFEuU,EAAY,EAELH,EAAMvI,QAET,IAAO3M,MAAMT,YAGdC,EAAI,EAAGA,EAAID,EAAQC,GAAK6V,EAC/BvU,EAAOtB,GAAM,IAAM0V,EAAM1V,GAAM8U,GAC/BxT,EAAOtB,EAAI,GACR,IAAM8K,KAAKiL,KAAKjL,KAAKmJ,IAAIyB,EAAM1V,EAAI,GAAK6U,KAAY/J,KAAKC,GAAK,UAE5DzJ,ihBClHI0U,GAAM,EAAI,KAAM,GAAK,IAAK,IAM1BC,GAdS,QAcUnL,KAAKC,GAAe,IAUpDmL,GAAA,SAAA9T,GAIK,SACH+T,EAAYtO,EAAMuO,UAChBhU,EAAAI,KAAA7D,KAAA,CACEkJ,KAAMA,EACNkK,MAAO/G,GAAMT,QACbsC,OAAQmJ,GACR5D,gBAAiBgE,EACjB9D,QAAQ,EACRM,cAAeqD,GACf/D,YAAa8D,kBAbcK,GAAAF,EAAA/T,GAgBjC+T,EAhBA,CAAiCzE,IAwBpB4E,GAAW,KAClBJ,GAAkB,cAClBA,GAAkB,YAAY,WAC9BA,GAAkB,qCAClBA,GAAkB,gCAClBA,GAAkB,+CAA+C,QC1DnEK,GAAK,GCCN,IACCC,GAAU,YAiBEC,GAAIhV,EAAQiV,EAAaxF,OACjCyF,EAAalV,EAAOqR,UACpB8D,EAAkBF,EAAY5D,UAC9B6D,KAAcH,KAClBA,GAAWG,GAAU,IAEvBH,GAAWG,GAAYC,GAAmB1F,MCtB5C2F,GACO,QADPA,GAEa,aAFbA,GAGa,aAHbA,GAIS,UAJTA,GAKa,aALbA,GAMmB,kBANnBA,GAOe,eAPfA,GAQqB,qBARrBA,GASQ,SCIKC,GAAiB,mBAgNdC,GAAOC,EAAIC,EAAUC,EAASC,OACtCC,EAASD,GAAcL,GACvBO,EAAO7C,GAAUwC,EAAG,IACpBM,EAAO9C,GAAUwC,EAAG,IACpBO,EAAON,EAAWG,EAClBI,EAAM1M,KAAK2M,KACf3M,KAAKqB,IAAIkL,GAAQvM,KAAKsB,IAAImL,GACxBzM,KAAKsB,IAAIiL,GAAQvM,KAAKqB,IAAIoL,GAAQzM,KAAKsB,IAAI8K,WAQvC5C,GALNgD,EACAxM,KAAK4M,MACH5M,KAAKqB,IAAI+K,GAAWpM,KAAKqB,IAAIoL,GAAQzM,KAAKsB,IAAIiL,GAC9CvM,KAAKsB,IAAImL,GAAQzM,KAAKqB,IAAIkL,GAAQvM,KAAKqB,IAAIqL,KAEvBlD,GAAUkD,aCjKpBG,GAAiBnM,EAAYoM,OAevCnM,EAAGC,EAdDyE,EAAK3E,EAAW,GAChB+E,EAAK/E,EAAW,GAChBqM,EAAQD,EAAQ,GAChBzX,EAAMyX,EAAQ,GACdxH,EAAKyH,EAAM,GACXrH,EAAKqH,EAAM,GACXxH,EAAKlQ,EAAI,GACTsQ,EAAKtQ,EAAI,GACTkN,EAAKgD,EAAKD,EACV9C,EAAKmD,EAAKD,EACVsH,EACG,IAAPzK,GAAmB,IAAPC,EACR,GACCD,GAAM8C,EAAKC,GAAM9C,GAAMiD,EAAKC,KAAQnD,EAAKA,EAAKC,EAAKA,GAAM,UAE5DwK,GAAS,GACXrM,EAAI2E,EACJ1E,EAAI8E,GACKsH,GAAS,GAClBrM,EAAI4E,EACJ3E,EAAI+E,IAEJhF,EAAI2E,EAAK0H,EAAQzK,EACjB3B,EAAI8E,EAAKsH,EAAQxK,IAEX7B,EAAGC,YAkIGqM,GAAOC,EAAaC,WAC9BC,GAAS,EACJlY,EAAIgY,EAAYjY,OAAS,EAAGC,GAAK,IAAKA,EAAC,GAC1CgY,EAAYhY,IAAMiY,EAAYjY,GAAC,CACjCkY,GAAS,eAINA,WAqBOC,GAAO3M,EAAYQ,OAC3BoM,EAAWtN,KAAKsB,IAAIJ,GACpBqM,EAAWvN,KAAKqB,IAAIH,GACpBP,EAAID,EAAW,GAAK4M,EAAW5M,EAAW,GAAK6M,EAC/C3M,EAAIF,EAAW,GAAK4M,EAAW5M,EAAW,GAAK6M,SACrD7M,EAAW,GAAKC,EAChBD,EAAW,GAAKE,EACTF,WA+BO8M,GAAgBC,EAAQC,OAChCnL,EAAKkL,EAAO,GAAKC,EAAO,GACxBlL,EAAKiL,EAAO,GAAKC,EAAO,UACvBnL,EAAKA,EAAKC,EAAKA,WAQRmL,GAASF,EAAQC,UACxB1N,KAAK4N,KAAKJ,GAAgBC,EAAQC,aAW3BG,GAAyBnN,EAAYoM,UAC5CU,GAAgB9M,EAAYmM,GAAiBnM,EAAYoM,aA+ElDgB,GAAMpN,EAAYqN,MAC5BA,EAAWhG,WAAQ,KACfiG,EAAa/H,GAAS8H,EAAW9F,aACjCgG,EAAaC,GAAcxN,EAAYqN,EAAYC,GACrDC,IACFvN,EAAW,IAAMuN,EAAaD,UAG3BtN,WAQOwN,GAAcxN,EAAYqN,EAAYI,OAC9CC,EAAmBL,EAAW9F,YAChCgG,EAAa,KAEfF,EAAWhG,aACVrH,EAAW,GAAK0N,EAAiB,IAAM1N,EAAW,GAAK0N,EAAiB,IAAC,KAEpEC,EACJF,GAAyBlI,GAASmI,GACpCH,EAAajO,KAAKsO,OACf5N,EAAW,GAAK0N,EAAiB,IAAMC,UAGrCJ,WC9UOM,GAAe3D,EAAOC,EAAYC,OAC5CtU,UACeuC,IAAf8R,EAAwB,SACjB3V,EAAI,EAAGuB,EAAKmU,EAAM3V,OAAQC,EAAIuB,IAAMvB,EAC3C2V,EAAW3V,GAAK0V,EAAM1V,GAExBsB,EAASqU,OAETrU,EAASoU,EAAMvI,eAEV7L,WASOgY,GAAkB5D,EAAOC,EAAYC,WAChC/R,IAAf8R,GAA4BD,IAAUC,EAAU,SACzC3V,EAAI,EAAGuB,EAAKmU,EAAM3V,OAAQC,EAAIuB,IAAMvB,EAC3C2V,EAAW3V,GAAK0V,EAAM1V,GAExB0V,EAAQC,SAEHD,WAUO6D,GAAcV,aL5GVhR,EAAMgR,GACxBtC,GAAM1O,GAAQgR,EK4GdW,CAAQX,EAAW/F,UAAW+F,GAC9BpC,GAAiBoC,EAAYA,EAAYQ,aAmB3BI,GAAIC,SACU,iBAAdA,EL7IZnD,GAFgB1O,EKgJiB6R,IL7IjCnD,GAAM1O,EAAK8R,QAAO,yCAAA,aAClB,KK6I6BD,GAAmB,SLjJhC7R,WKsOJ+R,GAAyBC,aArGVA,GAC7BA,EAAYC,QAAQP,IAqGpBQ,CAAeF,GACfA,EAAYC,SAAO,SAAWrY,GAC5BoY,EAAYC,SAAO,SAAWpD,GACxBjV,IAAWiV,GACbD,GAAiBhV,EAAQiV,EAAa2C,mBA8C9BW,GAAiBnB,EAAYoB,UACtCpB,EAEuB,iBAAVA,EACTY,GAAIZ,GAEuBA,EAJ3BY,GAAIQ,YA2HCC,GAAWC,EAAaC,MAClCD,IAAgBC,EAAW,OACtB,MAEHC,EAAaF,EAAYnH,aAAeoH,EAAYpH,kBACtDmH,EAAYrH,YAAcsH,EAAYtH,WAGlBwH,GAA4BH,EAAaC,KACtCf,KAHlBgB,WAgBKC,GACdC,EACAC,OAIIC,WJ1Yc9D,EAAYC,OAC1B1L,SACAyL,KAAcH,IAAcI,KAAmBJ,GAAWG,KAC5DzL,EAAYsL,GAAWG,GAAYC,IAE9B1L,EIqYawP,CAFDH,EAAiBzH,UACZ0H,EAAsB1H,kBAEzC2H,IACHA,EAAgBnB,IAEXmB,WAaOE,GAAalZ,EAAQiV,UAG5B4D,GAFkBb,GAAIhY,GACCgY,GAAI/C,aAkBpBkE,GAAUpP,EAAY/J,EAAQiV,UACtBiE,GAAalZ,EAAQiV,EACpC+D,CAAcjP,OAAY3H,EAAW2H,EAAWzL,iBAezC8a,GAAgBhO,EAAQpL,EAAQiV,EAAavF,UAEpDF,GAAepE,EADA8N,GAAalZ,EAAQiV,QACE7S,EAAWsN,GAyBvD,IAnQD2J,GACAC,GACAC,GAkQEC,GAAiB,cA2BLC,YACPD,YAmBOE,GAAiB3P,EAAY+O,UACtCU,GAGEL,GAAUpP,EAAY+O,EAAkBU,IAFtCzP,WAYK4P,GAAmB5P,EAAY6P,UACxCJ,GAGEL,GAAUpP,EAAYyP,GAAgBI,GAFpC7P,WAYK8P,GAAazO,EAAQ0N,UAC9BU,GAGEJ,GAAgBhO,EAAQ0N,EAAkBU,IAFxCpO,WAYK0O,GAAe1O,EAAQwO,UAChCJ,GAGEJ,GAAgBhO,EAAQoO,GAAgBI,GAFtCxO,WCvmBK2O,GACdjN,EACAC,EACArO,EACAsO,EACAvD,EACAuQ,WAEMC,EAAOD,GAAmB,GAC5Bzb,EAAI,EACC2b,EAAInN,EAAQmN,EAAIxb,EAAKwb,GAAKlN,EAAM,KACjChD,EAAI8C,EAAgBoN,GACpBjQ,EAAI6C,EAAgBoN,EAAI,GAC9BD,EAAK1b,KAAOkL,EAAU,GAAKO,EAAIP,EAAU,GAAKQ,EAAIR,EAAU,GAC5DwQ,EAAK1b,KAAOkL,EAAU,GAAKO,EAAIP,EAAU,GAAKQ,EAAIR,EAAU,UAE1DuQ,GAAYC,EAAK3b,QAAUC,IAC7B0b,EAAK3b,OAASC,GAET0b,WAaOE,GACdrN,EACAC,EACArO,EACAsO,EACAzC,EACA6P,EACAJ,WAEMC,EAAOD,GAAmB,GAC1BrP,EAAMtB,KAAKsB,IAAIJ,GACfG,EAAMrB,KAAKqB,IAAIH,GACf8P,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACnB7b,EAAI,EACC2b,EAAInN,EAAQmN,EAAIxb,EAAKwb,GAAKlN,EAAM,KACjCuN,EAASzN,EAAgBoN,GAAKG,EAC9BG,EAAS1N,EAAgBoN,EAAI,GAAKI,EACxCL,EAAK1b,KAAO8b,EAAUE,EAAS5P,EAAM6P,EAAS9P,EAC9CuP,EAAK1b,KAAO+b,EAAUC,EAAS7P,EAAM8P,EAAS7P,UACrC8P,EAAIP,EAAI,EAAGO,EAAIP,EAAIlN,IAAUyN,EACpCR,EAAK1b,KAAOuO,EAAgB2N,UAG5BT,GAAYC,EAAK3b,QAAUC,IAC7B0b,EAAK3b,OAASC,GAET0b,WAsDOS,GACd5N,EACAC,EACArO,EACAsO,EACAuN,EACAC,EACAR,WAEMC,EAAOD,GAAmB,GAC5Bzb,EAAI,EACC2b,EAAInN,EAAQmN,EAAIxb,EAAKwb,GAAKlN,EAAM,CACvCiN,EAAK1b,KAAOuO,EAAgBoN,GAAKK,EACjCN,EAAK1b,KAAOuO,EAAgBoN,EAAI,GAAKM,UAC5BC,EAAIP,EAAI,EAAGO,EAAIP,EAAIlN,IAAUyN,EACpCR,EAAK1b,KAAOuO,EAAgB2N,UAG5BT,GAAYC,EAAK3b,QAAUC,IAC7B0b,EAAK3b,OAASC,GAET0b,EDmhBP9B,GAAyBwC,GAAAC,aACzBzC,GAAyB0C,GAAAD,aAlZzBvB,GAuZEsB,GAAAC,YAtZFtB,GAuZEqB,GAAAG,aAtZFvB,GAuZEoB,GAAAI,WAHAF,GAAAD,YAlZWvC,SAAO,SAAWK,GAC7BW,GAAahB,SAAO,SAAWM,GAC7B3D,GAAiB0D,EAAaC,EAAaW,IAC3CtE,GAAiB2D,EAAaD,EAAaa,weErQ3CyB,IdYI,EAAG,EAAG,EAAG,EAAG,EAAG,Gc2SzBC,GAzSA,SAAAta,YACEua,Q1BAyBC,EAIrBC,EAGAC,EAEAC,EARAC,E0BDJza,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKyP,SZsJC9D,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,GYhJnC3L,EAAK0a,iBAAkB,EAMvB1a,EAAK2a,yCAA2C,EAMhD3a,EAAK4a,2BAA6B,EAUlC5a,EAAK6a,6B1BnCkBR,E0BmCsB,SAC3CS,EACAC,EACAC,OAEKA,EAAa,OAAA5e,KACJyK,sBAAsBkU,OAE9B7T,EAAK9K,KAAQ8K,eACnBA,EAAM+T,eAAeD,GACd9T,EAAML,sBAAsBkU,I1B5CnCN,GAAS,iBAWLS,EAAWjd,MAAMzB,UAAUoO,MAAM3K,KAAKhB,kBACvCwb,GAAMre,OAAaoe,GAAarc,EAAY+c,EAAUX,KACzDE,GAAS,EACTD,EAAQpe,KACRme,EAAWW,EACXZ,EAAaD,EAAGnY,MAAK9F,KAAO6C,YAEvBqb,a0BpBYa,GAAAf,EAAAva,GAyDrBua,EAAA5d,UAAA4e,oBAAmB,SAACL,EAAkBC,eACxBH,4BAA2Bze,KAChCwG,cACLmY,EACAC,IASJZ,EAAA5d,UAAA0K,MAAK,kBACI9D,KAWTgX,EAAA5d,UAAA6e,eAAc,SAACnS,EAAGC,EAAGmS,EAAcC,UAC1BnY,KAQTgX,EAAA5d,UAAAgf,WAAU,SAACtS,EAAGC,OACNsS,EAAKrf,KAAQsf,gBAAe,CAAExS,EAAGC,WAChCsS,EAAM,KAAOvS,GAAKuS,EAAM,KAAOtS,GAWxCiR,EAAA5d,UAAAkf,gBAAe,SAAC3I,EAAO4I,OACfL,EAAeK,GAAmC,CAAIC,IAAKA,iBAC5DP,eAAetI,EAAM,GAAIA,EAAM,GAAIuI,EAAc3P,EAAAA,GAC/C2P,GAUTlB,EAAA5d,UAAAqf,qBAAoB,SAAC5S,eACPuS,WAAWvS,EAAW,GAAIA,EAAW,KASnDmR,EAAA5d,UAAAsf,cAAa,SAACxR,UACLlH,KASTgX,EAAA5d,UAAAgU,UAAS,SAAC9F,WACCgQ,iBAAete,KAASwG,cAAW,KACpC0H,EAAMlO,KAAQ0f,cAAa1f,KAAMqT,UACnCsM,MAAMzR,EAAO,KAAOyR,MAAMzR,EAAO,MACnCuB,GAAoBvB,QAEjBoQ,gBAAete,KAAQwG,8BZogBH0H,EAAQI,UACjCA,GACFA,EAAW,GAAKJ,EAAO,GACvBI,EAAW,GAAKJ,EAAO,GACvBI,EAAW,GAAKJ,EAAO,GACvBI,EAAW,GAAKJ,EAAO,GAChBI,GAEAJ,EY1gBA0R,CAAc5f,KAAMqT,QAAS/E,IAWtC0P,EAAA5d,UAAAyf,OAAM,SAACxS,EAAO6P,GACZlW,KAaFgX,EAAA5d,UAAA0f,MAAK,SAAC3S,EAAI4S,EAAQC,GAChBhZ,KAYFgX,EAAA5d,UAAA6f,SAAQ,SAACC,eACKzV,sBAAsByV,EAAYA,IAWhDlC,EAAA5d,UAAAqK,sBAAqB,SAACkU,UACb3X,KAQTgX,EAAA5d,UAAA+f,QAAO,kBACEnZ,KAYTgX,EAAA5d,UAAAye,eAAc,SAACtM,GACbvL,KASFgX,EAAA5d,UAAAggB,iBAAgB,SAAClS,UACRlH,KAWTgX,EAAA5d,UAAAigB,UAAS,SAAChD,EAAQC,GAChBtW,KAkBFgX,EAAA5d,UAAAmM,UAAS,SAACzJ,EAAQiV,GACsC,IAChDuI,EAAaxF,GAAchY,GAC3ByP,EACJ+N,EAAWjM,YAAchI,GAAML,YAAW,SAC5BuU,EAAeC,EAAgB1Q,OACjC2Q,EAAcH,EAAWlM,YACzBsM,EAAkBJ,EAAW/L,iBAC7BuL,EAAQ9N,GAAU0O,GAAmB1O,GAAUyO,UACrDzT,GACE8Q,GACA4C,EAAgB,GAChBA,EAAgB,GAChBZ,GACCA,EACD,EACA,EACA,GAEFjD,GACE0D,EACA,EACAA,EAAcnf,OACd0O,EACAgO,GACA0C,GAEKxE,GAAasE,EAAYvI,EAAzBiE,CACLuE,EACAC,EACA1Q,IAGJkM,GAAasE,EAAYvI,eAC1B8G,eAAetM,SAGxByL,EAvSA,CAAuB1T,EAAAvD,meC4SpB,SACM4Z,GAAgBC,WACjBC,EAAgB,GACbxf,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,EAChDwf,EAAiBvd,KAAKsd,EAAWvf,GAAGyJ,gBAE/B+V,MAGTC,GAtUA,SAAArd,GAGK,SACHsd,EAAYC,OAAZpd,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKqd,YAAcD,GAAkC,KAKrDpd,EAAKsd,kBAAiB,GAEtBtd,EAAKud,mCAlBwBC,GAAAL,EAAAtd,GAwB/Bsd,EAAA3gB,UAAAihB,0BAAyB,gBAClBH,kBAAkB/F,QAAQlV,QAC1Bib,kBAAkB9f,OAAS,GAMlC2f,EAAA3gB,UAAA+gB,wBAAuB,mBACXF,oBAGD5f,EAAI,EAAGuB,EAAE5C,KAAQihB,YAAY7f,OAAQC,EAAIuB,IAAMvB,EAACrB,KAClDkhB,kBAAkB5d,KACrBmC,EAAMzF,KAAMihB,YAAY5f,GAAImE,EAAgBxF,KAAOuG,QAAOvG,QAUhE+gB,EAAA3gB,UAAA0K,MAAK,eACGwW,EAAkB,IAAOP,EAAmB,aAClDO,EAAmBC,cAAavhB,KAAMihB,aACtCK,EAAmB3Y,gBAAe3I,MAC3BshB,GAUTP,EAAA3gB,UAAA6e,eAAc,SAACnS,EAAGC,EAAGmS,EAAcC,MAC7BA,EAAqB1Q,GAAwBzO,KAAMoU,YAAatH,EAAGC,GAAC,OAC/DoS,UAEHyB,EAAU5gB,KAAQihB,YACf5f,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,EAChD8d,EAAqByB,EAAWvf,GAAG4d,eACjCnS,EACAC,EACAmS,EACAC,UAGGA,GAQT4B,EAAA3gB,UAAAgf,WAAU,SAACtS,EAAGC,WACN6T,EAAU5gB,KAAQihB,YACf5f,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,KAC5Cuf,EAAWvf,GAAG+d,WAAWtS,EAAGC,GAAC,OACxB,SAGJ,GAQTgU,EAAA3gB,UAAAsf,cAAa,SAACxR,GACZuB,GAAoBvB,WbsMDa,EAASC,EarMtB4R,EAAU5gB,KAAQihB,YACf5f,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,EboM/B0N,EanMVb,GbmMmBc,EanMX4R,EAAWvf,GAAG+S,aboMrB,GAAKrF,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,Wa5Mdd,GAQT6S,EAAA3gB,UAAAohB,cAAa,kBACJb,GAAe3gB,KAAMihB,cAM9BF,EAAA3gB,UAAAqhB,mBAAkB,uBACJR,aAMdF,EAAA3gB,UAAAshB,4BAA2B,eACK,IAC1BC,EAAe,GACbf,EAAU5gB,KAAQihB,YACf5f,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,EAC5Cuf,EAAWvf,GAAG8e,YAAOngB,KAAYmgB,UACnCwB,EAAkBA,EAAgBC,OACGhB,EACjCvf,GACCqgB,+BAGLC,EAAgBre,KAAKsd,EAAWvf,WAG7BsgB,GAQTZ,EAAA3gB,UAAAqK,sBAAqB,SAACkU,WACXH,6BAA0Bxe,KAAUwG,qBACtC+X,yCAA2C,OAC3CC,2BAA0Bxe,KAAQwG,eAGvCmY,EAAmB,GACgC,IAD/B3e,KACdue,0CACJI,EAAgB3e,KAAQue,yCAAwC,OAAAve,aAK9D6hB,EAAoB,GACpBjB,EAAU5gB,KAAQihB,YACpBa,GAAa,EACRzgB,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,EAAC,KAC3CqJ,EAAWkW,EAAWvf,GACtB0gB,EAAqBrX,EAASD,sBAClCkU,GAEFkD,EAAqBve,KAAKye,GACtBA,IAAuBrX,IACzBoX,GAAa,MAGbA,EAAU,KACNE,EAA4B,IAAOjB,EAAmB,aAC5DiB,EAA6BC,mBAAmBJ,GACzCG,cAEFzD,yCAA2CI,QAUpDoC,EAAA3gB,UAAA+f,QAAO,kBACEjI,IAST6I,EAAA3gB,UAAAggB,iBAAgB,SAAClS,WACT0S,EAAU5gB,KAAQihB,YACf5f,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,KAC5Cuf,EAAWvf,GAAG+e,iBAAiBlS,GAAM,OAChC,SAGJ,GAMT6S,EAAA3gB,UAAA8hB,QAAO,kBAC8B,SAAvBjB,YAAY7f,QAU1B2f,EAAA3gB,UAAAyf,OAAM,SAACxS,EAAO6P,WACN0D,EAAU5gB,KAAQihB,YACf5f,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,EAChDuf,EAAWvf,GAAGwe,OAAOxS,EAAO6P,QAEzB3W,WAaPwa,EAAA3gB,UAAA0f,MAAK,SAAC3S,EAAI4S,EAAQC,OACZ9C,EAAS8C,EACR9C,IACHA,EAAStM,GAAS5Q,KAAMoU,sBAEpBwM,EAAU5gB,KAAQihB,YACf5f,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,EAChDuf,EAAWvf,GAAGye,MAAM3S,EAAI4S,EAAQ7C,QAE7B3W,WAQPwa,EAAA3gB,UAAAmhB,cAAa,SAACX,QACPqB,mBAAmBtB,GAAgBC,KAM1CG,EAAA3gB,UAAA6hB,mBAAkB,SAACrB,QACZS,iCACAJ,YAAcL,OACdO,+BACA5a,WAYPwa,EAAA3gB,UAAAye,eAAc,SAACtM,WACPqO,EAAU5gB,KAAQihB,YACf5f,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,EAChDuf,EAAWvf,GAAGwd,eAAetM,QAE1BhM,WAUPwa,EAAA3gB,UAAAigB,UAAS,SAAChD,EAAQC,WACVsD,EAAU5gB,KAAQihB,YACf5f,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,EAChDuf,EAAWvf,GAAGgf,UAAUhD,EAAQC,QAE7B/W,WAMPwa,EAAA3gB,UAAAQ,gBAAe,gBACRygB,4BACL5d,EAAArD,UAAMQ,gBAAeiD,KAAA7D,OAEzB+gB,EAxTA,CAAiCoB,GAAApb,kDC4C9B,IA4JHqb,GA3JA,oBACEC,IAIKriB,KACEsiB,oBAAiBpd,EAKnBlF,KACEuiB,8BAA2Brd,SAUlCmd,EAAAjiB,UAAAoiB,eAAc,SAAC1f,EAAQ2f,OACjBxP,KACAwP,EAAW,KACTH,EAAiBG,EAAYH,eAC7BxH,GAAc2H,EAAYH,gBAActiB,KACnC0iB,eAAe5f,GAEtB2f,EAAYvU,QACZoU,GACAA,EAAejO,aAAehI,GAAML,cAEpCsW,EAAiBxH,GAAcwH,IAChBvN,eAAe0N,EAAYvU,QAE5C+E,EAAO,CACLqP,eAAgBA,EAChBK,kBAAmBF,EAAYE,+BAGvBC,aAAa3P,IAY3BoP,EAAAjiB,UAAAwiB,aAAY,SAAC3P,UACJ3Q,EAAM,CAETggB,eAActiB,KAAOsiB,eACrBK,kBAAiB3iB,KAAOuiB,0BAE1BtP,IAQJoP,EAAAjiB,UAAA+f,QAAO,kBACEnZ,KAWTqb,EAAAjiB,UAAAyiB,YAAW,SAAC/f,EAAQ2f,UACXzb,KAWTqb,EAAAjiB,UAAA0iB,aAAY,SAAChgB,EAAQ2f,UACZzb,KAWTqb,EAAAjiB,UAAA2iB,aAAY,SAACjgB,EAAQ2f,UACZzb,KAUTqb,EAAAjiB,UAAAsiB,eAAc,SAAC5f,UACNkE,KAWTqb,EAAAjiB,UAAA4iB,aAAY,SAACC,EAASR,UACbzb,KAWTqb,EAAAjiB,UAAA8iB,cAAa,SAACC,EAAUV,UACfzb,KAWTqb,EAAAjiB,UAAAgjB,cAAa,SAAC1Y,EAAU+X,UACfzb,KAEXqb,EAzJA,YAmKgBgB,GAA6B3Y,EAAU4Y,EAAOb,OAQxDc,EAPEZ,EAAoBF,EACtB3H,GAAc2H,EAAYE,mBAC1B,KACEL,EAAiBG,EACnB3H,GAAc2H,EAAYH,gBAC1B,QAQFiB,EAJAZ,GACAL,IACC/G,GAAqBoH,EAAmBL,IAE1BgB,EAAQ5Y,EAASI,QAAUJ,GAAU6B,UAClD+W,EAAQX,EAAoBL,EAC5BgB,EAAQhB,EAAiBK,GAGbjY,EAGd4Y,GACAb,QACuDvd,IAA1Bud,EAAae,SAAsB,KAE1DC,EAAQtX,KAAKuX,IACjB,GAC6BjB,EAAae,UAaxCD,IAAgB7Y,IAClB6Y,EAAc7Y,EAASI,SAEzByY,EAAY1E,gBATG,SAAa5Q,WACjB5M,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAQC,EAAIuB,IAAMvB,EACjD4M,EAAY5M,GAAK8K,KAAKwX,MAAM1V,EAAY5M,GAAKoiB,GAASA,SAEjDxV,YAOJsV,MC3QTK,GACc,cADdA,GAEM,OAFNA,GAGM,OAHNA,GAIK,geC2LF,SACMC,GAAU/gB,MACA,iBAANA,EAAmB,KACtBI,EAAS4gB,KAAKC,MAAMjhB,UACnBI,GAA0C,YAC7B,OAAXJ,EACFA,EAEA,SAIXkhB,GAnMA,SAAAvgB,YACEwgB,WACExgB,EAAAI,KAAA7D,OAAAA,YAFsBkkB,GAAAD,EAAAxgB,GAQxBwgB,EAAA7jB,UAAA+f,QAAO,kBACEyD,IAYTK,EAAA7jB,UAAAyiB,YAAW,SAAC/f,EAAQ2f,eACN0B,sBACVN,GAAU/gB,GAAM9C,KACXwiB,eAAe1f,EAAQ2f,KAahCwB,EAAA7jB,UAAA0iB,aAAY,SAAChgB,EAAQ2f,eACP2B,uBACVP,GAAU/gB,GAAM9C,KACXwiB,eAAe1f,EAAQ2f,KAWhCwB,EAAA7jB,UAAA+jB,sBAAqB,SAACjhB,EAAQuf,UACrBzb,KAUTid,EAAA7jB,UAAAgkB,uBAAsB,SAAClhB,EAAQuf,UACtBzb,KAWTid,EAAA7jB,UAAA2iB,aAAY,SAACjgB,EAAQ2f,eACP4B,uBACVR,GAAU/gB,GAAM9C,KACXwiB,eAAe1f,EAAQ2f,KAWhCwB,EAAA7jB,UAAAikB,uBAAsB,SAACnhB,EAAQuf,UACtBzb,KAUTid,EAAA7jB,UAAAsiB,eAAc,SAAC5f,eACDwhB,yBAAyBT,GAAU/gB,KASjDmhB,EAAA7jB,UAAAkkB,yBAAwB,SAACphB,UAChB8D,KAWTid,EAAA7jB,UAAA4iB,aAAY,SAACC,EAASR,UACbqB,KAAKS,UAASvkB,KAAMwkB,mBAAmBvB,EAASR,KASzDwB,EAAA7jB,UAAAokB,mBAAkB,SAACvB,EAASR,UACnBzb,KAWTid,EAAA7jB,UAAA8iB,cAAa,SAACC,EAAUV,UACfqB,KAAKS,UAASvkB,KAAMykB,oBAAoBtB,EAAUV,KAS3DwB,EAAA7jB,UAAAqkB,oBAAmB,SAACtB,EAAUV,UACrBzb,KAWTid,EAAA7jB,UAAAgjB,cAAa,SAAC1Y,EAAU+X,UACfqB,KAAKS,UAASvkB,KAAM0kB,oBAAoBha,EAAU+X,KAS3DwB,EAAA7jB,UAAAskB,oBAAmB,SAACha,EAAU+X,UACrBzb,KAEXid,EAlLA,CAA0B7B,iDCL1BuC,GACI,KADJA,GAEK,MAFLA,GAGK,MAHLA,GAIM,gnBCkTUC,GAAmBC,OAC7B/U,SACA+U,GAAUF,GACZ7U,EAAS,EACA+U,GAAUF,IAAsBE,GAAUF,GACnD7U,EAAS,EACA+U,GAAUF,KACnB7U,EAAS,GAEmBA,WAShBgV,GAAgBC,EAAgBxY,EAAWuQ,OACnDlN,EAAkBmV,EAAeC,wBAClCpV,OAGGE,EAASiV,EAAeE,mBACvBpI,GACLjN,EACA,EACAA,EAAgBxO,OAChB0O,EACAvD,EACAuQ,GAVgB,OACX,SAcXoI,GAlVA,SAAAzhB,YACE0hB,QAAAvhB,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKihB,OAASF,GAMd/gB,EAAKkM,OAAS,EAMdlM,EAAKgM,gBAAkB,cApBEwV,GAAAD,EAAA1hB,GA4B3B0hB,EAAA/kB,UAAAsf,cAAa,SAACxR,UACLyB,GAAiC3P,KACjC4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,OACL5B,IAQJiX,EAAA/kB,UAAAilB,eAAc,kBACLre,KAQTme,EAAA/kB,UAAAklB,mBAAkB,uBACJ1V,gBAAgBpB,MAAM,EAACxO,KAAO8P,SAM5CqV,EAAA/kB,UAAA4kB,mBAAkB,uBACJpV,iBAQduV,EAAA/kB,UAAAmlB,kBAAiB,uBACH3V,gBAAgBpB,MAAKxO,KAC1B4P,gBAAgBxO,OAAMpB,KAAQ8P,SASvCqV,EAAA/kB,UAAAolB,UAAS,uBACKX,QAQdM,EAAA/kB,UAAAqK,sBAAqB,SAACkU,WACXH,6BAA0Bxe,KAAUwG,qBACtC+X,yCAA2C,OAC3CC,2BAA0Bxe,KAAQwG,eAKvCmY,EAAmB,GACgC,IAD/B3e,KACdue,0CACJI,GAAgB3e,KAASue,yCAAwC,OAAAve,SAK/D+hB,EAAkB/hB,KAAQylB,8BAC9B9G,UAEgCoD,EAAmBiD,qBACvB5jB,OAAMpB,KAAQ4P,gBAAgBxO,OACnD2gB,QAQFxD,yCAA2CI,SAUpDwG,EAAA/kB,UAAAqlB,8BAA6B,SAAC9G,gBAO9BwG,EAAA/kB,UAAA6kB,UAAS,uBACKnV,QAOdqV,EAAA/kB,UAAAslB,mBAAkB,SAACb,EAAQjV,QACpBE,OAAS8U,GAAmBC,QAC5BA,OAASA,OACTjV,gBAAkBA,GAQzBuV,EAAA/kB,UAAAulB,eAAc,SAAC1X,EAAa2X,GAC1B5e,KASFme,EAAA/kB,UAAAylB,UAAS,SAAChB,EAAQ5W,EAAa6X,GACR,IACjBhW,KACA+U,EACF/U,EAAS8U,GAAmBC,gBAEnBxjB,EAAI,EAAGA,EAAIykB,IAAWzkB,EAAC,CAAA,GACH,IAAvB4M,EAAY7M,mBACTyjB,OAASF,aACT7U,OAAS,GAGd7B,EAAoCA,EAAY,GAIpD4W,EA6GH,SACyB/U,OACtB+U,EACU,GAAV/U,EACF+U,EAASF,GACU,GAAV7U,EACT+U,EAASF,GACU,GAAV7U,IACT+U,EAASF,WAEkDE,EAvHhDkB,CADTjW,EAAS7B,EAAY7M,aAGlByjB,OAASA,OACT/U,OAASA,GAYhBqV,EAAA/kB,UAAAye,eAAc,SAACtM,QACJ3C,kBACP2C,EAAWvS,KAAM4P,gBAAe5P,KAAO4P,gBAAe5P,KAAO8P,aACxDvJ,YAWT4e,EAAA/kB,UAAAyf,OAAM,SAACxS,EAAO6P,OACNtN,EAAe5P,KAAQglB,wBACzBpV,EAAe,KACXE,EAAM9P,KAAQilB,YACpBhI,GACErN,EACA,EACAA,EAAgBxO,OAChB0O,EACAzC,EACA6P,EACAtN,QAEGrJ,YAaT4e,EAAA/kB,UAAA0f,MAAK,SAAC3S,EAAI4S,EAAQC,OACZ5S,EAAK2S,OACE7a,IAAPkI,IACFA,EAAKD,OAEH+P,EAAS8C,EACR9C,IACHA,EAAStM,GAAS5Q,KAAMoU,kBAEpBxE,EAAe5P,KAAQglB,wBACzBpV,EAAe,KACXE,EAAM9P,KAAQilB,sBP5KxBrV,EACAC,EACArO,EACAsO,EACA3C,EACAC,EACA8P,EACAJ,WAEMC,EAAOD,GAAmB,GAC1BK,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACnB7b,EAAI,EACC2b,EAAInN,EAAQmN,EAAIxb,EAAKwb,GAAKlN,EAAM,KACjCuN,EAASzN,EAAgBoN,GAAKG,EAC9BG,EAAS1N,EAAgBoN,EAAI,GAAKI,EACxCL,EAAK1b,KAAO8b,EAAUhQ,EAAKkQ,EAC3BN,EAAK1b,KAAO+b,EAAUhQ,EAAKkQ,UAClBC,EAAIP,EAAI,EAAGO,EAAIP,EAAIlN,IAAUyN,EACpCR,EAAK1b,KAAOuO,EAAgB2N,GAG5BT,GAAYC,EAAK3b,QAAUC,IAC7B0b,EAAK3b,OAASC,GOsJZ2kB,CACEpW,EACA,EACAA,EAAgBxO,OAChB0O,EACA3C,EACAC,EACA8P,EACAtN,QAEGrJ,YAWT4e,EAAA/kB,UAAAigB,UAAS,SAAChD,EAAQC,OACV1N,EAAe5P,KAAQglB,wBACzBpV,EAAe,KACXE,EAAM9P,KAAQilB,YACpBzH,GACE5N,EACA,EACAA,EAAgBxO,OAChB0O,EACAuN,EACAC,EACA1N,QAEGrJ,YAGX4e,EAzRA,CAA6BhD,GAAApb,SCD1B,SACMkf,GACPrW,EACAsW,EACAC,EACArW,EACAhD,EACAC,EACAmS,OAMIrP,EAJE4B,EAAK7B,EAAgBsW,GACrBrU,EAAKjC,EAAgBsW,EAAU,GAC/BxX,EAAKkB,EAAgBuW,GAAW1U,EAChC9C,EAAKiB,EAAgBuW,EAAU,GAAKtU,KAE/B,IAAPnD,GAAmB,IAAPC,EACdkB,EAASqW,WAEHzQ,IAAM3I,EAAI2E,GAAM/C,GAAM3B,EAAI8E,GAAMlD,IAAOD,EAAKA,EAAKC,EAAKA,MACxD8G,EAAI,EACN5F,EAASsW,UACA1Q,EAAI,EAAC,SACLpU,EAAI,EAAGA,EAAIyO,IAAUzO,EAC5B6d,EAAa7d,GAAK4U,GAChBrG,EAAgBsW,EAAU7kB,GAC1BuO,EAAgBuW,EAAU9kB,GAC1BoU,eAGJyJ,EAAa9d,OAAS0O,GAGtBD,EAASqW,OAGJ7kB,EAAI,EAAGA,EAAIyO,IAAUzO,EAC5B6d,EAAa7d,GAAKuO,EAAgBC,EAASxO,GAE7C6d,EAAa9d,OAAS0O,WAaRsW,GAAgBxW,EAAiBC,EAAQrO,EAAKsO,EAAQM,OAChEqB,EAAK7B,EAAgBC,GACrBgC,EAAKjC,EAAgBC,EAAS,OAC7BA,GAAUC,EAAQD,EAASrO,EAAKqO,GAAUC,EAAM,KAC7C4B,EAAK9B,EAAgBC,GACrBiC,EAAKlC,EAAgBC,EAAS,GAC9BwW,EAAe3Q,GAAUjE,EAAII,EAAIH,EAAII,GACvCuU,EAAejW,IACjBA,EAAMiW,GAER5U,EAAKC,EACLG,EAAKC,SAEA1B,WAWOkW,GACd1W,EACAC,EACA0W,EACAzW,EACAM,WAES/O,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM+kB,EAAKllB,GACjB+O,EAAMgW,GAAgBxW,EAAiBC,EAAQrO,EAAKsO,EAAQM,GAC5DP,EAASrO,SAEJ4O,WAwCOoW,GACd5W,EACAC,EACArO,EACAsO,EACA2W,EACAC,EACA5Z,EACAC,EACAmS,EACAC,EACAwH,MAEI9W,GAAUrO,EAAG,OACR2d,MAEL9d,EAAGulB,KACU,IAAbH,EAAc,KAEhBG,EAAkBlR,GAChB5I,EACAC,EACA6C,EAAgBC,GAChBD,EAAgBC,EAAS,KAELsP,EAAkB,KACjC9d,EAAI,EAAGA,EAAIyO,IAAUzO,EACxB6d,EAAa7d,GAAKuO,EAAgBC,EAASxO,UAE7C6d,EAAa9d,OAAS0O,EACf8W,SAEAzH,UAGL0H,EAAWF,GAA2B,CAAInH,IAAKA,KACjDla,EAAQuK,EAASC,EACdxK,EAAQ9D,MACbykB,GACErW,EACAtK,EAAQwK,EACRxK,EACAwK,EACAhD,EACAC,EACA8Z,IAEFD,EAAkBlR,GAAU5I,EAAGC,EAAG8Z,EAAS,GAAIA,EAAS,KAClC1H,EAAkB,KACtCA,EAAqByH,EAChBvlB,EAAI,EAAGA,EAAIyO,IAAUzO,EACxB6d,EAAa7d,GAAKwlB,EAASxlB,GAE7B6d,EAAa9d,OAAS0O,EACtBxK,GAASwK,OAYTxK,GACEwK,EACA3D,KAAKiE,KACDjE,KAAK4N,KAAK6M,GAAmBza,KAAK4N,KAAKoF,IACvCsH,EACA,EACF,MAIJC,IAEFT,GACErW,EACApO,EAAMsO,EACND,EACAC,EACAhD,EACAC,EACA8Z,IAEFD,EAAkBlR,GAAU5I,EAAGC,EAAG8Z,EAAS,GAAIA,EAAS,KAClC1H,GAAkB,KACtCA,EAAqByH,EAChBvlB,EAAI,EAAGA,EAAIyO,IAAUzO,EACxB6d,EAAa7d,GAAKwlB,EAASxlB,GAE7B6d,EAAa9d,OAAS0O,SAGnBqP,WAiBO2H,GACdlX,EACAC,EACA0W,EACAzW,EACA2W,EACAC,EACA5Z,EACAC,EACAmS,EACAC,EACAwH,WAEME,EAAWF,GAA2B,CAAInH,IAAKA,KAC5Cne,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM+kB,EAAKllB,GACjB8d,EAAqBqH,GACnB5W,EACAC,EACArO,EACAsO,EACA2W,EACAC,EACA5Z,EACAC,EACAmS,EACAC,EACA0H,GAEFhX,EAASrO,SAEJ2d,WCpRO4H,GAAkBnX,EAAiBC,EAAQhD,EAAYiD,WAC5DzO,EAAI,EAAGuB,EAAKiK,EAAWzL,OAAQC,EAAIuB,IAAMvB,EAChDuO,EAAgBC,KAAYhD,EAAWxL,UAElCwO,WAUOmX,GACdpX,EACAC,EACA5B,EACA6B,WAESzO,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAQC,EAAIuB,IAAMvB,UAC3CwL,EAAaoB,EAAY5M,GACtB2b,EAAI,EAAGA,EAAIlN,IAAUkN,EAC5BpN,EAAgBC,KAAYhD,EAAWmQ,UAGpCnN,WAWOoX,GACdrX,EACAC,EACAqX,EACApX,EACAqX,WAEMZ,EAAOY,GAAmB,GAC5B9lB,EAAI,EACC2b,EAAI,EAAGoK,EAAKF,EAAa9lB,OAAQ4b,EAAIoK,IAAMpK,EAAC,KAC7Cxb,EAAMwlB,GACVpX,EACAC,EACAqX,EAAalK,GACblN,GAEFyW,EAAKllB,KAAOG,EACZqO,EAASrO,SAEX+kB,EAAKnlB,OAASC,EACPklB,WCwBOc,GACdzX,EACAC,EACArO,EACAsO,EACA6O,EACA2I,EACAC,OAEMpmB,GAAKK,EAAMqO,GAAUC,KACvB3O,EAAI,EAAC,MACA0O,EAASrO,EAAKqO,GAAUC,EAC7BwX,EAA0BC,KAAsB3X,EAAgBC,GAChEyX,EAA0BC,KACxB3X,EAAgBC,EAAS,UAEtB0X,EAEmB,IACtBC,EAAO,IAAO3lB,MAAMV,GAC1BqmB,EAAQ,GAAK,EACbA,EAAQrmB,EAAI,GAAK,MACW,IACtBsmB,EAAK,CAAI5X,EAAQrO,EAAMsO,GACzBxK,EAAQ,EACLmiB,EAAMrmB,OAAS,GAAC,SACfsmB,EAAOD,EAAME,MACbC,EAAQH,EAAME,MAChBE,EAAqB,EACnBpW,EAAK7B,EAAgBgY,GACrB/V,EAAKjC,EAAgBgY,EAAQ,GAC7BlW,EAAK9B,EAAgB8X,GACrB5V,EAAKlC,EAAgB8X,EAAO,GACzBrmB,EAAIumB,EAAQ9X,EAAQzO,EAAIqmB,EAAMrmB,GAAKyO,EAAM,KAG1CgY,EAAkBtS,GAFd5F,EAAgBvO,GAChBuO,EAAgBvO,EAAI,GACuBoQ,EAAII,EAAIH,EAAII,GAC7DgW,EAAkBD,IACpBviB,EAAQjE,EACRwmB,EAAqBC,GAGrBD,EAAqBlJ,IACvB6I,GAASliB,EAAQuK,GAAUC,GAAU,EACjC8X,EAAQ9X,EAASxK,GACnBmiB,EAAMnkB,KAAKskB,EAAOtiB,GAEhBA,EAAQwK,EAAS4X,GACnBD,EAAMnkB,KAAKgC,EAAOoiB,QAIfrmB,EAAI,EAAGA,EAAIF,IAAKE,EACnBmmB,EAAQnmB,KACVimB,EAA0BC,KACxB3X,EAAgBC,EAASxO,EAAIyO,GAC/BwX,EAA0BC,KACxB3X,EAAgBC,EAASxO,EAAIyO,EAAS,WAGrCyX,WAeOQ,GACdnY,EACAC,EACA0W,EACAzW,EACA6O,EACA2I,EACAC,EACAS,WAES3mB,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM+kB,EAAKllB,GACjBkmB,EAAmBF,GACjBzX,EACAC,EACArO,EACAsO,EACA6O,EACA2I,EACAC,GAEFS,EAAe1kB,KAAKikB,GACpB1X,EAASrO,SAEJ+lB,WAwGOU,GAAK/f,EAAOgY,UACnBA,EAAY/T,KAAKwX,MAAMzb,EAAQgY,YAsBxBgI,GACdtY,EACAC,EACArO,EACAsO,EACAoQ,EACAoH,EACAC,MAGI1X,GAAUrO,EAAG,OACR+lB,MAWL7V,EAAII,EARJL,EAAKwW,GAAKrY,EAAgBC,GAASqQ,GACnCrO,EAAKoW,GAAKrY,EAAgBC,EAAS,GAAIqQ,GAC3CrQ,GAAUC,EAEVwX,EAA0BC,KAAsB9V,EAChD6V,EAA0BC,KAAsB1V,QAK9CH,EAAKuW,GAAKrY,EAAgBC,GAASqQ,GACnCpO,EAAKmW,GAAKrY,EAAgBC,EAAS,GAAIqQ,IACvCrQ,GAAUC,IACItO,SAKZ8lB,EAA0BC,KAAsB7V,EAChD4V,EAA0BC,KAAsBzV,EACzCyV,QAEF7V,GAAMD,GAAMK,GAAMD,QACpBhC,EAASrO,GAAG,KAEXmQ,EAAKsW,GAAKrY,EAAgBC,GAASqQ,GACnCnO,EAAKkW,GAAKrY,EAAgBC,EAAS,GAAIqQ,MAC7CrQ,GAAUC,EAEN6B,GAAMD,GAAMK,GAAMD,OAIhB7E,EAAMyE,EAAKD,EACXvE,EAAM4E,EAAKD,EAEXvE,EAAMqE,EAAKF,EACXlE,EAAMwE,EAAKF,EAKf5E,EAAMM,GAAOL,EAAMI,IACjBL,EAAM,GAAKK,EAAML,GAAQA,GAAOK,GAAQL,EAAM,GAAKK,EAAML,KACzDC,EAAM,GAAKK,EAAML,GAAQA,GAAOK,GAAQL,EAAM,GAAKK,EAAML,IAG3DwE,EAAKC,EACLG,EAAKC,IAMPuV,EAA0BC,KAAsB7V,EAChD4V,EAA0BC,KAAsBzV,EAChDL,EAAKC,EACLG,EAAKC,EACLJ,EAAKC,EACLG,EAAKC,WAGPuV,EAA0BC,KAAsB7V,EAChD4V,EAA0BC,KAAsBzV,EACzCyV,WAeOY,GACdvY,EACAC,EACA0W,EACAzW,EACAoQ,EACAoH,EACAC,EACAS,WAES3mB,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM+kB,EAAKllB,GACjBkmB,EAAmBW,GACjBtY,EACAC,EACArO,EACAsO,EACAoQ,EACAoH,EACAC,GAEFS,EAAe1kB,KAAKikB,GACpB1X,EAASrO,SAEJ+lB,WClaOa,GAAQxY,EAAiBC,EAAQrO,EAAKsO,EAAQQ,WAGxD+X,EAFEC,EAAM,CAAI1Y,EAAgBC,GAASD,EAAgBC,EAAS,IAC5D0Y,EAAM,GAEL1Y,EAASC,EAAStO,EAAKqO,GAAUC,EAAM,IAC5CyY,EAAO,GAAK3Y,EAAgBC,EAASC,GACrCyY,EAAO,GAAK3Y,EAAgBC,EAASC,EAAS,GAC9CuY,EAAM/X,EAASgY,EAAQC,GAChB,OACEF,EAETC,EAAO,GAAKC,EAAO,GACnBD,EAAO,GAAKC,EAAO,UAEd,WCnBOC,GACd5Y,EACAC,EACArO,EACAsO,EACA2Y,WAEMxa,OAAkC/I,IAApBujB,EAAgCA,EAAe,GAC/DpnB,EAAI,EACC2b,EAAInN,EAAQmN,EAAIxb,EAAKwb,GAAKlN,EACjC7B,EAAY5M,KAAOuO,EAAgBpB,MAAMwO,EAAGA,EAAIlN,UAElD7B,EAAY7M,OAASC,EACd4M,WAWOya,GACd9Y,EACAC,EACA0W,EACAzW,EACA6Y,WAEMzB,OAAoChiB,IAArByjB,EAAiCA,EAAgB,GAClEtnB,EAAI,EACC2b,EAAI,EAAGoK,EAAKb,EAAKnlB,OAAQ4b,EAAIoK,IAAMpK,EAAC,KACrCxb,EAAM+kB,EAAKvJ,GACjBkK,EAAa7lB,KAAOmnB,GAClB5Y,EACAC,EACArO,EACAsO,EACAoX,EAAa7lB,IAEfwO,EAASrO,SAEX0lB,EAAa9lB,OAASC,EACf6lB,WAYO0B,GACdhZ,EACAC,EACAgZ,EACA/Y,EACAgZ,WAEMC,OACkB7jB,IAAtB4jB,EAAkCA,EAAiB,GACjDznB,EAAI,EACC2b,EAAI,EAAGoK,EAAKyB,EAAMznB,OAAQ4b,EAAIoK,IAAMpK,EAAC,KACtCuJ,EAAOsC,EAAM7L,GACnB+L,EAAc1nB,KAAOqnB,GACnB9Y,EACAC,EACA0W,EACAzW,EACAiZ,EAAc1nB,IAEhBwO,EAAS0W,EAAKA,EAAKnlB,OAAS,UAE9B2nB,EAAc3nB,OAASC,EAChB0nB,WC3EOC,GACdpZ,EACAC,EACArO,EACAsO,EACAmZ,EACAnM,EACA7F,OAEIiS,EAAGzT,EACDtU,GAAKK,EAAMqO,GAAUC,KACjB,IAAN3O,EACF+nB,EAAIrZ,UACW,IAAN1O,EACT+nB,EAAIrZ,EACJ4F,EAAIwT,UACW,IAAN9nB,EAAO,SACZsQ,EAAK7B,EAAgBC,GACrBgC,EAAKjC,EAAgBC,EAAS,GAC9BsZ,EAAS,EACPC,EAAiB,CAAI,GAClB/nB,EAAIwO,EAASC,EAAQzO,EAAIG,EAAKH,GAAKyO,EAAM,KAC1C4B,EAAK9B,EAAgBvO,GACrByQ,EAAKlC,EAAgBvO,EAAI,GAC/B8nB,GAAUhd,KAAK4N,MAAMrI,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,IAC9DuX,EAAkB9lB,KAAK6lB,GACvB1X,EAAKC,EACLG,EAAKC,MAED3R,EAAS8oB,EAAWE,EACpB7jB,WvCjCmB+jB,EAAUC,EAAQC,WACzCC,EAAKC,EACHC,EAAaH,GAAkB1oB,EACjC8oB,EAAM,EACNC,EAAOP,EAASjoB,OAChByoB,GAAQ,EAELF,EAAMC,IAIXH,GAAOC,EAAWL,EADlBG,EAAMG,GAAQC,EAAOD,GAAQ,IACIL,IAEvB,EAERK,EAAMH,EAAM,GAGZI,EAAOJ,EACPK,GAASJ,GAIO,OACbI,EAAQF,GAAOA,EuCSNG,CAAaV,EAAmBjpB,GAC1CmF,EAAQ,GACVmQ,GACGtV,EAASipB,GAAmB9jB,EAAQ,KACpC8jB,GAAmB9jB,EAAQ,GAAK8jB,GAAmB9jB,EAAQ,IAC9D4jB,EAAIrZ,IAAWvK,EAAQ,GAAKwK,GAE5BoZ,EAAIrZ,EAASvK,EAAQwK,MAGnBoH,EAAYD,EAAgB,EAAIA,EAAgB,EAChD8F,EAAOD,GAAmB,IAAOjb,MAAMqV,OACpC7V,EAAI,EAAGA,EAAI6V,IAAa7V,EAC/B0b,EAAK1b,QACG6D,IAANgkB,EACI1J,SACMta,IAANuQ,EACA7F,EAAgBsZ,EAAI7nB,GACpB4U,GAAKrG,EAAgBsZ,EAAI7nB,GAAIuO,EAAgBsZ,EAAIpZ,EAASzO,GAAIoU,UAE/DsH,WAYOgN,GACdna,EACAC,EACArO,EACAsO,EACAka,EACAC,MAEIzoB,GAAOqO,EAAM,OACR,SAELhD,KACAmd,EAAIpa,EAAgBC,EAASC,EAAS,UACpCma,IACFpd,EAAa+C,EAAgBpB,MAAMqB,EAAQA,EAASC,IACzCA,EAAS,GAAKka,EAClBnd,GAEA,QAEA+C,EAAgBpO,EAAM,GAAKwoB,SAChCC,IACFpd,EAAa+C,EAAgBpB,MAAMhN,EAAMsO,EAAQtO,IACtCsO,EAAS,GAAKka,EAClBnd,GAEA,QAIPmd,GAAKpa,EAAgBC,EAASC,EAAS,GAAC,OACnCF,EAAgBpB,MAAMqB,EAAQA,EAASC,WAE5Coa,EAAKra,EAASC,EACdqa,EAAK3oB,EAAMsO,EACRoa,EAAKC,GAAE,KACNX,EAAOU,EAAKC,GAAO,EACrBH,EAAIpa,GAAiB4Z,EAAM,GAAK1Z,EAAS,GAC3Cqa,EAAKX,EAELU,EAAKV,EAAM,MAGTY,EAAKxa,EAAgBsa,EAAKpa,EAAS,MACrCka,GAAKI,EAAE,OACFxa,EAAgBpB,OAAO0b,EAAK,GAAKpa,GAASoa,EAAK,GAAKpa,EAASA,OAGhE2F,GAAKuU,EAAII,IADJxa,GAAiBsa,EAAK,GAAKpa,EAAS,GACpBsa,GAC3Bvd,EAAU,WACDxL,EAAI,EAAGA,EAAIyO,EAAS,IAAKzO,EAChCwL,EAAWvJ,KACT2S,GACErG,GAAiBsa,EAAK,GAAKpa,EAASzO,GACpCuO,EAAgBsa,EAAKpa,EAASzO,GAC9BoU,WAIN5I,EAAWvJ,KAAK0mB,GACTnd,WC7HOwd,GACdza,EACAC,EACArO,EACAsO,EACA5B,UAEgBmC,GACdnC,GAIG,SACOrB,UACAyd,GACN1a,EACAC,EACArO,EACAsO,EACAjD,EAAW,GACXA,EAAW,gBAgBHyd,GACd1a,EACAC,EACArO,EACAsO,EACAhD,EACAC,WASIwd,EAAK,EACL9Y,EAAK7B,EAAgBpO,EAAMsO,GAC3B+B,EAAKjC,EAAgBpO,EAAMsO,EAAS,GACjCD,EAASrO,EAAKqO,GAAUC,EAAM,KAC7B4B,EAAK9B,EAAgBC,GACrBiC,EAAKlC,EAAgBC,EAAS,GAChCgC,GAAM9E,EACJ+E,EAAK/E,IAAM2E,EAAKD,IAAO1E,EAAI8E,IAAO/E,EAAI2E,IAAOK,EAAKD,GAAM,GAC1D0Y,IAEOzY,GAAM/E,IAAM2E,EAAKD,IAAO1E,EAAI8E,IAAO/E,EAAI2E,IAAOK,EAAKD,GAAM,GAClE0Y,IAEF9Y,EAAKC,EACLG,EAAKC,SAEO,IAAPyY,WAYOC,GACd5a,EACAC,EACA0W,EACAzW,EACAhD,EACAC,MAEoB,IAAhBwZ,EAAKnlB,OAAY,OACZ,MAEJkpB,GAAqB1a,EAAiBC,EAAQ0W,EAAK,GAAIzW,EAAQhD,EAAGC,GAAC,OAC/D,UAEA1L,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,KAExCipB,GAAqB1a,EAAiB2W,EAAKllB,EAAI,GAAIklB,EAAKllB,GAAIyO,EAAQhD,EAAGC,GAAC,OAEjE,SAGJ,WC5FO0d,GACd7a,EACAC,EACArO,EACAsO,EACA5B,OAEMwc,EAAoB3a,I1BuKlBR,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,G0BrKnCK,EACAC,EACArO,EACAsO,WAEGqC,GAAWjE,EAAQwc,OAGpB5b,GAAeZ,EAAQwc,KAGvBA,EAAkB,IAAMxc,EAAO,IAAMwc,EAAkB,IAAMxc,EAAO,KAGpEwc,EAAkB,IAAMxc,EAAO,IAAMwc,EAAkB,IAAMxc,EAAO,IAGjEka,GACLxY,EACAC,EACArO,EACAsO,GAMG,SACOwY,EAAQC,mB1B+pBYra,EAAQgL,EAAO1X,OAC3CmpB,GAAa,EACXC,EAAW3b,GAAuBf,EAAQgL,GAC1C2R,EAAS5b,GAAuBf,EAAQ1M,MAE5CopB,IAAa7c,IACb8c,IAAW9c,GAEX4c,GAAa,WAEPzb,EAAOhB,EAAO,GACdiB,EAAOjB,EAAO,GACdkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACd4c,EAAS5R,EAAM,GACf6R,EAAS7R,EAAM,GACf8R,EAAOxpB,EAAI,GACXypB,EAAOzpB,EAAI,GACX0pB,GAASD,EAAOF,IAAWC,EAAOF,GACpChe,OAAC,EAAEC,OAAC,EACD8d,EAAS9c,MAAyB6c,EAAW7c,MAGlD4c,GADA7d,EAAIke,GAAQC,EAAO5b,GAAQ6b,IACThc,GAAQpC,GAAKsC,GAG9Bub,KACEE,EAAS9c,KACV6c,EAAW7c,KAIb4c,GADA5d,EAAIke,GAAQD,EAAO5b,GAAQ8b,IACT/b,GAAQpC,GAAKsC,GAG9Bsb,KACEE,EAAS9c,KACV6c,EAAW7c,KAIb4c,GADA7d,EAAIke,GAAQC,EAAO9b,GAAQ+b,IACThc,GAAQpC,GAAKsC,GAG9Bub,KACEE,EAAS9c,KACV6c,EAAW7c,KAIb4c,GADA5d,EAAIke,GAAQD,EAAO9b,GAAQgc,IACT/b,GAAQpC,GAAKsC,UAG5Bsb,E0BntBIQ,CAAkBjd,EAAQoa,EAAQC,kBA4G/B6C,GACdxb,EACAC,EACA0W,EACAzW,EACA5B,gBAzEA0B,EACAC,EACArO,EACAsO,EACA5B,YAEIuc,GAAqB7a,EAAiBC,EAAQrO,EAAKsO,EAAQ5B,IAI7Doc,GACE1a,EACAC,EACArO,EACAsO,EACA5B,EAAO,GACPA,EAAO,KAMToc,GACE1a,EACAC,EACArO,EACAsO,EACA5B,EAAO,GACPA,EAAO,KAMToc,GACE1a,EACAC,EACArO,EACAsO,EACA5B,EAAO,GACPA,EAAO,KAMToc,GACE1a,EACAC,EACArO,EACAsO,EACA5B,EAAO,GACPA,EAAO,KAuBNmd,CAAqBzb,EAAiBC,EAAQ0W,EAAK,GAAIzW,EAAQ5B,GAAM,OACjE,KAEW,IAAhBqY,EAAKnlB,OAAY,OACZ,UAEAC,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,GAEzCgpB,GACEza,EACA2W,EAAKllB,EAAI,GACTklB,EAAKllB,GACLyO,EACA5B,KAICuc,GACC7a,EACA2W,EAAKllB,EAAI,GACTklB,EAAKllB,GACLyO,EACA5B,GAAM,OAGD,SAIN,WChMOod,GAAiB1b,EAAiBC,EAAQrO,EAAKsO,WACzD2B,EAAK7B,EAAgBC,GACrBgC,EAAKjC,EAAgBC,EAAS,GAC9BzO,EAAS,EACJC,EAAIwO,EAASC,EAAQzO,EAAIG,EAAKH,GAAKyO,EAAM,KAC1C4B,EAAK9B,EAAgBvO,GACrByQ,EAAKlC,EAAgBvO,EAAI,GAC/BD,GAAU+K,KAAK4N,MAAMrI,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,IAC9DJ,EAAKC,EACLG,EAAKC,SAEA1Q,geCmSTmqB,GAlSA,SAAA9nB,GAKK,SACH+nB,EAAYvd,EAAa2X,OAAzBhiB,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAK6nB,cAAgB,KAMrB7nB,EAAK8nB,uBAAwB,EAM7B9nB,EAAK+nB,WAAY,EAMjB/nB,EAAKgoB,mBAAoB,OAEN1mB,IAAf0gB,GAA6B/jB,MAAMC,QAAQmM,EAAY,IAMzDrK,EAAK+hB,eAC0D1X,EAC7D2X,GAPFhiB,EAAK8hB,mBACHE,EAC8B3X,YApCb4d,GAAAL,EAAA/nB,GAmDvB+nB,EAAAprB,UAAA0rB,iBAAgB,SAACjf,QACL+C,gBAGRlO,EAAM1B,KAAM4P,gBAAiB/C,GAHN7M,KAClB4P,gBAAkB/C,EAAW2B,aAI/BjI,WAQPilB,EAAAprB,UAAA0K,MAAK,eACGihB,EAAU,IAAOP,EAAUxrB,KAC1B4P,gBAAgBpB,QAAKxO,KACrB6kB,eAEPkH,EAAWpjB,gBAAe3I,MACnB+rB,GAUTP,EAAAprB,UAAA6e,eAAc,SAACnS,EAAGC,EAAGmS,EAAcC,UAC7BA,EAAqB1Q,GAAwBzO,KAAMoU,YAAatH,EAAGC,GAC9DoS,QAEAyM,mBAAiB5rB,KAASwG,qBAC5BmlB,UAAYxf,KAAK4N,KACpBqM,GAAepmB,KACR4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,OACL,SAGC8b,kBAAiB5rB,KAAQwG,eAEzBggB,GAAkBxmB,KAClB4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,OAAM9P,KACN2rB,WACL,EACA7e,EACAC,EACAmS,EACAC,KAeJqM,EAAAprB,UAAA4rB,eAAc,SAAC1b,UACN8X,GAAcpoB,KACd4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,OACLQ,IAkBJkb,EAAAprB,UAAA6rB,iBAAgB,SAACjC,EAAGkC,WAEXrH,QAAUF,IAAkB3kB,KAC5B6kB,QAAUF,GAAmB,OAE3B,SAEHsF,OAAkC/kB,IAApBgnB,GAAgCA,SAC7CnC,GAAuB/pB,KACvB4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,OACLka,EACAC,IASJuB,EAAAprB,UAAAilB,eAAc,kBACLmD,GAAkBxoB,KAClB4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,SAcT0b,EAAAprB,UAAA+rB,gBAAe,SAAClD,EAAUnM,UACjBkM,GAAgBhpB,KAChB4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,OACLmZ,EACAnM,EAAQ9c,KACH8P,SAST0b,EAAAprB,UAAAgsB,UAAS,kBACAd,GAAgBtrB,KAChB4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,SAOT0b,EAAAprB,UAAAisB,gBAAe,uBACJX,uBAAqB1rB,KAASwG,qBAChCilB,cAAazrB,KAAQmsB,gBAAgB,GAAGnsB,KAAOyrB,oBAC/CC,sBAAqB1rB,KAAQwG,oBAExBilB,eAQdD,EAAAprB,UAAAqlB,8BAA6B,SAAC9G,OACtB2I,EAAyB,UAC/BA,EAA0BlmB,OAASimB,GAAcrnB,KAC1C4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,OACL6O,EACA2I,EACA,OAESkE,EAAWlE,EAA2B3C,KAQnD6G,EAAAprB,UAAA+f,QAAO,kBACEjI,IASTsT,EAAAprB,UAAAggB,iBAAgB,SAAClS,UACRuc,GAAoBzqB,KACpB4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,OACL5B,IAUJsd,EAAAprB,UAAAulB,eAAc,SAAC1X,EAAa2X,QACrBC,UAAUD,EAAY3X,EAAa,QAC9B2B,kBAAe5P,KAClB4P,gBAAe,SAEjBA,gBAAgBxO,OAAS4lB,GAAkBhnB,KACzC4P,gBACL,EACA3B,EAAWjO,KACN8P,aAEFvJ,WAETilB,EAhSA,CAAyBc,GAAAvlB,ghBC2UzBwlB,GAzUA,SAAA9oB,GAOK,SACH+oB,EAAYve,EAAa2X,EAAYuB,OAArCvjB,EACEH,EAAAI,KAAA7D,OAAAA,QAMA4D,EAAK6oB,MAAK,GAMV7oB,EAAK+nB,WAAY,EAMjB/nB,EAAKgoB,mBAAoB,EAErB/pB,MAAMC,QAAQmM,EAAY,IAC5BrK,EAAK+hB,eACiE1X,EACpE2X,gBAEsB1gB,IAAf0gB,GAA4BuB,EACrCvjB,EAAK8hB,mBACHE,EAC8B3X,GAEhCrK,EAAK6oB,MAAQtF,eAETtC,EAASjhB,EAAK4hB,YACZkH,EAAgDze,EAChD2B,EAAe,GACf2W,EAAI,GACDllB,EAAI,EAAGuB,EAAK8pB,EAAYtrB,OAAQC,EAAIuB,IAAMvB,EAAC,KAC5C0qB,EAAaW,EAAYrrB,GACrB,IAANA,IACFwjB,EAASkH,EAAWvG,aAEtB9jB,EAAOkO,EAAiBmc,EAAW/G,sBACnCuB,EAAKjjB,KAAKsM,EAAgBxO,QAE5BwC,EAAK8hB,mBAAmBb,EAAQjV,GAChChM,EAAK6oB,MAAQlG,kBAtDWoG,GAAAH,EAAA/oB,GA+D5B+oB,EAAApsB,UAAAwsB,iBAAgB,SAACb,QACLnc,gBAGRlO,EAAM1B,KAAM4P,gBAAiBmc,EAAW/G,qBAAqBxW,SAHtCxO,KAClB4P,gBAAkBmc,EAAW/G,qBAAqBxW,aAIpDie,MAAMnpB,KAAItD,KAAM4P,gBAAgBxO,aAChCmF,WAQPimB,EAAApsB,UAAA0K,MAAK,eACG+hB,EAAe,IAAOL,EAAexsB,KACpC4P,gBAAgBpB,QAAKxO,KACrB6kB,OAAM7kB,KACNysB,MAAMje,gBAEbqe,EAAgBlkB,gBAAe3I,MACxB6sB,GAUTL,EAAApsB,UAAA6e,eAAc,SAACnS,EAAGC,EAAGmS,EAAcC,UAC7BA,EAAqB1Q,GAAwBzO,KAAMoU,YAAatH,EAAGC,GAC9DoS,QAEAyM,mBAAiB5rB,KAASwG,qBAC5BmlB,UAAYxf,KAAK4N,KACpBuM,GAAoBtmB,KACb4P,gBACL,EAAC5P,KACIysB,MAAKzsB,KACL8P,OACL,SAGC8b,kBAAiB5rB,KAAQwG,eAEzBsgB,GAAuB9mB,KACvB4P,gBACL,EAAC5P,KACIysB,MAAKzsB,KACL8P,OAAM9P,KACN2rB,WACL,EACA7e,EACAC,EACAmS,EACAC,KA0BJqN,EAAApsB,UAAA6rB,iBAAgB,SAACjC,EAAGkC,EAAiBY,WAE3BjI,QAAUF,IAAkB3kB,KAC3B6kB,QAAUF,IACe,IADI3kB,KAC/B4P,gBAAgBxO,OAAY,OAE1B,SAEH6oB,OAAkC/kB,IAApBgnB,GAAgCA,EAC9Ca,OAAkC7nB,IAApB4nB,GAAgCA,kBL7BtDld,EACAC,EACA0W,EACAzW,EACAka,EACAC,EACA8C,MAEIA,EAAW,OACNhD,GACLna,EACAC,EACA0W,EAAKA,EAAKnlB,OAAS,GACnB0O,EACAka,EACAC,OAGApd,KACAmd,EAAIpa,EAAgBE,EAAS,UAC3Bma,IACFpd,EAAa+C,EAAgBpB,MAAM,EAAGsB,IAC3BA,EAAS,GAAKka,EAClBnd,GAEA,QAGP+C,EAAgBA,EAAgBxO,OAAS,GAAK4oB,SAC5CC,IACFpd,EAAa+C,EAAgBpB,MAAMoB,EAAgBxO,OAAS0O,IACjDA,EAAS,GAAKka,EAClBnd,GAEA,aAGFxL,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM+kB,EAAKllB,MACbwO,GAAUrO,MAGVwoB,EAAIpa,EAAgBC,EAASC,EAAS,GAAC,OAClC,QACEka,GAAKpa,EAAgBpO,EAAM,GAAC,OAC9BuoB,GACLna,EACAC,EACArO,EACAsO,EACAka,GACA,GAGJna,EAASrO,UAEJ,KK1BEwrB,CAAwBhtB,KACxB4P,gBACL,EAAC5P,KACIysB,MAAKzsB,KACL8P,OACLka,EACAC,EACA8C,IASJP,EAAApsB,UAAAilB,eAAc,kBACLqD,GAAuB1oB,KACvB4P,gBACL,EAAC5P,KACIysB,MAAKzsB,KACL8P,SAOT0c,EAAApsB,UAAA6sB,QAAO,uBACOR,OASdD,EAAApsB,UAAA8sB,cAAa,SAAC5nB,UACRA,EAAQ,GAACtF,KAASysB,MAAMrrB,QAAUkE,EAC7B,SAEE6nB,GAAApmB,QAAU/G,KACd4P,gBAAgBpB,MACT,IAAVlJ,EAAc,EAACtF,KAAQysB,MAAMnnB,EAAQ,GAACtF,KACjCysB,MAAMnnB,IAAKtF,KAEb6kB,SAST2H,EAAApsB,UAAAgtB,eAAc,mBACNxd,EAAe5P,KAAQ4P,gBACvB2W,EAAIvmB,KAAQysB,MACZ5H,EAAM7kB,KAAQ6kB,OAEd6H,EAAW,GACb7c,EAAS,EACJxO,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM+kB,EAAKllB,GACX0qB,EAAU,IAAOoB,GAAApmB,QACrB6I,EAAgBpB,MAAMqB,EAAQrO,GAC9BqjB,GAEF6H,EAAYppB,KAAKyoB,GACjBlc,EAASrO,SAEJkrB,GAMTF,EAAApsB,UAAAitB,iBAAgB,mBACRC,EAAS,GACT1d,EAAe5P,KAAQ4P,gBACzBC,EAAS,EACP0W,EAAIvmB,KAAQysB,MACZ3c,EAAM9P,KAAQ8P,OACXzO,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM+kB,EAAKllB,GAQjBK,EAAO4rB,EAPUtE,GACfpZ,EACAC,EACArO,EACAsO,EACA,KAGFD,EAASrO,SAEJ8rB,GAQTd,EAAApsB,UAAAqlB,8BAA6B,SAAC9G,OACtB2I,EAAyB,GACzBU,EAAc,UACpBV,EAA0BlmB,OAAS2mB,GAAmB/nB,KAC/C4P,gBACL,EAAC5P,KACIysB,MAAKzsB,KACL8P,OACL6O,EACA2I,EACA,EACAU,OAESwE,EACTlF,EACA3C,GACAqD,IASJwE,EAAApsB,UAAA+f,QAAO,kBACEjI,IASTsU,EAAApsB,UAAAggB,iBAAgB,SAAClS,mBHxPjB0B,EACAC,EACA0W,EACAzW,EACA5B,WAES7M,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,IAEzCopB,GAAqB7a,EAAiBC,EAAQ0W,EAAKllB,GAAIyO,EAAQ5B,GAAM,OAE9D,EAET2B,EAAS0W,EAAKllB,UAET,EG2OEksB,CAAyBvtB,KACzB4P,gBACL,EAAC5P,KACIysB,MAAKzsB,KACL8P,OACL5B,IAUJse,EAAApsB,UAAAulB,eAAc,SAAC1X,EAAa2X,QACrBC,UAAUD,EAAY3X,EAAa,QAC9B2B,kBAAe5P,KAClB4P,gBAAe,QAEhB2W,EAAOU,GAAuBjnB,KAC7B4P,gBACL,EACA3B,EAAWjO,KACN8P,OAAM9P,KACNysB,YAEF7c,gBAAgBxO,OAAyB,IAAhBmlB,EAAKnlB,OAAe,EAAImlB,EAAKA,EAAKnlB,OAAS,QACpEmF,WAETimB,EAvUA,CAA8BF,GAAAvlB,6jBC+F9BymB,GAzGA,SAAA/pB,GAIK,SACHgqB,EAAYxf,EAAa2X,OAAzBhiB,EACEH,EAAAI,KAAA7D,OAAAA,YACA4D,EAAK+hB,eAAe1X,EAAa2X,YAPjB8H,GAAAD,EAAAhqB,GAelBgqB,EAAArtB,UAAA0K,MAAK,eACG6L,EAAK,IAAO8W,EAAKztB,KAAM4P,gBAAgBpB,QAAKxO,KAAS6kB,eAC3DlO,EAAMhO,gBAAe3I,MACd2W,GAUT8W,EAAArtB,UAAA6e,eAAc,SAACnS,EAAGC,EAAGmS,EAAcC,OAC3BvP,EAAe5P,KAAQ4P,gBACvBgX,EAAkBlR,GACtB5I,EACAC,EACA6C,EAAgB,GAChBA,EAAgB,OAEdgX,EAAkBzH,EAAkB,SAChCrP,EAAM9P,KAAQ8P,OACXzO,EAAI,EAAGA,EAAIyO,IAAUzO,EAC5B6d,EAAa7d,GAAKuO,EAAgBvO,UAEpC6d,EAAa9d,OAAS0O,EACf8W,SAEAzH,GASXsO,EAAArtB,UAAAilB,eAAc,uBACCzV,gBAAe5P,KAAa4P,gBAAgBpB,QAA7B,IAQ9Bif,EAAArtB,UAAAsf,cAAa,SAACxR,UACLwB,GAA4B1P,KAAM4P,gBAAiB1B,IAQ5Duf,EAAArtB,UAAA+f,QAAO,kBACEjI,IASTuV,EAAArtB,UAAAggB,iBAAgB,SAAClS,UACRW,GAAWX,EAAMlO,KAAO4P,gBAAgB,GAAC5P,KAAQ4P,gBAAgB,KAQ1E6d,EAAArtB,UAAAulB,eAAc,SAAC1X,EAAa2X,QACrBC,UAAUD,EAAY3X,EAAa,QAC9B2B,kBAAe5P,KAClB4P,gBAAe,SAEjBA,gBAAgBxO,OAAS2lB,GAAiB/mB,KACxC4P,gBACL,EACA3B,EAAWjO,KACN8P,aAEFvJ,WAETknB,EAvGA,CAAoBnB,GAAAvlB,meC0LpB4mB,GAvLA,SAAAlqB,GAKK,SACHmqB,EAAY3f,EAAa2X,OAAzBhiB,EACEH,EAAAI,KAAA7D,OAAAA,YACI4lB,IAAe/jB,MAAMC,QAAQmM,EAAY,IAC3CrK,EAAK8hB,mBACHE,EAC8B3X,GAGhCrK,EAAK+hB,eAC0D1X,EAC7D2X,YAhBiBiI,GAAAD,EAAAnqB,GA0BvBmqB,EAAAxtB,UAAA0tB,YAAW,SAACnX,QACA/G,gBAGRlO,EAAM1B,KAAM4P,gBAAiB+G,EAAMqO,sBAHZhlB,KAClB4P,gBAAkB+G,EAAMqO,qBAAqBxW,aAI/CjI,WAQPqnB,EAAAxtB,UAAA0K,MAAK,eACGijB,EAAU,IAAOH,EAAU5tB,KAC1B4P,gBAAgBpB,QAAKxO,KACrB6kB,eAEPkJ,EAAWplB,gBAAe3I,MACnB+tB,GAUTH,EAAAxtB,UAAA6e,eAAc,SAACnS,EAAGC,EAAGmS,EAAcC,MAC7BA,EAAqB1Q,GAAwBzO,KAAMoU,YAAatH,EAAGC,GAAC,OAC/DoS,UAEHvP,EAAe5P,KAAQ4P,gBACvBE,EAAM9P,KAAQ8P,OACXzO,EAAI,EAAGuB,EAAKgN,EAAgBxO,OAAQC,EAAIuB,EAAIvB,GAAKyO,EAAM,KACxD8W,EAAkBlR,GACtB5I,EACAC,EACA6C,EAAgBvO,GAChBuO,EAAgBvO,EAAI,OAElBulB,EAAkBzH,EAAkB,CACtCA,EAAqByH,UACZ5J,EAAI,EAAGA,EAAIlN,IAAUkN,EAC5BkC,EAAalC,GAAKpN,EAAgBvO,EAAI2b,GAExCkC,EAAa9d,OAAS0O,UAGnBqP,GAQTyO,EAAAxtB,UAAAilB,eAAc,kBACLmD,GAAkBxoB,KAClB4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,SAUT8d,EAAAxtB,UAAA4tB,SAAQ,SAAC1oB,OACDnE,EAACnB,KAAS4P,gBACX5P,KACI4P,gBAAgBxO,OAAMpB,KAAQ8P,OADnC,SAEAxK,EAAQ,GAAKnE,GAAKmE,EACb,SAEE2oB,GAAAlnB,QAAK/G,KACT4P,gBAAgBpB,MACnBlJ,EAAKtF,KAAQ8P,QACZxK,EAAQ,GAACtF,KAAS8P,QAAM9P,KAEtB6kB,SAST+I,EAAAxtB,UAAA8tB,UAAS,mBACDte,EAAe5P,KAAQ4P,gBACvBiV,EAAM7kB,KAAQ6kB,OACd/U,EAAM9P,KAAQ8P,OAEdqe,EAAM,GACH9sB,EAAI,EAAGuB,EAAKgN,EAAgBxO,OAAQC,EAAIuB,EAAIvB,GAAKyO,EAAM,KACxD6G,EAAK,IAAOsX,GAAAlnB,QAAM6I,EAAgBpB,MAAMnN,EAAGA,EAAIyO,GAAS+U,GAC9DsJ,EAAO7qB,KAAKqT,UAEPwX,GAQTP,EAAAxtB,UAAA+f,QAAO,kBACEjI,IAST0V,EAAAxtB,UAAAggB,iBAAgB,SAAClS,WACT0B,EAAe5P,KAAQ4P,gBACvBE,EAAM9P,KAAQ8P,OACXzO,EAAI,EAAGuB,EAAKgN,EAAgBxO,OAAQC,EAAIuB,EAAIvB,GAAKyO,EAAM,IAG1DjB,GAAWX,EAFL0B,EAAgBvO,GAChBuO,EAAgBvO,EAAI,IACH,OAClB,SAGJ,GASTusB,EAAAxtB,UAAAulB,eAAc,SAAC1X,EAAa2X,QACrBC,UAAUD,EAAY3X,EAAa,QAC9B2B,kBAAe5P,KAClB4P,gBAAe,SAEjBA,gBAAgBxO,OAAS4lB,GAAkBhnB,KACzC4P,gBACL,EACA3B,EAAWjO,KACN8P,aAEFvJ,WAETqnB,EArLA,CAAyBtB,GAAAvlB,yQCPTqnB,GAAWxe,EAAiBC,EAAQrO,EAAKsO,WACnDue,EAAY,EACZ5c,EAAK7B,EAAgBpO,EAAMsO,GAC3B+B,EAAKjC,EAAgBpO,EAAMsO,EAAS,GACjCD,EAASrO,EAAKqO,GAAUC,EAAM,KAC7B4B,EAAK9B,EAAgBC,GACrBiC,EAAKlC,EAAgBC,EAAS,GACpCwe,GAAaxc,EAAKH,EAAKD,EAAKK,EAC5BL,EAAKC,EACLG,EAAKC,SAEAuc,EAAY,WAULC,GAAY1e,EAAiBC,EAAQ0W,EAAMzW,WACrDye,EAAO,EACFltB,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM+kB,EAAKllB,GACjBktB,GAAQH,GAAWxe,EAAiBC,EAAQrO,EAAKsO,GACjDD,EAASrO,SAEJ+sB,mgBCoJTC,GAvKA,SAAA/qB,GAKK,SACHgrB,EAAYxgB,EAAa2X,OAAzBhiB,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAK+nB,WAAY,EAMjB/nB,EAAKgoB,mBAAoB,OAEN1mB,IAAf0gB,GAA6B/jB,MAAMC,QAAQmM,EAAY,IAMzDrK,EAAK+hB,eAC0D1X,EAC7D2X,GAPFhiB,EAAK8hB,mBACHE,EAC8B3X,YAxBbygB,GAAAD,EAAAhrB,GAuCvBgrB,EAAAruB,UAAA0K,MAAK,sBACQ2jB,EAAUzuB,KAAM4P,gBAAgBpB,QAAKxO,KAAS6kB,SAU3D4J,EAAAruB,UAAA6e,eAAc,SAACnS,EAAGC,EAAGmS,EAAcC,UAC7BA,EAAqB1Q,GAAwBzO,KAAMoU,YAAatH,EAAGC,GAC9DoS,QAEAyM,mBAAiB5rB,KAASwG,qBAC5BmlB,UAAYxf,KAAK4N,KACpBqM,GAAepmB,KACR4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,OACL,SAGC8b,kBAAiB5rB,KAAQwG,eAEzBggB,GAAkBxmB,KAClB4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,OAAM9P,KACN2rB,WACL,EACA7e,EACAC,EACAmS,EACAC,KASJsP,EAAAruB,UAAAuuB,QAAO,kBACEP,GAAcpuB,KACd4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,SAST2e,EAAAruB,UAAAilB,eAAc,kBACLmD,GAAkBxoB,KAClB4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,SAST2e,EAAAruB,UAAAqlB,8BAA6B,SAAC9G,OACtB2I,EAAyB,UAC/BA,EAA0BlmB,OAASimB,GAAcrnB,KAC1C4P,gBACL,EAAC5P,KACI4P,gBAAgBxO,OAAMpB,KACtB8P,OACL6O,EACA2I,EACA,OAESmH,EAAWnH,EAA2B3C,KAQnD8J,EAAAruB,UAAA+f,QAAO,kBACEjI,IASTuW,EAAAruB,UAAAggB,iBAAgB,SAAClS,UACR,GASTugB,EAAAruB,UAAAulB,eAAc,SAAC1X,EAAa2X,QACrBC,UAAUD,EAAY3X,EAAa,QAC9B2B,kBAAe5P,KAClB4P,gBAAe,SAEjBA,gBAAgBxO,OAAS4lB,GAAkBhnB,KACzC4P,gBACL,EACA3B,EAAWjO,KACN8P,aAEFvJ,WAETkoB,EArKA,CAAyBnC,GAAAvlB,kBCDT6nB,GACdhf,EACAC,EACA0W,EACAzW,EACA+e,EACAC,EACAhS,WAEIzb,EAAGuB,EAAIkK,EAAG2E,EAAIC,EAAIG,EAAIC,EACpB/E,EAAI8hB,EAAYC,EAAoB,GAEpCC,EAAa,GAEV/Y,EAAI,EAAGgZ,EAAKzI,EAAKnlB,OAAQ4U,EAAIgZ,IAAMhZ,EAAC,KACrCxU,EAAM+kB,EAAKvQ,OACjBvE,EAAK7B,EAAgBpO,EAAMsO,GAC3B+B,EAAKjC,EAAgBpO,EAAMsO,EAAS,GAC/BzO,EAAIwO,EAAQxO,EAAIG,EAAKH,GAAKyO,EAC7B4B,EAAK9B,EAAgBvO,GACrByQ,EAAKlC,EAAgBvO,EAAI,IACpB0L,GAAK8E,GAAMC,GAAM/E,GAAO8E,GAAM9E,GAAKA,GAAK+E,KAC3ChF,GAAMC,EAAI8E,IAAOC,EAAKD,IAAQH,EAAKD,GAAMA,EACzCsd,EAAczrB,KAAKwJ,IAErB2E,EAAKC,EACLG,EAAKC,MAKLmd,EAASzP,IACT0P,GAAoB3f,EAAAA,MACxBwf,EAAcI,KAAKtuB,GACnB4Q,EAAKsd,EAAc,GACd1tB,EAAI,EAAGuB,EAAKmsB,EAAc3tB,OAAQC,EAAIuB,IAAMvB,EAAC,CAChDqQ,EAAKqd,EAAc1tB,OACb+tB,EAAgBjjB,KAAKkjB,IAAI3d,EAAKD,GAChC2d,EAAgBF,GAEd1E,GAAsB5a,EAAiBC,EAAQ0W,EAAMzW,EADzDhD,GAAK2E,EAAKC,GAAM,EACoD3E,KAClEkiB,EAASniB,EACToiB,EAAmBE,GAGvB3d,EAAKC,SAEHiO,MAAMsP,KAGRA,EAASJ,EAAYC,IAEnBhS,GACFA,EAASxZ,KAAK2rB,EAAQliB,EAAGmiB,GAClBpS,IAECmS,EAAQliB,EAAGmiB,YCjEPI,GAAY1f,EAAiBC,EAAQrO,EAAKsO,QACjDD,EAASrO,EAAMsO,GAAM,SACjBzO,EAAI,EAAGA,EAAIyO,IAAUzO,EAAC,KACvBI,EAAMmO,EAAgBC,EAASxO,GACrCuO,EAAgBC,EAASxO,GAAKuO,EAAgBpO,EAAMsO,EAASzO,GAC7DuO,EAAgBpO,EAAMsO,EAASzO,GAAKI,EAEtCoO,GAAUC,EACVtO,GAAOsO,YCHKyf,GAAsB3f,EAAiBC,EAAQrO,EAAKsO,WAG9D0f,EAAO,EACP/d,EAAK7B,EAAgBpO,EAAMsO,GAC3B+B,EAAKjC,EAAgBpO,EAAMsO,EAAS,GACjCD,EAASrO,EAAKqO,GAAUC,EAAM,KAC7B4B,EAAK9B,EAAgBC,GACrBiC,EAAKlC,EAAgBC,EAAS,GACpC2f,IAAS9d,EAAKD,IAAOK,EAAKD,GAC1BJ,EAAKC,EACLG,EAAKC,SAES,IAAT0d,OAAatqB,EAAYsqB,EAAO,WAgBzBC,GACd7f,EACAC,EACA0W,EACAzW,EACA4f,WAEMC,OAAsBzqB,IAAdwqB,GAA0BA,EAC/BruB,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM+kB,EAAKllB,GACXuuB,EAAcL,GAClB3f,EACAC,EACArO,EACAsO,MAEQ,IAANzO,MACGsuB,GAASC,IAAkBD,IAAUC,EAAW,OAC5C,UAGJD,IAAUC,IAAkBD,GAASC,EAAW,OAC5C,EAGX/f,EAASrO,SAEJ,WAkDOquB,GACdjgB,EACAC,EACA0W,EACAzW,EACA4f,WAEMC,OAAsBzqB,IAAdwqB,GAA0BA,EAC/BruB,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM+kB,EAAKllB,GACXuuB,EAAcL,GAClB3f,EACAC,EACArO,EACAsO,IAGM,IAANzO,EACKsuB,GAASC,IAAkBD,IAAUC,EACrCD,IAAUC,IAAkBD,GAASC,IAE1CN,GAAmB1f,EAAiBC,EAAQrO,EAAKsO,GAEnDD,EAASrO,SAEJqO,WAgBOigB,GACdlgB,EACAC,EACAgZ,EACA/Y,EACA4f,WAESruB,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAC3CwO,EAASggB,GACPjgB,EACAC,EACAgZ,EAAMxnB,GACNyO,EACA4f,UAGG7f,geCtJTkgB,GAAA,SAAAtsB,GAWK,SACHusB,EAAY/hB,EAAa2X,EAAYuB,OAArCvjB,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAK6oB,MAAK,GAMV7oB,EAAKqsB,4BAA6B,EAMlCrsB,EAAKssB,mBAAqB,KAM1BtsB,EAAK+nB,WAAY,EAMjB/nB,EAAKgoB,mBAAoB,EAMzBhoB,EAAKusB,mBAAoB,EAMzBvsB,EAAKwsB,yBAA2B,UAEblrB,IAAf0gB,GAA4BuB,GAC9BvjB,EAAK8hB,mBACHE,EAC8B3X,GAEhCrK,EAAK6oB,MAAQtF,GAEbvjB,EAAK+hB,eACiE1X,EACpE2X,YAlEcyK,GAAAL,EAAAvsB,GA4EpBusB,EAAA5vB,UAAAkwB,iBAAgB,SAACC,QACL3gB,gBAGRlO,EAAM1B,KAAM4P,gBAAiB2gB,EAAWvL,sBAHjBhlB,KAClB4P,gBAAkB2gB,EAAWvL,qBAAqBxW,aAIpDie,MAAMnpB,KAAItD,KAAM4P,gBAAgBxO,aAChCmF,WAQPypB,EAAA5vB,UAAA0K,MAAK,eACG0lB,EAAO,IAAOR,EAAOhwB,KACpB4P,gBAAgBpB,QAAKxO,KACrB6kB,OAAM7kB,KACNysB,MAAMje,gBAEbgiB,EAAQ7nB,gBAAe3I,MAChBwwB,GAUTR,EAAA5vB,UAAA6e,eAAc,SAACnS,EAAGC,EAAGmS,EAAcC,UAC7BA,EAAqB1Q,GAAwBzO,KAAMoU,YAAatH,EAAGC,GAC9DoS,QAEAyM,mBAAiB5rB,KAASwG,qBAC5BmlB,UAAYxf,KAAK4N,KACpBuM,GAAoBtmB,KACb4P,gBACL,EAAC5P,KACIysB,MAAKzsB,KACL8P,OACL,SAGC8b,kBAAiB5rB,KAAQwG,eAEzBsgB,GAAuB9mB,KACvB4P,gBACL,EAAC5P,KACIysB,MAAKzsB,KACL8P,OAAM9P,KACN2rB,WACL,EACA7e,EACAC,EACAmS,EACAC,KASJ6Q,EAAA5vB,UAAAgf,WAAU,SAACtS,EAAGC,UACLyd,GAAqBxqB,KACrBywB,6BACL,EAACzwB,KACIysB,MAAKzsB,KACL8P,OACLhD,EACAC,IASJijB,EAAA5vB,UAAAuuB,QAAO,kBACEL,GAAetuB,KACfywB,6BACL,EAACzwB,KACIysB,MAAKzsB,KACL8P,SAiBTkgB,EAAA5vB,UAAAilB,eAAc,SAACqK,OACT9f,cACc1K,IAAdwqB,EAEFG,GADAjgB,EAAe5P,KAAQywB,6BAA6BjiB,QACjB,EAACxO,KAAOysB,MAAKzsB,KAAO8P,OAAQ4f,GAE/D9f,EAAe5P,KAAQ4P,gBAGlB8Y,GAAwB9Y,EAAiB,EAAC5P,KAAOysB,MAAKzsB,KAAO8P,SAMtEkgB,EAAA5vB,UAAA6sB,QAAO,uBACOR,OAMduD,EAAA5vB,UAAAswB,qBAAoB,mBACTT,4BAA0BjwB,KAASwG,cAAW,KAC/CmqB,EAAa/f,GAAS5Q,KAAMoU,kBAC7B8b,mBAAqBtB,GAAuB5uB,KAC1CywB,6BACL,EAACzwB,KACIysB,MAAKzsB,KACL8P,OACL6gB,EACA,QAEGV,2BAA0BjwB,KAAQwG,0BAE7B0pB,oBASdF,EAAA5vB,UAAAwwB,iBAAgB,sBACH3C,GAAAlnB,QAAK/G,KAAM0wB,uBAAwB/L,KAUhDqL,EAAA5vB,UAAAywB,mBAAkB,uBACJpE,MAAMrrB,QAapB4uB,EAAA5vB,UAAA0wB,cAAa,SAACxrB,UACRA,EAAQ,GAACtF,KAASysB,MAAMrrB,QAAUkE,EAC7B,SAEEyrB,GAAAhqB,QAAU/G,KACd4P,gBAAgBpB,MACT,IAAVlJ,EAAc,EAACtF,KAAQysB,MAAMnnB,EAAQ,GAACtF,KACjCysB,MAAMnnB,IAAKtF,KAEb6kB,SASTmL,EAAA5vB,UAAA4wB,eAAc,mBACNnM,EAAM7kB,KAAQ6kB,OACdjV,EAAe5P,KAAQ4P,gBACvB2W,EAAIvmB,KAAQysB,MACZwE,EAAW,GACbphB,EAAS,EACJxO,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM+kB,EAAKllB,GACXkvB,EAAU,IAAOQ,GAAAhqB,QACrB6I,EAAgBpB,MAAMqB,EAAQrO,GAC9BqjB,GAEFoM,EAAY3tB,KAAKitB,GACjB1gB,EAASrO,SAEJyvB,GAMTjB,EAAA5vB,UAAAqwB,2BAA0B,mBACfN,mBAAiBnwB,KAASwG,cAAW,KACtCoJ,EAAe5P,KAAQ4P,gBACzB6f,GAAuB7f,EAAiB,EAAC5P,KAAOysB,MAAKzsB,KAAO8P,QAAM9P,KAC/DowB,yBAA2BxgB,QAE3BwgB,yBAA2BxgB,EAAgBpB,aAC3C4hB,yBAAyBhvB,OAASyuB,GAAiB7vB,KACjDowB,yBACL,EAACpwB,KACIysB,MAAKzsB,KACL8P,cAGJqgB,kBAAiBnwB,KAAQwG,0BAEpB4pB,0BAQdJ,EAAA5vB,UAAAqlB,8BAA6B,SAAC9G,OACtB2I,EAAyB,GACzBU,EAAc,UACpBV,EAA0BlmB,OAAS+mB,GAAanoB,KACzC4P,gBACL,EAAC5P,KACIysB,MAAKzsB,KACL8P,OACL3D,KAAK4N,KAAK4E,GACV2I,EACA,EACAU,OAESgI,EACT1I,EACA3C,GACAqD,IASJgI,EAAA5vB,UAAA+f,QAAO,kBACEjI,IAST8X,EAAA5vB,UAAAggB,iBAAgB,SAAClS,UACRkd,GAAyBprB,KACzBywB,6BACL,EAACzwB,KACIysB,MAAKzsB,KACL8P,OACL5B,IAUJ8hB,EAAA5vB,UAAAulB,eAAc,SAAC1X,EAAa2X,QACrBC,UAAUD,EAAY3X,EAAa,QAC9B2B,kBAAe5P,KAClB4P,gBAAe,QAEhB2W,EAAOU,GAAuBjnB,KAC7B4P,gBACL,EACA3B,EAAWjO,KACN8P,OAAM9P,KACNysB,YAEF7c,gBAAgBxO,OAAyB,IAAhBmlB,EAAKnlB,OAAe,EAAImlB,EAAKA,EAAKnlB,OAAS,QACpEmF,WAETypB,EA3XA,CAAsB1D,GAAAvlB,SA6XtBmqB,GAAenB,YAcCoB,GAASrgB,EAAQ2H,EAAQ2Y,EAAOC,WACxClwB,EAAIiwB,GAAgB,GAEpBxhB,EAAe,GACZvO,EAAI,EAAGA,EAAIF,IAAKE,EACvBK,EACEkO,EACAwI,GAAatH,EAAQ2H,EAAS,EAAItM,KAAKC,GAAK/K,EAAKF,EAAGkwB,WAGxDzhB,EAAgBtM,KAAKsM,EAAgB,GAAIA,EAAgB,QAC9CmgB,GAAQngB,EAAiB+U,GAAiB,CACnD/U,EAAgBxO,kBAUJkwB,GAAWpjB,OACnBgB,EAAOhB,EAAO,GACdiB,EAAOjB,EAAO,GACdkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACd0B,EAAe,CACnBV,EACAC,EACAD,EACAG,EACAD,EACAC,EACAD,EACAD,EACAD,EACAC,cAES4gB,GAAQngB,EAAiB+U,GAAiB,CACnD/U,EAAgBxO,kBAaJmwB,GAAWC,EAAQC,EAAWC,WACtCC,EAAQF,GAAwB,GAChC3hB,EAAS0hB,EAAOvM,YAChBJ,EAAS2M,EAAOhM,YAChB1U,EAAS0gB,EAAOI,YAChBC,EAAc/hB,GAAU6hB,EAAQ,GAChC/hB,EAAe,IAAO/N,MAAMgwB,GACzBxwB,EAAI,EAAGA,EAAIwwB,EAAaxwB,GAAKyO,EAAM,CAC1CF,EAAgBvO,GAAK,EACrBuO,EAAgBvO,EAAI,GAAK,UAChB2b,EAAI,EAAGA,EAAIlN,EAAQkN,IAC1BpN,EAAgBvO,EAAI2b,GAAKlM,EAAOkM,OAG9BuJ,EAAI,CAAI3W,EAAgBxO,QACxBovB,EAAO,IAAOT,GAAQngB,EAAiBiV,EAAQ0B,UACrDuL,GAAYtB,EAAS1f,EAAQ0gB,EAAOO,YAAaL,GAC1ClB,WAWOsB,GAAYtB,EAAS1f,EAAQ2H,EAAQiZ,WAC7C9hB,EAAkB4gB,EAAQxL,qBAC1BlV,EAAS0gB,EAAQvL,YACjB0M,EAAQ/hB,EAAgBxO,OAAS0O,EAAS,EAC1CkiB,EAAaN,GAAwB,EAClCrwB,EAAI,EAAGA,GAAKswB,IAAStwB,EAAC,KACvBwO,EAASxO,EAAIyO,EACbzC,EAAQ2kB,EAAiC,EAAnBjc,GAAO1U,EAAGswB,GAAaxlB,KAAKC,GAAMulB,EAC9D/hB,EAAgBC,GAAUiB,EAAO,GAAK2H,EAAStM,KAAKsB,IAAIJ,GACxDuC,EAAgBC,EAAS,GAAKiB,EAAO,GAAK2H,EAAStM,KAAKqB,IAAIH,GAE9DmjB,EAAQjqB,weCtCV0rB,GA5bA,SAAAxuB,GAMK,SACHyuB,EAAYjkB,EAAa2X,EAAYuM,OAArCvuB,EACEH,EAAAI,KAAA7D,OAAAA,QAMA4D,EAAKwuB,OAAM,GAMXxuB,EAAKyuB,6BAA8B,EAMnCzuB,EAAK0uB,oBAAsB,KAM3B1uB,EAAK+nB,WAAY,EAMjB/nB,EAAKgoB,mBAAoB,EAMzBhoB,EAAKusB,mBAAoB,EAMzBvsB,EAAKwsB,yBAA2B,MAE3B+B,IAActwB,MAAMC,QAAQmM,EAAY,IAAC,SACxC4W,EAASjhB,EAAK4hB,YACZ+M,EAA0CtkB,EAC1C2B,EAAe,GACfiZ,EAAK,GACFxnB,EAAI,EAAGuB,EAAK2vB,EAASnxB,OAAQC,EAAIuB,IAAMvB,EAAC,KACzCmvB,EAAU+B,EAASlxB,GACf,IAANA,IACFwjB,EAAS2L,EAAQhL,qBAEb3V,EAASD,EAAgBxO,OACzBmlB,EAAOiK,EAAQvD,UACZjQ,EAAI,EAAGoK,EAAKb,EAAKnlB,OAAQ4b,EAAIoK,IAAMpK,EAC1CuJ,EAAKvJ,IAAMnN,EAEbnO,EAAOkO,EAAiB4gB,EAAQxL,sBAChC6D,EAAMvlB,KAAKijB,GAEbX,EAAaf,EACb5W,EAAc2B,EACduiB,EAAYtJ,cAEK3jB,IAAf0gB,GAA4BuM,GAC9BvuB,EAAK8hB,mBACHE,EAC8B3X,GAEhCrK,EAAKwuB,OAASD,GAEdvuB,EAAK+hB,eACwE1X,EAC3E2X,YAnFmB4M,GAAAN,EAAAzuB,GA6FzByuB,EAAA9xB,UAAAqyB,cAAa,SAACjC,GACgB,IACxBjK,UACM3W,qBAKFC,EAAM7P,KAAQ4P,gBAAgBxO,OACpCM,EAAM1B,KAAM4P,gBAAiB4gB,EAAQxL,8BAE5B3jB,EAAI,EAAGuB,GADhB2jB,EAAOiK,EAAQvD,UAAUze,SACCpN,OAAQC,EAAIuB,IAAMvB,EAC1CklB,EAAKllB,IAAMwO,YARRD,gBAAkB4gB,EAAQxL,qBAAqBxW,QACpD+X,EAAOiK,EAAQvD,UAAUze,aACpB4jB,OAAO9uB,YAST8uB,OAAO9uB,KAAKijB,QACZhgB,WAQP2rB,EAAA9xB,UAAA0K,MAAK,mBACGpE,EAAG1G,KAAQoyB,OAAOhxB,OAClBsxB,EAAQ,IAAO7wB,MAAM6E,GAClBrF,EAAI,EAAGA,EAAIqF,IAAOrF,EACzBqxB,EAASrxB,GAACrB,KAASoyB,OAAO/wB,GAAGmN,YAGzBmkB,EAAY,IAAOT,EAAYlyB,KAC9B4P,gBAAgBpB,QAAKxO,KACrB6kB,OACL6N,UAEFC,EAAahqB,gBAAe3I,MAErB2yB,GAUTT,EAAA9xB,UAAA6e,eAAc,SAACnS,EAAGC,EAAGmS,EAAcC,UAC7BA,EAAqB1Q,GAAwBzO,KAAMoU,YAAatH,EAAGC,GAC9DoS,QAEAyM,mBAAiB5rB,KAASwG,qBAC5BmlB,UAAYxf,KAAK4N,cnBhE1BnK,EACAC,EACAgZ,EACA/Y,EACAM,WAES/O,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCklB,EAAOsC,EAAMxnB,GACnB+O,EAAMkW,GAAqB1W,EAAiBC,EAAQ0W,EAAMzW,EAAQM,GAClEP,EAAS0W,EAAKA,EAAKnlB,OAAS,UAEvBgP,EmBsDDwiB,CAAyB5yB,KAClB4P,gBACL,EAAC5P,KACIoyB,OAAMpyB,KACN8P,OACL,SAGC8b,kBAAiB5rB,KAAQwG,wBnBqHlCoJ,EACAC,EACAgZ,EACA/Y,EACA2W,EACAC,EACA5Z,EACAC,EACAmS,EACAC,EACAwH,WAEME,EAAWF,GAA2B,CAAInH,IAAKA,KAC5Cne,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCklB,EAAOsC,EAAMxnB,GACnB8d,EAAqB2H,GACnBlX,EACAC,EACA0W,EACAzW,EACA2W,EACAC,EACA5Z,EACAC,EACAmS,EACAC,EACA0H,GAEFhX,EAAS0W,EAAKA,EAAKnlB,OAAS,UAEvB+d,EmBjJE0T,CAA4B7yB,KAC5BywB,6BACL,EAACzwB,KACIoyB,OAAMpyB,KACN8P,OAAM9P,KACN2rB,WACL,EACA7e,EACAC,EACAmS,EACAC,KASJ+S,EAAA9xB,UAAAgf,WAAU,SAACtS,EAAGC,mBbnFd6C,EACAC,EACAgZ,EACA/Y,EACAhD,EACAC,MAEqB,IAAjB8b,EAAMznB,OAAY,OACb,UAEAC,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCklB,EAAOsC,EAAMxnB,MACfmpB,GAAsB5a,EAAiBC,EAAQ0W,EAAMzW,EAAQhD,EAAGC,GAAC,OAC5D,EAET8C,EAAS0W,EAAKA,EAAKnlB,OAAS,UAEvB,EamEE0xB,CAAsB9yB,KACtBywB,6BACL,EAACzwB,KACIoyB,OAAMpyB,KACN8P,OACLhD,EACAC,IASJmlB,EAAA9xB,UAAAuuB,QAAO,2BNhLoB/e,EAAiBC,EAAQgZ,EAAO/Y,WACvDye,EAAO,EACFltB,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCklB,EAAOsC,EAAMxnB,GACnBktB,GAAQD,GAAY1e,EAAiBC,EAAQ0W,EAAMzW,GACnDD,EAAS0W,EAAKA,EAAKnlB,OAAS,UAEvBmtB,EM0KEwE,CAAgB/yB,KAChBywB,6BACL,EAACzwB,KACIoyB,OAAMpyB,KACN8P,SAiBToiB,EAAA9xB,UAAAilB,eAAc,SAACqK,OACT9f,cACc1K,IAAdwqB,EAEFI,GADAlgB,EAAe5P,KAAQywB,6BAA6BjiB,QAGlD,EAACxO,KACIoyB,OAAMpyB,KACN8P,OACL4f,GAGF9f,EAAe5P,KAAQ4P,gBAGlBgZ,GACLhZ,EACA,EAAC5P,KACIoyB,OAAMpyB,KACN8P,SAOToiB,EAAA9xB,UAAA4yB,SAAQ,uBACMZ,QAMdF,EAAA9xB,UAAA6yB,sBAAqB,mBACVZ,6BAA2BryB,KAASwG,cAAW,KAChDqoB,WC9QiBjf,EAAiBC,EAAQgZ,EAAO/Y,WACrD+e,EAAW,GACb3gB,GvCqLIqB,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,GuCpL5BlO,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCklB,EAAOsC,EAAMxnB,GACnB6M,EAASyB,GACPC,EACAC,EACA0W,EAAK,GACLzW,GAEF+e,EAAYvrB,MAAM4K,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,GACxE2B,EAAS0W,EAAKA,EAAKnlB,OAAS,UAEvBytB,EDgQiBqE,CAAkBlzB,KAC/B4P,gBACL,EAAC5P,KACIoyB,OAAMpyB,KACN8P,aAEFwiB,6BJvMT1iB,EACAC,EACAgZ,EACA/Y,EACA+e,WAEIsE,EAAc,GACT9xB,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCklB,EAAOsC,EAAMxnB,GACnB8xB,EAAiBvE,GACfhf,EACAC,EACA0W,EACAzW,EACA+e,EACA,EAAIxtB,EACJ8xB,GAEFtjB,EAAS0W,EAAKA,EAAKnlB,OAAS,UAEvB+xB,EImLwBC,CAA6BpzB,KACjDywB,6BACL,EAACzwB,KACIoyB,OAAMpyB,KACN8P,OACL+e,QAEGwD,4BAA2BryB,KAAQwG,0BAE9B8rB,qBASdJ,EAAA9xB,UAAAizB,kBAAiB,sBACJC,GAAAvsB,QAAU/G,KACdizB,wBAAwBzkB,QAC7BmW,KAOJuN,EAAA9xB,UAAAqwB,2BAA0B,mBACfN,mBAAiBnwB,KAASwG,cAAW,KACtCoJ,EAAe5P,KAAQ4P,0BFtOjCA,EACAC,EACAgZ,EACA/Y,EACA4f,WAESruB,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCklB,EAAOsC,EAAMxnB,OAEhBouB,GAAuB7f,EAAiBC,EAAQ0W,EAAMzW,EAAQ4f,GAAS,OAEjE,EAELnJ,EAAKnlB,SACPyO,EAAS0W,EAAKA,EAAKnlB,OAAS,WAGzB,EEuNDmyB,CAAwB3jB,EAAiB,EAAC5P,KAAOoyB,OAAMpyB,KAAO8P,cAIzDsgB,yBAA2BxgB,EAAgBpB,aAC3C4hB,yBAAyBhvB,OAAS0uB,GAAsB9vB,KACtDowB,yBACL,EAACpwB,KACIoyB,OAAMpyB,KACN8P,SAT6D9P,KAE/DowB,yBAA2BxgB,OAU7BugB,kBAAiBnwB,KAAQwG,0BAEpB4pB,0BAQd8B,EAAA9xB,UAAAqlB,8BAA6B,SAAC9G,OACtB2I,EAAyB,GACzBkM,EAAe,UACrBlM,EAA0BlmB,gBjB0G5BwO,EACAC,EACAgZ,EACA/Y,EACAoQ,EACAoH,EACAC,EACAiM,WAESnyB,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCklB,EAAOsC,EAAMxnB,GACb2mB,EAAc,GACpBT,EAAmBY,GACjBvY,EACAC,EACA0W,EACAzW,EACAoQ,EACAoH,EACAC,EACAS,GAEFwL,EAAgBlwB,KAAK0kB,GACrBnY,EAAS0W,EAAKA,EAAKnlB,OAAS,UAEvBmmB,EiBnI8BkM,CAAkBzzB,KAC9C4P,gBACL,EAAC5P,KACIoyB,OAAMpyB,KACN8P,OACL3D,KAAK4N,KAAK4E,GACV2I,EACA,EACAkM,OAEStB,EACT5K,EACA3C,GACA6O,IAUJtB,EAAA9xB,UAAAszB,WAAU,SAACpuB,MACLA,EAAQ,GAACtF,KAASoyB,OAAOhxB,QAAUkE,EAAK,OACnC,SAELuK,KACU,IAAVvK,EACFuK,EAAS,WAEH8jB,EAAQ3zB,KAAQoyB,OAAO9sB,EAAQ,GACrCuK,EAAS8jB,EAASA,EAASvyB,OAAS,OAEhCmlB,EAAIvmB,KAAQoyB,OAAO9sB,GAAOkJ,QAC1BhN,EAAM+kB,EAAKA,EAAKnlB,OAAS,MAChB,IAAXyO,EAAY,IAAA,IACLxO,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAC1CklB,EAAKllB,IAAMwO,aAGJ+jB,GAAA7sB,QAAO/G,KACX4P,gBAAgBpB,MAAMqB,EAAQrO,GAAGxB,KACjC6kB,OACL0B,IASJ2L,EAAA9xB,UAAAyzB,YAAW,mBACHhP,EAAM7kB,KAAQ6kB,OACdjV,EAAe5P,KAAQ4P,gBACvBiZ,EAAK7oB,KAAQoyB,OACbG,EAAQ,GACV1iB,EAAS,EACJxO,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCklB,EAAOsC,EAAMxnB,GAAGmN,QAChBhN,EAAM+kB,EAAKA,EAAKnlB,OAAS,MAChB,IAAXyO,EAAY,IAAA,IACLmN,EAAI,EAAGoK,EAAKb,EAAKnlB,OAAQ4b,EAAIoK,IAAMpK,EAC1CuJ,EAAKvJ,IAAMnN,MAGT2gB,EAAO,IAAOoD,GAAA7sB,QAClB6I,EAAgBpB,MAAMqB,EAAQrO,GAC9BqjB,EACA0B,GAEFgM,EAASjvB,KAAKktB,GACd3gB,EAASrO,SAEJ+wB,GAQTL,EAAA9xB,UAAA+f,QAAO,kBACEjI,IASTga,EAAA9xB,UAAAggB,iBAAgB,SAAClS,mBZ/NjB0B,EACAC,EACAgZ,EACA/Y,EACA5B,WAES7M,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCklB,EAAOsC,EAAMxnB,MAEjB+pB,GAA0Bxb,EAAiBC,EAAQ0W,EAAMzW,EAAQ5B,GAAM,OAEhE,EAET2B,EAAS0W,EAAKA,EAAKnlB,OAAS,UAEvB,EYiNE0yB,CAA8B9zB,KAC9BywB,6BACL,EAACzwB,KACIoyB,OAAMpyB,KACN8P,OACL5B,IAUJgkB,EAAA9xB,UAAAulB,eAAc,SAAC1X,EAAa2X,QACrBC,UAAUD,EAAY3X,EAAa,QAC9B2B,kBAAe5P,KAClB4P,gBAAe,QAEhBiZ,WlB3XRjZ,EACAC,EACAkZ,EACAjZ,EACAqiB,WAEMtJ,EAAQsJ,GAAqB,GAC/B9wB,EAAI,EACC2b,EAAI,EAAGoK,EAAK2B,EAAc3nB,OAAQ4b,EAAIoK,IAAMpK,EAAC,KAC9CuJ,EAAOU,GACXrX,EACAC,EACAkZ,EAAc/L,GACdlN,EACA+Y,EAAMxnB,IAERwnB,EAAMxnB,KAAOklB,EACb1W,EAAS0W,EAAKA,EAAKnlB,OAAS,UAE9BynB,EAAMznB,OAASC,EACRwnB,EkBuWSkL,CAA4B/zB,KACnC4P,gBACL,EACA3B,EAAWjO,KACN8P,OAAM9P,KACNoyB,WAEc,IAAjBvJ,EAAMznB,OAAYpB,KACf4P,gBAAgBxO,OAAS,WAExB4yB,EAAWnL,EAAMA,EAAMznB,OAAS,QACjCwO,gBAAgBxO,OACC,IAApB4yB,EAAS5yB,OAAe,EAAI4yB,EAASA,EAAS5yB,OAAS,QAEtDmF,WAET2rB,EA1bA,CAA2B5F,GAAAvlB,meEwOxB,SACMktB,GAAa/wB,EAAQuf,OACvBvf,EAAM,OACF,KAKN,IACCwH,SACIxH,EAAa,WACdgV,GACHxN,EAiEH,SACwBxH,cACd+qB,GAAAlnB,QAAM7D,EAAoB,aAnEtBgxB,CAA+ChxB,cAGvDgV,GACHxN,EAqEH,SAC6BxH,cACnBiqB,GAAApmB,QAAW7D,EAAoB,aAvE3BixB,CACyBjxB,cAIjCgV,GACHxN,EA+FH,SAC0BxH,cAChB0wB,GAAA7sB,QAAQ7D,EAAoB,aAjGxBkxB,CAAmDlxB,cAG3DgV,GACHxN,EA2EH,SAC6BxH,cACnBowB,GAAAvsB,QAAW7D,EAAoB,aA7E3BmxB,CACyBnxB,cAIjCgV,GACHxN,EA6DH,SACkCxH,cACxBoxB,GAAAvtB,QAAgB7D,EAAoB,aA/DhCqxB,CAC8BrxB,cAItCgV,GACHxN,EAuEH,SAC+BxH,cACrBsxB,GAAAztB,QAAa7D,EAAoB,aAzE7BuxB,CAC2BvxB,cAInCgV,GACHxN,EAgBH,SACqCxH,EAAQuf,OACxC7B,EAAa1d,EAAmB,WAAEwxB,KAInC,SACOhqB,UACDupB,GAAavpB,EAAU+X,iBAGvBkS,GAAA5tB,QAAmB6Z,GA3BfgU,CACiC1xB,2BAKlC+D,MAAK,6BAAgC/D,EAAOnD,aAGnDsjB,GAA6B3Y,GAAU,EAAO+X,GAyEpD,SACMoS,GAAcnqB,EAAU+X,OAK3BqS,EAHE/0B,GADN2K,EAAW2Y,GAA6B3Y,GAAU,EAAM+X,IAClCtC,iBAIdpgB,QACDmY,GACH4c,EAuIH,SACyBpqB,EAAU+X,UAElC1iB,KAAI,QACJkO,YAAavD,EAAS2a,kBA3IV0P,CACcrqB,cAKrBwN,GACH4c,EA4EH,SAC8BpqB,EAAU+X,UAEvC1iB,KAAI,aACJkO,YAAavD,EAAS2a,kBAhFV2P,CACmBtqB,cAK1BwN,GACH4c,EAqIH,SAC2BpqB,EAAU+X,OAClCkN,EACAlN,IACFkN,EAAQlN,EAAYwS,oBAGpBl1B,KAAI,UACJkO,YAAavD,EAAS2a,eAAesK,IA7IzBuF,CACgBxqB,EACxB+X,cAICvK,GACH4c,EAsFH,SAC8BpqB,EAAU+X,UAEvC1iB,KAAI,aACJkO,YAAavD,EAAS2a,kBA1FV8P,CACmBzqB,cAK1BwN,GACH4c,EAmEH,SACmCpqB,EAAU+X,UAE5C1iB,KAAI,kBACJkO,YAAavD,EAAS2a,kBAvEV+P,CACwB1qB,cAK/BwN,GACH4c,EAoFH,SACgCpqB,EAAU+X,OACvCkN,EACAlN,IACFkN,EAAQlN,EAAYwS,oBAGpBl1B,KAAI,eACJkO,YAAavD,EAAS2a,eAAesK,IA5FzB0F,CACqB3qB,EAC7B+X,cAICvK,GACH4c,EAwBH,SACsCpqB,EAAU+X,UAO/C1iB,KAAI,qBACJ6gB,WAPiBlW,EAAS+W,qBAAqBiT,KAAG,SAAWY,OACvDriB,EAAU3Q,EAAM,GAAKmgB,iBACpBxP,EAAQ0P,kBACRkS,GAAcS,EAAUriB,OA7BnBsiB,CAC2B7qB,EACnC+X,cAICvK,GACH4c,EAAO,CACL/0B,KAAI,qBACJ6gB,WAAU,4BAKF3Z,MAAK,8BAAiClH,UAG7C+0B,MAoGTU,GA5fA,SAAA/xB,GAGK,SACHgyB,EAAYhT,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAyB,UAEzC7e,EAAAH,EAAAI,KAAA7D,OAAAA,MAKKsiB,eAAiBxH,GACpB7H,EAAQqP,eAAiBrP,EAAQqP,eAAc,aAG7CrP,EAAQ0P,oBACV/e,EAAK2e,yBAA2BzH,GAAc7H,EAAQ0P,oBAQxD/e,EAAKsG,cAAgB+I,EAAQyiB,aAO7B9xB,EAAK+xB,qBAAuB1iB,EAAQ2iB,6BAhClBC,GAAAJ,EAAAhyB,GAyCpBgyB,EAAAr1B,UAAA+jB,sBAAqB,SAACjhB,EAAQuf,GAGzB,IACCqT,EAAiB,KAWfprB,EAAWupB,IATf6B,EADe,YAAb5yB,EAAa,KACiCA,EAElC,MACN,mBACsCA,aAC9B,OAIqC,SAAGuf,GACpDQ,EAAO,IAAO8S,EAAAhvB,oBACXmD,cACP+Y,EAAQlY,gBAAe/K,KAAMkK,oBAExByrB,sBAGL1S,EAAQlY,gBAAgB+qB,EAA8B,eAExD7S,EAAQtY,YAAYD,UAERorB,GACV7S,EAAQxX,MAAMqqB,EAAmB,IAG/BA,EAA2B,YAC7B7S,EAAQjb,cAAc8tB,EAA2B,YAAG,GAE/C7S,GASTwS,EAAAr1B,UAAAgkB,uBAAsB,SAAClhB,EAAQuf,OAGzBU,EAAW,QACS,sBAH4BjgB,EAG5B,KAAyB,CAE/CigB,EAAQ,WACF6S,EAFoE9yB,EAEf,SAClD7B,EAAI,EAAGuB,EAAKozB,EAAgB50B,OAAQC,EAAIuB,IAAMvB,EACrD8hB,EAAS7f,KAAItD,KACNmkB,sBAAsB6R,EAAgB30B,GAAIohB,SAInDU,EAAQ,MAASgB,sBAAsBjhB,EAAQuf,WAE1CU,GASTsS,EAAAr1B,UAAAikB,uBAAsB,SAACnhB,EAAQuf,UACtBwR,GAAa/wB,EAAQuf,IAQ9BgT,EAAAr1B,UAAAkkB,yBAAwB,SAACphB,OAEnBgX,EADE+b,EAAM/yB,EAAY,WAEpB+yB,EACY,QAAVA,EAAU,KACZ/b,EAAaY,GAAcmb,EAAgB,WAAQ,MAChC,SAAVA,EAAU,KACnB/b,EAAaY,GAAa,QAAWmb,EAAgB,WAAQ,MAE7D1sB,IAAO,EAAO,IAGhB2Q,EAAUla,KAAQsiB,eAE2CpI,GAWjEub,EAAAr1B,UAAAokB,mBAAkB,SAACvB,EAASR,GAC1BA,EAAWziB,KAAQ4iB,aAAaH,GAEH,IACvBvf,EAAM,MACJ,UACNwH,SAAU,KACVE,WAAY,MAGRc,EAAKuX,EAAQ5X,gBACRnG,IAAPwG,IACFxI,EAAOwI,GAAKA,IAGTuX,EAAQ5a,gBAAa,OACjBnF,MAGH0H,EAAaqY,EAAQ7a,gBACrBsC,EAAWuY,EAAQhY,qBACrBP,IACFxH,EAAOwH,SAAWmqB,GAAcnqB,EAAU+X,UAEnC7X,EAAWqY,EAAQjY,oBAGvBzH,EAAQqH,KACX1H,EAAO0H,WAAaA,GAGf1H,GAWTuyB,EAAAr1B,UAAAqkB,oBAAmB,SAACtB,EAAUV,GAC5BA,EAAWziB,KAAQ4iB,aAAaH,WAC1ByT,EAAO,GACJ70B,EAAI,EAAGuB,EAAKugB,EAAS/hB,OAAQC,EAAIuB,IAAMvB,EAC9C60B,EAAQ5yB,KAAItD,KAAMwkB,mBAAmBrB,EAAS9hB,GAAIohB,WAGlD1iB,KAAI,oBACJojB,SAAU+S,IAYdT,EAAAr1B,UAAAskB,oBAAmB,SAACha,EAAU+X,UACrBoS,GAAcnqB,EAAQ1K,KAAO4iB,aAAaH,KAErDgT,EAhNA,CAAsBU,GAAApvB,4IC/BnB,IACGqvB,GAAa,oDAQbC,GAAe,qCAQLC,GAASC,SACP,iBAALA,EACFA,EAEAC,GAASD,GAQjB,SACME,GAAUF,OACXG,EAAKC,SAASC,cAAa,UACjCF,EAAGxrB,MAAMqrB,MAAQA,EACC,KAAdG,EAAGxrB,MAAMqrB,MAAK,CAChBI,SAASE,KAAKC,YAAYJ,OACpBK,EAAMC,iBAAiBN,GAAIH,aACjCI,SAASE,KAAKI,YAAYP,GACnBK,eAwBHG,GAKFC,GAnBOC,IAcLF,GAAK,GAKPC,GAAY,WAOJE,OACJd,KACAW,GAAMl0B,eAAeq0B,GACvBd,EAAQW,GAAMG,WAEVF,IAtBa,KAsBc,KACzB91B,EAAI,UACG0B,KAAOm0B,GACE,IAAP,EAAN71B,cACI61B,GAAMn0B,KACXo0B,IAIRZ,EA4BL,SAC0Bc,OACvBrhB,EAAGshB,EAAGv2B,EAAGD,EAAGy1B,KAEZF,GAAgBkB,KAAKF,KACvBA,EAAIZ,GAAUY,IAGZjB,GAAcmB,KAAKF,GAAC,KAEhBl2B,EAAIk2B,EAAEj2B,OAAS,EACjBqL,OAAC,EAEHA,EADEtL,GAAK,EACH,EAEA,MAEAq2B,EAAiB,IAANr2B,GAAiB,IAANA,EAC5B6U,EAAIyhB,SAASJ,EAAEK,OAAO,EAAI,EAAIjrB,EAAGA,GAAI,IACrC6qB,EAAIG,SAASJ,EAAEK,OAAO,EAAI,EAAIjrB,EAAGA,GAAI,IACrC1L,EAAI02B,SAASJ,EAAEK,OAAO,EAAI,EAAIjrB,EAAGA,GAAI,IAEnC3L,EADE02B,EACEC,SAASJ,EAAEK,OAAO,EAAI,EAAIjrB,EAAGA,GAAI,IAEjC,IAEG,GAALA,IACFuJ,GAAKA,GAAK,GAAKA,EACfshB,GAAKA,GAAK,GAAKA,EACfv2B,GAAKA,GAAK,GAAKA,EACXy2B,IACF12B,GAAKA,GAAK,GAAKA,IAGnBy1B,EAAK,CAAIvgB,EAAGshB,EAAGv2B,EAAGD,EAAI,UACS,GAAtBu2B,EAAE9yB,QAAO,SAGlBozB,GADApB,EAAQc,EAAE7oB,MAAM,GAAG,GAAIpF,MAAK,KAAMsrB,IAAIkD,SAER,GAArBP,EAAE9yB,QAAO,UAElBgyB,EAAQc,EAAE7oB,MAAM,GAAG,GAAIpF,MAAK,KAAMsrB,IAAIkD,SAChCt0B,KAAK,GACXq0B,GAAUpB,IAEVhtB,IAAO,EAAO,WAETgtB,EA3EOsB,CAAoBR,GAC5BH,GAAMG,GAAKd,IACTY,UAEGZ,aAYGuB,GAAQvB,UAClB10B,MAAMC,QAAQy0B,GACTA,EAEAa,GAAWb,YA+DNoB,GAAUpB,UACxBA,EAAM,GAAKphB,GAAOohB,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAKphB,GAAOohB,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAKphB,GAAOohB,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAKphB,GAAMohB,EAAM,GAAI,EAAG,GACvBA,WAOOC,GAASD,OACnBvgB,EAAIugB,EAAM,GACVvgB,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,OAEdshB,EAAIf,EAAM,GACVe,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,OAEdv2B,EAAIw1B,EAAM,UACVx1B,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,WAGDiV,EAAC,IAASshB,EAAC,IAASv2B,EAAC,UADfmE,IAAbqxB,EAAM,GAAmB,EAAIA,EAAM,IACG,IChN/C,IACHwB,GAAA,oBACEC,IAIKh4B,KACEi4B,OAAM,GAKRj4B,KACEk4B,WAAa,EAKfl4B,KACEm4B,cAAgB,UAMvBH,EAAA53B,UAAAg4B,MAAK,gBACEH,OAAM,QACNC,WAAa,GAMpBF,EAAA53B,UAAAi4B,eAAc,uBACAH,WAAUl4B,KAAQm4B,eAMhCH,EAAA53B,UAAAk4B,OAAM,mBACKD,iBAAc,KACjBh3B,EAAI,UACG0B,KAAG/C,KAASi4B,OAAM,KACrBM,EAASv4B,KAAQi4B,OAAOl1B,GACZ,IAAP,EAAN1B,MAAmBk3B,EAAUpzB,4BACpB8yB,OAAOl1B,UACZm1B,eAYfF,EAAA53B,UAAA6H,IAAG,SAACuwB,EAAKC,EAAalC,OACdxzB,EAAM21B,GAAOF,EAAKC,EAAalC,UAC9BxzB,KAAG/C,KAASi4B,OAAMj4B,KAAQi4B,OAAOl1B,GAAO,MASjDi1B,EAAA53B,UAAAqI,IAAG,SAAC+vB,EAAKC,EAAalC,EAAOgC,OACrBx1B,EAAM21B,GAAOF,EAAKC,EAAalC,QAChC0B,OAAOl1B,GAAOw1B,SACZL,YAUTF,EAAA53B,UAAAu4B,QAAO,SAACC,QACDT,cAAgBS,OAChBN,UAETN,EAtFA,GA6FG,SACMU,GAAOF,EAAKC,EAAalC,UAEzBkC,EAAW,IAASD,EAAG,KADVjC,EAAQD,GAASC,GAAK,YAW/BsC,GAAM,IAAOd,+HC5G1Be,GACS,UADTA,GAES,UAFTA,GAGQ,SAHRA,GAIS,SAJTA,GAKgB,gBALhBA,GAMgB,gBANhBA,GAOU,UAPVA,GAQU,UARVA,GASQ,meC+TRC,GAtSA,SAAAt1B,GAGK,SACHu1B,EAAY/lB,OAAZrP,EACEH,EAAAI,KAAA7D,OAAAA,KAKM4K,EAAatI,EAAM,GAAK2Q,UAE9BrI,EAAWkuB,SACW5zB,IAApB+N,EAAQgmB,QAAwBhmB,EAAQgmB,QAAU,EACpD1vB,GAA8C,iBAAhCqB,EAAWkuB,IAAqC,IAE9DluB,EAAWkuB,SACW5zB,IAApB+N,EAAQimB,SAAwBjmB,EAAQimB,QAC1CtuB,EAAWkuB,IAAyB7lB,EAAQkmB,OAC5CvuB,EAAWkuB,SACiB5zB,IAA1B+N,EAAQmmB,cAA8BnmB,EAAQmmB,cAAgB7pB,EAAAA,EAChE3E,EAAWkuB,SACiB5zB,IAA1B+N,EAAQomB,cAA8BpmB,EAAQomB,cAAgB,EAChEzuB,EAAWkuB,SACW5zB,IAApB+N,EAAQqmB,QAAwBrmB,EAAQqmB,SAAW/pB,EAAAA,EACrD3E,EAAWkuB,SACW5zB,IAApB+N,EAAQsmB,QAAwBtmB,EAAQsmB,QAAUhqB,EAAAA,EAMpD3L,EAAK41B,gBACsBt0B,IAAzB0F,EAAW6uB,UAA0BxmB,EAAQwmB,UAAS,kBACjD7uB,EAAW6uB,UAElB71B,EAAKoE,cAAc4C,GAMnBhH,EAAK81B,OAAS,cA1CMC,GAAAX,EAAAv1B,GAgDtBu1B,EAAA54B,UAAAw5B,aAAY,uBACEJ,YAUdR,EAAA54B,UAAAy5B,cAAa,SAACC,GAC6B,IACnCC,EAAK/5B,KACJ05B,QAAM,CAETM,MAAKh6B,KACLi6B,aAAyB/0B,IAAhB40B,GAAmCA,GAE1CX,EAAMn5B,KAAQ6J,mBACpBkwB,EAAMd,QAAU9jB,GAAMhJ,KAAKwX,MAA0B,IAArB3jB,KAAMk6B,cAAsB,IAAK,EAAG,GACpEH,EAAMI,YAAWn6B,KAAQo6B,iBACzBL,EAAMb,QAAOl5B,KAAQq6B,aACrBN,EAAM7rB,OAAMlO,KAAQoU,YACpB2lB,EAAMZ,YACOj0B,IAAXi0B,EAAuBA,GAA2B,IAAlBY,EAAME,QAAoB1qB,EAAAA,EAAW,EACvEwqB,EAAMX,cAAap5B,KAAQs6B,mBAC3BP,EAAMV,cAAgBltB,KAAKiE,IAAGpQ,KAAMu6B,mBAAoB,GACxDR,EAAMT,QAAOt5B,KAAQw6B,aACrBT,EAAMR,QAAOv5B,KAAQy6B,kBAChBf,OAASK,EAEPA,GASTf,EAAA54B,UAAAs6B,eAAc,SAACC,UACN3zB,KASTgyB,EAAA54B,UAAAw6B,oBAAmB,SAACC,UACX7zB,KAUTgyB,EAAA54B,UAAAgU,UAAS,uBAC6DnM,IAClE6wB,KAUJE,EAAA54B,UAAAk6B,iBAAgB,uBACqBryB,IAAI6wB,KASzCE,EAAA54B,UAAAm6B,iBAAgB,uBACqBtyB,IAAI6wB,KASzCE,EAAA54B,UAAAo6B,WAAU,uBAC2BvyB,IAAI6wB,KASzCE,EAAA54B,UAAAq6B,WAAU,uBAC2BxyB,IAAI6wB,KASzCE,EAAA54B,UAAA85B,WAAU,uBAC2BjyB,IAAI6wB,KAOzCE,EAAA54B,UAAAg6B,eAAc,kBACLpzB,KASTgyB,EAAA54B,UAAAi6B,WAAU,uBAC4BpyB,IAAI6wB,KAU1CE,EAAA54B,UAAAyJ,UAAS,uBAC4B5B,IAAI6wB,KAUzCE,EAAA54B,UAAA0U,UAAS,SAAC5G,QACHzF,IAAIqwB,GAAsB5qB,IASjC8qB,EAAA54B,UAAA06B,iBAAgB,SAAC1B,QACV3wB,IAAIqwB,GAA8BM,IASzCJ,EAAA54B,UAAA26B,iBAAgB,SAAC1B,QACV5wB,IAAIqwB,GAA8BO,IAWzCL,EAAA54B,UAAA46B,WAAU,SAACzB,QACJ9wB,IAAIqwB,GAAwBS,IAWnCP,EAAA54B,UAAA66B,WAAU,SAAC3B,QACJ7wB,IAAIqwB,GAAwBQ,IASnCN,EAAA54B,UAAA86B,WAAU,SAACjC,GACT1vB,GAAqB,iBAAP0vB,EAAsB,SAC/BxwB,IAAIqwB,GAAuBG,IASlCD,EAAA54B,UAAA+6B,WAAU,SAACjC,QACJzwB,IAAIqwB,GAAuBI,IAUlCF,EAAA54B,UAAAg7B,UAAS,SAACC,QACH5yB,IAAIqwB,GAAuBuC,IAMlCrC,EAAA54B,UAAAQ,gBAAe,gBACJ84B,cACFA,OAAOM,MAAQ,UACfN,OAAS,MAEhBj2B,EAAArD,UAAMQ,gBAAeiD,KAAA7D,OAEzBg5B,EApSA,CAAwB1uB,EAAAvD,SClCxBu0B,GAMW,YANXA,GAaY,aAbZA,GAqBY,aArBZA,GA6Ba,cA7BbA,GAsCgB,iBCrChBC,GACW,YADXA,GAGO,2eCoUSC,GAAOC,EAAYC,OAC5BD,EAAWvC,QAAO,OACd,MAEHnoB,EAAa2qB,EAAU3qB,cAE3BA,EAAa0qB,EAAWpC,eACxBtoB,GAAc0qB,EAAWrC,cAAa,OAE/B,MAEHuC,EAAOD,EAAUC,YAChBA,EAAOF,EAAWnC,SAAWqC,GAAQF,EAAWlC,YAGzDqC,GAvQA,SAAAn4B,GAGK,SACHo4B,EAAY5oB,OAAZrP,EAAA5D,KACQ87B,EAAcx5B,EAAM,GAAK2Q,UACxB6oB,EAAYh5B,QAEnBc,EAAAH,EAAAI,KAAA7D,KAAM87B,IAAW97B,MAMZ+7B,kBAAoB,KAMzBn4B,EAAKo4B,cAAgB,KAMrBp4B,EAAKq4B,iBAAmB,KAMxBr4B,EAAKs4B,UAAY,KAGbjpB,EAAQkpB,SACVv4B,EAAKu4B,OAASlpB,EAAQkpB,QAGpBlpB,EAAQyhB,KACV9wB,EAAKw4B,OAAOnpB,EAAQyhB,KAGtB9wB,EAAKO,iBACHmG,EAAAC,mBAAmBuuB,IACnBl1B,EAAKy4B,iCAGDv5B,EAASmQ,EAAQnQ,OACQmQ,EAAQnQ,OACnC,YACJc,EAAK04B,UAAUx5B,YAnDCy5B,GAAAV,EAAAp4B,GA0DlBo4B,EAAAz7B,UAAAs6B,eAAc,SAACC,OACP6B,EAAQ7B,GAAqB,UACnC6B,EAAMl5B,KAAItD,MACHw8B,GAOTX,EAAAz7B,UAAAw6B,oBAAmB,SAACC,OACZ4B,EAAS5B,GAAuB,UACtC4B,EAAOn5B,KAAItD,KAAM65B,iBACV4C,GASTZ,EAAAz7B,UAAAs8B,UAAS,kBACyB18B,KAAOiI,IAAI6wB,KAA0B,MAMvE+C,EAAAz7B,UAAAg6B,eAAc,eACNt3B,EAAM9C,KAAQ08B,mBACZ55B,EAAiCA,EAAO65B,WAA/BpB,IAMnBM,EAAAz7B,UAAAw8B,oBAAmB,gBACZr2B,WAMPs1B,EAAAz7B,UAAAi8B,4BAA2B,gBAChBJ,mBACPh2B,EAAajG,KAAMi8B,uBACdA,iBAAmB,UAEpBn5B,EAAM9C,KAAQ08B,YAChB55B,IAAM9C,KACHi8B,iBAAmBx2B,EACtB3C,EACA0C,EAAgBxF,KACX48B,oBAAmB58B,YAIvBuG,WAQPs1B,EAAAz7B,UAAAy8B,YAAW,SAACC,eACAZ,eAGEA,UAAUW,YAAYC,GAHf,IACNC,SAAO,SAAEC,UAAYA,EAAO,QAa3CnB,EAAAz7B,UAAA+7B,OAAM,SAACc,EAAY98B,OACX+8B,EAAal9B,KAAQm9B,iBAEvBD,EAAcE,aAAaH,GAAU,OAChCC,EAAcG,YAAYJ,EAAY98B,IAgBjD07B,EAAAz7B,UAAAg8B,OAAM,SAAC1H,QACIqH,oBACP91B,EAAajG,KAAM+7B,wBACdA,kBAAoB,MAEtBrH,GAAG10B,KACDuG,eAEEy1B,gBACP/1B,EAAajG,KAAMg8B,oBACdA,cAAgB,MAEnBtH,SACGqH,kBAAoBt2B,EACvBivB,EACA4G,IAA0B,SAChB52B,OAEF44B,EADmE54B,EACpCu4B,WAAWK,iBAC1C7B,EAAUz7B,KAAQ65B,eAAc,GAEtCtwB,IACG+zB,EAAiBC,MAAI,SAAWC,UACxBA,EAAgBxD,QAAUyB,EAAWzB,SAE9C,IAEFsD,EAAiBh6B,KAAKm4B,gBAIrBO,cAAgBv2B,EAAMzF,KAAOwF,EAAkBkvB,EAAIyH,OAAQzH,QAC3DnuB,YAUTs1B,EAAAz7B,UAAAk8B,UAAS,SAACx5B,QACH2F,IAAIqwB,GAAsBh2B,IAOjC+4B,EAAAz7B,UAAA+8B,YAAW,uBACCjB,YAASl8B,KACZk8B,UAASl8B,KAAQy9B,uBAEZvB,WAMdL,EAAAz7B,UAAAs9B,YAAW,wBACKxB,WAQhBL,EAAAz7B,UAAAq9B,eAAc,kBACL,MAMT5B,EAAAz7B,UAAAQ,gBAAe,gBACR07B,UAAU,MACf74B,EAAArD,UAAMQ,gBAAeiD,KAAA7D,OAEzB67B,EA/OA,CAAoB8B,GAAA52B,meCwKjB,SACM62B,GAAgBlJ,EAAKuI,GAC5BpE,GAAeP,aAGjBuF,GA3OA,SAAAp6B,GAGK,SACHq6B,EAAYpJ,OAAZ9wB,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKm6B,KAAOrJ,WAXUsJ,GAAAF,EAAAr6B,GAmBxBq6B,EAAA19B,UAAA69B,oBAAmB,SAACl+B,EAAMk9B,GACxBj2B,KAOF82B,EAAA19B,UAAA89B,oBAAmB,SAACjB,OACZvB,EAAYuB,EAAWvB,UACvByC,EAA6BlB,EAAWkB,2BACxCC,EAA6BnB,EAAWmB,2BAE9CpxB,GACEmxB,EACAlB,EAAWhsB,KAAK,GAAK,EACrBgsB,EAAWhsB,KAAK,GAAK,EACrB,EAAIyqB,EAAU3qB,YACd,EAAK2qB,EAAU3qB,YACd2qB,EAAU1qB,UACV0qB,EAAU5qB,OAAO,IACjB4qB,EAAU5qB,OAAO,IAGpBpD,GAAY0wB,EAA4BD,IAkB1CL,EAAA19B,UAAAi+B,2BAA0B,SACxBxxB,EACAowB,EACAqB,EACAC,EACAjuB,EACAkuB,EACAC,EACAC,OAEIC,EACEjD,EAAYuB,EAAWvB,UAQ1B,SACM2C,EAA2BpE,EAAShX,EAAS+W,EAAOtvB,UACpD4F,EAASzM,KAAK26B,EAASvb,EAASgX,EAAUD,EAAQ,KAAMtvB,OAG3DwP,EAAawhB,EAAUxhB,WAEvB0kB,EAAuB3kB,GAAMpN,EAAW2B,QAAS0L,GACjD2kB,EAAO,EAAK,EAAG,OACjB3kB,EAAWhG,YAAcqqB,EAAY,KAEjCpkB,EAAa/H,GADM8H,EAAW9F,aAEpCyqB,EAAQv7B,KAAI,EAAG6W,EAAY,IAAKA,EAAY,YAGxC2kB,EAAc7B,EAAWK,iBACzByB,EAAYD,EAAY19B,OAExB49B,EAAO,GACPC,EAAQ,GACL59B,EAAI,EAAGA,EAAIw9B,EAAQz9B,OAAQC,IAAC,IAAA,IAC1B2b,EAAI+hB,EAAY,EAAG/hB,GAAK,IAAKA,EAAC,KAC/Bye,EAAaqD,EAAY9hB,GACzBgd,EAAQyB,EAAWzB,SAEvBA,EAAM0D,eACNwB,GAAAC,OAAO1D,EAAYC,IACnB+C,EAAY56B,KAAK66B,EAAU1E,GAAK,KAE1BkD,EAAgBlD,EAAMmD,cACtBr6B,EAASk3B,EAAM0C,eACjBQ,GAAiBp6B,EAAM,KACnBmL,EAAcnL,EAAOs8B,WACvBR,EACA/xB,EACEwyB,EAAWhB,EAA2Bz4B,KAC1C,KACA61B,EAAWxB,SAEbgF,EAAS,GAAKhxB,EAAY,GAAK4wB,EAAQx9B,GAAG,GAC1C49B,EAAS,GAAKhxB,EAAY,GAAK4wB,EAAQx9B,GAAG,GAC1Cs9B,EAASzB,EAAcmB,2BACrBY,EACAhC,EACAqB,EACAe,EACAL,MAGAL,EAAM,OACDA,MAKQ,IAAnBK,EAAQ59B,YAGNk+B,EAAQ,EAAIN,EAAQ59B,cAC1B49B,EAAQ7jB,SAAO,SAAE6O,EAAGuV,UAAOvV,EAAEwV,YAAcD,EAAID,KAC/CN,EAAQ7P,MAAI,SAAEruB,EAAGC,UAAMD,EAAE0+B,WAAaz+B,EAAEy+B,cACxCR,EAAQzB,MAAI,SAAEvT,UACJ2U,EAAS3U,EAAE1Z,SAAS0Z,EAAE/G,QAAS+G,EAAEgQ,MAAOhQ,EAAEtf,aAE7Ci0B,IAiBTb,EAAA19B,UAAAq/B,oBAAmB,SAAC3C,EAAOG,EAAYqB,EAAchuB,EAAUmuB,UACtDz3B,KAgBT82B,EAAA19B,UAAAs/B,uBAAsB,SACpB7yB,EACAowB,EACAqB,EACAC,EACAE,EACAD,eAasBt5B,IAXNlF,KAAQq+B,2BACtBxxB,EACAowB,EACAqB,EACAC,EACAp8B,EAAInC,KAEJy+B,EACAD,IASJV,EAAA19B,UAAAu/B,OAAM,uBACQ5B,MAQdD,EAAA19B,UAAAi9B,YAAW,SAACJ,GACVj2B,KAOF82B,EAAA19B,UAAAw/B,wBAAuB,SAAC3C,GAClBpE,GAAeR,kBACjB4E,EAAW4C,oBAAoBv8B,KAAKs6B,KAG1CE,EAjOA,CAA0Bt9B,4CCvBvB,8dAwCHs/B,GApCA,SAAAr8B,GAOK,SACHs8B,EAAYhgC,EAAMigC,EAA2BC,EAAgBC,OAA7Dt8B,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAQV4D,EAAKu8B,sBAAwBH,EAO7Bp8B,EAAKq5B,WAAagD,EAQlBr8B,EAAKw8B,QAAUF,WAhCOG,GAAAN,EAAAt8B,GAkC1Bs8B,EAlCA,CAA0BlgC,GCebygC,GAAY,YAgCZC,GAAa,aASbC,GAAe,eAMtBC,GAAS,IAAOC,OAAM,iYASxB5yB,KAAI,IAAA,KAGF6yB,GAAmB,0DAeZC,GAAiB,SAAaC,OACnCC,EAAQD,EAASC,MAAML,QACxBK,EAAK,OACD,aAEH51B,EAAK,CACT61B,WAAU,SACV9vB,KAAI,QACJ/F,MAAK,SACL81B,OAAM,SACNC,QAAO,UAEA5/B,EAAI,EAAGuB,EAAK+9B,GAAoBv/B,OAAQC,EAAIuB,IAAMvB,EAAC,KACpD6G,EAAQ44B,EAAMz/B,EAAI,QACV6D,IAAVgD,IACFgD,EAAMy1B,GAAoBt/B,IAAM6G,UAGpCgD,EAAMg2B,SAAWh2B,EAAMi2B,OAAO/3B,MAAK,QAC5B8B,GC9GHk2B,GACY,oBAATC,gBAAuD,IAAnBA,UAAUC,UACjDD,UAAUC,UAAUC,cAAW,GAOxBC,IAAoC,IAA1BJ,GAAG78B,QAAO,WAYpBk9B,KANkC,IAAzBL,GAAG78B,QAAO,WAAqB68B,GAAG78B,QAAO,UAMhB,IAAzB68B,GAAG78B,QAAO,YAA2C,GAAtB68B,GAAG78B,QAAO,SAMlDm9B,IAAkC,IAA5BN,GAAG78B,QAAO,aAShBo9B,GACY,oBAAhBC,iBAAmCA,iBAAmB,EAOlDC,GACa,oBAAjBC,mBACe,oBAAfC,iBACPC,gBAAgBF,kBAMLG,GACC,oBAALC,OAAyBA,MAAM9hC,UAAU+hC,OAKrCC,GAAuB,eAC9BC,GAAU,UAENpvB,EAAU1Q,OAAO+/B,eAAc,aAAc,CACjDr6B,IAAG,WACDo6B,GAAU,KAIdE,OAAOp+B,iBAAgB,IAAM,KAAM8O,GACnCsvB,OAAOv9B,oBAAmB,IAAM,KAAMiO,SAC/BuvB,WAGFH,EAd2B,YCjDpBI,GAAsBC,EAAWC,EAAYC,OACrDC,EACJD,GAAkBA,EAAexhC,OAC7BwhC,EAAeE,QACfjB,GAAuB,IACnBE,gBAAgBW,GAAa,IAAKC,GAAc,KACpDhM,SAASC,cAAa,iBACxB8L,IACFG,EAAOpwB,MAAQiwB,GAEbC,IACFE,EAAOnwB,OAASiwB,GAG8BE,EAAOE,WAAU,eAqCnDC,GAAYC,EAASC,OAC7BC,EAASD,EAAQE,WACnBD,GACFA,EAAOE,aAAaJ,EAASC,YAQjBI,GAAWC,UAClBA,GAAQA,EAAKH,WAAaG,EAAKH,WAAWnM,YAAYsM,GAAQ,SCU1DC,GAAW,kBAMXC,GAAgB,OAMhBC,GAAc,QAMdC,GAAe,GAYfC,GAAe,QAYfC,GAAkB,OAMlBC,GAAgB,SAMhBC,GAAmB,SAMnBC,GAAc,CAAI,EAAG,EAAG,EAAG,GAW3BC,GAAY,IAAO35B,EAAAvD,SAUT,IAAOD,EAAAC,SACnB4xB,QAAO,WAChBuL,QAAQC,KAAI,8BAKX,IAMCC,GA8GEC,GAnHFC,GAAiB,KAURC,GAAW,GAMXC,GAAY,eAMnBC,EAAUC,EAJRzzB,EAAI,QACJ0zB,EAAc,sBACdj+B,EAAMi+B,EAAevjC,OACrBwjC,EAAI,2BAQP,SACMC,EAAYC,EAAWC,EAAYC,WACtCC,GAAY,EACP5jC,EAAI,EAAGA,EAAIqF,IAAOrF,EAAC,KACpB6jC,EAAgBP,EAAetjC,MACrCqjC,EAAiBS,GACfL,EAAS,IAASC,EAAU,IAAS9zB,EAAOi0B,EAC5CN,GAEEI,GAAcE,EAAa,KACvBzyB,EAAQ0yB,GACZL,EAAS,IAEPC,EAAU,IAEV9zB,EACA+zB,EAAU,IAEVE,EACFN,GAIFK,EAAYA,GAAaxyB,GAASiyB,WAGlCO,WAMGG,YACHC,GAAO,EACLC,EAAQrB,GAAa97B,UAClB9G,EAAI,EAAGuB,EAAK0iC,EAAMlkC,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCkkC,EAAOD,EAAMjkC,GACf4iC,GAAah8B,IAAIs9B,GAjDT,MAkDNV,EAAY/+B,MAAK9F,KAAOulC,EAAKn8B,MAAK,QACpCnG,EAAMshC,IAEND,GAAiB,KACjBF,QAAcl/B,EACd++B,GAAax7B,IAAI88B,EAvDT,OAyDRtB,GAAax7B,IAAI88B,EAAMtB,GAAah8B,IAAIs9B,GAAQ,GAAG,GACnDF,GAAO,IAITA,IACFG,cAAcf,GACdA,OAAWv/B,mBAIE27B,OACT0E,EAAO3E,GAAkBC,MAC1B0E,UAGCrE,EAAWqE,EAAKrE,SACb7/B,EAAI,EAAGuB,EAAKs+B,EAAS9/B,OAAQC,EAAIuB,IAAMvB,EAAC,KACzC8/B,EAASD,EAAS7/B,GAClB0B,EAAMwiC,EAAKr6B,MAAK,KAAUq6B,EAAKvE,OAAM,KAAUG,OACvBj8B,IAA1B++B,GAAah8B,IAAIlF,KACnBkhC,GAAax7B,IAAI1F,EA9EP,KA8EqB,GAC1B8hC,EAAYU,EAAKr6B,MAAOq6B,EAAKvE,OAAQG,KACxC8C,GAAax7B,IAAI1F,EAAK,GAAG,QACRmC,IAAbu/B,IACFA,EAAWgB,YAAYL,EAAO,SAnFjB,GA+FZM,YAKM7E,OACXnuB,EAAS6xB,GAAY1D,MACX37B,MAAVwN,EAAmB,IACjBmvB,GAAuB,KACnB0D,EAAO3E,GAAkBC,GACzB8E,EAAUC,GAAY/E,EAAQ,MAIpCnuB,GAHmBiN,MAAMiY,OAAO2N,EAAKxE,aACjC,IACAnJ,OAAO2N,EAAKxE,cAGb4E,EAAQE,wBAA0BF,EAAQG,+BAExCzB,MACHA,GAAiB1N,SAASC,cAAa,QACxBmP,UAAS,IACxB1B,GAAen5B,MAAM86B,UAAS,IAC9B3B,GAAen5B,MAAM+6B,UAAS,OAC9B5B,GAAen5B,MAAMwH,OAAM,OAC3B2xB,GAAen5B,MAAMg7B,QAAO,IAC5B7B,GAAen5B,MAAMi7B,OAAM,OAC3B9B,GAAen5B,MAAMk7B,SAAQ,WAC7B/B,GAAen5B,MAAMm7B,QAAO,QAC5BhC,GAAen5B,MAAMo7B,KAAI,YAE3BjC,GAAen5B,MAAMq6B,KAAO1E,EAC5BlK,SAASE,KAAKC,YAAYuN,IAC1B3xB,EAAS2xB,GAAekC,aACxB5P,SAASE,KAAKI,YAAYoN,IAE5BE,GAAY1D,GAAYnuB,SAEnBA,GAQR,SACMkzB,GAAYL,EAAMX,UACpBN,KACHA,GAAiB7B,GAAsB,EAAG,IAExC8C,GAAQnB,KACVE,GAAeiB,KAAOA,EACtBnB,GAAcE,GAAeiB,MAExBjB,GAAekC,YAAY5B,YAQpBO,GAAiBI,EAAMX,UAC9BgB,GAAYL,EAAMX,GAAMnyB,eAUjBg0B,GAAyBlB,EAAMX,EAAM1N,MAC/C0N,KAAQ1N,EAAK,OACRA,EAAM0N,OAETnyB,EAAQ0yB,GAAiBI,EAAMX,UACrC1N,EAAM0N,GAAQnyB,EACPA,WA2BOi0B,GAAetG,EAASpvB,EAAU21B,EAASC,GACxC,IAAb51B,IACFovB,EAAQ/f,UAAUsmB,EAASC,GAC3BxG,EAAQvgB,OAAO7O,GACfovB,EAAQ/f,WAAWsmB,GAAUC,aAiBjBC,GACdzG,EACA7zB,EACA0sB,EACA6N,EACAC,EACAC,EACAC,EACAC,EACAp6B,EACAC,EACA+S,GAEAsgB,EAAQ+G,OAEQ,IAAZlO,IACFmH,EAAQgH,aAAenO,GAErB1sB,GACF6zB,EAAQiH,aAAavhC,MAAMs6B,EAAS7zB,GAGhBu6B,EAAcQ,qBAElClH,EAAQ/f,UAAUvT,EAAGC,GACrBqzB,EAAQtgB,MAAMA,EAAM,GAAIA,EAAM,IAsC/B,SAC+BynB,EAAOnH,WACjCkH,EAAsBC,EAAMD,oBACzBjmC,EAAI,EAAGuB,EAAK0kC,EAAoBlmC,OAAQC,EAAIuB,EAAIvB,GAAK,EACxDQ,MAAMC,QAAQwlC,EAAoBjmC,EAAI,IACxC++B,EAAQkH,EAAoBjmC,IAAIyE,MAC9Bs6B,EACAkH,EAAoBjmC,EAAI,IAG1B++B,EAAQkH,EAAoBjmC,IAAMimC,EAAoBjmC,EAAI,GA/C5DmmC,CAA+CV,EAAe1G,IACrDtgB,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEpCsgB,EAAQ/f,UAAUvT,EAAGC,GACrBqzB,EAAQtgB,MAAMA,EAAM,GAAIA,EAAM,IAC9BsgB,EAAQqH,UAC8DX,EACpEC,EACAC,EACAC,EACAC,EACA,EACA,EACAD,EACAC,IAIF9G,EAAQqH,UAC8DX,EACpEC,EACAC,EACAC,EACAC,EACAp6B,EACAC,EACAk6B,EAAInnB,EAAM,GACVonB,EAAIpnB,EAAM,IAIdsgB,EAAQsH,weCrRVC,GA/KA,SAAAlkC,GAGK,SACHmkC,EAAYlT,OAAZ9wB,EACEH,EAAAI,KAAA7D,KAAM00B,IAAG10B,KAKT4D,EAAKikC,uBAAyBpiC,EAC5Bw+B,GACA1jC,EACAm0B,EAAIoT,WAAWliC,KAAK8uB,IAOtB9wB,EAAKmkC,SAAWpR,SAASC,cAAa,WAChC1rB,EAAQtH,EAAKmkC,SAAS78B,MAC5BA,EAAMk7B,SAAQ,WACdl7B,EAAMuH,MAAK,OACXvH,EAAMwH,OAAM,OACZxH,EAAMiuB,OAAM,IAEZv1B,EAAKmkC,SAAStO,UAAYuO,gCAEpBC,EAAYvT,EAAIwT,qBACtBD,EAAUE,aAAavkC,EAAKmkC,SAAUE,EAAUG,YAAc,MAM9DxkC,EAAKykC,UAAS,GAMdzkC,EAAK0kC,kBAAmB,WA1COC,GAAAX,EAAAnkC,GAiDjCmkC,EAAAxnC,UAAA69B,oBAAmB,SAACl+B,EAAMk9B,OAClBvI,EAAG10B,KAAQ2/B,YACbjL,EAAIvvB,YAAYpF,GAAI,KAChByoC,EAAK,IAAOC,GAAA1hC,QAAYhH,OAAMmF,EAAW+3B,GAC/CvI,EAAIlwB,cAAcgkC,KAItBZ,EAAAxnC,UAAAQ,gBAAe,WACbqF,EAAajG,KAAM6nC,6BACdE,SAAS3E,WAAWnM,YAAWj3B,KAAM+nC,UAC1CtkC,EAAArD,UAAMQ,gBAAeiD,KAAA7D,OAOvB4nC,EAAAxnC,UAAAi9B,YAAW,SAACJ,MACLA,QAQAiB,oBAAoBjB,QACpBgB,oBAAoB3C,GAA4B2B,OAE/CK,EAAmBL,EAAWK,iBAAiBnO,MAAI,SAAWruB,EAAGC,UAC9DD,EAAEq4B,OAASp4B,EAAEo4B,UAEhBuC,EAAYuB,EAAWvB,eAExB2M,UAAUjnC,OAAS,MAGrB,IACGsnC,EAAe,GACjBC,EAAkB,KACbtnC,EAAI,EAAGuB,EAAK06B,EAAiBl8B,OAAQC,EAAIuB,IAAMvB,EAAC,KACjDo6B,EAAa6B,EAAiBj8B,MACpC47B,EAAW2L,WAAavnC,EAErB69B,GAAAC,OAAO1D,EAAYC,KACnBD,EAAWtB,aAAeoB,IACzBE,EAAWtB,aAAeoB,SAKxBvB,EAAQyB,EAAWzB,MACnB6O,EAAU7O,EAAMmC,OAAOc,EAAY0L,GACpCE,IAGDA,IAAYF,SACTN,UAAU/kC,KAAKulC,GACpBF,EAAkBE,oBAEE7O,GACpB0O,EAAgBplC,KAAK02B,SAGhB34B,EAAIqnC,EAAgBtnC,OAAS,EAAGC,GAAK,IAAKA,EACjDqnC,EAAgBrnC,GAAGynC,gBAAgB7L,aFrCTsG,EAAMwF,WAC9BC,EAAczF,EAAK0F,WAEhB5nC,EAAI,KAAWA,EAAC,KACjB6nC,EAAWF,EAAY3nC,GACvB8nC,EAAWJ,EAAS1nC,OAGrB6nC,IAAaC,EAAQ,MAKtBD,IAAaC,IAKZD,EAMAC,EAOL5F,EAAK4E,aAAagB,EAAUD,IAN1B3F,EAAKtM,YAAYiS,KACf7nC,GAPFkiC,EAAKzM,YAAYqS,KEqBnBC,CAAeppC,KAAM+nC,SAAQ/nC,KAAOqoC,gBAE/BpK,oBAAoB3C,GAA6B2B,QAE5CqL,wBACHP,SAAS78B,MAAMm7B,QAAO,QACtBiC,kBAAmB,QAGrB1I,wBAAwB3C,aA1DlBqL,wBACFP,SAAS78B,MAAMm7B,QAAO,YACtBiC,kBAAmB,IAwE9BV,EAAAxnC,UAAAq/B,oBAAmB,SAAC3C,EAAOG,EAAYqB,EAAchuB,EAAUmuB,WACvD/C,EAAYuB,EAAWvB,UAEvBoD,EAAc7B,EAAWK,iBAGtBj8B,EAFSy9B,EAAY19B,OAEL,EAAGC,GAAK,IAAKA,EAAC,KAC/Bo6B,EAAaqD,EAAYz9B,GACzB24B,EAAQyB,EAAWzB,SAEvBA,EAAM0D,eACNwB,GAAAC,OAAO1D,EAAYC,IACnB+C,EAAYzE,GAAK,KAGXr4B,EADgBq4B,EAAMmD,cACDkM,eACzBvM,EACAG,EACAqB,MAEE38B,EAAI,KACAg9B,EAASruB,EAAS0pB,EAAOr4B,MAC3Bg9B,EAAM,OACDA,MAOnBiJ,EA7KA,CAAmC0B,GAAAviC,8ICZnCwiC,GAMK,MANLA,GAYQ,meCPFC,GACE,SAQRC,GAAA,SAAAhmC,GAKK,SACHimC,EAAY3pC,EAAM4pC,EAAaC,OAA/BhmC,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAOV4D,EAAKilC,QAAUc,EAOf/lC,EAAK0B,MAAQskC,WArBoBC,GAAAH,EAAAjmC,GAuBrCimC,EAvBA,CAAqC7pC,GA6QrCiqC,GAjOA,SAAArmC,GAIK,SACHsmC,EAAYpP,EAAWlY,OAAvB7e,EACEH,EAAAI,KAAA7D,OAAAA,KAEMiT,EAAUwP,GAAW,MAM3B7e,EAAKomC,UAAY/2B,EAAQg3B,OAMzBrmC,EAAKsmC,OAASvP,GAAqB,GAE/B/2B,EAAKomC,QAAO,IAAA,IACL3oC,EAAI,EAAGuB,EAAKgB,EAAKsmC,OAAO9oC,OAAQC,EAAIuB,IAAMvB,EACjDuC,EAAKumC,cAAcvmC,EAAKsmC,OAAO7oC,GAAIA,UAIvCuC,EAAKwmC,yBA5BgBP,GAAAE,EAAAtmC,GAmCvBsmC,EAAA3pC,UAAAg4B,MAAK,qBACShM,YAAc,GAACpsB,KACpB2nB,OAWToiB,EAAA3pC,UAAAiqC,OAAM,SAACppC,WACII,EAAI,EAAGuB,EAAK3B,EAAIG,OAAQC,EAAIuB,IAAMvB,EAACrB,KACrCsD,KAAKrC,EAAII,iBAYlB0oC,EAAA3pC,UAAA+a,QAAO,SAACxO,WACA6vB,EAAKx8B,KAAQkqC,OACV7oC,EAAI,EAAGuB,EAAK45B,EAAMp7B,OAAQC,EAAIuB,IAAMvB,EAC3CsL,EAAE6vB,EAAMn7B,GAAIA,EAAGm7B,IAYnBuN,EAAA3pC,UAAAkqC,SAAQ,uBACMJ,QASdH,EAAA3pC,UAAAmqC,KAAI,SAACjlC,eACS4kC,OAAO5kC,IASrBykC,EAAA3pC,UAAAgsB,UAAS,uBACKnkB,IAAIuhC,KASlBO,EAAA3pC,UAAAoqC,SAAQ,SAACllC,EAAOmlC,QACLT,SAAOhqC,KACTmqC,cAAcM,QAEhBP,OAAO3kC,OAAOD,EAAO,EAAGmlC,QACxBL,qBACA5lC,cAAa,IACZilC,GAAgBF,GAAyBkB,EAAMnlC,KAUvDykC,EAAA3pC,UAAAunB,IAAG,uBACW+iB,SAAQ1qC,KAAMosB,YAAc,IAS1C2d,EAAA3pC,UAAAkD,KAAI,SAACmnC,QACMT,SAAOhqC,KACTmqC,cAAcM,OAEftpC,EAACnB,KAAQosB,wBACVoe,SAASrpC,EAAGspC,QACLre,aASd2d,EAAA3pC,UAAAuqC,OAAM,SAACF,WACCxpC,EAAGjB,KAAQkqC,OACR7oC,EAAI,EAAGuB,EAAK3B,EAAIG,OAAQC,EAAIuB,IAAMvB,KACrCJ,EAAII,KAAOopC,EAAI,OAAAzqC,KACL0qC,SAASrpC,IAa3B0oC,EAAA3pC,UAAAsqC,SAAQ,SAACplC,OACDslC,EAAI5qC,KAAQkqC,OAAO5kC,eACpB4kC,OAAO3kC,OAAOD,EAAO,QACrB8kC,qBACA5lC,cAAa,IACZilC,GAAgBF,GAA4BqB,EAAMtlC,IAEjDslC,GASTb,EAAA3pC,UAAAyqC,MAAK,SAACvlC,EAAOmlC,OACLtpC,EAACnB,KAAQosB,eACX9mB,EAAQnE,EAAC,MACF6oC,SAAOhqC,KACTmqC,cAAcM,EAAMnlC,OAErBslC,EAAI5qC,KAAQkqC,OAAO5kC,QACpB4kC,OAAO5kC,GAASmlC,OAChBjmC,cAAa,IACZilC,GAAgBF,GAA4BqB,EAAMtlC,SAEnDd,cAAa,IACZilC,GAAgBF,GAAyBkB,EAAMnlC,iBAG5C0X,EAAI7b,EAAG6b,EAAI1X,IAAS0X,EAAChd,KACvBwqC,SAASxtB,OAAG9X,QAEdslC,SAASllC,EAAOmlC,KAOzBV,EAAA3pC,UAAAgqC,cAAa,gBACN3hC,IAAI+gC,GAAexpC,KAAOkqC,OAAO9oC,SAQxC2oC,EAAA3pC,UAAA+pC,cAAa,SAACM,EAAMK,WACTzpC,EAAI,EAAGuB,EAAE5C,KAAQkqC,OAAO9oC,OAAQC,EAAIuB,IAAMvB,UACxC6oC,OAAO7oC,KAAOopC,GAAQppC,IAAMypC,EAAU,MAAA,IACnCphC,GAAA3C,QAAe,KAIjCgjC,EA/NA,CAAyBz/B,EAAAvD,ghBCxBnBgkC,GACE,SAuNRC,GA5MA,SAAAvnC,GAGK,SACHwnC,EAAYxoB,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAW,GACrBqZ,EAAsCx5B,EAAM,GAAK2Q,UAChD6oB,EAAYoP,WAEfA,EAASj4B,EAAQi4B,cAErBtnC,EAAAH,EAAAI,KAAA7D,KAAM87B,IAAW97B,MAMZmrC,oBAAmB,GAMxBvnC,EAAKwnC,cAAa,GAElBxnC,EAAKO,iBACHmG,EAAAC,mBAAmBwgC,IACnBnnC,EAAKynC,sBAGHH,EACErpC,MAAMC,QAAQopC,GAChBA,EAAM,IAAOI,GAAAvkC,QAAWmkC,EAAO18B,QAAK,CAAKy7B,QAAQ,IAEjD1gC,GAAiD,mBAAhB2hC,EAAQZ,SAA0B,IAGrEY,EAAM,IAAOI,GAAAvkC,aAAW7B,EAAS,CAAG+kC,QAAQ,IAG9CrmC,EAAK2nC,UAAUL,YAxCMM,GAAAP,EAAAxnC,GA8CvBwnC,EAAA7qC,UAAAqrC,mBAAkB,gBACXllC,WAMP0kC,EAAA7qC,UAAAirC,qBAAoB,gBACbF,oBAAoBhwB,QAAQlV,QAC5BklC,oBAAoB/pC,OAAS,MAE5B8pC,EAAMlrC,KAAQ0rC,oBAMThgC,UALNy/B,oBAAoB7nC,KACvBmC,EAAOylC,EAAQ3B,GAAuBvpC,KAAO2rC,iBAAgB3rC,MAC7DyF,EAAOylC,EAAQ3B,GAA0BvpC,KAAO4rC,oBAAmB5rC,OAGxDA,KAASorC,cAAaprC,KAC5BorC,cAAc1/B,GAAIyP,QAAQlV,GAEjChD,EAAKjD,KAAMorC,uBAELS,EAAcX,EAAOZ,WAClBjpC,EAAI,EAAGuB,EAAKipC,EAAYzqC,OAAQC,EAAIuB,EAAIvB,IAAC,KAC1C24B,EAAQ6R,EAAYxqC,QACrB+pC,cAAcjkC,EAAO6yB,IAAK,CAC7Bv0B,EACEu0B,EACAz5B,EAA8BP,KACzByrC,mBAAkBzrC,MAGzByF,EAAOu0B,EAAOx0B,EAAgBxF,KAAOyrC,mBAAkBzrC,YAItDuG,WAOP0kC,EAAA7qC,UAAAurC,iBAAgB,SAACG,OACT9R,EAAoD8R,EAAgBjD,aACrEuC,cAAcjkC,EAAO6yB,IAAK,CAC7Bv0B,EACEu0B,EACAz5B,EAA8BP,KACzByrC,mBAAkBzrC,MAGzByF,EAAOu0B,EAAOx0B,EAAgBxF,KAAOyrC,mBAAkBzrC,YAEpDuG,WAOP0kC,EAAA7qC,UAAAwrC,oBAAmB,SAACE,OAEZ/oC,EAAMoE,EAD8C2kC,EAAgBjD,cAErEuC,cAAcroC,GAAKoY,QAAQlV,eACpBmlC,cAAcroC,QACrBwD,WAWP0kC,EAAA7qC,UAAAsrC,UAAS,uBACsFzjC,IAC3F8iC,KAYJE,EAAA7qC,UAAAmrC,UAAS,SAACL,QACHziC,IAAIsiC,GAAiBG,IAO5BD,EAAA7qC,UAAAs6B,eAAc,SAACC,OACP6B,OAAsBt3B,IAAdy1B,EAA0BA,EAAS,eAC5C+Q,YAAYvwB,SAAO,SAAW6e,GACjCA,EAAMU,eAAe8B,MAEhBA,GAOTyO,EAAA7qC,UAAAw6B,oBAAmB,SAACC,OACZ4B,OAAwBv3B,IAAf21B,EAA2BA,EAAU,GAE9CkR,EAAMtP,EAAOr7B,YAEdsqC,YAAYvwB,SAAO,SAAW6e,GACjCA,EAAMY,oBAAoB6B,cAGtBuP,EAAahsC,KAAQ65B,gBAClBx4B,EAAI0qC,EAAKnpC,EAAK65B,EAAOr7B,OAAQC,EAAIuB,EAAIvB,IAAC,KACvCo6B,EAAagB,EAAOp7B,GAC1Bo6B,EAAWxC,SAAW+S,EAAc/S,QACpCwC,EAAWvC,QAAUuC,EAAWvC,SAAW8S,EAAc9S,QACzDuC,EAAWrC,cAAgBjtB,KAAKgE,IAC9BsrB,EAAWrC,cACX4S,EAAc5S,eAEhBqC,EAAWpC,cAAgBltB,KAAKiE,IAC9BqrB,EAAWpC,cACX2S,EAAc3S,eAEhBoC,EAAWnC,QAAUntB,KAAKiE,IAAIqrB,EAAWnC,QAAS0S,EAAc1S,SAChEmC,EAAWlC,QAAUptB,KAAKgE,IAAIsrB,EAAWlC,QAASyS,EAAczS,cACnCr0B,IAAzB8mC,EAAc99B,cACUhJ,IAAtBu2B,EAAWvtB,OACbutB,EAAWvtB,OAAS+D,GAClBwpB,EAAWvtB,OACX89B,EAAc99B,QAGhButB,EAAWvtB,OAAS89B,EAAc99B,eAKjCuuB,GAMTwO,EAAA7qC,UAAAg6B,eAAc,kBACLmB,IAEX0P,EA1MA,CAAyBtN,GAAA52B,6jBClBzBklC,GAzBA,SAAAxoC,GAKK,SACHyoC,EAAYnsC,EAAM20B,EAAKuL,OAAvBr8B,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAOV4D,EAAK8wB,IAAMA,EAOX9wB,EAAKq5B,gBAAgC/3B,IAAnB+6B,EAA+BA,EAAiB,cArB/CkM,GAAAD,EAAAzoC,GAuBvByoC,EAvBA,CAAuBrsC,6dCkGvBusC,GAjGA,SAAA3oC,GAOK,SACH4oC,EAAYtsC,EAAM20B,EAAK4X,EAAeC,EAActM,OAApDr8B,EACEH,EAAAI,KAAA7D,KAAMD,EAAM20B,EAAKuL,IAAcjgC,YAQ/B4D,EAAK0oC,cAAgBA,EAMrB1oC,EAAK4oC,OAAS,KAMd5oC,EAAK6oC,YAAc,KASnB7oC,EAAK8oC,cAA4BxnC,IAAjBqnC,GAA6BA,WAtCnBI,GAAAN,EAAA5oC,GA8C5BlB,OAAA+/B,eAAI+J,EAAAjsC,UAAA,QAAK,4BACGosC,SAAMxsC,KACTwsC,OAAMxsC,KAAQ00B,IAAIkY,cAAa5sC,KAAMssC,qBAEhCE,qBAEJ1P,QACH0P,OAAS1P,mCAShBv6B,OAAA+/B,eAAI+J,EAAAjsC,UAAA,aAAU,4BACFqsC,cAAWzsC,KACdysC,YAAWzsC,KAAQ00B,IAAImY,uBAAsB7sC,KAAM88B,aAE9C2P,0BAEC5/B,QACR4/B,YAAc5/B,mCAQrBw/B,EAAAjsC,UAAAC,eAAc,WACZoD,EAAArD,UAAMC,eAAcwD,KAAA7D,yBACAA,KAASssC,eACLtsC,KAAOssC,cAAejsC,kBAShDgsC,EAAAjsC,UAAAE,gBAAe,WACbmD,EAAArD,UAAME,gBAAeuD,KAAA7D,0BACAA,KAASssC,eACNtsC,KAAOssC,cAAehsC,mBAGlD+rC,EA/FA,CAA8BS,GAAA/lC,sDCF9BgmC,GA6CE,CAtCAC,YAAW,cAOXC,MAAOznC,EAOP0nC,SAAU1nC,EAOV2nC,YAAW,cAQXC,YAAW,cAEXC,YAAW,cACXC,UAAS,YACTC,YAAW,cACXC,WAAU,aACVC,aAAY,eACZC,aAAY,eACZC,cAAa,iBC7CfC,GACa,cADbA,GAEa,weC8XbC,GA5XA,SAAApqC,GAIK,SACHqqC,EAAYpZ,EAAKqZ,OAAjBnqC,EACEH,EAAAI,KAAA7D,KAAM00B,IAAG10B,KAOT4D,EAAKm6B,KAAOrJ,EAMZ9wB,EAAKoqC,gBAMLpqC,EAAKqqC,gBAAiB,EAMtBrqC,EAAKsqC,WAAY,EAMjBtqC,EAAKuqC,kBAAiB,GAMtBvqC,EAAKwqC,eAAiBL,EAClBA,EAAgBpM,GAChBA,GAQJ/9B,EAAKyqC,MAAQ,SAEPxF,EAAUjlC,EAAKm6B,KAAKmK,qBAM1BtkC,EAAK0qC,gBAAkB,EAMvB1qC,EAAK2qC,gBAAe,GAEpB3qC,EAAKmkC,SAAWc,EAMhBjlC,EAAK4qC,wBAA0B/oC,EAC7BojC,EACA+E,GACAhqC,EAAK6qC,mBACL7qC,GAOFA,EAAK8qC,0BAML9qC,EAAK+qC,oBAAsBlpC,EACzBojC,EACA+E,GACAhqC,EAAKgrC,YACLhrC,GAMFA,EAAKirC,sBAAwBjrC,EAAKkrC,iBAAiBlpC,KAAKhC,GAExDA,EAAKmkC,SAAS5jC,iBACZqB,EACA5B,EAAKirC,wBACLzM,IAAuB,CAAIC,SAAS,aA3GL0M,GAAAjB,EAAArqC,GAoHnCqqC,EAAA1tC,UAAA4uC,cAAa,SAACC,OACRC,EAAQ,IAAOC,GAAApoC,QACjBgmC,GAAoBE,MAAKjtC,KACpB+9B,KACLkR,QAEGzqC,cAAc0qC,QACUhqC,SAApB8oC,iBAEPoB,aAAYpvC,KAAMguC,sBACbA,qBAAkB9oC,EACvBgqC,EAAQ,IAAOC,GAAApoC,QACbgmC,GAAoBG,SAAQltC,KACvB+9B,KACLkR,QAEGzqC,cAAc0qC,SAGdlB,gBAAkBqB,WACgB,gBAE9BrB,qBAAkB9oC,MACjBoqC,EAAQ,IAAOH,GAAApoC,QACnBgmC,GAAoBC,YAAWhtC,KAC1B+9B,KACLkR,QAEGzqC,cAAc8qC,IACnB1pC,KAAI5F,MACN,MAYN8tC,EAAA1tC,UAAAmvC,sBAAqB,SAACN,OACdxqC,EAAQwqC,EAGZxqC,EAAM1E,MAAQgtC,GAAoBO,WAClC7oC,EAAM1E,MAAQgtC,GAAoBY,qBAAa3tC,KAEnCuuC,gBAAgB9pC,EAAM+qC,WACzB/qC,EAAM1E,MAAQgtC,GAAoBM,cAAWrtC,KACjDuuC,gBAAgB9pC,EAAM+qC,YAAa,QAErClB,gBAAkB/rC,OAAO8C,KAAIrF,KAAMuuC,iBAAiBntC,QAQ3D0sC,EAAA1tC,UAAAqvC,iBAAgB,SAACR,QACVM,sBAAsBN,OACrBC,EAAQ,IAAOC,GAAApoC,QACnBgmC,GAAoBO,UAASttC,KACxB+9B,KACLkR,QAEGzqC,cAAc0qC,QASZjB,iBACJiB,EAAShvC,mBAAgBF,KACpBkuC,WAASluC,KACV0vC,qBAAqBT,IAAYjvC,KAEjCgvC,cAAahvC,KAAMquC,OAGG,SAApBC,uBACFH,kBAAkBhzB,QAAQlV,QAC1BkoC,kBAAkB/sC,OAAS,OAC3B8sC,WAAY,OACZG,MAAQ,OAUjBP,EAAA1tC,UAAAsvC,qBAAoB,SAACT,UACY,IAAxBA,EAAaU,QAQtB7B,EAAA1tC,UAAAquC,mBAAkB,SAACQ,QACZhB,eAA0C,IAA5BjuC,KAAQsuC,qBACtBiB,sBAAsBN,OACrBC,EAAQ,IAAOC,GAAApoC,QACnBgmC,GAAoBM,YAAWrtC,KAC1B+9B,KACLkR,WAEGzqC,cAAc0qC,QAEdb,MAAK,IAAOuB,aAAaX,EAAalvC,KAAMkvC,GACjD1sC,OAAO+/B,eAActiC,KAAMquC,MAAK,SAAU,CACxCwB,UAAU,EACV3nC,MAAO+mC,EAAa9uC,SAGgB,SAA7BguC,kBAAkB/sC,OAAY,KAC/B0uC,EAAG9vC,KAAQ+9B,KAAKgS,wBACjB5B,kBAAkB7qC,KACrBmC,EACEqqC,EACA/C,GAAoBK,YAAWptC,KAC1BgwC,mBAAkBhwC,MAGzByF,EAAOqqC,EAAK/C,GAAoBO,UAASttC,KAAOyvC,iBAAgBzvC,MAchEyF,EAAMzF,KACC+nC,SACLgF,GAAoBY,cAAa3tC,KAC5ByvC,iBAAgBzvC,YAIhB+nC,SAASkI,aAAWjwC,KAAS+nC,SAASkI,gBAAkBH,GAAG9vC,KAC7DmuC,kBAAkB7qC,KACrBmC,EAAMzF,KACC+nC,SAASkI,cACdlD,GAAoBO,UAASttC,KACxByvC,iBAAgBzvC,SAa/B8tC,EAAA1tC,UAAA4vC,mBAAkB,SAACf,WAIRiB,UAAUjB,GAAY,MACxBf,WAAY,MACXgB,EAAQ,IAAOC,GAAApoC,QACnBgmC,GAAoBI,YAAWntC,KAC1B+9B,KACLkR,EAAYjvC,KACPkuC,gBAEF1pC,cAAc0qC,KAWvBpB,EAAA1tC,UAAAwuC,YAAW,SAACK,QACLP,0BAA4BO,MAC3BvC,KAAQ1sC,KAAWquC,QAAKruC,KAASkwC,UAAUjB,SAC5CzqC,cAAa,IACZ2qC,GAAApoC,QAAgBkoC,EAAalvC,KAAIC,KAAO+9B,KAAMkR,EAAcvC,KAYpEoB,EAAA1tC,UAAA0uC,iBAAgB,SAACrqC,OAGT6nC,EAAatsC,KAAQ0uC,0BAEvBpC,IAAiBA,EAAcpsC,kBACT,kBAAhBuE,EAAM0rC,aAAiD,IAArB1rC,EAAM0rC,YAEhD1rC,EAAMpE,kBAUVytC,EAAA1tC,UAAA8vC,UAAS,SAACjB,eAEDf,WACL/hC,KAAKkjB,IAAI4f,EAAamB,QAAOpwC,KAAQquC,MAAM+B,SAAOpwC,KAC3CouC,gBACPjiC,KAAKkjB,IAAI4f,EAAaoB,QAAOrwC,KAAQquC,MAAMgC,SAAOrwC,KAASouC,gBAO/DN,EAAA1tC,UAAAQ,gBAAe,gBACJ+tC,sBACP1oC,EAAajG,KAAM2uC,0BACdA,oBAAsB,WAExB5G,SAAS/iC,oBACZQ,EAAmBxF,KACd6uC,4BAGEL,0BACPvoC,EAAajG,KAAMwuC,8BACdA,wBAA0B,WAG5BL,kBAAkBhzB,QAAQlV,QAC1BkoC,kBAAkB/sC,OAAS,OAE3B2mC,SAAW,KAChBtkC,EAAArD,UAAMQ,gBAAeiD,KAAA7D,OAEzB8tC,EA1XA,CAAqChnC,EAAAC,SCLrCupC,GAMY,aANZA,GAaW,YAbXA,GAoBS,UCpBTC,GACY,aADZA,GAEM,OAFNA,GAGQ,SAHRA,GAIM,+FCFOC,GAAOjhC,EAAAA,EA4PpBkhC,GA9OA,WAIK,SACHC,EAAYC,EAAkBC,GAIzB5wC,KACE6wC,kBAAoBF,EAKtB3wC,KACE8wC,aAAeF,EAKjB5wC,KACE+wC,UAAS,GAKX/wC,KACEgxC,YAAW,GAKbhxC,KACEixC,gBAAe,UAMtBP,EAAAtwC,UAAAg4B,MAAK,gBACE2Y,UAAU3vC,OAAS,OACnB4vC,YAAY5vC,OAAS,EAC1B6B,EAAKjD,KAAMixC,kBAObP,EAAAtwC,UAAA8wC,QAAO,eACCC,EAAQnxC,KAAQ+wC,UAChBK,EAAUpxC,KAAQgxC,YAClBnI,EAAUsI,EAAS,GACF,GAAnBA,EAAS/vC,QACX+vC,EAAS/vC,OAAS,EAClBgwC,EAAWhwC,OAAS,IAEpB+vC,EAAS,GAAKA,EAASxpB,MACvBypB,EAAW,GAAKA,EAAWzpB,WACtB0pB,QAAQ,QAETC,EAAUtxC,KAAQ8wC,aAAajI,sBACzBoI,gBAAgBK,GACrBzI,GAQT6H,EAAAtwC,UAAAmxC,QAAO,SAAC1I,GACNt/B,KAAMvJ,KAAQ8wC,aAAajI,KAAO7oC,KAAUixC,iBAAkB,QACxDO,EAAQxxC,KAAQ6wC,kBAAkBhI,UACpC2I,GAAYhB,UACTO,UAAUztC,KAAKulC,QACfmI,YAAY1tC,KAAKkuC,QACjBP,gBAAejxC,KAAM8wC,aAAajI,KAAY,OAC9C4I,UAAU,EAACzxC,KAAO+wC,UAAU3vC,OAAS,IACnC,IAQXsvC,EAAAtwC,UAAAsxC,SAAQ,uBACMX,UAAU3vC,QASxBsvC,EAAAtwC,UAAAuxC,mBAAkB,SAACrsC,UACF,EAARA,EAAY,GASrBorC,EAAAtwC,UAAAwxC,oBAAmB,SAACtsC,UACH,EAARA,EAAY,GASrBorC,EAAAtwC,UAAAyxC,gBAAe,SAACvsC,UACNA,EAAQ,GAAM,GAOxBorC,EAAAtwC,UAAA0xC,SAAQ,eACFzwC,MACCA,GAACrB,KAAS+wC,UAAU3vC,QAAU,GAAK,EAAGC,GAAK,EAAGA,IAACrB,KAC7CqxC,QAAQhwC,IAOjBqvC,EAAAtwC,UAAA8hB,QAAO,kBAC4B,SAArB6uB,UAAU3vC,QAOxBsvC,EAAAtwC,UAAA2xC,YAAW,SAAChvC,UACHA,KAAG/C,KAASixC,iBAOrBP,EAAAtwC,UAAA4xC,SAAQ,SAACnJ,eACKkJ,YAAW/xC,KAAM8wC,aAAajI,KAO5C6H,EAAAtwC,UAAAixC,QAAO,SAAC/rC,WACA6rC,EAAQnxC,KAAQ+wC,UAChBK,EAAUpxC,KAAQgxC,YAClBiB,EAAQd,EAAS/vC,OACjBynC,EAAUsI,EAAS7rC,GACnBksC,EAAWJ,EAAW9rC,GACtB4sC,EAAa5sC,EAEZA,EAAQ2sC,GAAS,GAAC,KACjBE,EAAMnyC,KAAQ2xC,mBAAmBrsC,GACjC8sC,EAAMpyC,KAAQ4xC,oBAAoBtsC,GAElC+sC,EACJD,EAASH,GAASb,EAAWgB,GAAUhB,EAAWe,GAC9CC,EACAD,EAENhB,EAAS7rC,GAAS6rC,EAASkB,GAC3BjB,EAAW9rC,GAAS8rC,EAAWiB,GAC/B/sC,EAAQ+sC,EAGVlB,EAAS7rC,GAASujC,EAClBuI,EAAW9rC,GAASksC,OACfC,UAAUS,EAAY5sC,IAQ7BorC,EAAAtwC,UAAAqxC,UAAS,SAACS,EAAY5sC,WACd6rC,EAAQnxC,KAAQ+wC,UAChBK,EAAUpxC,KAAQgxC,YAClBnI,EAAUsI,EAAS7rC,GACnBksC,EAAWJ,EAAW9rC,GAErBA,EAAQ4sC,GAAU,KACjBI,EAAWtyC,KAAQ6xC,gBAAgBvsC,QACrC8rC,EAAWkB,GAAed,SAC5BL,EAAS7rC,GAAS6rC,EAASmB,GAC3BlB,EAAW9rC,GAAS8rC,EAAWkB,GAC/BhtC,EAAQgtC,EAKZnB,EAAS7rC,GAASujC,EAClBuI,EAAW9rC,GAASksC,GAMtBd,EAAAtwC,UAAAmyC,aAAY,eAMN1J,EAASxnC,EAAGmwC,EALVb,EAAgB3wC,KAAQ6wC,kBACxBM,EAAQnxC,KAAQ+wC,UAChBK,EAAUpxC,KAAQgxC,YACpB1rC,EAAQ,EACNnE,EAAIgwC,EAAS/vC,WAEdC,EAAI,EAAGA,EAAIF,IAAKE,GAEnBmwC,EAAWb,EADX9H,EAAUsI,EAAS9vC,MAEHmvC,UAAIxwC,KACNixC,gBAAejxC,KAAM8wC,aAAajI,KAE9CuI,EAAW9rC,GAASksC,EACpBL,EAAS7rC,KAAWujC,GAGxBsI,EAAS/vC,OAASkE,EAClB8rC,EAAWhwC,OAASkE,OACfwsC,YAETpB,EA5OA,GChBA8B,GACQ,EADRA,GAGU,EAHVA,GAQS,EARTA,GASS,4dC2GTC,GAhHA,SAAAhvC,GAIK,SACHivC,EAAYC,EAAsBC,OAAlChvC,EACEH,EAAAI,KAAA7D,MAIK,SACO6oC,UACD8J,EAAqB7sC,MAAM,KAAM+iC,MAKvC,SACOA,UAC2CA,EAAQ,GAAIgK,yBAKnEjvC,EAAKkvC,uBAAyBlvC,EAAKmvC,iBAAiBntC,KAAKhC,GAMzDA,EAAKovC,oBAAsBJ,EAM3BhvC,EAAKqvC,cAAgB,EAMrBrvC,EAAKsvC,kBAAiB,YA1CFC,GAAAT,EAAAjvC,GAiDtBivC,EAAAtyC,UAAAmxC,QAAO,SAAC1I,OACAuK,EAAQ3vC,EAAArD,UAAMmxC,QAAO1tC,KAAA7D,KAAC6oC,GACxBuK,GACWvK,EAAQ,GAChB1kC,iBAAiBqB,EAAgBxF,KAAO8yC,+BAExCM,GAMTV,EAAAtyC,UAAAizC,gBAAe,uBACDJ,eAOdP,EAAAtyC,UAAA2yC,iBAAgB,SAACtuC,OACT6uC,EAAmD7uC,EAAMtE,OACzD45B,EAAQuZ,EAAK3W,cAEhB2W,EAAKC,MAAQxZ,IAAUyY,IACxBzY,IAAUyY,IACVzY,IAAUyY,GAAe,CAEzBc,EAAKtuC,oBAAoBQ,EAAgBxF,KAAO8yC,4BAC1CU,EAAUF,EAAKT,SACjBW,KAAOxzC,KAASkzC,gCACNA,kBAAkBM,UACvBP,oBAEJD,wBAQTN,EAAAtyC,UAAAqzC,cAAa,SAACC,EAAiBC,WAElBL,EAAME,EADbI,EAAW,OAGRX,cAAgBS,GACrBE,EAAWD,GAAW3zC,KACjB0xC,WAAa,GAGlB8B,GADAF,EAAItzC,KAAoDkxC,UAAU,IACnD2B,SACPS,EAAK3W,aACC6V,IAAoBgB,KAAOxzC,KAASkzC,yBAC3CA,kBAAkBM,IAAW,SAC3BP,gBACLW,EACFN,EAAKO,SAIbnB,EA9GA,CAAwBjC,aA0HRqD,GACd7W,EACAqW,EACAS,EACAC,EACAC,OAIKhX,KAAgB8W,KAAiB9W,EAAWiX,aAAW,OACnD1D,OAEJvT,EAAWiX,YAAYH,GAAeT,EAAKT,UAAM,OAC7CrC,OAQH1/B,EAASmsB,EAAWvB,UAAU5qB,OAC9BuM,EAAS22B,EAAW,GAAKljC,EAAO,GAChCwM,EAAS02B,EAAW,GAAKljC,EAAO,UAEpC,MAAQ3E,KAAKoK,IAAI09B,GACjB9nC,KAAK4N,KAAKsD,EAASA,EAASC,EAASA,GAAU22B,0PCxJnDE,GACa,EADbA,GAEe,ECFfC,GACQ,SADRA,GAEY,aAFZA,GAGU,oBCMMC,GAAanmC,EAAQomC,EAAYC,mBAUnCzjC,EAAQC,EAAYE,EAAMujC,EAAcC,MAC5C3jC,EAAM,KACF4jC,EAAYJ,EAAa,EAAIrjC,EAAK,GAAKF,EACvC4jC,EAAaL,EAAa,EAAIrjC,EAAK,GAAKF,EACxC6jC,EAASH,EAAkBA,EAAgB,GAAK,EAChDI,EAASJ,EAAkBA,EAAgB,GAAK,EAClDvlC,EAAOhB,EAAO,GAAKwmC,EAAY,EAAIE,EACnCxlC,EAAOlB,EAAO,GAAKwmC,EAAY,EAAIE,EACnCzlC,EAAOjB,EAAO,GAAKymC,EAAa,EAAIE,EACpCxlC,EAAOnB,EAAO,GAAKymC,EAAa,EAAIE,EAIpC3lC,EAAOE,IAETA,EADAF,GAAQE,EAAOF,GAAQ,GAGrBC,EAAOE,IAETA,EADAF,GAAQE,EAAOF,GAAQ,OAIrBrC,EAAIqI,GAAMrE,EAAO,GAAI5B,EAAME,GAC3BrC,EAAIoI,GAAMrE,EAAO,GAAI3B,EAAME,GACzBylC,EAAQ,GAAK/jC,SAGfyjC,GAAgBD,IAClBznC,IACGgoC,EAAQ3oC,KAAKoK,IAAI,EAAIpK,KAAKiE,IAAI,EAAGlB,EAAO4B,EAAO,IAAMgkC,GACtDA,EAAQ3oC,KAAKoK,IAAI,EAAIpK,KAAKiE,IAAI,EAAGU,EAAO,GAAK1B,GAAQ0lC,GACvD/nC,IACG+nC,EAAQ3oC,KAAKoK,IAAI,EAAIpK,KAAKiE,IAAI,EAAGjB,EAAO2B,EAAO,IAAMgkC,GACtDA,EAAQ3oC,KAAKoK,IAAI,EAAIpK,KAAKiE,IAAI,EAAGU,EAAO,GAAKzB,GAAQylC,KAGjDhoC,EAAGC,cAYHgoC,GAAKjkC,UACZA,ECxDN,SACMkkC,GACPjkC,EACAkkC,EACAC,EACAC,OAEMC,EAAchjC,GAAS6iC,GAAaC,EAAa,GACjDG,EAAcrjC,GAAUijC,GAAaC,EAAa,UAEpDC,EACKhpC,KAAKgE,IAAIY,EAAY5E,KAAKiE,IAAIglC,EAAaC,IAE7ClpC,KAAKgE,IAAIY,EAAY5E,KAAKgE,IAAIilC,EAAaC,IAcjD,SACMC,GAA2BvkC,EAAYqoB,EAAeC,OACzDsF,EAASxyB,KAAKgE,IAAIY,EAAYqoB,UAGlCuF,GACExyB,KAAKoK,IAAI,EAHG,GAGSpK,KAAKiE,IAAI,EAAGW,EAAaqoB,EAAgB,IAHlD,GAIZ,EACEC,IACFsF,EAASxyB,KAAKiE,IAAIuuB,EAAQtF,GAC1BsF,GACExyB,KAAKoK,IAAI,EARC,GAQWpK,KAAKiE,IAAI,EAAGipB,EAAgBtoB,EAAa,IARpD,GAUV,GAEGoE,GAAMwpB,EAAQtF,EAAgB,EAAmB,EAAhBD,YA6I1Bmc,GACdnc,EACAC,EACAmc,EACAC,EACAC,mBAUY3kC,EAAY7P,EAAW+P,EAAMujC,WAClBtvC,IAAf6L,EAAwB,KACpB4kC,EAAeF,EACjBT,GACE5b,EACAqc,EACAxkC,EACAykC,GAEFtc,cAC0Bl0B,IAAfswC,GAA2BA,IAE1BhB,EAGTc,GACLvkC,EACA4kC,EACAtc,GALOlkB,GAAMpE,EAAYsoB,EAAesc,cCzNlCC,GAAQ5kC,eACL9L,IAAb8L,EACK,kBAUK6kC,GAAK7kC,eACF9L,IAAb8L,EACKA,kBCPK8kC,GAAQrgC,UACf,WAXcA,UACdtJ,KAAKuX,IAAIjO,EAAG,GAURsgC,CAAO,EAAItgC,YASRugC,GAASvgC,UAChB,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,WASjBwgC,GAAOxgC,UACdA,geCwvDN,SACMygC,GAAkB5lC,EAAU6lC,GACnC9G,YAAU,WACR/+B,EAAS6lC,KACR,YAOWC,GAAuBnjC,WACd/N,IAAnB+N,EAAQ/E,OAAoB,KACxBqmC,OAC+BrvC,IAAnC+N,EAAQojC,wBACJpjC,EAAQojC,8BAEPhC,GAAaphC,EAAQ/E,OAAQ+E,EAAQqjC,oBAAqB/B,OAG7Dr6B,EAAamB,GAAiBpI,EAAQiH,WAAU,iBAC3B,IAAvBjH,EAAQsjC,YAAuBr8B,EAAWzF,WAAQ,KAC9CvG,EAASgM,EAAW9F,YAAY5F,eACtCN,EAAO,IAAMqB,EAAAA,EACbrB,EAAO,GAAKqB,EAAAA,EACL8kC,GAAanmC,GAAQ,GAAO,UAG9B6mC,YAQOyB,GAA2BvjC,OACrCwjC,EACArd,EACAC,EAOAC,OACkBp0B,IAApB+N,EAAQqmB,QAAwBrmB,EAAQqmB,QAxnDnB,EA0nDnBC,OACkBr0B,IAApB+N,EAAQsmB,QAAwBtmB,EAAQsmB,QAPnB,GASjBmd,OACmBxxC,IAAvB+N,EAAQyjC,WAA2BzjC,EAAQyjC,WATnB,EAWpBH,OACmBrxC,IAAvB+N,EAAQsjC,YAA2BtjC,EAAQsjC,WAEvChC,OACmCrvC,IAAvC+N,EAAQ0jC,4BACJ1jC,EAAQ0jC,2BAGRxB,OACuBjwC,IAA3B+N,EAAQkiC,gBAA+BliC,EAAQkiC,eAE3Cj7B,EAAamB,GAAiBpI,EAAQiH,WAAU,aAChD08B,EAAa18B,EAAW9F,YAC1BkiC,EAAsBrjC,EAAQqjC,oBAC9BpoC,EAAS+E,EAAQ/E,UAChBqoC,GAAeroC,IAAUgM,EAAWzF,aACvC6hC,GAAsB,EACtBpoC,EAAS0oC,QAGiB1xC,IAAxB+N,EAAQ4jC,YAAyB,KAC7BA,EAAc5jC,EAAQ4jC,YAC5Bzd,EAAgByd,EAAYvd,GAC5BD,OAC2Bn0B,IAAzB2xC,EAAYtd,GACRsd,EAAYtd,GACZsd,EAAYA,EAAYz1C,OAAS,GAGrCq1C,EADExjC,EAAQ6jC,6BH5yDdD,EACArB,EACAC,EACAC,mBAUY3kC,EAAY7P,EAAW+P,EAAMujC,WAClBtvC,IAAf6L,EAAwB,KACpBqoB,EAAgByd,EAAY,GAC5Bxd,EAAgBwd,EAAYA,EAAYz1C,OAAS,GACjDu0C,EAAeF,EACjBT,GACE5b,EACAqc,EACAxkC,EACAykC,GAEFtc,KAGAob,cAC4BtvC,IAAfswC,GAA2BA,EAInCF,GACLvkC,EACA4kC,EACAtc,GALOlkB,GAAMpE,EAAYsoB,EAAesc,OAStCoB,EAAS5qC,KAAKgE,IAAIwlC,EAAc5kC,GAChCimC,EAAI7qC,KAAKsO,MAAMzZ,EAAkB61C,EAAaE,EAAQ71C,WACxD21C,EAAYG,GAAKrB,GAAgBqB,EAAIH,EAAYz1C,OAAS,EACrDy1C,EAAYG,EAAI,GAElBH,EAAYG,KGiwDEC,CACrBJ,EACAtC,GACC+B,GAAuBpoC,EACxBinC,GAGqBI,GACrBnc,EACAC,EACAkb,GACC+B,GAAuBpoC,EACxBinC,YAUE+B,GALQN,EAGVzqC,KAAKiE,IAAIgC,GAASwkC,GAAa5kC,GAAU4kC,IADxC,IAAM1qC,GAAgBG,GAAMT,SAAYsO,EAAW5F,oBC13D3B,ID83DAnI,KAAKuX,IA/DV,EArnDH,GAsrDfyzB,EACJD,EACA/qC,KAAKuX,IAnEiB,EAmEM0zB,SAIRlyC,KADtBk0B,EAAgBnmB,EAAQmmB,eAEtBE,EAAU,EAEVF,EAAgB8d,EAAuB/qC,KAAKuX,IAAIgzB,EAAYpd,QAKxCp0B,KADtBm0B,EAAgBpmB,EAAQomB,iBAIlBA,OAFoBn0B,IAApB+N,EAAQsmB,aACoBr0B,IAA1B+N,EAAQmmB,cACMA,EAAgBjtB,KAAKuX,IAAIgzB,EAAYnd,GAErC2d,EAAuB/qC,KAAKuX,IAAIgzB,EAAYnd,GAG9C4d,GAKpB5d,EACED,EACAntB,KAAKsO,MACHtO,KAAKoK,IAAI6iB,EAAgBC,GAAiBltB,KAAKoK,IAAImgC,IAEvDrd,EAAgBD,EAAgBjtB,KAAKuX,IAAIgzB,EAAYnd,EAAUD,GAG7Dmd,EADExjC,EAAQ6jC,6BH1yDdO,EACAje,EACAke,EACA9B,EACAC,EACAC,mBAUY3kC,EAAY7P,EAAW+P,EAAMujC,WAClBtvC,IAAf6L,EAAwB,KACpB4kC,EAAeF,EACjBT,GACE5b,EACAqc,EACAxkC,EACAykC,GAEFtc,EACEC,OACkBn0B,IAAtBoyC,EAAkCA,EAAoB,KAGpD9C,cAC4BtvC,IAAfswC,GAA2BA,EAInCF,GACLvkC,EACA4kC,EACAtc,GALOlkB,GAAMpE,EAAYsoB,EAAesc,OAUtC4B,EAAeprC,KAAKqrC,KACxBrrC,KAAKoK,IAAI6iB,EAAgBuc,GAAgBxpC,KAAKoK,IAAI8gC,GAFlC,MAIZxnC,GAAU3O,GAAa,GAJX,MAI8B,GAC1C61C,EAAS5qC,KAAKgE,IAAIwlC,EAAc5kC,GAChC0mC,EAAkBtrC,KAAKsO,MAC3BtO,KAAKoK,IAAI6iB,EAAgB2d,GAAU5qC,KAAKoK,IAAI8gC,GAASxnC,GAEjD6nC,EAAYvrC,KAAKiE,IAAImnC,EAAcE,UAElCtiC,GADeikB,EAAgBjtB,KAAKuX,IAAI2zB,EAAOK,GAC1Bre,EAAesc,KGuvDtBgC,CACrBjB,EACAtd,EACAC,EACAkb,GACC+B,GAAuBpoC,EACxBinC,GAGqBI,GACrBnc,EACAC,EACAkb,GACC+B,GAAuBpoC,EACxBinC,UAKJyC,WAAYnB,EACZrd,cAAeA,EACfC,cAAeA,EACfC,QAASA,EACTod,WAAYA,YAQAmB,GAAyB5kC,OF36DX9R,EACtB22C,EA0ByBC,EACzB73B,UEi5DuBhb,IAA3B+N,EAAQ+kC,gBAA+B/kC,EAAQ+kC,eAC/B,KACVC,EAAoBhlC,EAAQglC,8BACR/yC,IAAtB+yC,IAAyD,IAAtBA,GFp5DnC/3B,EAAY63B,GAAiBliC,GAAU,YAOjC7E,EAAUwjC,UACdA,EACKxjC,OAGQ9L,IAAb8L,EACE7E,KAAKkjB,IAAIre,IAAakP,EACjB,EAEAlP,YEs4DoB,IAAtBinC,EACFpC,GAC0B,iBAAjBoC,GFp7DQ92C,EEq7DH82C,EFp7DnBH,EAAS,EAAI3rC,KAAKC,GAAMjL,WAOlB6P,EAAUwjC,UACdA,EACKxjC,OAGQ9L,IAAb8L,EACFA,EAAW7E,KAAKsO,MAAMzJ,EAAW8mC,EAAQ,IAAOA,WEy6D3CjC,UAGFD,YASKsC,GAAgBC,WAC1BA,EAAUC,cAAgBD,EAAUE,eACjCj/B,GAAiB++B,EAAUC,aAAcD,EAAUE,iBAItDF,EAAUG,mBAAqBH,EAAUI,kBAGzCJ,EAAUK,iBAAmBL,EAAUM,gBAa1C,SACMC,GAAkB7rC,EAAYoE,EAAMm1B,EAAUr1B,EAAYC,OAE3DyI,EAAWtN,KAAKsB,KAAKuD,GACvB0I,EAAWvN,KAAKqB,KAAKwD,GACrB2nC,EAAO9rC,EAAW,GAAK4M,EAAW5M,EAAW,GAAK6M,EAClDk/B,EAAO/rC,EAAW,GAAK4M,EAAW5M,EAAW,GAAK6M,UACtDi/B,IAAS1nC,EAAK,GAAK,EAAIm1B,EAAS,IAAMr1B,GAKf0I,GAJvBm/B,IAASxS,EAAS,GAAKn1B,EAAK,GAAK,GAAKF,IAGtC2I,GAAYA,GAEIk/B,EAAOn/B,EAAWk/B,EAAOj/B,OAK3Cm/B,GA9uDA,SAAAp1C,GAGK,SACHq1C,EAAYr2B,OAAZ7e,EACEH,EAAAI,KAAA7D,OAAAA,KAEMiT,EAAU3Q,EAAM,GAAKmgB,UAM3B7e,EAAKm1C,OAAM,CAAI,EAAG,GAMlBn1C,EAAKo1C,YAAW,GAMhBp1C,EAAKq1C,oBAOLr1C,EAAKs1C,YAAc79B,GAAiBpI,EAAQiH,WAAU,aAMtDtW,EAAKu1C,cAAa,CAAI,IAAK,KAM3Bv1C,EAAKw1C,cAAgB,KAMrBx1C,EAAKy1C,kBAMLz1C,EAAK01C,gBAML11C,EAAK21C,mBAAgBr0C,EAEjB+N,EAAQnC,SACVmC,EAAQnC,OAAS2L,GAAmBxJ,EAAQnC,OAAQlN,EAAKs1C,cAEvDjmC,EAAQ/E,SACV+E,EAAQ/E,OAAS0O,GAAe3J,EAAQ/E,OAAQtK,EAAKs1C,cAGvDt1C,EAAK41C,cAAcvmC,YAvEJwmC,GAAAX,EAAAr1C,GA8EjBq1C,EAAA14C,UAAAo5C,cAAa,SAACvmC,GAGT,IAGGymC,EAA2BlD,GAA2BvjC,GAKzDjT,KACE25C,eAAiBD,EAAyBtgB,cAK5Cp5B,KACE45C,eAAiBF,EAAyBrgB,cAK5Cr5B,KACE65C,YAAcH,EAAyBhD,WAKzC12C,KACE85C,aAAe7mC,EAAQ4jC,YAKzB72C,KACE+5C,SAAW9mC,EAAQizB,QAKrBlmC,KACEg6C,SAAWN,EAAyBpgB,YAEnC2gB,EAAmB7D,GAAuBnjC,GAC1CwjC,EAAuBiD,EAAyB9B,WAChDsC,EAAqBrC,GAAyB5kC,GAKjDjT,KACEm6C,aAAY,CACfrpC,OAAQmpC,EACRlpC,WAAY0lC,EACZzlC,SAAUkpC,QAGPE,iBAAiCl1C,IAArB+N,EAAQjC,SAAyBiC,EAAQjC,SAAW,QAChEqpC,uBACgBn1C,IAAnB+N,EAAQnC,OAAuBmC,EAAQnC,OAAS,WAEvB5L,IAAvB+N,EAAQlC,WAAwB/Q,KAC7Bs6C,cAAcrnC,EAAQlC,iBACD7L,IAAjB+N,EAAQ0oB,MAAkB37B,KAC9Bu6C,QAAQtnC,EAAQ0oB,WAGlB3zB,cAhEW,IAqEbhI,KACEw6C,SAAWvnC,GAYlB1Q,OAAA+/B,eAAIwW,EAAA14C,UAAA,UAAO,4BACG25C,uBAEF7T,OACNuU,EAAUz6C,KAAQ+5C,cACjBA,SAAW7T,MACVp1B,EAAM9Q,KAAQ4xB,eAChB9gB,EAAM,KACF4pC,EAAaxU,GAAO,CAAK,EAAG,EAAG,EAAG,GACxCuU,EAAaA,GAAU,CAAK,EAAG,EAAG,EAAG,OAC/B1pC,EAAU/Q,KAAQ26C,gBAClBhU,EACH51B,EAAa,GACb2pC,EAAW,GAAKD,EAAW,GAAKA,EAAW,GAAKC,EAAW,IACxD9T,EACH71B,EAAa,GACb2pC,EAAW,GAAKD,EAAW,GAAKA,EAAW,GAAKC,EAAW,SACzDL,kBAAiB,CAAEvpC,EAAO,GAAK61B,EAAS71B,EAAO,GAAK81B,sCAY7DkS,EAAA14C,UAAAw6C,mBAAkB,SAACC,OACX5nC,EAAU3Q,EAAM,QAAUk4C,sBAGLt1C,IAAvB+N,EAAQlC,WACVkC,EAAQlC,WAAU/Q,KAAQ26C,gBAE1B1nC,EAAQ0oB,KAAI37B,KAAQ86C,UAItB7nC,EAAQnC,OAAM9Q,KAAQ+6C,oBAGtB9nC,EAAQjC,SAAQhR,KAAQg7C,cAEjB14C,EAAM,GAAK2Q,EAAS4nC,IAoC7B/B,EAAA14C,UAAA66C,QAAO,SAACC,QACGC,UAAKn7C,KAAYo7C,gBAAYp7C,KAC/Bq7C,mBAAmB,WAEpBC,EAAI,IAAOz5C,MAAMgB,UAAUzB,QACxBC,EAAI,EAAGA,EAAIi6C,EAAKl6C,SAAUC,EAAC,KAC9B4R,EAAUpQ,UAAUxB,GACpB4R,EAAQnC,UACVmC,EAAU3Q,EAAM,GAAK2Q,IACbnC,OAAS2L,GACfxJ,EAAQnC,OAAM9Q,KACTu7C,kBAGLtoC,EAAQiK,UACVjK,EAAU3Q,EAAM,GAAK2Q,IACbiK,OAAST,GACfxJ,EAAQiK,OAAMld,KACTu7C,kBAGTD,EAAKj6C,GAAK4R,OAEPuoC,gBAAgB11C,MAAK9F,KAAOs7C,IAMnCxC,EAAA14C,UAAAo7C,gBAAe,SAACN,OAEV5qC,EADAmrC,EAAiB54C,UAAUzB,UAG7Bq6C,EAAiB,GACkB,mBAA5B54C,UAAU44C,EAAiB,KAElCnrC,EAAWzN,UAAU44C,EAAiB,KACpCA,SAEMN,QAAK,KAEPphB,EAAQl3B,UAAU44C,EAAiB,UACrC1hB,EAAMjpB,QAAM9Q,KACTq6C,kBAAkBtgB,EAAMjpB,aAEZ5L,IAAf60B,EAAM4B,MAAkB37B,KACrBu6C,QAAQxgB,EAAM4B,WAEEz2B,IAAnB60B,EAAM/oB,UAAsBhR,KACzBo6C,YAAYrgB,EAAM/oB,eAErBV,GACF4lC,GAAkB5lC,GAAU,YAI5B4I,EAAQwiC,KAAKC,MACb7qC,EAAM9Q,KAAQo5C,cAAc5qC,QAC5BuC,EAAU/Q,KAAQq5C,kBAClBroC,EAAQhR,KAAQs5C,gBACdsC,EAAM,GACHv6C,EAAI,EAAGA,EAAIo6C,IAAkBp6C,EAAC,KAC/B4R,EAA2CpQ,UAAUxB,GAErD82C,EAAS,CACbj/B,MAAOA,EACP2iC,UAAU,EACV3+B,OAAQjK,EAAQiK,OAChB4+B,cAA+B52C,IAArB+N,EAAQ6oC,SAAyB7oC,EAAQ6oC,SAAW,IAC9DC,OAAQ9oC,EAAQ8oC,QAAU/F,GAC1B1lC,SAAUA,MAGR2C,EAAQnC,SACVqnC,EAAUC,aAAetnC,EACzBqnC,EAAUE,aAAeplC,EAAQnC,OAAOtC,QACxCsC,EAASqnC,EAAUE,mBAGAnzC,IAAjB+N,EAAQ0oB,MACVwc,EAAUG,iBAAmBvnC,EAC7BonC,EAAUI,iBAAgBv4C,KAAQg8C,qBAAqB/oC,EAAQ0oB,MAC/D5qB,EAAaonC,EAAUI,kBACdtlC,EAAQlC,aACjBonC,EAAUG,iBAAmBvnC,EAC7BonC,EAAUI,iBAAmBtlC,EAAQlC,WACrCA,EAAaonC,EAAUI,uBAGArzC,IAArB+N,EAAQjC,SAAsB,CAChCmnC,EAAUK,eAAiBxnC,MACrBirC,EACJlmC,GAAO9C,EAAQjC,SAAWA,EAAW7E,KAAKC,GAAI,EAAID,KAAKC,IAAMD,KAAKC,GACpE+rC,EAAUM,eAAiBznC,EAAWirC,EACtCjrC,EAAWmnC,EAAUM,eAInBP,GAAgBC,GAClBA,EAAU0D,UAAW,EAGrB3iC,GAASi/B,EAAU2D,SAErBF,EAAOt4C,KAAK60C,QAETa,YAAY11C,KAAKs4C,QACjBM,QAAQ/H,GAAoB,QAC5BgI,qBAQPrD,EAAA14C,UAAAg7C,aAAY,uBACErC,OAAO5E,IAAsB,GAQ3C2E,EAAA14C,UAAAg8C,eAAc,uBACArD,OAAO5E,IAAwB,GAO7C2E,EAAA14C,UAAAi8C,iBAAgB,eAEVn/B,OADCg/B,QAAQ/H,IAAkBn0C,KAAQ+4C,OAAO5E,aAErC9yC,EAAI,EAAGuB,EAAE5C,KAAQg5C,YAAY53C,OAAQC,EAAIuB,IAAMvB,EAAC,KACjDu6C,EAAM57C,KAAQg5C,YAAY33C,MAC5Bu6C,EAAO,GAAGtrC,UACZ4lC,GAAkB0F,EAAO,GAAGtrC,UAAU,IAEnC4M,EAAM,IAAA,IACAF,EAAI,EAAGoK,EAAKw0B,EAAOx6C,OAAQ4b,EAAIoK,IAAMpK,EAAC,KACvCm7B,EAAYyD,EAAO5+B,OACpBm7B,EAAU0D,SAAQ,CACrB3+B,EAASi7B,EAAUj7B,oBAMtB87B,YAAY53C,OAAS,OACrBm4C,cAAgBr8B,GAMvB47B,EAAA14C,UAAA+7C,kBAAiB,mBACkBj3C,SAAxB+zC,sBACPqD,qBAAoBt8C,KAAMi5C,0BACrBA,yBAAsB/zC,QAEnBk2C,wBAGJO,EAAMD,KAAKC,MACbY,GAAO,EACFl7C,EAACrB,KAAQg5C,YAAY53C,OAAS,EAAGC,GAAK,IAAKA,EAAC,SAC7Cu6C,EAAM57C,KAAQg5C,YAAY33C,GAC5Bm7C,GAAiB,EACZx/B,EAAI,EAAGoK,EAAKw0B,EAAOx6C,OAAQ4b,EAAIoK,IAAMpK,EAAC,KACvCm7B,EAAYyD,EAAO5+B,OACrBm7B,EAAU0D,cAGRY,EAAUd,EAAMxD,EAAUj/B,MAC5B+P,EACFkvB,EAAU2D,SAAW,EAAIW,EAAUtE,EAAU2D,SAAW,EACtD7yB,GAAY,GACdkvB,EAAU0D,UAAW,EACrB5yB,EAAW,GAEXuzB,GAAiB,MAEbE,EAAWvE,EAAU4D,OAAO9yB,MAC9BkvB,EAAUC,aAAY,KAClB5mC,EAAK2mC,EAAUC,aAAa,GAC5BxmC,EAAKumC,EAAUC,aAAa,GAG5BtrC,EAAI0E,EAAKkrC,GAFJvE,EAAUE,aAAa,GAEF7mC,GAC1BzE,EAAI6E,EAAK8qC,GAFJvE,EAAUE,aAAa,GAEFzmC,QAC3BwnC,cAAa,CAAItsC,EAAGC,MAEvBorC,EAAUG,kBAAoBH,EAAUI,iBAAgB,KACpDxnC,EACS,IAAb2rC,EACIvE,EAAUI,iBACVJ,EAAUG,iBACVoE,GACGvE,EAAUI,iBAAmBJ,EAAUG,qBAC5CH,EAAUj7B,OAAM,KACZjM,EAAIjR,KAAQ28C,iBAAgB38C,KAAMg7C,eAClC4B,EAAqB58C,KAAQm6C,aAAappC,WAC9CA,EACA,EACAE,GACA,QAEGmoC,cAAap5C,KAAQ68C,oBACxBD,EACAzE,EAAUj7B,aAGTm8B,kBAAoBtoC,OACpB+rC,mBAAkB,WAGM53C,IAA7BizC,EAAUK,qBACmBtzC,IAA7BizC,EAAUM,eAA4B,KAEhCznC,EACS,IAAb0rC,EACI3mC,GAAOoiC,EAAUM,eAAiBtsC,KAAKC,GAAI,EAAID,KAAKC,IACpDD,KAAKC,GACL+rC,EAAUK,eACVkE,GACGvE,EAAUM,eAAiBN,EAAUK,mBAC1CL,EAAUj7B,OAAM,KACZ6/B,EAAmB/8C,KAAQm6C,aAAanpC,SAC5CA,GACA,QAEGooC,cAAap5C,KAAQg9C,sBACxBD,EACA5E,EAAUj7B,aAGTo8B,gBAAkBtoC,UAEpB8rC,mBAAkB,GACvBP,GAAO,GACFpE,EAAU0D,SAAQ,UAIrBW,EAAc,MACXxD,YAAY33C,GAAK,UACjB66C,QAAQ/H,IAAoB,OAC3B7jC,EAAWsrC,EAAO,GAAGtrC,SACvBA,GACF4lC,GAAkB5lC,GAAU,SAK7B0oC,YAAWh5C,KAAQg5C,YAAYiE,OAAOC,SACvCX,QAAqCr3C,IAAjClF,KAASi5C,sBAAiCj5C,KAC3Ci5C,oBAAsBkE,sBAAqBn9C,KACzCm8C,kBAAkBv2C,KAAI5F,UAUjC84C,EAAA14C,UAAA48C,sBAAqB,SAAChsC,EAAUkM,OAC1BpM,EjE/vBYjE,EAAYovC,EiEgwBtBmB,EAAap9C,KAAQ+6C,gCACL71C,IAAlBk4C,IAEF5jC,GADA1I,EAAM,CAAIssC,EAAc,GAAKlgC,EAAO,GAAIkgC,EAAc,GAAKlgC,EAAO,IACzClM,EAAQhR,KAAQg7C,ejEnwBfiB,EiEowBJ/+B,GjEpwBRrQ,EiEowBAiE,GjEnwBP,KAAOmrC,EAAM,GACxBpvC,EAAW,KAAOovC,EAAM,IiEowBfnrC,GAQTgoC,EAAA14C,UAAAy8C,oBAAmB,SAAC9rC,EAAYmM,OAC1BpM,EACEssC,EAAap9C,KAAQ+6C,oBACrBsC,EAAiBr9C,KAAQ26C,qBACTz1C,IAAlBk4C,QAAqDl4C,IAAtBm4C,IAOjCvsC,EAAM,CALJoM,EAAO,GACNnM,GAAcmM,EAAO,GAAKkgC,EAAc,IAAOC,EAEhDngC,EAAO,GACNnM,GAAcmM,EAAO,GAAKkgC,EAAc,IAAOC,WAG7CvsC,GASTgoC,EAAA14C,UAAAu8C,iBAAgB,SAACW,OACTrsC,EAAIjR,KAAQm5C,iBACdmE,EAAY,KACRrW,EAAIh2B,EAAK,GACTi2B,EAAIj2B,EAAK,UAEb9E,KAAKkjB,IAAI4X,EAAI96B,KAAKsB,IAAI6vC,IACpBnxC,KAAKkjB,IAAI6X,EAAI/6B,KAAKqB,IAAI8vC,IACxBnxC,KAAKkjB,IAAI4X,EAAI96B,KAAKqB,IAAI8vC,IACpBnxC,KAAKkjB,IAAI6X,EAAI/6B,KAAKsB,IAAI6vC,YAGnBrsC,GAWX6nC,EAAA14C,UAAAm9C,gBAAe,SAACC,QACTrE,cAAgBt3C,MAAMC,QAAQ07C,GAC/BA,EAAShvC,QAAK,CACb,IAAK,UACA4sC,gBAAYp7C,KACfq7C,mBAAmB,IAU5BvC,EAAA14C,UAAAwxB,UAAS,eACD9gB,EAAM9Q,KAAQ+6C,2BACfjqC,EAGE0L,GAAiB1L,EAAM9Q,KAAOu7C,iBAF5BzqC,GASXgoC,EAAA14C,UAAA26C,kBAAiB,uBAC4D9yC,IACzEmsC,KAOJ0E,EAAA14C,UAAAq9C,eAAc,uBACAtD,cAMdrB,EAAA14C,UAAAs9C,uBAAsB,uBACRlD,SAAS1D,qBAOvBgC,EAAA14C,UAAAu9C,SAAQ,SAACC,eACW14C,IAAd04C,GACFA,EAAU,GAAC59C,KAAS+4C,OAAO,GAC3B6E,EAAU,GAAC59C,KAAS+4C,OAAO,GACpB6E,QAEK7E,OAAOvqC,SAcvBsqC,EAAA14C,UAAAy9C,gBAAe,SAACL,UAEP7gC,GADK3c,KAAQ89C,wBAAwBN,GAClBx9C,KAAOu7C,kBAQnCzC,EAAA14C,UAAA09C,wBAAuB,SAACN,OAChBvsC,EAAOusC,GAAQx9C,KAAS+9C,+BACxBjtC,EAAM9Q,KAA8D+6C,oBAC1ExxC,GAAOuH,EAAQ,OACTC,EAAU/Q,KAAgC26C,gBAChDpxC,QAAsBrE,IAAf6L,EAA0B,OAC3BC,EAAQhR,KAAgCg7C,qBAC9CzxC,QAAoBrE,IAAb8L,EAAwB,GAExBH,GAAkBC,EAAQC,EAAYC,EAAUC,IAQzD6nC,EAAA14C,UAAAk6B,iBAAgB,uBACFqf,gBAQdb,EAAA14C,UAAAm6B,iBAAgB,uBACFqf,gBAQdd,EAAA14C,UAAAq6B,WAAU,uBAC2BujB,qBAAoBh+C,KAChD45C,iBASTd,EAAA14C,UAAA46B,WAAU,SAACW,QACJ6d,cAAax5C,KAAM46C,mBAAkB,CAAErhB,QAASoC,MAQvDmd,EAAA14C,UAAAo6B,WAAU,uBAC2BwjB,qBAAoBh+C,KAChD25C,iBASTb,EAAA14C,UAAA66B,WAAU,SAACU,QACJ6d,cAAax5C,KAAM46C,mBAAkB,CAAEthB,QAASqC,MAQvDmd,EAAA14C,UAAA69C,uBAAsB,SAACC,QAChB1E,cAAax5C,KAAM46C,mBAAkB,CAAE9D,oBAAqBoH,MAQnEpF,EAAA14C,UAAAm7C,cAAa,uBACCrC,aASdJ,EAAA14C,UAAAu6C,cAAa,uBACkC1yC,IAAImsC,KASnD0E,EAAA14C,UAAA+9C,eAAc,uBACArE,cAWdhB,EAAA14C,UAAAg+C,uBAAsB,SAAClwC,EAAQsvC,eACjBa,+BACVzhC,GAAe1O,EAAMlO,KAAOu7C,iBAC5BiC,IAWJ1E,EAAA14C,UAAAi+C,+BAA8B,SAACnwC,EAAQsvC,OAC/BvsC,EAAOusC,GAAQx9C,KAAS28C,mBACxBvH,EAAchjC,GAASlE,GAAU+C,EAAK,GACtCokC,EAAcrjC,GAAU9D,GAAU+C,EAAK,UACtC9E,KAAKiE,IAAIglC,EAAaC,IAS/ByD,EAAA14C,UAAAk+C,8BAA6B,SAACC,OACtBlH,EAAQkH,GAAa,EACrBnlB,EAAap5B,KAAQw+C,yBAAwBx+C,KAAM25C,gBACnDtgB,EAAar5B,KAAQ45C,eACrBxpC,EAAMjE,KAAKoK,IAAI6iB,EAAgBC,GAAiBltB,KAAKoK,IAAI8gC,mBAMnDnvC,UACWkxB,EAAgBjtB,KAAKuX,IAAI2zB,EAAOnvC,EAAQkI,KAYjE0oC,EAAA14C,UAAA46C,YAAW,uBAC0B/yC,IAAImsC,KASzC0E,EAAA14C,UAAAq+C,8BAA6B,SAACF,OACtBG,EAAWvyC,KAAKoK,IAAIgoC,GAAa,GACjCnlB,EAAap5B,KAAQw+C,yBAAwBx+C,KAAM25C,gBACnDtgB,EAAar5B,KAAQ45C,eACrBxpC,EAAMjE,KAAKoK,IAAI6iB,EAAgBC,GAAiBqlB,kBAM1C3tC,UACM5E,KAAKoK,IAAI6iB,EAAgBroB,GAAc2tC,EAAWtuC,IAYtE0oC,EAAA14C,UAAA29C,6BAA4B,SAACT,OACvBrsC,EAAIjR,KAAQ28C,iBAAiBW,GAC3BpX,EAAOlmC,KAAQ+5C,gBACjB7T,IACFj1B,EAAI,CACFA,EAAK,GAAKi1B,EAAQ,GAAKA,EAAQ,GAC/Bj1B,EAAK,GAAKi1B,EAAQ,GAAKA,EAAQ,KAG5Bj1B,GAMT6nC,EAAA14C,UAAAu8B,SAAQ,eACAziB,EAAUla,KAAQu7C,gBAClBxqC,EAAU/Q,KAA+B26C,gBACzC3pC,EAAQhR,KAAQg7C,cAClBlqC,EAAM9Q,KAA6D+6C,oBACjE7U,EAAOlmC,KAAQ+5C,YACjB7T,EAAO,KACHyY,EAAW3+C,KAAQ+9C,+BACzBjtC,EAAS4nC,GACP5nC,EAAM9Q,KACD28C,mBAAgB,CACpBgC,EAAY,GAAK,EAAIzY,EAAQ,GAAIyY,EAAY,GAAK,EAAIzY,EAAQ,IAC/Dn1B,EACAC,UAIFF,OAAQA,EAAOtC,MAAM,GACrB0L,gBAA2BhV,IAAfgV,EAA2BA,EAAa,KACpDnJ,WAAYA,EACZC,SAAUA,EACV2qB,KAAI37B,KAAO86C,YAWfhC,EAAA14C,UAAA06C,QAAO,eACDnf,EACE5qB,EAAU/Q,KAAQ26C,4BACLz1C,IAAf6L,IACF4qB,EAAI37B,KAAQg+C,qBAAqBjtC,IAE5B4qB,GASTmd,EAAA14C,UAAA49C,qBAAoB,SAACjtC,OAEfX,EAAKsmC,EADL7mC,EAAM7P,KAAQg6C,UAAY,UAErBF,aAAY,KACb8E,EAAU59C,EAAiBhB,KAAM85C,aAAc/oC,EAAY,GACjElB,EAAS+uC,EACTxuC,EAAGpQ,KAAQ85C,aAAa8E,GAEtBlI,EADEkI,GAAO5+C,KAAS85C,aAAa14C,OAAS,EAC3B,EAEAgP,EAAGpQ,KAAQ85C,aAAa8E,EAAU,QAGjDxuC,EAAGpQ,KAAQ25C,eACXjD,EAAU12C,KAAQ65C,mBAEbhqC,EAAS1D,KAAKoK,IAAInG,EAAMW,GAAc5E,KAAKoK,IAAImgC,IASxDoC,EAAA14C,UAAA47C,qBAAoB,SAACrgB,WACVme,aAAY,SACVA,aAAa14C,QAAU,EAAC,OACxB,MAEHy9C,EAAY1pC,GAChBhJ,KAAKsO,MAAMkhB,GACX,EAAC37B,KACI85C,aAAa14C,OAAS,GAEvBs1C,EAAU12C,KACT85C,aAAa+E,GAAS7+C,KAAS85C,aAAa+E,EAAY,eAExD/E,aAAa+E,GAClB1yC,KAAKuX,IAAIgzB,EAAYvhC,GAAMwmB,EAAOkjB,EAAW,EAAG,gBAI3ClF,eAAiBxtC,KAAKuX,IAAG1jB,KAAM65C,YAAale,EAAI37B,KAAQg6C,WAenElB,EAAA14C,UAAA0+C,IAAG,SAACC,EAAkBt8B,GACqC,IACrD/X,KACJnB,GACE1H,MAAMC,QAAQi9C,IACqD,mBAAvCA,EAAkBt0C,sBAE9C,IAEE5I,MAAMC,QAAQi9C,GAAgB,CAChCx1C,IAAQ8I,GAAQ0sC,GAAmB,QAC7B7wC,EAAS0O,GAAemiC,EAAgB/+C,KAAOu7C,iBACrD7wC,EAAWkpB,GAAAorB,WAAkB9wC,WACpB6wC,EAAiB5+B,YAAcjI,GAAmB,CACrDhK,EAAS0O,GACbmiC,EAAiB3qC,YAASpU,KACrBu7C,kBAEP7wC,EAAWkpB,GAAAorB,WAAkB9wC,IACpB2R,OAAM7f,KAAMg7C,cAAepqC,GAAU1C,aAExC+wC,EAAiB1iC,KAErB7R,EADEu0C,EACoEF,EACnEj0C,QACAyB,UAAU0yC,EAAcj/C,KAAOu7C,iBAEvBwD,OAIVG,YAAYx0C,EAAU+X,IAO7Bq2B,EAAA14C,UAAA8+C,YAAW,SAACx0C,EAAU+X,OACdxP,EAAUwP,GAAW,GACvBxR,EAAOgC,EAAQhC,KACdA,IACHA,EAAIjR,KAAQ+9C,oCAKV1kB,EAHE6M,OACgBhhC,IAApB+N,EAAQizB,QAAwBjzB,EAAQizB,QAAO,CAAI,EAAG,EAAG,EAAG,GACxD0Y,OAA8B15C,IAApB+N,EAAQ2rC,SAAwB3rC,EAAQ2rC,QAGtDvlB,OAD4Bn0B,IAA1B+N,EAAQomB,cACMpmB,EAAQomB,mBACKn0B,IAApB+N,EAAQsmB,QACJv5B,KAAQg8C,qBAAqB/oC,EAAQsmB,SAElC,UAEZ4lB,EAASz0C,EAASsa,qBAGlBhU,EAAQhR,KAAQg7C,cAChBvhC,EAAWtN,KAAKsB,KAAKuD,GACvB0I,EAAWvN,KAAKqB,KAAKwD,GACrBouC,EAAU7vC,EAAAA,EACV8vC,EAAU9vC,EAAAA,EACV+vC,GAAW/vC,EAAAA,EACXgwC,GAAWhwC,EAAAA,EACTO,EAASpF,EAASua,YACf5jB,EAAI,EAAGuB,EAAKu8C,EAAO/9C,OAAQC,EAAIuB,EAAIvB,GAAKyO,EAAM,KAC/C6oC,EAAOwG,EAAO99C,GAAKoY,EAAW0lC,EAAO99C,EAAI,GAAKqY,EAC9Ck/B,EAAOuG,EAAO99C,GAAKqY,EAAWylC,EAAO99C,EAAI,GAAKoY,EACpD2lC,EAAUjzC,KAAKgE,IAAIivC,EAASzG,GAC5B0G,EAAUlzC,KAAKgE,IAAIkvC,EAASzG,GAC5B0G,EAAUnzC,KAAKiE,IAAIkvC,EAAS3G,GAC5B4G,EAAUpzC,KAAKiE,IAAImvC,EAAS3G,OAI1B7nC,EAAU/Q,KAAQq+C,+BAA8B,CACjDe,EAASC,EAASC,EAASC,IAC3BtuC,EAAK,GAAKi1B,EAAQ,GAAKA,EAAQ,GAAIj1B,EAAK,GAAKi1B,EAAQ,GAAKA,EAAQ,KAErEn1B,EAAa4O,MAAM5O,GACfsoB,EACAltB,KAAKiE,IAAIW,EAAYsoB,GACzBtoB,EAAU/Q,KAAQw+C,yBAAyBztC,EAAY6tC,EAAU,EAAI,GAGrEllC,GAAYA,MACR8lC,GAAcJ,EAAUE,GAAW,EACnCG,GAAcJ,EAAUE,GAAW,EAGjCG,GAFNF,IAAgBtZ,EAAQ,GAAKA,EAAQ,IAAM,EAAKn1B,GAEnB0I,GAD7BgmC,IAAgBvZ,EAAQ,GAAKA,EAAQ,IAAM,EAAKn1B,GACK2I,EAC/CimC,EAAUF,EAAahmC,EAAW+lC,EAAa9lC,EAC/C5I,EAAM9Q,KAAQ4/C,qBAAoB,CAAEF,EAASC,GAAU5uC,GACvDT,EAAW2C,EAAQ3C,SAAW2C,EAAQ3C,SAAWjO,OAE9B6C,IAArB+N,EAAQ6oC,SAAsB97C,KAC3Bw7C,gBAAe,CAEhBzqC,WAAYA,EACZD,OAAQA,EACRgrC,SAAU7oC,EAAQ6oC,SAClBC,OAAQ9oC,EAAQ8oC,QAElBzrC,SAGG+oC,kBAAoBtoC,OACpBqoC,cAAgBtoC,OAChBgsC,mBAAkB,GAAO,GAC9B5G,GAAkB5lC,GAAU,KAWhCwoC,EAAA14C,UAAAy/C,SAAQ,SAAChzC,EAAYoE,EAAMm1B,QACpB0Z,iBACHrjC,GAAmB5P,EAAU7M,KAAOu7C,iBACpCtqC,EACAm1B,IASJ0S,EAAA14C,UAAA0/C,iBAAgB,SAACjzC,EAAYoE,EAAMm1B,QAC5BiU,kBACH3B,GACE7rC,EACAoE,EACAm1B,EAAQpmC,KACH26C,gBAAa36C,KACbg7C,iBAaXlC,EAAA14C,UAAA2/C,qBAAoB,SAACjvC,EAAQC,EAAYC,EAAUC,OAC7C+uC,EACE9Z,EAAOlmC,KAAQ+5C,YACjB7T,GAAWp1B,EAAM,KACb6tC,EAAW3+C,KAAQ+9C,8BAA8B/sC,GACjDivC,EAAgBvH,GACpB5nC,EACAG,EAAI,CACH0tC,EAAY,GAAK,EAAIzY,EAAQ,GAAIyY,EAAY,GAAK,EAAIzY,EAAQ,IAC/Dn1B,EACAC,GAEFgvC,EAAW,CACTlvC,EAAO,GAAKmvC,EAAc,GAC1BnvC,EAAO,GAAKmvC,EAAc,WAGvBD,GAMTlH,EAAA14C,UAAA+6C,MAAK,wBACWJ,0BAAgD71C,IAA/BlF,KAAW26C,iBAQ5C7B,EAAA14C,UAAA8/C,aAAY,SAACC,OACLrvC,EAAS0L,GAAgBxc,KAAMo5C,cAAap5C,KAAOu7C,sBACpD6E,UAAS,CACZtvC,EAAO,GAAKqvC,EAAiB,GAC7BrvC,EAAO,GAAKqvC,EAAiB,MAQjCrH,EAAA14C,UAAAigD,qBAAoB,SAACF,OACbrvC,EAAM9Q,KAAQo5C,mBACfiB,kBAAiB,CACpBvpC,EAAO,GAAKqvC,EAAiB,GAC7BrvC,EAAO,GAAKqvC,EAAiB,MAWjCrH,EAAA14C,UAAAkgD,iBAAgB,SAACxL,EAAO90B,OAChB9C,EACJ8C,GAAcvD,GAAmBuD,EAAUhgB,KAAOu7C,sBAC/CgF,yBAAyBzL,EAAO53B,IASvC47B,EAAA14C,UAAAmgD,yBAAwB,SAACzL,EAAO90B,OACxBwgC,EAAQxgD,KAAQo7C,gBAAYp7C,KAAWo8C,iBACvCnrC,EAAIjR,KAAQ28C,iBAAgB38C,KAAMg7C,eAClCyF,EAAazgD,KAAQm6C,aAAappC,WAAU/Q,KAC3Cq5C,kBAAoBvE,EACzB,EACA7jC,EACAuvC,GAGExgC,IAAUhgB,KACPo5C,cAAap5C,KAAQ68C,oBAAoB4D,EAAezgC,SAG1Dq5B,mBAAqBvE,OACrBgI,qBAUPhE,EAAA14C,UAAAsgD,WAAU,SAACzE,EAAOj8B,QACXsgC,iBAAiBn0C,KAAKuX,IAAG1jB,KAAM65C,aAAcoC,GAAQj8B,IAU5D84B,EAAA14C,UAAAugD,eAAc,SAAC1E,EAAOj8B,GAChBA,IACFA,EAAavD,GAAmBuD,EAAUhgB,KAAOu7C,uBAE9CqF,uBAAuB3E,EAAOj8B,IAOrC84B,EAAA14C,UAAAwgD,uBAAsB,SAAC3E,EAAOj8B,OACtBwgC,EAAQxgD,KAAQo7C,gBAAYp7C,KAAWo8C,iBACvCyE,EAAW7gD,KAAQm6C,aAAanpC,SAAQhR,KACvCs5C,gBAAkB2C,EACvBuE,GAEExgC,IAAUhgB,KACPo5C,cAAap5C,KAAQg9C,sBAAsB6D,EAAa7gC,SAE1Ds5B,iBAAmB2C,OACnBa,qBASPhE,EAAA14C,UAAAggD,UAAS,SAACtvC,QACHupC,kBAAkB59B,GAAmB3L,EAAM9Q,KAAOu7C,mBAOzDzC,EAAA14C,UAAAi6C,kBAAiB,SAACvpC,QACXsoC,cAAgBtoC,OAChBgsC,qBAQPhE,EAAA14C,UAAA87C,QAAO,SAAC4E,EAAM7E,eACPlD,OAAO+H,IAAS7E,OAChB11C,eACOwyC,OAAO+H,IASrBhI,EAAA14C,UAAAk6C,cAAa,SAACvpC,QACPsoC,kBAAoBtoC,OACpB+rC,qBASPhE,EAAA14C,UAAAg6C,YAAW,SAACppC,QACLsoC,gBAAkBtoC,OAClB8rC,qBAQPhE,EAAA14C,UAAAm6C,QAAO,SAAC5e,QACD2e,cAAat6C,KAAMg8C,qBAAqBrgB,KAW/Cmd,EAAA14C,UAAA08C,kBAAiB,SAACiE,EAAsBC,OAChCR,EAAQxgD,KACPo7C,gBAAYp7C,KAAWo8C,kBAAoB4E,EAG5CH,EAAW7gD,KAAQm6C,aAAanpC,SAAQhR,KACvCs5C,gBACLkH,GAEIvvC,EAAIjR,KAAQ28C,iBAAiBkE,GAC7BJ,EAAazgD,KAAQm6C,aAAappC,WAAU/Q,KAC3Cq5C,kBACL,EACApoC,EACAuvC,GAEIS,EAASjhD,KAAQm6C,aAAarpC,OAAM9Q,KACnCo5C,cACLqH,EACAxvC,EACAuvC,EAAQxgD,KACH+/C,qBAAoB//C,KAClBo5C,cACLqH,EACAI,EACA5vC,SAIKhJ,IAAImsC,MAA2ByM,GAAW7gD,KAC5CyI,IAAI2rC,GAAuByM,QAEzB54C,IAAImsC,MAA6BqM,GAAazgD,KAChDyI,IAAI2rC,GAAyBqM,QAG5Bx4C,IAAImsC,KACTh7B,GAAMpZ,KAAMiI,IAAImsC,IAAsB6M,IAASjhD,KAE3CyI,IAAI2rC,GAAqB6M,QAGvB7F,iBAAmB2F,GAAoB/gD,KACzCq8C,wBAEF9C,mBAAgBr0C,GAYvB4zC,EAAA14C,UAAAi7C,mBAAkB,SAAC6F,EAAcC,EAAyBnhC,OAClD87B,OAA4B52C,IAAjBg8C,EAA6BA,EAAe,IACvDhgD,EAAYigD,GAA2B,EAEvCN,EAAW7gD,KAAQm6C,aAAanpC,SAAQhR,KAAMs5C,iBAC9CroC,EAAIjR,KAAQ28C,iBAAiBkE,GAC7BJ,EAAazgD,KAAQm6C,aAAappC,WAAU/Q,KAC3Cq5C,kBACLn4C,EACA+P,GAEIgwC,EAASjhD,KAAQm6C,aAAarpC,OAAM9Q,KACnCo5C,cACLqH,EACAxvC,GACA,EAAKjR,KACA+/C,qBAAoB//C,KAClBo5C,cACLqH,EACAI,EACA5vC,OAIa,IAAb6qC,IAAc97C,KAAUu5C,0BACrBF,kBAAoBoH,OACpBnH,gBAAkBuH,OAClBzH,cAAgB6H,YAChBnE,wBAID5/B,EACJ8C,IAA4B,IAAb87B,EAAc97C,KAAQu5C,mBAAgBr0C,QAClDq0C,mBAAgBr0C,OAGdy1C,kBAAoB8F,GAAazgD,KACjCg7C,gBAAkB6F,GAAW7gD,KAC5B+6C,qBACL3hC,GAAMpZ,KAAM+6C,oBAAqBkG,UAEzB7F,gBAAYp7C,KACdq8C,wBAGFb,gBAAe,CAClBxqC,SAAU6vC,EACV/vC,OAAQmwC,EACRlwC,WAAY0vC,EACZ3E,SAAUA,EACVC,OAAQjG,GACR54B,OAAQA,MAWd47B,EAAA14C,UAAAghD,iBAAgB,gBACT/F,mBAAmB,QAEnBa,QAAQ/H,GAAsB,IAWrC2E,EAAA14C,UAAAihD,eAAc,SAACH,EAAcC,EAAyBnhC,OAC9C9C,EACJ8C,GAAcvD,GAAmBuD,EAAUhgB,KAAOu7C,sBAC/C+F,uBAAuBJ,EAAcC,EAAyBjkC,IAUrE47B,EAAA14C,UAAAkhD,uBAAsB,SAACJ,EAAcC,EAAyBnhC,QACvDk8B,QAAQ/H,IAAsB,QAE9BkH,mBAAmB6F,EAAcC,EAAyBnhC,IAUjE84B,EAAA14C,UAAAw/C,qBAAoB,SAACvH,EAAckJ,OAC3BtwC,EAAIjR,KAAQ28C,iBAAgB38C,KAAMg7C,2BAC5Bb,aAAarpC,OACvBunC,EACAkJ,GAAoBvhD,KAAS26C,gBAC7B1pC,IAaJ6nC,EAAA14C,UAAAohD,mBAAkB,SAACC,EAAYC,OACvBC,EAAS3hD,KAAQg8C,qBAAqByF,eAChCzD,qBAAoBh+C,KACzBw+C,yBAAyBmD,EAAWD,KAa7C5I,EAAA14C,UAAAo+C,yBAAwB,SAACjG,EAAkBmJ,OACnCxgD,EAAYwgD,GAAiB,EAC7BzwC,EAAIjR,KAAQ28C,iBAAgB38C,KAAMg7C,2BAE5Bb,aAAappC,WAAWwnC,EAAkBr3C,EAAW+P,IAErE6nC,EA1/CA,CAAmBxuC,EAAAvD,kBEnQH66C,GAAQ3wC,UACfA,EAAK,GAAK,GAAKA,EAAK,GAAK,WA4BlB4wC,GAAO5wC,EAAMusC,UACvB37C,MAAMC,QAAQmP,GACTA,QAEU/L,IAAbs4C,EACFA,EAAQ,CAAIvsC,EAAMA,IAElBusC,EAAS,GAAKvsC,EACdusC,EAAS,GAAKvsC,GAETusC,qeC6gDXsE,GA38CA,SAAAr+C,GAGK,SACHs+C,EAAY9uC,OAAZrP,EACEH,EAAAI,KAAA7D,OAAAA,KAEMgiD,EAo3CP,SAC4B/uC,GAG1B,IACCgvC,EAAsB,UACU/8C,IAAhC+N,EAAQgvC,sBACVA,EACoC,iBAA3BhvC,EAAQgvC,oBACXtrB,SAASurB,eAAejvC,EAAQgvC,qBAChChvC,EAAQgvC,qBAKb,IAeCE,EAaAC,EAcAC,EAzCEh/C,EAAM,GAENi/C,EACJrvC,EAAQi4B,QAC2C,mBAAzBj4B,EAAQi4B,OAAQQ,UACXz4B,EAAQi4B,OAAM,IACrCqX,GAAAx7C,QAAU,CAAEmkC,OAAmCj4B,EAAQi4B,SACjE7nC,EAAOktC,IAA0B+R,EAEjCj/C,EAAOktC,IAAsBt9B,EAAQ9S,OAErCkD,EAAOktC,SACYrrC,IAAjB+N,EAAQuvC,KAAqBvvC,EAAQuvC,KAAI,IAAOC,GAAA17C,aAGzB7B,IAArB+N,EAAQkvC,WACNtgD,MAAMC,QAAQmR,EAAQkvC,UACxBA,EAAQ,IAAO7W,GAAAvkC,QAAWkM,EAAQkvC,SAAS3zC,UAE3CjF,GACsD,mBAA1B0J,EAAQkvC,SAAU7X,SAC5C,IAEF6X,EAAsClvC,EAAQkvC,gBAKrBj9C,IAAzB+N,EAAQmvC,eACNvgD,MAAMC,QAAQmR,EAAQmvC,cACxBA,EAAY,IAAO9W,GAAAvkC,QAAWkM,EAAQmvC,aAAa5zC,UAEnDjF,GAC0D,mBAA9B0J,EAAQmvC,aAAc9X,SAEhD,IAEF8X,EAA0CnvC,EAAQmvC,oBAK7Bl9C,IAArB+N,EAAQovC,SACNxgD,MAAMC,QAAQmR,EAAQovC,UACxBA,EAAQ,IAAO/W,GAAAvkC,QAAWkM,EAAQovC,SAAS7zC,UAE3CjF,GACsD,mBAA1B0J,EAAQovC,SAAU/X,SAC5C,IAEF+X,EAAWpvC,EAAQovC,UAGrBA,EAAQ,IAAO/W,GAAAvkC,eAIfo7C,SAAUA,EACVC,aAAcA,EACdH,oBAAqBA,EACrBI,SAAUA,EACVh/C,OAAQA,GAj8CgBq/C,CAAsBzvC,UAG9CrP,EAAK++C,yBAA2B/+C,EAAKg/C,mBAAmBh9C,KAAKhC,GAM7DA,EAAKi/C,sBACyB39C,IAA5B+N,EAAQ6vC,gBAAgC7vC,EAAQ6vC,gBAAkB,GAMpEl/C,EAAKm/C,iBACoB79C,IAAvB+N,EAAQ+vC,WACJ/vC,EAAQ+vC,WACRrhB,GAMN/9B,EAAKq/C,yBAMLr/C,EAAKs/C,mBAKLt/C,EAAKu/C,gBAA6C,gBAC3CD,wBAAqBh+C,OACrBk+C,aAAa1H,KAAKC,QACvB/1C,KAAKhC,GAMPA,EAAKy/C,6B/EzJC,EAAG,EAAG,EAAG,EAAG,EAAG,G+E+JrBz/C,EAAK0/C,6B/E/JC,EAAG,EAAG,EAAG,EAAG,EAAG,G+EqKrB1/C,EAAK2/C,YAAc,EAMnB3/C,EAAK4/C,YAAc,KAOnB5/C,EAAK6/C,gBAAkB,KAMvB7/C,EAAK8/C,yBAA2B,KAMhC9/C,EAAK+/C,uBAAyB,KAM9B//C,EAAKggD,gCAAkC,KAMvChgD,EAAKigD,UAAYltB,SAASC,cAAa,OACvChzB,EAAKigD,UAAUpqB,UAAS,eACT,iBAAsB8I,OAAM,YAAc,IACzD3+B,EAAKigD,UAAU34C,MAAMk7B,SAAQ,WAC7BxiC,EAAKigD,UAAU34C,MAAM44C,SAAQ,SAC7BlgD,EAAKigD,UAAU34C,MAAMuH,MAAK,OAC1B7O,EAAKigD,UAAU34C,MAAMwH,OAAM,OAM3B9O,EAAKmgD,kBAAoBptB,SAASC,cAAa,OAC/ChzB,EAAKmgD,kBAAkB74C,MAAMk7B,SAAQ,WACrCxiC,EAAKmgD,kBAAkB74C,MAAMiuB,OAAM,IACnCv1B,EAAKmgD,kBAAkB74C,MAAMuH,MAAK,OAClC7O,EAAKmgD,kBAAkB74C,MAAMwH,OAAM,OACnC9O,EAAKmgD,kBAAkB74C,MAAM84C,cAAa,OAC1CpgD,EAAKmgD,kBAAkBtqB,UAAS,sBAChC71B,EAAKigD,UAAU/sB,YAAYlzB,EAAKmgD,mBAMhCngD,EAAKqgD,2BAA6BttB,SAASC,cAAa,OACxDhzB,EAAKqgD,2BAA2B/4C,MAAMk7B,SAAQ,WAC9CxiC,EAAKqgD,2BAA2B/4C,MAAMiuB,OAAM,IAC5Cv1B,EAAKqgD,2BAA2B/4C,MAAMuH,MAAK,OAC3C7O,EAAKqgD,2BAA2B/4C,MAAMwH,OAAM,OAC5C9O,EAAKqgD,2BAA2B/4C,MAAM84C,cAAa,OACnDpgD,EAAKqgD,2BAA2BxqB,UAAS,gCACzC71B,EAAKigD,UAAU/sB,YAAYlzB,EAAKqgD,4BAMhCrgD,EAAKsgD,wBAA0B,KAM/BtgD,EAAKwqC,eAAiBn7B,EAAQ86B,cAM9BnqC,EAAKugD,qBAAuBnC,EAAgBC,oBAM5Cr+C,EAAKwgD,gBAAkB,KAMvBxgD,EAAKu+C,SAAWH,EAAgBG,UAAQ,IAAQ7W,GAAAvkC,QAMhDnD,EAAKw+C,aAAeJ,EAAgBI,cAAY,IAAQ9W,GAAAvkC,QAMxDnD,EAAKygD,UAAYrC,EAAgBK,SAOjCz+C,EAAK0gD,gBAAe,GAMpB1gD,EAAKs4B,UAAY,KAMjBt4B,EAAK2gD,cAML3gD,EAAK4gD,qBAAoB,GAMzB5gD,EAAK6gD,WAAU,IAAOC,GAAA39C,QACpBnD,EAAK+gD,gBAAgB/+C,KAAKhC,GAC1BA,EAAKghD,kBAAkBh/C,KAAKhC,IAG9BA,EAAKO,iBACHmG,EAAAC,mBAAmBgmC,IACnB3sC,EAAKihD,0BAEPjhD,EAAKO,iBACHmG,EAAAC,mBAAmBgmC,IACnB3sC,EAAKkhD,oBAEPlhD,EAAKO,iBACHmG,EAAAC,mBAAmBgmC,IACnB3sC,EAAKmhD,oBAEPnhD,EAAKO,iBACHmG,EAAAC,mBAAmBgmC,IACnB3sC,EAAKohD,sBAKPphD,EAAKoE,cAAcg6C,EAAgB3+C,QAEnCO,EAAKu+C,SAAShnC,QAIT,SACO8pC,GACRA,EAAQ7oB,OAAMp8B,OACd4F,KAAKhC,IAGTA,EAAKu+C,SAASh+C,iBACZolC,GAGG,SACO9kC,GACRA,EAAMokC,QAAQzM,OAAMp8B,OACpB4F,KAAKhC,IAGTA,EAAKu+C,SAASh+C,iBACZolC,GAGG,SACO9kC,GACRA,EAAMokC,QAAQzM,OAAO,OACrBx2B,KAAKhC,IAGTA,EAAKw+C,aAAajnC,QAIb,SACO+pC,GACRA,EAAY9oB,OAAMp8B,OAClB4F,KAAKhC,IAGTA,EAAKw+C,aAAaj+C,iBAChBolC,GAGG,SACO9kC,GACRA,EAAMokC,QAAQzM,OAAMp8B,OACpB4F,KAAKhC,IAGTA,EAAKw+C,aAAaj+C,iBAChBolC,GAGG,SACO9kC,GACRA,EAAMokC,QAAQzM,OAAO,OACrBx2B,KAAKhC,IAGTA,EAAKygD,UAAUlpC,QAAQvX,EAAKuhD,oBAAoBv/C,KAAKhC,IAErDA,EAAKygD,UAAUlgD,iBACbolC,GAGG,SACO9kC,QACH0gD,oBAC4C1gD,EAAMokC,UAEvDjjC,KAAKhC,IAGTA,EAAKygD,UAAUlgD,iBACbolC,GAGG,SACO9kC,OAEFiH,EADyDjH,EAAMokC,QAClDx9B,aACRnG,IAAPwG,UAAgB1L,KACNskD,gBAAgB54C,EAAG05C,YAEjC3gD,EAAMokC,QAAQzM,OAAO,OACrBx2B,KAAKhC,aA9TcyhD,GAAAtD,EAAAt+C,GAsUzBs+C,EAAA3hD,UAAAq9B,eAAc,qBACFx2B,MAAK,oDAQjB86C,EAAA3hD,UAAAklD,WAAU,SAACL,QACJM,cAAcjiD,KAAK2hD,IAY1BlD,EAAA3hD,UAAAolD,eAAc,SAACN,QACRO,kBAAkBniD,KAAK4hD,IAU9BnD,EAAA3hD,UAAAslD,SAAQ,SAAC1rB,GACKh6B,KAAQ2lD,gBAAgBja,YAC7BpoC,KAAK02B,IAQd+nB,EAAA3hD,UAAAwlD,WAAU,SAACC,QACJC,cAAcxiD,KAAKuiD,IAQ1B9D,EAAA3hD,UAAA+kD,oBAAmB,SAACU,OACZn6C,EAAKm6C,EAAQx6C,aACRnG,IAAPwG,IAAgB1L,KACbskD,gBAAgB54C,EAAG05C,YAAcS,GAExCA,EAAQzpB,OAAMp8B,OAOhB+hD,EAAA3hD,UAAAQ,gBAAe,gBACRmlD,UAAU,MACftiD,EAAArD,UAAMQ,gBAAeiD,KAAA7D,OAqBvB+hD,EAAA3hD,UAAA4lD,sBAAqB,SAAClpB,EAAOxsB,EAAUmS,WAC3B+gC,iBAGJ32C,EAAU7M,KAAQimD,+BAA+BnpB,GAEjDwB,OACyBp5B,KAF/Bud,OAA8Bvd,IAAhBud,EAA4BA,EAAW,IAEvC6b,aAA6B7b,EAAY6b,aAAe,EAChEG,OACwBv5B,IAA5Bud,EAAYgc,YAA4Bhc,EAAYgc,YAAct8B,EAC9Do8B,GAA4C,IAA7B9b,EAAY8b,yBACrBrC,UAAUmC,2BACpBxxB,EAAU7M,KACLwjD,YACLllB,EACAC,EACAjuB,EACA,KACAmuB,EACA,QAYJsjB,EAAA3hD,UAAA8lD,mBAAkB,SAACppB,EAAOra,OAClBU,EAAQ,eACT6iC,sBACHlpB,GAAK,SACK7Z,GACRE,EAAS7f,KAAK2f,KAEhBR,GAEKU,GAwBT4+B,EAAA3hD,UAAAq/B,oBAAmB,SAAC3C,EAAOxsB,EAAUmS,WACzB+gC,iBAGJvwC,EAAUwP,GAAW,GACrB6b,OACqBp5B,IAAzB+N,EAAQqrB,aAA6BrrB,EAAQqrB,aAAe,EACxDG,EAAcxrB,EAAQwrB,aAAet8B,cAC/B+5B,UAAUuD,oBACpB3C,EAAK98B,KACAwjD,YACLllB,EACAhuB,EACAmuB,KAYJsjB,EAAA3hD,UAAA+lD,kBAAiB,SAACrpB,EAAOra,YACb+gC,YAAW,OACZ,MAEH32C,EAAU7M,KAAQimD,+BAA+BnpB,GAEjD2B,OACwBv5B,KAF9Bud,OAA8Bvd,IAAhBud,EAA4BA,EAAW,IAEvCgc,YAA4Bhc,EAAYgc,YAAct8B,EAC9Dm8B,OACyBp5B,IAA7Bud,EAAY6b,aAA6B7b,EAAY6b,aAAe,EAChEC,GAA4C,IAA7B9b,EAAY8b,yBACrBrC,UAAUwD,uBACpB7yB,EAAU7M,KACLwjD,YACLllB,EACAC,EACAE,EACA,OAUJsjB,EAAA3hD,UAAAgmD,mBAAkB,SAAC3hD,eACLooC,uBAAsB7sC,KAAM4sC,cAAcnoC,KAQxDs9C,EAAA3hD,UAAAimD,2BAA0B,SAAC5hD,eACbwhD,+BAA8BjmD,KAAM4sC,cAAcnoC,KAShEs9C,EAAA3hD,UAAAwsC,cAAa,SAACnoC,OACN6hD,EAAgBtmD,KAAQ6jD,UAAU0C,wBAClCC,qBAEgB/hD,EACWA,EAAOgiD,eAAe,GACtBhiD,SAG/B+hD,EAAcpW,QAAUkW,EAAiBhgB,KACzCkgB,EAAcnW,QAAUiW,EAAiBI,MAa7C3E,EAAA3hD,UAAAumD,UAAS,uBACkD1+C,IACvDsoC,KAWJwR,EAAA3hD,UAAAwmD,iBAAgB,eACRzmD,EAAMH,KAAQ2mD,wBACLzhD,IAAX/E,EACkB,iBAANA,EACVw2B,SAASurB,eAAe/hD,GACxBA,EAEG,MAWX4hD,EAAA3hD,UAAAysC,uBAAsB,SAAC/P,UACdtgB,GAAgBxc,KAChBimD,+BAA+BnpB,GAAK98B,KACpC6mD,UAAUtL,kBAUnBwG,EAAA3hD,UAAA6lD,+BAA8B,SAACnpB,OACvBG,EAAUj9B,KAAQwjD,mBACnBvmB,EAGIrwB,GACLqwB,EAAWmB,2BACXtB,EAAMtuB,SAJD,MAeXuzC,EAAA3hD,UAAAmlD,YAAW,uBACGpD,UASdJ,EAAA3hD,UAAA0lD,YAAW,uBACGzB,WAWdtC,EAAA3hD,UAAA0mD,eAAc,SAACp7C,OACPm6C,EAAO7lD,KAAQskD,gBAAgB54C,EAAG05C,wBACrBlgD,IAAZ2gD,EAAwBA,EAAU,MAW3C9D,EAAA3hD,UAAAqlD,gBAAe,uBACDrD,cASdL,EAAA3hD,UAAAulD,cAAa,uBAC4B19C,IAAIsoC,KAQ7CwR,EAAA3hD,UAAAsrC,UAAS,kBACK1rC,KAAQ2lD,gBAAgBja,aAOtCqW,EAAA3hD,UAAA2mD,WAAU,mBACFzpB,EAAgBt9B,KAAQ2lD,gBAAgB/qB,sBACrCv5B,EAAI,EAAGuB,EAAK06B,EAAiBl8B,OAAQC,EAAIuB,IAAMvB,EAAC,KAEjDyB,EADQw6B,EAAiBj8B,GAAG24B,MACuC0C,eACrE55B,GAAUA,EAAOkkD,QAAO,OACnB,SAGJ,GAUTjF,EAAA3hD,UAAA6mD,uBAAsB,SAACp6C,OACfq6C,EAAiBzqC,GACrB5P,EAAU7M,KACL6mD,UAAUtL,6BAEL4L,+BAA+BD,IAS7CnF,EAAA3hD,UAAA+mD,+BAA8B,SAACt6C,OACvBowB,EAAUj9B,KAAQwjD,mBACnBvmB,EAGIrwB,GACLqwB,EAAWkB,2BACXtxB,EAAW2B,MAAM,EAAG,IAJf,MAaXuzC,EAAA3hD,UAAA+8B,YAAW,uBACGjB,WASd6lB,EAAA3hD,UAAAgnD,QAAO,uBAC0Dn/C,IAC7DsoC,KAWJwR,EAAA3hD,UAAAymD,QAAO,uBAC4B5+C,IAAIsoC,KAQvCwR,EAAA3hD,UAAA8nC,YAAW,uBACG2b,WAUd9B,EAAA3hD,UAAAinD,oBAAmB,uBACLtD,mBAUdhC,EAAA3hD,UAAAknD,6BAA4B,uBACdrD,4BAMdlC,EAAA3hD,UAAA2vC,iBAAgB,eACRwX,EAAavnD,KAAQ4mD,0BACpBW,EAAgBA,EAAcC,cAAgB7wB,UAUvDorB,EAAA3hD,UAAAukD,gBAAe,SAACrR,EAAMS,EAAeC,EAAYC,UACxCyQ,GAAAC,gBAAe3kD,KACfwjD,YACLlQ,EACAS,EACAC,EACAC,IAQJ8N,EAAA3hD,UAAAwiD,mBAAkB,SAAC6E,EAAcriD,OACzBrF,EAAOqF,GAAYqiD,EAAa1nD,KAChC2nD,EAAe,IAAOvY,GAAApoC,QAAgBhH,EAAIC,KAAQynD,QACnDE,sBAAsBD,IAM7B3F,EAAA3hD,UAAAunD,sBAAqB,SAACD,WACVlE,iBAKJlX,EAA6Cob,EAAgBpb,cAC7D/jC,EAAY+jC,EAAcvsC,QAE9BwI,IAAcqlC,IACdrlC,IAAc/C,GACd+C,IAAc/C,EAAiB,KAEzBsqC,EAAG9vC,KAAQ+vC,mBACX6X,EAAQ5nD,KAAQ6jD,UAAU5T,YAAWjwC,KAClC6jD,UAAU5T,cACfH,EACE3vC,EAA8BmsC,EAAcnsC,eAI3C8jD,2BAA2B4D,SAAS1nD,MAKvCynD,IAAa9X,EAAMA,EAAIgY,gBAAkBF,GAAUC,SAAS1nD,GAAM,UAKxEunD,EAAgBzqB,WAAUj9B,KAAQwjD,aACU,SAAnCh/C,cAAckjD,WACfK,EAAiB/nD,KAAQylD,kBAAkBnb,WAAW97B,QACnDnN,EAAI0mD,EAAkB3mD,OAAS,EAAGC,GAAK,EAAGA,IAAC,KAC5C6jD,EAAc6C,EAAkB1mD,MAEpC6jD,EAAYvlB,WAAM3/B,MACjBklD,EAAY8C,aAAShoD,KAChB4mD,uBAIK1B,EAAYpgD,YAAY4iD,IACxBA,EAAgBznD,mBAAkB,SAUrD8hD,EAAA3hD,UAAA6nD,iBAAgB,eACRhrB,EAAUj9B,KAAQwjD,YAWlB0E,EAASloD,KAAQykD,eAClByD,EAAUhmC,UAAO,KAChBwxB,EAAe1zC,KAAQ6iD,iBACvBlP,EAAcD,KACdzW,EAAU,KACNkrB,EAAQlrB,EAAWmrB,aACrBD,EAAMhU,KAAuBgU,EAAMhU,IAAoB,KACnDkU,EAAmB3M,KAAKC,MAAQ1e,EAAWqrB,KAAO,EACxD5U,EAAkB2U,EAAmB,EAAI,EACzC1U,EAAc0U,EAAmB,EAAI,GAGrCH,EAAU7U,kBAAoBK,IAChCwU,EAAU3V,eACV2V,EAAUzU,cAAcC,EAAiBC,KAK3C1W,IAAUj9B,KACLmF,YAAYm2B,KAChB2B,EAAWge,SAAOj7C,KACbykD,WAAWpR,mBAAerzC,KAC1B+mD,cAAU/mD,KAEXk8B,UAAU+B,oBACb3C,GACA2B,WAIE4C,EAAmB7/B,KAAQwkD,qBACxBnjD,EAAI,EAAGuB,EAAKi9B,EAAoBz+B,OAAQC,EAAIuB,IAAMvB,EACzDw+B,EAAoBx+B,GAACrB,KAAQi9B,GAE/B4C,EAAoBz+B,OAAS,GAM/B2gD,EAAA3hD,UAAA2kD,mBAAkB,gBACP8B,YAAO7mD,KAAY6mD,UAAUzL,gBAAYp7C,KAC3C6mD,UAAUxL,mBAAmB,QAG/Blf,UAMP4lB,EAAA3hD,UAAA4kD,qBAAoB,eAMduC,UACKZ,cACPY,EAAavnD,KAAQ4mD,yBAGd1C,wBAAuB,SACrB7iD,EAAI,EAAGuB,EAAE5C,KAAQokD,gBAAgBhjD,OAAQC,EAAIuB,IAAMvB,EAC1D4E,EAAajG,KAAMokD,gBAAgB/iD,SAEhC+iD,gBAAkB,UAClBP,UAAU7+C,oBACbQ,EAAqBxF,KAChB2iD,+BAEFkB,UAAU7+C,oBACbQ,EAAexF,KACV2iD,+BAEoBz9C,SAAlBq/C,gBACPv/C,oBAAoBQ,EAAgBxF,KAAOukD,eAAe,QACrDA,mBAAgBr/C,QAElBg/C,wBAAwBvjD,eACxBujD,wBAA0B,KAC/B5gB,GAAUtjC,KAAM6jD,cAGb0D,WAsBQxkD,KATXwkD,EAAczwB,YAAW92B,KAAM6jD,gBACrB3nB,YAASl8B,KACZk8B,UAASl8B,KAAQy9B,uBAGnBymB,wBAAuB,IAAOqE,GAAAxhD,QAAsB/G,KAAAA,KAElDouC,gBAEWrB,GAAmB/sC,KAC9BkkD,wBAAwB//C,iBAC3B4oC,GAAoBhqC,GAAG/C,KAClB2nD,sBAAsB/hD,KAAI5F,YAG9B6jD,UAAU1/C,iBACbqB,EAAqBxF,KAChB2iD,0BACL,QAEGkB,UAAU1/C,iBACbqB,EAAexF,KACV2iD,2BACLvgB,IAAuB,CAAIC,SAAS,QAGhC4f,EAAmBjiD,KAASmkD,qBACjBnkD,KACRmkD,qBADLoD,OAECnD,gBAAe,CAClB3+C,EACEw8C,EACAz8C,EAAiBxF,KACZ4iD,mBAAkB5iD,MAGzByF,EACEw8C,EACAz8C,EAAkBxF,KACb4iD,mBAAkB5iD,YAKjBukD,qBACHA,cAAavkD,KAAQwoD,WAAW5iD,KAAI5F,MACzCuiC,OAAOp+B,iBAAiBqB,EAAgBxF,KAAOukD,eAAe,cA1DvDroB,YACPkT,aAAYpvC,KAAMijD,+BACbA,8BAA2B/9C,OAC3Bs/C,qBAAqBpjD,OAAS,OAC9B86B,UAAUv7B,eACVu7B,UAAY,WAEVgnB,qBACP5G,qBAAoBt8C,KAAMkjD,yBACrBA,wBAAqBh+C,QAqDzBsjD,cAQPzG,EAAA3hD,UAAAwkD,kBAAiB,gBACVzoB,UAMP4lB,EAAA3hD,UAAAqoD,2BAA0B,gBACnBtsB,UAMP4lB,EAAA3hD,UAAA0kD,mBAAkB,gBACPpB,2BACPz9C,EAAajG,KAAM0jD,+BACdA,yBAA2B,WAEzBC,yBACP19C,EAAajG,KAAM2jD,6BACdA,uBAAyB,UAE1BnB,EAAIxiD,KAAQ6mD,UACdrE,SACGkG,2BAEAhF,yBAA2Bj+C,EAC9B+8C,EACAjiD,EAA8BP,KACzByoD,2BAA0BzoD,WAG5B2jD,uBAAyBl+C,EAC5B+8C,EACAh9C,EAAgBxF,KACXyoD,2BAA0BzoD,MAIjCwiD,EAAKnH,mBAAmB,SAErBlf,UAMP4lB,EAAA3hD,UAAAykD,yBAAwB,gBACbjB,uCACFA,gCAAgCzoC,QAAQlV,QACxC29C,gCAAkC,UAEnCtB,EAAUtiD,KAAQ2lD,gBACpBrD,IAAUtiD,KACP4jD,gCAA+B,CAClCn+C,EAAO68C,EAAY/hD,EAA8BP,KAAOm8B,OAAMn8B,MAC9DyF,EAAO68C,EAAY98C,EAAgBxF,KAAOm8B,OAAMn8B,aAG/Cm8B,UAMP4lB,EAAA3hD,UAAAuoD,WAAU,wBACMnF,aAOhBzB,EAAA3hD,UAAAwoD,WAAU,gBACC1F,oBACP5G,qBAAoBt8C,KAAMkjD,yBAEvBC,mBAMPpB,EAAA3hD,UAAA0nC,WAAU,mBACFhJ,EAAW9+B,KAAQ2lD,gBAAgB/qB,sBAChCv5B,EAAI,EAAGuB,EAAKk8B,EAAY19B,OAAQC,EAAIuB,IAAMvB,EAAC,KAC5C24B,EAAQ8E,EAAYz9B,GAAG24B,MACzBA,EAAM0D,eACR1D,EAAMmD,cAAc0rB,uBAS1B9G,EAAA3hD,UAAA+7B,OAAM,gBACKD,gBAAyCh3B,IAAhClF,KAASkjD,qBAAgCljD,KACpDkjD,mBAAqB/F,sBAAqBn9C,KAAMmjD,mBAWzDpB,EAAA3hD,UAAA0oD,cAAa,SAAC7D,eACAM,cAAc5a,OAAOsa,IAUnClD,EAAA3hD,UAAA2oD,kBAAiB,SAAC7D,eACJO,kBAAkB9a,OAAOua,IAUvCnD,EAAA3hD,UAAA4oD,YAAW,SAAChvB,UACEh6B,KAAQ2lD,gBAAgBja,YACtBf,OAAO3Q,IAUvB+nB,EAAA3hD,UAAA6oD,cAAa,SAACpD,eACAC,cAAcnb,OAAOkb,IAOnC9D,EAAA3hD,UAAAgjD,aAAY,SAACkF,OAAb1kD,EAAA5D,KACQiR,EAAIjR,KAAQonD,UACZ5E,EAAIxiD,KAAQ6mD,UACZqC,EAAkBlpD,KAAQwjD,YAE5BvmB,EAAa,aACJ/3B,IAAT+L,GAAsB2wC,GAAQ3wC,IAASuxC,GAAQA,EAAKrH,QAAK,KACrDiN,EAAY5F,EAAK7E,SAAQ39C,KACxBwjD,YAAWxjD,KAAQwjD,YAAY4E,eAAYljD,GAE5Cw2B,EAAY8mB,EAAK7lB,WACvBM,EAAU,CACRge,SAAS,EACT9c,2BAA0Bn+B,KAAOqjD,4BACjC8F,cAAe,KACfj7C,OAAQ2C,GACN6qB,EAAU5qB,OACV4qB,EAAU3qB,WACV2qB,EAAU1qB,SACVC,GAEF3L,MAAKtF,KAAOujD,cACZ3a,WAAY,EACZtL,iBAAgBt9B,KAAO2lD,gBAAgB/qB,sBACvCooB,WAAUhjD,KAAO+iD,YACjB3kB,2BAA0Bp+B,KAAOsjD,4BACjCzjB,oBAAmB,GACnB5uB,KAAMA,EACNi3C,UAASloD,KAAOykD,WAChB6D,KAAMA,EACNc,UAAS,GACT1tB,UAAWA,EACX0sB,UAAWA,EACXlU,YAAW,YAIVsP,YAAcvmB,OACdf,UAAUmB,YAAYJ,GAEvBA,EAAU,IACRA,EAAWge,SAAOj7C,KACfm8B,SAEPt6B,MAAMzB,UAAUkD,KAAKwC,MAAK9F,KACnBwkD,qBACLvnB,EAAW4C,qBAGTqpB,IACalpD,KACPyjD,kBACJpxC,GAAOrS,KAAMyjD,mBACZzzC,GAAOitB,EAAW/uB,OAAMlO,KAAOyjD,yBAE7Bj/C,cAAa,IACZsoC,GAAA/lC,QAASupC,GAAsBtwC,KAAQkpD,SAExCzF,gBAAkBh0C,GAAmBzP,KAAMyjD,kBAI1CzjD,KACHyjD,kBACJxmB,EAAWmrB,UAAUjU,MACrBlX,EAAWmrB,UAAUjU,MACrBnkC,GAAOitB,EAAW/uB,OAAMlO,KAAOyjD,wBAG3Bj/C,cAAa,IACZsoC,GAAA/lC,QAASupC,GAAoBtwC,KAAQi9B,IAE3C1uB,GAAM0uB,EAAW/uB,OAAMlO,KAAOyjD,uBAI7Bj/C,cAAa,IAAKsoC,GAAA/lC,QAASupC,GAAuBtwC,KAAQi9B,SAErDgmB,2BAAwBjjD,KAC3BijD,yBAA2B5T,YAAU,WACxCzrC,EAAKq/C,8BAA2B/9C,EAChCtB,EAAKqkD,qBACJ,KAUPlG,EAAA3hD,UAAAipD,cAAa,SAAC/G,QACP75C,IAAI8nC,GAAwB+R,IASnCP,EAAA3hD,UAAAu4B,QAAO,SAAC1nB,QACDxI,IAAI8nC,GAAkBt/B,IAU7B8wC,EAAA3hD,UAAA2lD,UAAS,SAAC5lD,QACHsI,IAAI8nC,GAAoBpwC,IAS/B4hD,EAAA3hD,UAAAkpD,QAAO,SAAC9G,QACD/5C,IAAI8nC,GAAkBiS,IAQ7BT,EAAA3hD,UAAAooD,WAAU,eACFjB,EAAavnD,KAAQ4mD,mBAEvB31C,OAAO/L,KACPqiD,EAAa,KACTgC,EAAgBvyB,iBAAiBuwB,GACjC90C,EACJ80C,EAAciC,YACdC,WAAWF,EAA+B,iBAC1CE,WAAWF,EAA2B,aACtCE,WAAWF,EAA4B,cACvCE,WAAWF,EAAgC,kBACvC72C,EACJ60C,EAAchhB,aACdkjB,WAAWF,EAA8B,gBACzCE,WAAWF,EAA0B,YACrCE,WAAWF,EAA6B,eACxCE,WAAWF,EAAiC,mBACzC5pC,MAAMlN,IAAWkN,MAAMjN,IAErBkvC,GADL3wC,EAAI,CAAIwB,EAAOC,KAGbwxB,QAAQC,KAAI,0EAObxL,QAAQ1nB,QACRy3C,uBAOP3G,EAAA3hD,UAAAsoD,oBAAmB,eACXlG,EAAIxiD,KAAQ6mD,aACdrE,EAAI,KACFvxC,OAAO/L,EACLqkD,EAAgBvyB,iBAAgBh3B,KAAM6jD,WACxC0F,EAAc92C,OAAS82C,EAAc72C,SACvCzB,EAAI,CACFwmB,SAAS8xB,EAAc92C,MAAO,IAC9BglB,SAAS8xB,EAAc72C,OAAQ,MAGnC8vC,EAAKjF,gBAAgBtsC,KAG3B8wC,EAt3CA,CAA2Bz3C,EAAAvD,6jBCuB3B2iD,GAlHA,SAAAjmD,GAGK,SACHkmD,EAAY12C,OAAZrP,EACEH,EAAAI,KAAA7D,OAAAA,KAEM6oC,EAAU51B,EAAQ41B,eACpBA,GAAY51B,EAAQ9S,QAAW0oC,EAAQ39B,MAAM84C,gBAC/Cnb,EAAQ39B,MAAM84C,cAAa,QAO7BpgD,EAAKilC,QAAUA,GAAoB,KAMnCjlC,EAAKgmD,QAAU,KAMfhmD,EAAKm6B,KAAO,KAMZn6B,EAAKimD,aAAY,GAEb52C,EAAQkpB,SACVv4B,EAAKu4B,OAASlpB,EAAQkpB,QAGpBlpB,EAAQ9S,QACVyD,EAAKmiD,UAAU9yC,EAAQ9S,iBAzCP2pD,GAAAH,EAAAlmD,GAgDpBkmD,EAAAvpD,UAAAQ,gBAAe,WACb0iC,GAAUtjC,KAAM6oC,SAChBplC,EAAArD,UAAMQ,gBAAeiD,KAAA7D,OAQvB2pD,EAAAvpD,UAAAu/B,OAAM,uBACQ5B,MAUd4rB,EAAAvpD,UAAAg8B,OAAM,SAAC1H,QACIqJ,MACPuF,GAAUtjC,KAAM6oC,iBAETxnC,EAAI,EAAGuB,EAAE5C,KAAQ6pD,aAAazoD,OAAQC,EAAIuB,IAAMvB,EACvD4E,EAAajG,KAAM6pD,aAAaxoD,UAE7BwoD,aAAazoD,OAAS,OACtB28B,KAAOrJ,OACHqJ,SACK/9B,KAAQ4pD,QAAO5pD,KAClB4pD,QACLl1B,EAAI4yB,gCACDxwB,YAAW92B,KAAM6oC,cACf1M,SAAW95B,GAAIrC,KACjB6pD,aAAavmD,KAChBmC,EAAOivB,EAAK4b,GAAuBtwC,KAAOm8B,OAAMn8B,OAGpD00B,EAAIyH,WASRwtB,EAAAvpD,UAAA+7B,OAAM,SAAC4tB,KAWPJ,EAAAvpD,UAAA2lD,UAAS,SAAC5lD,QACHypD,QACU,iBAANzpD,EAAsBw2B,SAASurB,eAAe/hD,GAAUA,GAErEwpD,EAhHA,CAAsBr/C,EAAAvD,meCgUtBijD,GA/TA,SAAAvmD,GAGK,SACHwmD,EAAYxnC,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAyB,IAEzC7e,EAAAH,EAAAI,KAAA7D,KAAA,CACE6oC,QAASlS,SAASC,cAAa,OAC/BuF,OAAQlpB,EAAQkpB,OAChBh8B,OAAQ8S,EAAQ9S,gBAOb+pD,WAAavzB,SAASC,cAAa,MAMxChzB,EAAKumD,gBACmBjlD,IAAtB+N,EAAQm3C,WAA0Bn3C,EAAQm3C,UAM5CxmD,EAAKymD,eAAiBzmD,EAAKumD,WAM3BvmD,EAAK0mD,0BAA+CplD,IAAxB+N,EAAQs3C,YAMpC3mD,EAAK4mD,kBACqBtlD,IAAxB+N,EAAQs3C,aAA4Bt3C,EAAQs3C,YAEzC3mD,EAAK4mD,eACR5mD,EAAKumD,YAAa,OAGd1wB,OACkBv0B,IAAtB+N,EAAQwmB,UAA0BxmB,EAAQwmB,UAAS,iBAE/CgxB,OACiBvlD,IAArB+N,EAAQw3C,SAAyBx3C,EAAQw3C,SAAQ,eAE7CC,OACwBxlD,IAA5B+N,EAAQy3C,gBACJz3C,EAAQy3C,gBACRjxB,EAAS,UAETkxB,OACsBzlD,IAA1B+N,EAAQ03C,cAA8B13C,EAAQ03C,cAAa,IAEvDC,OAC0B1lD,IAA9B+N,EAAQ23C,kBACJ33C,EAAQ23C,kBACRnxB,EAAS,YAES,iBAAbkxB,GAKT/mD,EAAKinD,eAAiBl0B,SAASC,cAAa,QAC5ChzB,EAAKinD,eAAeC,YAAcH,EAClC/mD,EAAKinD,eAAepxB,UAAYmxB,GAEhChnD,EAAKinD,eAAiBF,MAGlBpjB,OAA0BriC,IAAlB+N,EAAQs0B,MAAsBt0B,EAAQs0B,MAAK,IAEzC,iBAALA,GAKT3jC,EAAKmnD,OAASp0B,SAASC,cAAa,QACpChzB,EAAKmnD,OAAOD,YAAcvjB,EAC1B3jC,EAAKmnD,OAAOtxB,UAAYixB,GAExB9mD,EAAKmnD,OAASxjB,MAGVyjB,EACJpnD,EAAK4mD,eAAiB5mD,EAAKumD,WAAavmD,EAAKinD,eAAiBjnD,EAAKmnD,OAC/Dpb,EAAShZ,SAASC,cAAa,UACrC+Y,EAAOsb,aAAY,OAAO,UAC1Btb,EAAOub,MAAQT,EACf9a,EAAO7Y,YAAYk0B,GAEnBrb,EAAOxrC,iBACLqB,EACA5B,EAAKunD,aAAavlD,KAAKhC,IACvB,OAGIwnD,EACJ3xB,EAAS,IAATA,mBAIA8G,IACC38B,EAAKumD,YAAcvmD,EAAK4mD,aAAY,gBAAwB,KAC5D5mD,EAAK4mD,aAAY,GAAA,qBACd3hB,EAAUjlC,EAAKilC,eACrBA,EAAQpP,UAAY2xB,EACpBviB,EAAQ/R,YAAYlzB,EAAKsmD,YACzBrhB,EAAQ/R,YAAY6Y,GAOpB/rC,EAAKynD,sBAAqB,GAM1BznD,EAAK0kC,kBAAmB,WAnIFgjB,GAAArB,EAAAxmD,GA4IxBwmD,EAAA7pD,UAAAmrD,2BAA0B,SAACtuB,OAItB,IACGuuB,EAAM,GAMNC,EAAmB,GAErBlB,GAAc,EACZjtB,EAAmBL,EAAWK,iBAC3Bj8B,EAAI,EAAGuB,EAAK06B,EAAiBl8B,OAAQC,EAAIuB,IAAMvB,EAAC,KACjDo6B,EAAa6B,EAAiBj8B,MAC/B69B,GAAAC,OAAO1D,EAAYwB,EAAWvB,gBAI7B54B,EAA6D24B,EAAWzB,MAAO0C,eAChF55B,OAIC4oD,EAAoB5oD,EAAO6oD,qBAC5BD,OAICE,EAAeF,EAAkBzuB,MAClC2uB,KAILrB,EACEA,IAAuD,IAAxCznD,EAAO+oD,6BAEpBhqD,MAAMC,QAAQ8pD,WACP5uC,EAAI,EAAGoK,EAAKwkC,EAAaxqD,OAAQ4b,EAAIoK,IAAMpK,EAC5C4uC,EAAa5uC,KAAMwuC,IACvBC,EAAoBnoD,KAAKsoD,EAAa5uC,IACtCwuC,EAAOI,EAAa5uC,KAAM,QAIxB4uC,KAAgBJ,IACpBC,EAAoBnoD,KAAKsoD,GACzBJ,EAAOI,IAAgB,kBAInBtB,sBAAoBtqD,KACvB8rD,eAAevB,GAEfkB,GAOTxB,EAAA7pD,UAAA2rD,eAAc,SAAC9uB,MACRA,OAQC2uB,EAAY5rD,KAAQurD,2BAA2BtuB,GAE/C/D,EAAU0yB,EAAaxqD,OAAS,UAC7BknC,kBAAoBpP,SACtB2P,QAAQ39B,MAAMm7B,QAAUnN,EAAO,GAAA,YAC/BoP,iBAAmBpP,IAGtBn3B,EAAO6pD,EAAY5rD,KAAOqrD,kC3BvLH9nB,QACtBA,EAAKyoB,WACVzoB,EAAKtM,YAAYsM,EAAKyoB,W2ByLtBC,CAAcjsD,KAAMkqD,oBAGX7oD,EAAI,EAAGuB,EAAKgpD,EAAaxqD,OAAQC,EAAIuB,IAAMvB,EAAC,KAC7CwnC,EAAUlS,SAASC,cAAa,MACtCiS,EAAQ9C,UAAY6lB,EAAavqD,QAC5B6oD,WAAWpzB,YAAY+R,QAGzBwiB,sBAAwBO,aA5BlBtjB,wBACFO,QAAQ39B,MAAMm7B,QAAO,YACrBiC,kBAAmB,IAiC9B2hB,EAAA7pD,UAAA+qD,aAAY,SAAC1mD,GACXA,EAAMpE,sBACD6rD,qBACA7B,eAAcrqD,KAAQmqD,YAM7BF,EAAA7pD,UAAA8rD,cAAa,gBACNrjB,QAAQsjB,UAAUC,OAAO5rB,SACrB2pB,WACPnnB,GAAWhjC,KAAM6qD,eAAc7qD,KAAO+qD,QAEtC/nB,GAAWhjC,KAAM+qD,OAAM/qD,KAAO6qD,qBAE3BV,YAAUnqD,KAASmqD,YAQ1BF,EAAA7pD,UAAAisD,eAAc,uBACA7B,cAQdP,EAAA7pD,UAAA0rD,eAAc,SAACvB,QACJC,eAAiBD,SAGrBC,aAAeD,OACf1hB,QAAQsjB,UAAUC,OAAM,yBACpB/B,gBAAcrqD,KAChBksD,kBAWTjC,EAAA7pD,UAAAksD,aAAY,SAAClC,QACNC,eAAiBD,OACZI,cAAYxqD,KAASmqD,aAAeC,QAGzC8B,iBASPjC,EAAA7pD,UAAAmsD,aAAY,uBACEpC,YAQdF,EAAA7pD,UAAA+7B,OAAM,SAAC4tB,QACAgC,eAAehC,EAAS9sB,aAEjCgtB,EA7TA,CAA0BuC,GAAAzlD,ghBCuI1B0lD,GApJA,SAAAhpD,GAGK,SACHipD,EAAYjqC,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAyB,GAEzC7e,EAAAH,EAAAI,KAAA7D,KAAA,CACE6oC,QAASlS,SAASC,cAAa,OAC/BuF,OAAQlpB,EAAQkpB,OAChBh8B,OAAQ8S,EAAQ9S,mBAGZs5B,OACkBv0B,IAAtB+N,EAAQwmB,UAA0BxmB,EAAQwmB,UAAS,YAE/C8N,OAA0BriC,IAAlB+N,EAAQs0B,MAAsBt0B,EAAQs0B,MAAK,IAEnDolB,OACyBznD,IAA7B+N,EAAQ05C,iBACJ15C,EAAQ05C,iBAAgB,aAO9B/oD,EAAKmnD,OAAS,KAEE,iBAALxjB,GACT3jC,EAAKmnD,OAASp0B,SAASC,cAAa,QACpChzB,EAAKmnD,OAAOtxB,UAAYkzB,EACxB/oD,EAAKmnD,OAAOD,YAAcvjB,IAE1B3jC,EAAKmnD,OAASxjB,EACd3jC,EAAKmnD,OAAOoB,UAAUS,IAAID,QAGtBlC,EAAWx3C,EAAQw3C,SAAWx3C,EAAQw3C,SAAQ,iBAE9C9a,EAAShZ,SAASC,cAAa,UACrC+Y,EAAOlW,UAAYA,EAAS,SAC5BkW,EAAOsb,aAAY,OAAO,UAC1Btb,EAAOub,MAAQT,EACf9a,EAAO7Y,YAAYlzB,EAAKmnD,QAExBpb,EAAOxrC,iBACLqB,EACA5B,EAAKunD,aAAavlD,KAAKhC,IACvB,OAGIwnD,EACJ3xB,EAAS,IAATA,mBAA6C8G,GACzCsI,EAAUjlC,EAAKilC,eACrBA,EAAQpP,UAAY2xB,EACpBviB,EAAQ/R,YAAY6Y,GAEpB/rC,EAAKipD,gBAAkB55C,EAAQ65C,WAAa75C,EAAQ65C,gBAAa5nD,EAMjEtB,EAAKmpD,eAAiC7nD,IAArB+N,EAAQ6oC,SAAyB7oC,EAAQ6oC,SAAW,IAMrEl4C,EAAKopD,eAAiC9nD,IAArB+N,EAAQg6C,UAAyBh6C,EAAQg6C,SAM1DrpD,EAAKspD,eAAYhoD,EAEbtB,EAAKopD,WACPppD,EAAKilC,QAAQsjB,UAAUS,IAAItsB,aA/EZ6sB,GAAAT,EAAAjpD,GAuFnBipD,EAAAtsD,UAAA+qD,aAAY,SAAC1mD,GACXA,EAAMpE,sBACuB6E,SAApB2nD,gBAA6B7sD,KAC/B6sD,uBAEAO,eAOTV,EAAAtsD,UAAAgtD,YAAW,eAEH5K,EADGxiD,KAAQ2/B,SACAknB,aACZrE,OAKCxxC,EAAWwxC,EAAKxH,mBACL91C,IAAb8L,SACO+7C,UAAY,GAAK/7C,GAAY,EAAI7E,KAAKC,KAAQ,EACrDo2C,EAAKvH,QAAO,CACVjqC,SAAU,EACV8qC,SAAQ97C,KAAO+sD,UACfhR,OAAQjG,KAGV0M,EAAKpI,YAAY,MAUvBsS,EAAAtsD,UAAA+7B,OAAM,SAAC4tB,OACC9sB,EAAa8sB,EAAS9sB,cACvBA,OAGCjsB,EAAWisB,EAAWvB,UAAU1qB,YAClCA,GAAQhR,KAASktD,UAAS,KACtB3gD,EAAS,UAAeyE,EAAQ,eAC7Bg8C,UAAS,KACVnF,EAAQ7nD,KAAQ6oC,QAAQsjB,UAAUtE,SAASvnB,IAC5CunB,GAAyB,IAAb72C,EAEN62C,GAAyB,IAAb72C,GAAchR,KAC9B6oC,QAAQsjB,UAAUxhB,OAAOrK,IAHDtgC,KACxB6oC,QAAQsjB,UAAUS,IAAItsB,SAK1ByqB,OAAO7/C,MAAMqB,UAAYA,OAE3B2gD,UAAYl8C,IAErB07C,EAlJA,CAAqBF,GAAAzlD,ghBC8HrBsmD,GA9HA,SAAA5pD,GAGK,SACH6pD,EAAY7qC,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAyB,GAEzC7e,EAAAH,EAAAI,KAAA7D,KAAA,CACE6oC,QAASlS,SAASC,cAAa,OAC/Bz2B,OAAQ8S,EAAQ9S,mBAGZs5B,OACkBv0B,IAAtB+N,EAAQwmB,UAA0BxmB,EAAQwmB,UAAS,UAE/CwiB,OAA0B/2C,IAAlB+N,EAAQgpC,MAAsBhpC,EAAQgpC,MAAQ,EAEtDsR,OACwBroD,IAA5B+N,EAAQs6C,gBACJt6C,EAAQs6C,gBACR9zB,EAAS,MAET+zB,OACyBtoD,IAA7B+N,EAAQu6C,iBACJv6C,EAAQu6C,iBACR/zB,EAAS,OAETg0B,OACoBvoD,IAAxB+N,EAAQw6C,YAA4Bx6C,EAAQw6C,YAAW,IACnDC,OACqBxoD,IAAzB+N,EAAQy6C,aAA6Bz6C,EAAQy6C,aAAY,IAErDC,OACuBzoD,IAA3B+N,EAAQ06C,eAA+B16C,EAAQ06C,eAAc,UACzDC,OACwB1oD,IAA5B+N,EAAQ26C,gBACJ36C,EAAQ26C,gBAAe,WAGvBC,EAAYl3B,SAASC,cAAa,UACxCi3B,EAAUp0B,UAAY8zB,EACtBM,EAAU5C,aAAY,OAAO,UAC7B4C,EAAU3C,MAAQyC,EAClBE,EAAU/2B,YACU,iBAAX22B,EACH92B,SAASm3B,eAAeL,GACxBA,GAGNI,EAAU1pD,iBACRqB,EACA5B,EAAKunD,aAAavlD,KAAKhC,EAAMq4C,IAC7B,OAGI8R,EAAap3B,SAASC,cAAa,UACzCm3B,EAAWt0B,UAAY+zB,EACvBO,EAAW9C,aAAY,OAAO,UAC9B8C,EAAW7C,MAAQ0C,EACnBG,EAAWj3B,YACU,iBAAZ42B,EACH/2B,SAASm3B,eAAeJ,GACxBA,GAGNK,EAAW5pD,iBACTqB,EACA5B,EAAKunD,aAAavlD,KAAKhC,GAAOq4C,IAC9B,OAGImP,EACJ3xB,EAAS,IAATA,mBAA6C8G,GACzCsI,EAAUjlC,EAAKilC,eACrBA,EAAQpP,UAAY2xB,EACpBviB,EAAQ/R,YAAY+2B,GACpBhlB,EAAQ/R,YAAYi3B,GAMpBnqD,EAAKmpD,eAAiC7nD,IAArB+N,EAAQ6oC,SAAyB7oC,EAAQ6oC,SAAW,aAlFtDkS,GAAAV,EAAA7pD,GA0FjB6pD,EAAAltD,UAAA+qD,aAAY,SAAClP,EAAOx3C,GAClBA,EAAMpE,sBACD4tD,aAAahS,IAOpBqR,EAAAltD,UAAA6tD,aAAY,SAAChS,OAELuG,EADGxiD,KAAQ2/B,SACAknB,aACZrE,OAKC0L,EAAc1L,EAAK1H,kBACL51C,IAAhBgpD,EAAyB,KACrBC,EAAU3L,EAAKhB,mBAAmB0M,EAAcjS,QAC7C8Q,UAAY,GACfvK,EAAKpH,gBACPoH,EAAKnG,mBAEPmG,EAAKvH,QAAO,CACVtf,KAAMwyB,EACNrS,SAAQ97C,KAAO+sD,UACfhR,OAAQjG,MAGV0M,EAAKjI,QAAQ4T,MAIrBb,EA5HA,CAAmBd,GAAAzlD,6KC1BnBqnD,GACQ,4eCkGQC,GAAI7L,EAAMvG,EAAOiF,OACzB9D,EAAgBoF,EAAKzH,uBACvBqC,EAAa,KACTtsC,EAAM,CAAIssC,EAAc,GAAKnB,EAAM,GAAImB,EAAc,GAAKnB,EAAM,IACtEuG,EAAKhH,gBAAe,CAClBM,cAA2B52C,IAAjBg8C,EAA6BA,EAAe,IACtDnF,OAAQ9F,GACRnlC,OAAQ0xC,EAAK5C,qBAAqB9uC,eAWxBw9C,GAAY9L,EAAMvG,EAAOj8B,EAAYkhC,OAC7CgN,EAAc1L,EAAK1H,kBAEL51C,IAAhBgpD,OAIEC,EAAU3L,EAAKhB,mBAAmB0M,EAAcjS,GAChDwE,EAAgB+B,EAAKxG,qBAAqBmS,GAE5C3L,EAAKpH,gBACPoH,EAAKnG,mBAEPmG,EAAKvH,QAAO,CACVlqC,WAAY0vC,EACZvjC,OAAQ8C,EACR87B,cAA2B52C,IAAjBg8C,EAA6BA,EAAe,IACtDnF,OAAQjG,UAIZyY,GAlHA,SAAA9qD,GAGK,SACH+qD,EAAY/rC,OAAZ7e,EACEH,EAAAI,KAAA7D,OAAAA,YAEIyiB,GAAeA,EAAY3d,cAC7BlB,EAAKkB,YAAc2d,EAAY3d,aAOjClB,EAAKm6B,KAAO,KAEZn6B,EAAK6qD,WAAU,YAjBOC,GAAAF,EAAA/qD,GA0BxB+qD,EAAApuD,UAAA4nD,UAAS,uBAC6B//C,IAAImmD,KAQ1CI,EAAApuD,UAAAu/B,OAAM,uBACQ5B,MASdywB,EAAApuD,UAAA0E,YAAW,SAAC4iD,UACH,GAST8G,EAAApuD,UAAAquD,UAAS,SAACE,QACHlmD,IAAI2lD,GAA4BO,IASvCH,EAAApuD,UAAAg8B,OAAM,SAAC1H,QACAqJ,KAAOrJ,GAEhB85B,EApEA,CAA0BlkD,EAAAvD,meC8B1B6nD,GA5CA,SAAAnrD,GAGK,SACHorD,EAAYpsC,OAAZ7e,EACEH,EAAAI,KAAA7D,OAAAA,KAEMiT,EAAUwP,GAAyB,UAMzC7e,EAAKkrD,OAAS77C,EAAQgpC,MAAQhpC,EAAQgpC,MAAQ,EAM9Cr4C,EAAKmpD,eAAiC7nD,IAArB+N,EAAQ6oC,SAAyB7oC,EAAQ6oC,SAAW,aAnB3CiT,GAAAF,EAAAprD,GA4B5BorD,EAAAzuD,UAAA0E,YAAW,SAAC4iD,OACNsH,GAAY,KACZtH,EAAgB3nD,MAAQgtC,GAAoBG,SAAQ,KAChDua,EAA0CC,EAAgBpb,cAC1D5X,EAAMgzB,EAAgBhzB,IACtBxX,EAASwqC,EAAgB76C,WACzBovC,EAAQwL,EAAawH,UAAQjvD,KAAS8uD,OAAM9uD,KAAQ8uD,OACpDtM,EAAO9tB,EAAImyB,UACjBqI,GAAAC,YAAY3M,EAAMvG,EAAO/+B,EAAMld,KAAO+sD,WACtCtF,EAAapnD,iBACb2uD,GAAY,SAENA,GAEZH,EA1CA,CAA8BK,GAAAnoD,0mBCmMdqoD,GAASpL,WACjB5iD,EAAS4iD,EAAc5iD,OACzBgvC,EAAU,EACVC,EAAU,EACLhvC,EAAI,EAAGA,EAAID,EAAQC,IAC1B+uC,GAAW4T,EAAc3iD,GAAG+uC,QAC5BC,GAAW2T,EAAc3iD,GAAGgvC,eAEtBD,EAAUhvC,EAAQivC,EAAUjvC,OAiBtCiuD,GAhMA,SAAA5rD,GAGK,SACH6rD,EAAY7sC,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAyB,UAEzC7e,EAAAH,EAAAI,KAAA7D,KACgEiT,IAAOjT,KAGnEiT,EAAQs8C,kBACV3rD,EAAK2rD,gBAAkBt8C,EAAQs8C,iBAG7Bt8C,EAAQu8C,kBACV5rD,EAAK4rD,gBAAkBv8C,EAAQu8C,iBAG7Bv8C,EAAQw8C,kBACV7rD,EAAK6rD,gBAAkBx8C,EAAQw8C,iBAG7Bx8C,EAAQy8C,gBACV9rD,EAAK8rD,cAAgBz8C,EAAQy8C,eAG3Bz8C,EAAQ08C,WACV/rD,EAAK+rD,SAAW18C,EAAQ08C,UAO1B/rD,EAAKgsD,wBAAyB,EAM9BhsD,EAAKisD,iBAAgB,GAMrBjsD,EAAKksD,eAAc,YA/CUC,GAAAT,EAAA7rD,GAwD/B6rD,EAAAlvD,UAAA4vD,gBAAe,uBACDF,eAAe1uD,QAS7BkuD,EAAAlvD,UAAAmvD,gBAAe,SAAC7H,UACP,GAQT4H,EAAAlvD,UAAAovD,gBAAe,SAAC9H,KAUhB4H,EAAAlvD,UAAA0E,YAAW,SAAC4iD,OACLA,EAAgBpb,cAAa,OACzB,MAGL0iB,GAAY,UACXiB,uBAAuBvI,QACnBkI,2BACHlI,EAAgB3nD,MAAQgtC,GAAoBI,iBACzCqiB,gBAAgB9H,GAErBA,EAAgBpb,cAAcjsC,yBACrBqnD,EAAgB3nD,MAAQgtC,GAAoBO,UAAS,KACxD4iB,EAASlwD,KAAQ0vD,cAAchI,QAChCkI,uBACHM,GAASlwD,KAAS8vD,eAAe1uD,OAAS,WAG1CsmD,EAAgB3nD,MAAQgtC,GAAoBM,YAAW,KACnD8iB,EAAOnwD,KAAQuvD,gBAAgB7H,QAChCkI,uBAAyBO,EAC9BnB,EAAShvD,KAAQ2vD,SAASQ,QACjBzI,EAAgB3nD,MAAQgtC,GAAoBK,aAAWptC,KAC3DyvD,gBAAgB/H,UAGjBsH,GAQVM,EAAAlvD,UAAAqvD,gBAAe,SAAC/H,KAQhB4H,EAAAlvD,UAAAsvD,cAAa,SAAChI,UACL,GAST4H,EAAAlvD,UAAAuvD,SAAQ,SAACQ,UACAA,GAOTb,EAAAlvD,UAAA6vD,uBAAsB,SAACvI,MAqCtB,SAC6BA,OACxB3nD,EAAO2nD,EAAgB3nD,YAE3BA,IAASgtC,GAAoBM,aAC7BttC,IAASgtC,GAAoBI,aAC7BptC,IAASgtC,GAAoBO,UA1CzB8iB,CAAuB1I,GAAe,KAClClf,EAAQkf,EAAgBpb,cAExB5gC,EAAK88B,EAAMgH,UAAU4V,WACvBsC,EAAgB3nD,MAAQgtC,GAAoBO,iBAASttC,KAC3C6vD,iBAAiBnkD,IACpBg8C,EAAgB3nD,MAAQgtC,GAAoBM,aAE5C3hC,KAAE1L,KAAS6vD,oBAF4C7vD,KAC3D6vD,iBAAiBnkD,GAAM88B,QAKzBsnB,eAAiB1sD,EAASpD,KAAM6vD,oBAG3CP,EAjKA,CAAiCJ,GAAAnoD,kBCzBjBspD,GAAInV,OACZoV,EAAaztD,UAIhB,OAAA,SACc4B,WACX8rD,GAAO,EACFlvD,EAAI,EAAGuB,EAAK0tD,EAAWlvD,OAAQC,EAAIuB,IAC1C2tD,EAAOA,GAAQD,EAAWjvD,GAAGoD,MADmBpD,UAM3CkvD,OA6BEC,GAAgB,SAAa9I,OAClCpb,EAAoEob,EAAgBpb,qBAExFA,EAAcmkB,UACZnkB,EAAcokB,SAAWpkB,EAAcqkB,UACzCrkB,EAAc2iB,UAsBL2B,GAAiB,SAAansD,UAClCA,EAAMiwB,IAAIkyB,mBAAmBiK,aAAY,aAXhC,SAAapsD,UACtBA,EAAMtE,OAAOymD,mBAAmBiB,SAASlxB,SAASm6B,eAWrDC,CAAMtsD,IAWCusD,GAAS7uD,EAsBT8uD,GAAiB,SAAavJ,OACnCpb,EAA2Cob,EAAgBpb,qBAClC,GAAxBA,EAAcqD,UAAiBlO,IAAUC,IAAO4K,EAAcqkB,UAsD1DO,GAAc,SAAaxJ,OAChCpb,EAAoEob,EAAgBpb,qBAEvFA,EAAcmkB,UACbnkB,EAAcokB,SAAWpkB,EAAcqkB,WACxCrkB,EAAc2iB,UA8BNkC,GAAY,SAAazJ,OAC9Bpb,EAAoEob,EAAgBpb,qBAEvFA,EAAcmkB,UACbnkB,EAAcokB,SAAWpkB,EAAcqkB,UACzCrkB,EAAc2iB,UAYLmC,GAAiB,SAAa1J,OAEnC2J,EADoE3J,EAAgBpb,cACpCnsC,OAAQkxD,cAChD,UAAPA,GAA8B,WAAPA,GAA+B,aAAPA,GAU3CC,GAAS,SAAa5J,OAC3BzY,EAAoEyY,EACvEpb,qBACH/iC,QAAwBrE,IAAjB+pC,EAA4B,IAEJ,SAAxBA,EAAasiB,aA0CTC,GAAa,SAAa9J,OAC/BzY,EAAoEyY,EACvEpb,qBACH/iC,QAAwBrE,IAAjB+pC,EAA4B,IAC5BA,EAAawiB,WAAqC,IAAxBxiB,EAAaU,keC7GhD+hB,GA1JA,SAAAjuD,GAGK,SACHkuD,EAAYlvC,OAAZ7e,EACEH,EAAAI,KAAA7D,KAAA,CACE2vD,SAAUvtD,UAGN6Q,EAAUwP,GAAyB,GAMzC7e,EAAKguD,SAAW3+C,EAAQ4+C,QAKxBjuD,EAAKkuD,aAAe,KAKpBluD,EAAKmuD,mBAKLnuD,EAAKouD,UAAW,MAEVC,EAAYh/C,EAAQg/C,UACtBh/C,EAAQg/C,UACR5B,GAAIa,GAAgBM,WAMxB5tD,EAAKsuD,WAAaj/C,EAAQk/C,YACtB9B,GAAIO,GAAmBqB,GACvBA,EAMJruD,EAAKwuD,YAAa,WAhDAC,GAAAV,EAAAluD,GAuDpBkuD,EAAAvxD,UAAAovD,gBAAe,SAAC9H,QACJsK,gBACHA,UAAW,OACXryB,SAASknB,UAAUzF,wB9E6MRv0C,EAAYiT,E8E3MxBgwC,EAAc9vD,KAAQ8vD,eACtBwC,EAAWC,GAAAD,SAAqBxC,MAClCA,EAAe1uD,QAAMpB,KAAS+xD,4BACvBH,UAAQ5xD,KACV4xD,SAASY,OAAOF,EAAS,GAAIA,EAAS,SAEpCR,aAAY,KACb7V,EAAK,MACJ6V,aAAa,GAAKQ,EAAS,GAChCA,EAAS,GAACtyD,KAAS8xD,aAAa,IAG5BtP,EADMkF,EAAgBhzB,IACXmyB,U9E+LHh6C,E8E9LEovC,E9E8LUn8B,E8E9LH0iC,EAAK7H,gB9E+LlC9tC,EAAW,IAAMiT,EACjBjT,EAAW,IAAMiT,E8E/LXtG,GAAiByiC,EAAOuG,EAAKxH,eAC7BwH,EAAKnC,qBAAqBpE,cAEd2V,eAGTA,SAASrwD,aAEXuwD,aAAeQ,OACfP,mBAAqBjC,EAAe1uD,OACzCsmD,EAAgBpb,cAAcjsC,kBAQhCsxD,EAAAvxD,UAAAsvD,cAAa,SAAChI,OACNhzB,EAAMgzB,EAAgBhzB,IACtB8tB,EAAO9tB,EAAImyB,aACkB,SAA1BiJ,eAAe1uD,OAAY,UACxBgxD,YAAUpyD,KAAS4xD,UAAQ5xD,KAAS4xD,SAASpwD,MAAG,KAClD8W,EAAQtY,KAAQ4xD,SAASa,cACzBplD,EAAKrN,KAAQ4xD,SAASc,WACtB5hD,EAAS0xC,EAAKzH,oBACd4X,EAAWj+B,EAAIyyB,+BAA+Br2C,GAC9CiM,EAAO2X,EAAIuxB,+BAA8B,CAC7C0M,EAAS,GAAKr6C,EAAWnM,KAAKsB,IAAIJ,GAClCslD,EAAS,GAAKr6C,EAAWnM,KAAKqB,IAAIH,KAEpCm1C,EAAKhH,gBAAe,CAClB1qC,OAAQ0xC,EAAK5C,qBAAqB7iC,GAClC++B,SAAU,IACVC,OAAQjG,iBAGHkc,gBACFA,UAAW,EAChBxP,EAAKnB,mBAEA,cAEEuQ,eAGFA,SAASrwD,aAEXuwD,aAAe,MACb,GASXH,EAAAvxD,UAAAmvD,gBAAe,SAAC7H,WACLoI,eAAe1uD,OAAS,GAACpB,KAASkyD,WAAWxK,GAAe,KAE7DlF,EADMkF,EAAgBhzB,IACXmyB,sBACZiL,aAAe,KAEhBtP,EAAKpH,gBACPoH,EAAKnG,wBAEEuV,UAAQ5xD,KACV4xD,SAASrwD,aAIX6wD,WAAUpyD,KAAQ8vD,eAAe1uD,OAAS,GACxC,SAEA,GAGbuwD,EAxJA,CAAsBY,GAAAxrD,ghBC0FtB6rD,GA9FA,SAAAnvD,GAGK,SACHovD,EAAYpwC,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAyB,UAEzC7e,EAAAH,EAAAI,KAAA7D,KAAA,CACE2vD,SAAUvtD,WAOP8vD,WAAaj/C,EAAQg/C,UAAYh/C,EAAQg/C,UAAYzB,GAM1D5sD,EAAKkvD,gBAAa5tD,EAMlBtB,EAAKmpD,eAAiC7nD,IAArB+N,EAAQ6oC,SAAyB7oC,EAAQ6oC,SAAW,aA3BhDiX,GAAAF,EAAApvD,GAkCvBovD,EAAAzyD,UAAAovD,gBAAe,SAAC9H,MACT4J,GAAU5J,QAIThzB,EAAMgzB,EAAgBhzB,IACtB8tB,EAAO9tB,EAAImyB,aACbrE,EAAK/E,iBAAiBzsC,WAAa4kC,QAGjC3kC,EAAOyjB,EAAI0yB,UACXv3C,EAAS63C,EAAgB5qB,MACzBgb,EAAQ3rC,KAAK4M,MAAM9H,EAAK,GAAK,EAAIpB,EAAO,GAAIA,EAAO,GAAKoB,EAAK,GAAK,WAChD/L,SAAf4tD,WAAwB,KACzB7W,EAAQnE,EAAK93C,KAAQ8yD,WAC3BtQ,EAAK5B,wBAAwB3E,QAE1B6W,WAAahb,KAQpB+a,EAAAzyD,UAAAsvD,cAAa,SAAChI,UACP4J,GAAU5J,KAIHA,EAAgBhzB,IACXmyB,UACZxF,eAAcrhD,KAAM+sD,YAClB,IAQT8F,EAAAzyD,UAAAmvD,gBAAe,SAAC7H,WACT4J,GAAU5J,QAKbuJ,GAAkBvJ,KAAe1nD,KAC5BkyD,WAAWxK,MAEJA,EAAgBhzB,IACxBmyB,UAAUzF,wBACT0R,gBAAa5tD,GACX,KAKb2tD,EA5FA,CAAyBN,GAAAxrD,oLC5BtB,8dAiIHisD,GA5HA,SAAAvvD,GAGK,SACHwvD,EAAYx5B,OAAZ71B,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKsvD,UAAY,KAMjBtvD,EAAKmkC,SAAWpR,SAASC,cAAa,OACtChzB,EAAKmkC,SAAS78B,MAAMk7B,SAAQ,WAC5BxiC,EAAKmkC,SAAS78B,MAAM84C,cAAa,OACjCpgD,EAAKmkC,SAAStO,UAAS,UAAeA,EAMtC71B,EAAKm6B,KAAO,KAMZn6B,EAAKuvD,YAAc,KAMnBvvD,EAAKwvD,UAAY,cAtCGC,GAAAJ,EAAAxvD,GA4CtBwvD,EAAA7yD,UAAAQ,gBAAe,gBACRw7B,OAAO,OAMd62B,EAAA7yD,UAAAkzD,QAAO,eACCC,EAAUvzD,KAAQmzD,YAClBK,EAAQxzD,KAAQozD,UAChBK,EAAE,KACFvoD,EAAKlL,KAAQ+nC,SAAS78B,MAC5BA,EAAMo7B,KAAOn6B,KAAKgE,IAAIojD,EAAW,GAAIC,EAAS,IAAMC,EACpDvoD,EAAMw7C,IAAMv6C,KAAKgE,IAAIojD,EAAW,GAAIC,EAAS,IAAMC,EACnDvoD,EAAMuH,MAAQtG,KAAKkjB,IAAImkC,EAAS,GAAKD,EAAW,IAAME,EACtDvoD,EAAMwH,OAASvG,KAAKkjB,IAAImkC,EAAS,GAAKD,EAAW,IAAME,GAMzDR,EAAA7yD,UAAAg8B,OAAM,SAAC1H,WACIqJ,KAAI,MACNA,KAAKspB,sBAAsBpwB,YAAWj3B,KAAM+nC,cAC3C78B,EAAKlL,KAAQ+nC,SAAS78B,MAC5BA,EAAMo7B,KAAI,UACVp7B,EAAMw7C,IAAG,UACTx7C,EAAMuH,MAAK,UACXvH,EAAMwH,OAAM,eAETqrB,KAAOrJ,OACHqJ,MAAI/9B,KACN+9B,KAAKspB,sBAAsBvwB,YAAW92B,KAAM+nC,WAQrDkrB,EAAA7yD,UAAAszD,UAAS,SAACH,EAAYC,QACfL,YAAcI,OACdH,UAAYI,OACZG,8BACAL,WAMPL,EAAA7yD,UAAAuzD,uBAAsB,eACdJ,EAAUvzD,KAAQmzD,YAClBK,EAAQxzD,KAAQozD,UAOhBnlD,EANM,CACVslD,GACCA,EAAW,GAAIC,EAAS,IACzBA,GACCA,EAAS,GAAID,EAAW,KAEA7+B,IAAG10B,KACvB+9B,KAAKkoB,+BAA8BjmD,KACnC+9B,MAGP9vB,EAAY,GAAKA,EAAY,GAAGO,aACtB0kD,eAGHA,UAAUvtC,eAAc,CAAE1X,IAHdjO,KACZkzD,UAAS,IAAOt/B,GAAA7sB,QAAO,CAAEkH,KASlCglD,EAAA7yD,UAAA6K,YAAW,uBACGioD,WAEhBD,EA1HA,CAAwBzyD,6dC2BlBozD,GAMI,WANJA,GAaG,UAbHA,GAoBE,SApBFA,GA2BK,YAQXC,GAAA,SAAApwD,GAKK,SACHqwD,EAAY/zD,EAAM8M,EAAY66C,OAA9B9jD,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAQV4D,EAAKiJ,WAAaA,EAOlBjJ,EAAK8jD,gBAAkBA,WAtBOqM,GAAAD,EAAArwD,GAwBlCqwD,EAxBA,CAAkCj0D,GAoLlCm0D,GA9IA,SAAAvwD,GAGK,SACHwwD,EAAYxxC,OAAZ7e,EACEH,EAAAI,KAAA7D,OAAAA,KAEMiT,EAAUwP,GAAyB,UAMzC7e,EAAKswD,KAAI,IAAOC,GAAAptD,QAAUkM,EAAQwmB,WAAS,cAM3C71B,EAAKwwD,cAA+BlvD,IAApB+N,EAAQohD,QAAwBphD,EAAQohD,QAAU,GAE9DphD,EAAQqhD,WACV1wD,EAAK0wD,SAAWrhD,EAAQqhD,UAO1B1wD,EAAKuvD,YAAc,KAMnBvvD,EAAKsuD,WAAaj/C,EAAQg/C,UAAYh/C,EAAQg/C,UAAYhB,GAM1DrtD,EAAK2wD,iBAAmBthD,EAAQuhD,gBAC5BvhD,EAAQuhD,gBACR5wD,EAAK6wD,gCA3CSV,GAAAE,EAAAxwD,GAuDpBwwD,EAAA7zD,UAAAq0D,uBAAsB,SAAC/M,EAAiB6L,EAAYC,OAC5C/gD,EAAQ+gD,EAAS,GAAKD,EAAW,GACjC7gD,EAAS8gD,EAAS,GAAKD,EAAW,UACjC9gD,EAAQA,EAAQC,EAASA,GAAM1S,KAASo0D,UAQjDH,EAAA7zD,UAAA6K,YAAW,uBACGipD,KAAKjpD,eAOnBgpD,EAAA7zD,UAAAovD,gBAAe,SAAC9H,QACTwM,KAAKR,UAAS1zD,KAAMmzD,YAAazL,EAAgB5qB,YAEjDt4B,cAAa,IACZqvD,GACFD,GACAlM,EAAgB76C,WAChB66C,KAUNuM,EAAA7zD,UAAAsvD,cAAa,SAAChI,QACPwM,KAAK93B,OAAO,UAEXs4B,EAAW10D,KAAQu0D,iBACvB7M,EAAe1nD,KACVmzD,YACLzL,EAAgB5qB,cAEd43B,GAAW10D,KACRs0D,SAAS5M,QAEXljD,cAAa,IACZqvD,GACFa,EAAcd,GAA0BA,GACxClM,EAAgB76C,WAChB66C,KAGG,GAQTuM,EAAA7zD,UAAAmvD,gBAAe,SAAC7H,gBACLwK,WAAWxK,UACbyL,YAAczL,EAAgB5qB,WAC9Bo3B,KAAK93B,OAAOsrB,EAAgBhzB,UAC5Bw/B,KAAKR,UAAS1zD,KAAMmzD,YAAWnzD,KAAOmzD,kBACtC3uD,cAAa,IACZqvD,GACFD,GACAlM,EAAgB76C,WAChB66C,KAGG,IAUXuM,EAAA7zD,UAAAk0D,SAAQ,SAAC7vD,KACXwvD,EA5IA,CAAsB1B,GAAAxrD,meCLtB4tD,GAhEA,SAAAlxD,GAGK,SACHmxD,EAAYnyC,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAyB,GAEnCwvC,EAAYh/C,EAAQg/C,UAAYh/C,EAAQg/C,UAAYd,UAE1DvtD,EAAAH,EAAAI,KAAA7D,KAAA,CACEiyD,UAAWA,EACXx4B,UAAWxmB,EAAQwmB,WAAS,cAC5B46B,QAASphD,EAAQohD,iBAOdtH,eAAiC7nD,IAArB+N,EAAQ6oC,SAAyB7oC,EAAQ6oC,SAAW,IAMrEl4C,EAAKixD,UAAuB3vD,IAAhB+N,EAAQ6hD,KAAoB7hD,EAAQ6hD,aAzB7BC,GAAAH,EAAAnxD,GAgCrBmxD,EAAAx0D,UAAAk0D,SAAQ,SAAC7vD,O3F8KmCwJ,EAAaK,E2F7KjDomB,EAAG10B,KAAQ2/B,SACX6iB,EAAqD9tB,EAAImyB,UACzD51C,EAAkDyjB,EAAI0yB,UACxDl5C,EAAMlO,KAAQiL,cAAcmJ,oBAEvBygD,KAAI,KACLG,EAAYxS,EAAK1E,wBAAwB7sC,GACzCgkD,G3FsKkChnD,E2FtKY,CAClDymB,EAAIyyB,+BAA+B32C,GAActC,IACjDwmB,EAAIyyB,+BAA+Bz2C,GAAYxC,K3FsK9C+B,GADQR,GAAoBnB,GACFL,cAkdHC,EAAQhG,OAChCmV,GAAWnP,EAAO,GAAKA,EAAO,IAAM,GAAMhG,EAAQ,GAClDoV,GAAWpP,EAAO,GAAKA,EAAO,IAAM,GAAMhG,EAAQ,GACxDgG,EAAO,IAAMmP,EACbnP,EAAO,IAAMmP,EACbnP,EAAO,IAAMoP,EACbpP,EAAO,IAAMoP,E2F1nBT43C,CAAgBF,EAAW,EAFZxS,EAAKnE,+BAA+B4W,EAAgBhkD,IAGnE/C,EAAS8mD,MAGLjkD,EAAayxC,EAAKhE,yBACtBgE,EAAKnE,+BAA+BnwC,EAAQ+C,IAExCH,EAAS0xC,EAAK5C,qBAAqBhvC,GAAU1C,GAAS6C,GAE5DyxC,EAAKhH,gBAAe,CAClBzqC,WAAYA,EACZD,OAAQA,EACRgrC,SAAQ97C,KAAO+sD,UACfhR,OAAQjG,MAGd8e,EA9DA,CAAuBO,GAAApuD,sDC9BvBquD,GACQ,GADRA,GAEM,GAFNA,GAGS,GAHTA,GAIQ,6dC8GRC,GAxFA,SAAA5xD,GAGK,SACH6xD,EAAY7yC,OAAZ7e,EACEH,EAAAI,KAAA7D,OAAAA,KAEMiT,EAAUwP,GAAW,UAO3B7e,EAAK2xD,kBAAiB,SAAa7N,UAE/BwJ,GAAexJ,IAAoB0J,GAAkB1J,IAQzD9jD,EAAKsuD,gBACmBhtD,IAAtB+N,EAAQg/C,UACJh/C,EAAQg/C,UACRruD,EAAK2xD,kBAMX3xD,EAAKmpD,eAAiC7nD,IAArB+N,EAAQ6oC,SAAyB7oC,EAAQ6oC,SAAW,IAMrEl4C,EAAK4xD,iBACoBtwD,IAAvB+N,EAAQwiD,WAA2BxiD,EAAQwiD,WAAa,aAxCpCC,GAAAJ,EAAA7xD,GAmDxB6xD,EAAAl1D,UAAA0E,YAAW,SAAC4iD,OACNsH,GAAY,KACZtH,EAAgB3nD,MAAQyF,EAAiB,KACrCmwD,EAAyCjO,EAAgBpb,cACzDspB,EAAUD,EAASC,gBAElB1D,WAAWxK,KACfkO,GAAWR,IACVQ,GAAWR,IACXQ,GAAWR,IACXQ,GAAWR,IAAU,KAGjB5S,EADMkF,EAAgBhzB,IACXmyB,UACXgP,EAAgBrT,EAAK7H,gBAAa36C,KAAUw1D,YAC9Cn4C,EAAS,EACXC,EAAS,EACPs4C,GAAWR,GACb93C,GAAUu4C,EACDD,GAAWR,GACpB/3C,GAAUw4C,EACDD,GAAWR,GACpB/3C,EAASw4C,EAETv4C,EAASu4C,MAEL5Z,EAAK,CAAI5+B,EAAQC,GACvB9D,GAAiByiC,EAAOuG,EAAKxH,eAC7BkU,GAAA4G,IAAItT,EAAMvG,EAAKj8C,KAAO+sD,WACtB4I,EAASt1D,iBACT2uD,GAAY,UAGRA,GAEZsG,EAtFA,CAA0BpG,GAAAnoD,ghBCyD1BgvD,GA7DA,SAAAtyD,GAGK,SACHuyD,EAAYvzC,OAAZ7e,EACEH,EAAAI,KAAA7D,OAAAA,KAEMiT,EAAUwP,GAAyB,UAMzC7e,EAAKsuD,WAAaj/C,EAAQg/C,UAAYh/C,EAAQg/C,UAAYb,GAM1DxtD,EAAKkrD,OAAS77C,EAAQgpC,MAAQhpC,EAAQgpC,MAAQ,EAM9Cr4C,EAAKmpD,eAAiC7nD,IAArB+N,EAAQ6oC,SAAyB7oC,EAAQ6oC,SAAW,aAzB9Cma,GAAAD,EAAAvyD,GAoCzBuyD,EAAA51D,UAAA0E,YAAW,SAAC4iD,OACNsH,GAAY,KAEdtH,EAAgB3nD,MAAQyF,GACxBkiD,EAAgB3nD,MAAQyF,EAAkB,KAEpCmwD,EAAyCjO,EAAgBpb,cACzD4pB,EAAWP,EAASO,iBAEnBhE,WAAWxK,KACfwO,GAAQ,IAAQC,WAAW,IAAMD,GAAQ,IAAQC,WAAW,IAAC,KAExDzhC,EAAMgzB,EAAgBhzB,IACtBunB,EACJia,GAAQ,IAAQC,WAAW,GAACn2D,KAAS8uD,QAAM9uD,KAAS8uD,OAChDtM,EAAO9tB,EAAImyB,UACjBqI,GAAAC,YAAY3M,EAAMvG,OAAO/2C,EAASlF,KAAO+sD,WACzC4I,EAASt1D,iBACT2uD,GAAY,UAGRA,GAEZgH,EA3DA,CAA2B9G,GAAAnoD,SC+F3BqvD,GAnHA,WAMK,SACHC,EAAYC,EAAOC,EAAaC,GAI3Bx2D,KACEy2D,OAASH,EAKXt2D,KACE02D,aAAeH,EAKjBv2D,KACE22D,OAASH,EAKXx2D,KACE42D,QAAO,GAKT52D,KACE62D,OAAS,EAKX72D,KACE82D,iBAAmB,SAM1BT,EAAAj2D,UAAAmB,MAAK,gBACEq1D,QAAQx1D,OAAS,OACjBy1D,OAAS,OACTC,iBAAmB,GAO1BT,EAAAj2D,UAAAoyD,OAAM,SAAC1lD,EAAGC,QACH6pD,QAAQtzD,KAAKwJ,EAAGC,EAAG2uC,KAAKC,QAM/B0a,EAAAj2D,UAAAoB,IAAG,mBACQo1D,QAAQx1D,OAAS,SAGjB,MAEHo1D,EAAQ9a,KAAKC,MAAG37C,KAAU22D,OAC1BI,EAAS/2D,KAAQ42D,QAAQx1D,OAAS,UAC/Bw1D,QAAQG,EAAY,GAAKP,SAGzB,UAILQ,EAAaD,EAAY,EACtBC,EAAa,GAACh3D,KAAS42D,QAAQI,EAAa,GAAKR,GACtDQ,GAAc,MAGVlb,EAAQ97C,KAAQ42D,QAAQG,EAAY,GAAC/2D,KAAS42D,QAAQI,EAAa,MAIrElb,EAAW,IAAO,GAAE,OACf,MAGHptC,EAAE1O,KAAQ42D,QAAQG,GAAS/2D,KAAS42D,QAAQI,GAC5CroD,EAAE3O,KAAQ42D,QAAQG,EAAY,GAAC/2D,KAAS42D,QAAQI,EAAa,eAC9DH,OAAS1qD,KAAK4M,MAAMpK,EAAID,QACxBooD,iBAAmB3qD,KAAK4N,KAAKrL,EAAKA,EAAKC,EAAKA,GAAMmtC,OAC3Cgb,iBAAgB92D,KAAQ02D,cAMtCL,EAAAj2D,UAAAqyD,YAAW,uBACIiE,aAAY12D,KAAQ82D,kBAAgB92D,KAASy2D,QAM5DJ,EAAAj2D,UAAAsyD,SAAQ,uBACMmE,QAEhBR,EAjHA,0iBCEaY,GAAI,CACfC,SAAQ,WACRC,MAAK,SAwRPC,GA7PA,SAAA3zD,GAGK,SACH4zD,EAAY50C,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAyB,IAEzC7e,EAAAH,EAAAI,KAAA7D,KACgEiT,IAAOjT,MAOlEs3D,YAAc,EAMnB1zD,EAAK2zD,WAAa,EAMlB3zD,EAAK+nB,eAAiCzmB,IAArB+N,EAAQwT,SAAyBxT,EAAQwT,SAAW,EAMrE7iB,EAAKmpD,eAAiC7nD,IAArB+N,EAAQ6oC,SAAyB7oC,EAAQ6oC,SAAW,IAMrEl4C,EAAK4zD,cAA+BtyD,IAApB+N,EAAQwkD,QAAwBxkD,EAAQwkD,QAAU,GAMlE7zD,EAAK8zD,gBACmBxyD,IAAtB+N,EAAQ0kD,WAA0B1kD,EAAQ0kD,UAM5C/zD,EAAKg0D,0BAC6B1yD,IAAhC+N,EAAQ6jC,qBACJ7jC,EAAQ6jC,wBAGRmb,EAAYh/C,EAAQg/C,UAAYh/C,EAAQg/C,UAAYjB,UAM1DptD,EAAKsuD,WAAaj/C,EAAQk/C,YACtB9B,GAAIO,GAAmBqB,GACvBA,EAMJruD,EAAKi0D,YAAc,KAMnBj0D,EAAKk0D,gBAAa5yD,EAMlBtB,EAAKm0D,WAMLn0D,EAAKo0D,WAAQ9yD,EAObtB,EAAKq0D,kBAAoB,IAKzBr0D,EAAKs0D,mBAOLt0D,EAAKu0D,cAAgB,aA5GIC,GAAAf,EAAA5zD,GAkH3B4zD,EAAAj3D,UAAAi4D,gBAAe,gBACRH,wBAAqBhzD,EAChBlF,KAAQ2/B,SAASknB,UACtBxF,oBACHn8C,EAASlF,KACJu3D,WAAUv3D,KAASu3D,WAAa,EAAI,GAAI,EAAM,EAACv3D,KAC/C63D,cAUTR,EAAAj3D,UAAA0E,YAAW,SAAC4iD,YACAwK,WAAWxK,GAAe,OAC3B,KAEIA,EAAgB3nD,OAChByF,EAAe,OACnB,MAaLy2C,EAVEvnB,EAAMgzB,EAAgBhzB,IACtB4jC,EAAwC5Q,EAAgBpb,iBAC9DgsB,EAAWj4D,sBAEFq3D,aAAU13D,KACZ63D,YAAcnQ,EAAgB76C,YAMjC66C,EAAgB3nD,MAAQyF,IAC1By2C,EAAQqc,EAAWh7C,OACfkkB,IAAW82B,EAAWC,YAAcC,WAAWC,kBACjDxc,GAASta,IAEP22B,EAAWC,YAAcC,WAAWE,iBACtCzc,GAAS,KAIC,IAAVA,EAAW,OACN,OAEFsb,WAAatb,MAGdN,EAAMD,KAAKC,WAEOz2C,SAAf4yD,aAAwB93D,KAC1B83D,WAAanc,UAGVqc,OAASrc,EAAG37C,KAAQ83D,WAAU93D,KAAQi4D,qBAAiBj4D,KAC1Dg4D,MAAQ7rD,KAAKkjB,IAAI4sB,GAAS,EAAIgb,GAAKC,SAAWD,GAAKE,WAGpD3U,EAAO9tB,EAAImyB,kBAEVmR,QAAUf,GAAKC,WAClB1U,EAAK9E,2BAAsB19C,KAAW43D,iCAE/BM,mBACP9oB,aAAYpvC,KAAMk4D,qBAEd1V,EAAKpH,gBACPoH,EAAKnG,mBAEPmG,EAAKpB,yBAEF8W,mBAAqB7oB,WAAUrvC,KAC7Bq4D,gBAAgBzyD,KAAI5F,MAAAA,KACpBw3D,UAEPhV,EAAK9B,YAAYzE,EAAKj8C,KAAQm4D,cAAan4D,KAAO63D,kBAC7CC,WAAanc,GACX,OAGJ2b,aAAerb,MAEd0c,EAAWxsD,KAAKiE,IAAGpQ,KAAMw3D,UAAY7b,EAAG37C,KAAQ83D,YAAa,UAEnE1oB,aAAYpvC,KAAM+3D,iBACbA,WAAa1oB,WAAUrvC,KACrB44D,iBAAiBhzD,KAAI5F,KAAO00B,GACjCikC,IAGK,GAOTtB,EAAAj3D,UAAAw4D,iBAAgB,SAAClkC,OACT8tB,EAAO9tB,EAAImyB,UACbrE,EAAKpH,gBACPoH,EAAKnG,uBAEHJ,GACD9mC,GAAKnV,KACCs3D,aAAWt3D,KACV2rB,UAAS3rB,KAAQm4D,cAAan4D,KAC/B2rB,UAAS3rB,KAAQm4D,eAAan4D,KAC5Bm4D,eACP3V,EAAK9E,0BAAsB19C,KAAW43D,wBAExC3b,EAAQA,EAASA,EAAQ,EAAI,GAAI,EAAM,GAEzCiT,GAAAC,YAAY3M,EAAMvG,EAAKj8C,KAAO63D,YAAW73D,KAAO+sD,gBAE3CiL,WAAQ9yD,OACRoyD,YAAc,OACdO,YAAc,UACdC,gBAAa5yD,OACb6yD,gBAAa7yD,GASpBmyD,EAAAj3D,UAAAy4D,eAAc,SAAClB,QACRD,WAAaC,EACbA,IAAS33D,KACP63D,YAAc,OAGzBR,EA3PA,CAA6BnI,GAAAnoD,ghBCuH7B+xD,GA1IA,SAAAr1D,GAGK,SACHs1D,EAAYt2C,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAyB,GAEnCu2C,EAAgE/lD,SAEjE+lD,EAAerJ,WAClBqJ,EAAerJ,SAAWvtD,IAG5BwB,EAAAH,EAAAI,KAAA7D,KAAMg5D,IAAch5D,MAMfi5D,QAAU,KAMfr1D,EAAKkvD,gBAAa5tD,EAMlBtB,EAAKs1D,WAAY,EAMjBt1D,EAAKu1D,eAAiB,EAMtBv1D,EAAKw1D,gBAAmCl0D,IAAtB+N,EAAQomD,UAA0BpmD,EAAQomD,UAAY,GAMxEz1D,EAAKmpD,eAAiC7nD,IAArB+N,EAAQ6oC,SAAyB7oC,EAAQ6oC,SAAW,aAjD/Cwd,GAAAP,EAAAt1D,GAwDxBs1D,EAAA34D,UAAAovD,gBAAe,SAAC9H,OACV6R,EAAgB,EAEdC,EAAMx5D,KAAQ8vD,eAAe,GAC7B2J,EAAMz5D,KAAQ8vD,eAAe,GAG7BziD,EAAQlB,KAAK4M,MACjB0gD,EAAOppB,QAAUmpB,EAAOnpB,QACxBopB,EAAOrpB,QAAUopB,EAAOppB,iBAGFlrC,SAAf4tD,WAAwB,KACzB7W,EAAQ5uC,EAAKrN,KAAQ8yD,gBACtBqG,gBAAkBld,QACbid,WAAa/sD,KAAKkjB,IAAGrvB,KAAMm5D,gBAAcn5D,KAASo5D,aAAUp5D,KAC/Dk5D,WAAY,GAEnBK,EAAgBtd,OAEb6W,WAAazlD,MAEZqnB,EAAMgzB,EAAgBhzB,IACtB8tB,EAAO9tB,EAAImyB,aACbrE,EAAK/E,iBAAiBzsC,WAAa4kC,QAOjC0Q,EAAmB5xB,EAAIwT,cAAcqe,wBACrC+L,EAAWC,GAAAD,SAAoBtyD,KAAM8vD,gBAC3CwC,EAAS,IAAMhM,EAAiBhgB,KAChCgsB,EAAS,IAAMhM,EAAiBI,SAC3BuS,QAAUvkC,EAAIuxB,+BAA+BqM,QAGzC4G,YACPxkC,EAAIyH,SACJqmB,EAAK5B,uBAAuB2Y,EAAav5D,KAAOi5D,YASpDF,EAAA34D,UAAAsvD,cAAa,SAAChI,gBACHoI,eAAe1uD,OAAS,KACnBsmD,EAAgBhzB,IACXmyB,UACZxF,eAAcrhD,KAAM+sD,YAClB,IAWXgM,EAAA34D,UAAAmvD,gBAAe,SAAC7H,WACLoI,eAAe1uD,QAAU,EAAC,KAC3BszB,EAAMgzB,EAAgBhzB,gBACvBukC,QAAU,UACVnG,gBAAa5tD,OACbg0D,WAAY,OACZC,eAAiB,OACZvJ,wBACRl7B,EAAImyB,UAAUzF,oBAET,SAEA,GAGb2X,EAxIA,CAA0BxG,GAAAxrD,ghBCkH1B2yD,GArHA,SAAAj2D,GAGK,SACHk2D,EAAYl3C,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAyB,GAEnCu2C,EAAgE/lD,SAEjE+lD,EAAerJ,WAClBqJ,EAAerJ,SAAWvtD,IAG5BwB,EAAAH,EAAAI,KAAA7D,KAAMg5D,IAAch5D,MAMfi5D,QAAU,KAMfr1D,EAAKmpD,eAAiC7nD,IAArB+N,EAAQ6oC,SAAyB7oC,EAAQ6oC,SAAW,IAMrEl4C,EAAKg2D,mBAAgB10D,EAMrBtB,EAAKi2D,gBAAkB,WArCHC,GAAAH,EAAAl2D,GA4CtBk2D,EAAAv5D,UAAAovD,gBAAe,SAAC9H,OACVqS,EAAa,EAEXP,EAAMx5D,KAAQ8vD,eAAe,GAC7B2J,EAAMz5D,KAAQ8vD,eAAe,GAC7BphD,EAAK8qD,EAAOppB,QAAUqpB,EAAOrpB,QAC7BzhC,EAAK6qD,EAAOnpB,QAAUopB,EAAOppB,QAG7B/3B,EAAWnM,KAAK4N,KAAKrL,EAAKA,EAAKC,EAAKA,QAEfzJ,SAAlB00D,gBACPG,EAAU/5D,KAAQ45D,cAAgBthD,QAE/BshD,cAAgBthD,MAEfoc,EAAMgzB,EAAgBhzB,IACtB8tB,EAAO9tB,EAAImyB,UAEC,GAAdkT,IAAiB/5D,KACd65D,gBAAkBE,OAInBzT,EAAmB5xB,EAAIwT,cAAcqe,wBACrC+L,EAAWC,GAAAD,SAAoBtyD,KAAM8vD,gBAC3CwC,EAAS,IAAMhM,EAAiBhgB,KAChCgsB,EAAS,IAAMhM,EAAiBI,SAC3BuS,QAAUvkC,EAAIuxB,+BAA+BqM,GAGlD59B,EAAIyH,SACJqmB,EAAKjC,yBAAyBwZ,EAAU/5D,KAAOi5D,UAQjDU,EAAAv5D,UAAAsvD,cAAa,SAAChI,WACHoI,eAAe1uD,OAAS,EAAC,KAE1BohD,EADMkF,EAAgBhzB,IACXmyB,UACX3lD,EAASlB,KAAQ65D,gBAAkB,EAAI,GAAI,SACjDrX,EAAKnB,eAAcrhD,KAAM+sD,UAAW7rD,IAC7B,SAEA,GASXy4D,EAAAv5D,UAAAmvD,gBAAe,SAAC7H,WACLoI,eAAe1uD,QAAU,EAAC,KAC3BszB,EAAMgzB,EAAgBhzB,gBACvBukC,QAAU,UACVW,mBAAgB10D,OAChB20D,gBAAkB,OACbjK,wBACRl7B,EAAImyB,UAAUzF,oBAET,SAEA,GAGbuY,EAnHA,CAAwBpH,GAAAxrD,ueC4DxBizD,GAvBA,SAAAv2D,GAGK,SACHw2D,EAAYhnD,UACVA,EAAU3Q,EAAM,GAAK2Q,IACRkvC,WACXlvC,EAAQkvC,kBCdW1/B,OACjBxP,EAAUwP,GAAyB,GAEnC0/B,EAAQ,IAAO7W,GAAAvkC,oBAEgB7B,IAAjB+N,EAAQ0oB,MAAqB1oB,EAAQ0oB,OAEvDwmB,EAAS7+C,KAAI,IAAK42D,GAAAnzD,QAAKkM,EAAQknD,oBAGQj1D,IAAnB+N,EAAQ4M,QAAuB5M,EAAQ4M,SAE3DsiC,EAAS7+C,KAAI,IAAK82D,GAAArzD,QAAOkM,EAAQonD,sBAITn1D,IAAxB+N,EAAQqnD,aAA4BrnD,EAAQqnD,cAE5CnY,EAAS7+C,KAAI,IAAKi3D,GAAAxzD,QAAYkM,EAAQunD,qBAGjCrY,EDPgBsY,IAEhBxnD,EAAQmvC,eACXnvC,EAAQmvC,sBEiBW3/B,OACjBxP,EAAUwP,GAAyB,GAEnC2/B,EAAY,IAAO9W,GAAAvkC,QAEnB8qD,EAAO,IAAOuE,IAAQ,KAAQ,IAAM,iBAGTlxD,IAA/B+N,EAAQynD,oBACJznD,EAAQynD,qBAGZtY,EAAa9+C,KAAI,IAAKq3D,GAAA5zD,eAIM7B,IAA5B+N,EAAQ2nD,iBAAgC3nD,EAAQ2nD,kBAEhDxY,EAAa9+C,KAAI,IACXu3D,GAAA9zD,QAAe,CACjBk1C,MAAOhpC,EAAQ6nD,UACfhf,SAAU7oC,EAAQ8nD,sBAKY71D,IAApB+N,EAAQ+nD,SAAwB/nD,EAAQ+nD,UAEtD5Y,EAAa9+C,KAAI,IACX23D,GAAAl0D,QAAO,CACTorD,YAAal/C,EAAQk/C,YACrBN,QAASA,WAMW3sD,IAAxB+N,EAAQioD,aAA4BjoD,EAAQioD,cAE5C9Y,EAAa9+C,KAAI,IAAK63D,GAAAp0D,eAGgB7B,IAAtB+N,EAAQmoD,WAA0BnoD,EAAQmoD,YAE1DhZ,EAAa9+C,KAAI,IACX+3D,GAAAt0D,QAAS,CACX+0C,SAAU7oC,EAAQ8nD,sBAKc71D,IAArB+N,EAAQqoD,UAAyBroD,EAAQqoD,YAExDlZ,EAAa9+C,KAAI,IAAKi4D,GAAAx0D,SACtBq7C,EAAa9+C,KAAI,IACXk4D,GAAAz0D,QAAY,CACdk1C,MAAOhpC,EAAQ6nD,UACfhf,SAAU7oC,EAAQ8nD,uBAMK71D,IAA3B+N,EAAQwoD,gBAA+BxoD,EAAQwoD,iBAE/CrZ,EAAa9+C,KAAI,IACXo4D,GAAA30D,QAAc,CAChBorD,YAAal/C,EAAQk/C,YACrBrW,SAAU7oC,EAAQ8nD,sBAMI71D,IAA1B+N,EAAQ0oD,eAA8B1oD,EAAQ0oD,gBAE9CvZ,EAAa9+C,KAAI,IACXs4D,GAAA70D,QAAQ,CACV+0C,SAAU7oC,EAAQ8nD,gBAKjB3Y,EFpGoByZ,CAAmB,CACxC1J,aAAa,KAIjB1uD,EAAAI,KAAA7D,KAAMiT,IAAOjT,YAfC87D,GAAA7B,EAAAx2D,GAkBhBw2D,EAAA75D,UAAAq9B,eAAc,sBACDs+B,GAAAh1D,QAAoB/G,OAEnCi6D,EArBA,CAAkB+B,GAAAj1D,mGGxDR0O,GAAEpU,SAAFoU,GAAoJwmD,GAAlJ56D,GAAsJ,iCAAkCoU,EAAEymD,EAAElmD,EAAEtJ,EAAE5L,EAAEomC,aAAai1B,EAAEh7D,EAAEi7D,EAAEC,EAAEC,EAAEC,QAAQD,EAAED,GAAC,IAAMC,EAAED,EAAE,IAAG,KAAMnzC,EAAEozC,EAAED,EAAE,EAAEhlC,EAAE+kC,EAAEC,EAAE,EAAExpD,EAAE1G,KAAKoK,IAAI2S,GAAGvc,EAAE,GAAGR,KAAKmJ,IAAI,EAAEzC,EAAE,GAAG2pD,EAAE,GAAGrwD,KAAK4N,KAAKlH,EAAElG,GAAGuc,EAAEvc,GAAGuc,IAAImO,EAAEnO,EAAE,EAAE,GAAE,EAAG,GAA+EizC,EAAEh7D,EAAEi7D,EAA9EjwD,KAAKiE,IAAIisD,EAAElwD,KAAKsO,MAAM2hD,EAAE/kC,EAAE1qB,EAAEuc,EAAEszC,IAAMrwD,KAAKgE,IAAImsD,EAAEnwD,KAAKsO,MAAM2hD,GAAGlzC,EAAEmO,GAAG1qB,EAAEuc,EAAEszC,IAAcD,OAAOE,EAAEt7D,EAAEi7D,GAAG3vD,EAAE4vD,EAAEvvD,EAAEwvD,MAAMj7D,EAAEF,EAAEk7D,EAAED,GAAGG,EAAEp7D,EAAEm7D,GAAGG,GAAG,GAAGp7D,EAAEF,EAAEk7D,EAAEC,GAAG7vD,EAAEK,GAAC,KAAOzL,EAAEF,EAAEsL,EAAEK,GAAGL,IAAIK,IAAIyvD,EAAEp7D,EAAEsL,GAAGgwD,GAAG,GAAGhwD,SAAS8vD,EAAEp7D,EAAE2L,GAAG2vD,GAAG,GAAG3vD,IAAI,IAAIyvD,EAAEp7D,EAAEk7D,GAAGI,GAAGp7D,EAAEF,EAAEk7D,EAAEvvD,GAAGzL,EAAEF,IAAI2L,EAAEwvD,GAAGxvD,GAAGsvD,IAAIC,EAAEvvD,EAAE,GAAGsvD,GAAGtvD,IAAIwvD,EAAExvD,EAAE,KAAKovD,EAAElmD,EAAEtJ,GAAG,EAAE5L,GAAGo7D,EAAE96D,OAAO,EAAE8lC,GAAG/lC,YAAYE,EAAE66D,EAAE38B,EAAEp+B,OAAO6U,EAAEkmD,EAAE38B,GAAG28B,EAAE38B,GAAG28B,EAAE/6D,GAAG+6D,EAAE/6D,GAAG6U,WAAW7U,EAAE+6D,EAAE38B,UAAU28B,EAAE38B,GAAE,EAAG28B,EAAE38B,EAAE,EAAE,MAAMvpB,EAAC,SAAUkmD,YAAYA,IAAIA,EAAE,GAACl8D,KAAO08D,YAAYvwD,KAAKiE,IAAI,EAAE8rD,GAACl8D,KAAO28D,YAAYxwD,KAAKiE,IAAI,EAAEjE,KAAKqrC,KAAK,GAAEx3C,KAAM08D,cAAW18D,KAAQo4B,kBAAkB1rB,EAAEwvD,EAAE38B,EAAEq9B,OAAOA,EAAC,OAAQr9B,EAAEh7B,QAAQ23D,WAAWE,EAAE,EAAEA,EAAE78B,EAAEn+B,OAAOg7D,IAAC,GAAMQ,EAAEV,EAAE38B,EAAE68B,IAAC,OAAUA,SAAQ,WAAYt7D,EAAEo7D,EAAE38B,GAAG2H,EAAEg1B,EAAE,EAAEA,EAAEnzB,SAAS3nC,OAAOm+B,EAAE28B,YAAYh1B,EAAEg1B,EAAE38B,EAAEq9B,EAAER,EAAEC,GAAGA,IAAIA,EAAEI,EAAE,OAAOJ,EAAEntD,KAAK,EAAA,EAAImtD,EAAEltD,KAAK,EAAA,EAAIktD,EAAEjtD,MAAK,EAAA,EAAKitD,EAAEhtD,MAAK,EAAA,UAAaitD,EAAE/8B,EAAE+8B,EAAEM,EAAEN,IAAC,KAAQC,EAAEL,EAAEnzB,SAASuzB,GAAGpzC,EAAEmzC,EAAEH,EAAEW,KAAKT,EAAEG,GAAGA,UAAUF,WAAWnzC,EAAEgzC,EAAE38B,UAAU28B,EAAEhtD,KAAK/C,KAAKgE,IAAI+rD,EAAEhtD,KAAKqwB,EAAErwB,MAAMgtD,EAAE/sD,KAAKhD,KAAKgE,IAAI+rD,EAAE/sD,KAAKowB,EAAEpwB,MAAM+sD,EAAE9sD,KAAKjD,KAAKiE,IAAI8rD,EAAE9sD,KAAKmwB,EAAEnwB,MAAM8sD,EAAE7sD,KAAKlD,KAAKiE,IAAI8rD,EAAE7sD,KAAKkwB,EAAElwB,MAAM6sD,WAAW7kC,EAAE6kC,EAAE38B,UAAU28B,EAAEhtD,KAAKqwB,EAAErwB,cAAc2D,EAAEqpD,EAAE38B,UAAU28B,EAAE/sD,KAAKowB,EAAEpwB,cAAcxC,EAAEuvD,UAAUA,EAAE9sD,KAAK8sD,EAAEhtD,OAAOgtD,EAAE7sD,KAAK6sD,EAAE/sD,eAAeqtD,EAAEN,UAAUA,EAAE9sD,KAAK8sD,EAAEhtD,MAAMgtD,EAAE7sD,KAAK6sD,EAAE/sD,eAAe2tD,EAAEZ,EAAE38B,UAAU28B,EAAEhtD,MAAMqwB,EAAErwB,MAAMgtD,EAAE/sD,MAAMowB,EAAEpwB,MAAMowB,EAAEnwB,MAAM8sD,EAAE9sD,MAAMmwB,EAAElwB,MAAM6sD,EAAE7sD,cAAc0tD,EAAEb,EAAE38B,UAAUA,EAAErwB,MAAMgtD,EAAE9sD,MAAMmwB,EAAEpwB,MAAM+sD,EAAE7sD,MAAMkwB,EAAEnwB,MAAM8sD,EAAEhtD,MAAMqwB,EAAElwB,MAAM6sD,EAAE/sD,cAAcstD,EAAEP,UAAUnzB,SAASmzB,EAAExpD,OAAO,EAAEmqD,MAAI,EAAI3tD,KAAK,EAAA,EAAIC,KAAK,EAAA,EAAIC,MAAK,EAAA,EAAKC,MAAK,EAAA,YAAe5C,EAAE8yB,EAAEq9B,EAAER,EAAEC,EAAEC,WAAWU,EAAC,CAAEJ,EAAER,GAAGY,EAAE57D,QAAM,MAAQg7D,EAAEY,EAAEr1C,QAAQi1C,EAAEI,EAAEr1C,QAAQ00C,GAAC,KAAOY,EAAEL,EAAEzwD,KAAKqrC,MAAM4kB,EAAEQ,GAAGP,EAAE,GAAGA,EAAE5mD,EAAE8pB,EAAE09B,EAAEL,EAAER,EAAEE,GAAGU,EAAE15D,KAAKs5D,EAAEK,EAAEA,EAAEb,WAAWpmD,EAAE5V,UAAU88D,IAAG,uBAAwBC,KAAIn9D,KAAM2B,KAAI,KAAMqU,EAAE5V,UAAUg9D,OAAM,SAAUlB,OAAO38B,EAACv/B,KAAM2B,KAAKi7D,EAAC,OAAQG,EAAEb,EAAE38B,GAAC,OAASq9B,UAAUR,EAACp8D,KAAMq9D,OAAOhB,EAAC,GAAI98B,GAAC,SAAW+8B,EAAE,EAAEA,EAAE/8B,EAAEwJ,SAAS3nC,OAAOk7D,IAAC,KAAQU,EAAEz9B,EAAEwJ,SAASuzB,GAAGgB,EAAE/9B,EAAEs9B,KAAKT,EAAEY,GAAGA,EAAED,EAAEb,EAAEoB,KAAK/9B,EAAEs9B,KAAKD,EAAEt5D,KAAK05D,GAAGF,EAAEZ,EAAEoB,GAACt9D,KAAOm9D,KAAKH,EAAEJ,GAAGP,EAAE/4D,KAAK05D,IAAIz9B,EAAE88B,EAAE10C,aAAai1C,GAAG5mD,EAAE5V,UAAUm9D,SAAQ,SAAUrB,OAAO38B,EAACv/B,KAAM2B,SAASo7D,EAAEb,EAAE38B,GAAC,OAAA,UAAmBq9B,EAAC,GAAIr9B,GAAC,SAAW68B,EAAE,EAAEA,EAAE78B,EAAEwJ,SAAS3nC,OAAOg7D,IAAC,KAAQC,EAAE98B,EAAEwJ,SAASqzB,GAAGoB,EAAEj+B,EAAEs9B,KAAI78D,KAAMq9D,OAAOhB,GAAGA,KAAKU,EAAEb,EAAEsB,GAAC,IAAMj+B,EAAEs9B,MAAMC,EAAEZ,EAAEsB,GAAC,OAAA,EAAWZ,EAAEt5D,KAAK+4D,IAAI98B,EAAEq9B,EAAEj1C,gBAAgB3R,EAAE5V,UAAUyzC,KAAI,SAAUqoB,OAAOA,IAAIA,EAAE96D,OAAM,OAAApB,QAAgBk8D,EAAE96D,OAAMpB,KAAM28D,YAAW,SAAUp9B,EAAE,EAAEA,EAAE28B,EAAE96D,OAAOm+B,IAACv/B,KAAQy9D,OAAOvB,EAAE38B,oBAAoBq9B,EAAC58D,KAAM09D,OAAOxB,EAAE1tD,QAAQ,EAAE0tD,EAAE96D,OAAO,EAAE,WAAWO,KAAKonC,SAAS3nC,eAAeO,KAAK+Q,SAASkqD,EAAElqD,OAAM1S,KAAM29D,WAAU39D,KAAM2B,KAAKi7D,gBAAgBj7D,KAAK+Q,OAAOkqD,EAAElqD,OAAM,KAAMkrD,EAAC59D,KAAM2B,UAAUA,KAAKi7D,EAAEA,EAAEgB,OAAOC,QAAQjB,EAAC58D,KAAM2B,KAAK+Q,OAAOkqD,EAAElqD,OAAO,GAAC,aAAe/Q,KAAKi7D,eAAe5mD,EAAE5V,UAAUq9D,OAAM,SAAUvB,UAAUA,GAACl8D,KAAO69D,QAAQ3B,EAACl8D,KAAM2B,KAAK+Q,OAAO,GAAC1S,MAAQgW,EAAE5V,UAAUg4B,MAAK,uBAAwBz2B,KAAK86D,EAAC,IAAAz8D,MAAWgW,EAAE5V,UAAUuqC,OAAM,SAAUuxB,EAAE4B,OAAO5B,EAAC,OAAAl8D,aAAqB48D,EAAEmB,EAAEC,EAAEC,EAACj+D,KAAM2B,KAAKu8D,EAACl+D,KAAMq9D,OAAOnB,GAAGiC,EAAC,GAAIC,EAAC,GAAIH,GAAGE,EAAE/8D,QAAM,IAAM68D,IAAIA,EAAEE,EAAEx2C,MAAMo2C,EAAEI,EAAEA,EAAE/8D,OAAO,GAAGw7D,EAAEwB,EAAEz2C,MAAMq2C,GAAC,GAAKC,EAAEpB,KAAI,KAAMwB,EAAE3xD,EAAEwvD,EAAE+B,EAAEl1B,SAAS+0B,OAAM,IAAKO,EAAC,OAAQJ,EAAEl1B,SAASxjC,OAAO84D,EAAE,GAAGF,EAAE76D,KAAK26D,GAACj+D,KAAOs+D,UAAUH,GAACn+D,KAAOg+D,GAAGC,EAAEpB,OAAOC,EAAEmB,EAAEC,GAAGH,GAAGnB,IAAIqB,EAAEF,EAAEh1B,SAAS6zB,GAAGoB,GAAC,GAAKC,EAAE,MAAME,EAAE76D,KAAK26D,GAAGG,EAAE96D,KAAKs5D,GAAGA,EAAE,EAAEmB,EAAEE,EAAEA,EAAEA,EAAEl1B,SAAS,iBAAiB/yB,EAAE5V,UAAUi9D,OAAM,SAAUnB,UAAUA,GAAGlmD,EAAE5V,UAAUm+D,YAAW,SAAUrC,EAAE4B,UAAU5B,EAAEhtD,KAAK4uD,EAAE5uD,MAAM8G,EAAE5V,UAAUo+D,YAAW,SAAUtC,EAAE4B,UAAU5B,EAAE/sD,KAAK2uD,EAAE3uD,MAAM6G,EAAE5V,UAAUq+D,OAAM,uBAAwB98D,MAAMqU,EAAE5V,UAAUs+D,SAAQ,SAAUxC,eAAev6D,KAAKu6D,EAACl8D,MAAOgW,EAAE5V,UAAU+8D,KAAI,SAAUjB,EAAE4B,WAAWlB,EAAC,GAAIV,GAAGA,EAAEW,KAAKiB,EAAEx6D,KAAKwC,MAAMg4D,EAAE5B,EAAEnzB,UAAU6zB,EAAEt5D,KAAKwC,MAAM82D,EAAEV,EAAEnzB,UAAUmzB,EAAEU,EAAEj1C,aAAam2C,GAAG9nD,EAAE5V,UAAUs9D,OAAM,SAAUxB,EAAE4B,EAAElB,EAAEmB,OAAOY,EAAEV,EAAErB,EAAEkB,EAAE,EAAEI,EAACl+D,KAAM08D,eAAeuB,GAAGC,EAAC,OAAQp9D,EAAE69D,EAAElC,EAAEP,EAAE1tD,MAAMsvD,EAAElB,EAAE,IAAC58D,KAAQq9D,QAAQsB,EAAEZ,IAAIA,EAAE5xD,KAAKqrC,KAAKrrC,KAAKoK,IAAI0nD,GAAG9xD,KAAKoK,IAAI2nD,IAAIA,EAAE/xD,KAAKqrC,KAAKymB,EAAE9xD,KAAKuX,IAAIw6C,EAAEH,EAAE,MAAMY,EAAElC,EAAC,KAAMI,MAAI,EAAI8B,EAAEjsD,OAAOqrD,MAAMI,EAAEhyD,KAAKqrC,KAAKymB,EAAEC,GAAGE,EAAED,EAAEhyD,KAAKqrC,KAAKrrC,KAAK4N,KAAKmkD,IAAIzxD,EAAEyvD,EAAE4B,EAAElB,EAAEwB,EAACp+D,KAAMu+D,qBAAqBK,EAAEd,EAAEc,GAAGhC,EAAEgC,GAAGR,EAAC,KAAMS,EAAE1yD,KAAKgE,IAAIyuD,EAAER,EAAE,EAAExB,GAAGnwD,EAAEyvD,EAAE0C,EAAEC,EAAEV,EAACn+D,KAAMw+D,qBAAqBM,EAAEF,EAAEE,GAAGD,EAAEC,GAAGX,EAAC,KAAM9lD,EAAElM,KAAKgE,IAAI2uD,EAAEX,EAAE,EAAEU,GAAGF,EAAE51B,SAASzlC,KAAItD,KAAM09D,OAAOxB,EAAE4C,EAAEzmD,EAAE0lD,EAAE,YAAYj9D,EAAE69D,EAAC3+D,KAAMq9D,QAAQsB,GAAG3oD,EAAE5V,UAAU2+D,eAAc,SAAU7C,EAAE4B,EAAElB,EAAEmB,QAAQA,EAAEz6D,KAAKw6D,IAAIA,EAAEjB,MAAMkB,EAAE38D,OAAO,IAAIw7D,GAAC,SAAW+B,EAAE,EAAA,EAAIX,EAAE,EAAA,EAAIC,OAAC,EAAQC,EAAE,EAAEA,EAAEJ,EAAE/0B,SAAS3nC,OAAO88D,IAAC,KAAQC,EAAEL,EAAE/0B,SAASm1B,GAAGE,EAAEzxD,EAAEwxD,GAAGa,GAAGC,EAAE/C,EAAEgD,EAAEf,GAAGhyD,KAAKiE,IAAI8uD,EAAE9vD,KAAK6vD,EAAE7vD,MAAMjD,KAAKgE,IAAI+uD,EAAEhwD,KAAK+vD,EAAE/vD,QAAQ/C,KAAKiE,IAAI8uD,EAAE7vD,KAAK4vD,EAAE5vD,MAAMlD,KAAKgE,IAAI+uD,EAAE/vD,KAAK8vD,EAAE9vD,OAAOivD,GAAGY,EAAEhB,GAAGA,EAAEgB,EAAEL,EAAEP,EAAEO,EAAEP,EAAEO,EAAEV,EAAEE,GAAGa,IAAIhB,GAAGI,EAAEO,IAAIA,EAAEP,EAAEH,EAAEE,GAAGL,EAAEG,GAAGH,EAAE/0B,SAAS,OAAOk2B,EAAEC,SAASpB,GAAG9nD,EAAE5V,UAAUy9D,QAAO,SAAU3B,EAAE4B,EAAElB,OAAOmB,EAAEnB,EAAEV,EAACl8D,KAAMq9D,OAAOnB,GAAGiD,EAAC,GAAIC,EAACp/D,KAAM++D,eAAehB,EAAC/9D,KAAM2B,KAAKm8D,EAAEqB,OAAOC,EAAEr2B,SAASzlC,KAAK44D,GAAGhzC,EAAEk2C,EAAErB,GAAGD,GAAG,GAAGqB,EAAErB,GAAG/0B,SAAS3nC,OAAMpB,KAAM08D,aAAW18D,KAAOq/D,OAAOF,EAAErB,GAAGA,SAASwB,oBAAoBvB,EAAEoB,EAAErB,IAAI9nD,EAAE5V,UAAUi/D,OAAM,SAAUnD,EAAE4B,OAAOlB,EAAEV,EAAE4B,GAAGC,EAAEnB,EAAE7zB,SAAS3nC,OAAO+9D,EAACn/D,KAAM28D,iBAAiB4C,iBAAiB3C,EAAEuC,EAAEpB,OAAOyB,EAACx/D,KAAMy/D,kBAAkB7C,EAAEuC,EAAEpB,GAAG2B,EAAEjD,EAAEG,EAAE7zB,SAASxjC,OAAOi6D,EAAE5C,EAAE7zB,SAAS3nC,OAAOo+D,IAAIE,EAAEhtD,OAAOkqD,EAAElqD,OAAOgtD,EAAE7C,KAAKD,EAAEC,KAAK/7D,EAAE87D,EAAC58D,KAAMq9D,QAAQv8D,EAAE4+D,EAAC1/D,KAAMq9D,QAAQS,EAAE5B,EAAE4B,EAAE,GAAG/0B,SAASzlC,KAAKo8D,GAAC1/D,KAAO29D,WAAWf,EAAE8C,IAAI1pD,EAAE5V,UAAUu9D,WAAU,SAAUzB,EAAE4B,QAAQn8D,KAAK86D,EAAC,CAAEP,EAAE4B,SAASn8D,KAAK+Q,OAAOwpD,EAAExpD,OAAO,EAAC1S,KAAM2B,KAAKk7D,MAAI,EAAI/7D,EAACd,KAAM2B,KAAI3B,KAAMq9D,SAASrnD,EAAE5V,UAAUq/D,kBAAiB,SAAUvD,EAAE4B,EAAElB,WAAWmB,EAAEoB,EAAEC,EAAEM,EAAEC,EAAEC,EAAEC,EAAEZ,EAAE,EAAA,EAAIC,EAAE,EAAA,EAAIY,EAAEhC,EAAEgC,GAAGlD,EAAEkB,EAAEgC,IAAC,KAAQC,EAAE74B,EAAEg1B,EAAE,EAAE4D,EAAC9/D,KAAMq9D,QAAQvwD,EAAEo6B,EAAEg1B,EAAE4D,EAAElD,EAAC58D,KAAMq9D,QAAQ2C,GAAGb,EAAEY,EAAEX,EAAEtyD,EAAsC4yD,EAAEvzD,KAAKiE,IAAI+uD,EAAEjwD,KAAKkwD,EAAElwD,MAAMywD,EAAExzD,KAAKiE,IAAI+uD,EAAEhwD,KAAKiwD,EAAEjwD,MAAMywD,EAAEzzD,KAAKgE,IAAIgvD,EAAE/vD,KAAKgwD,EAAEhwD,MAAMywD,EAAE1zD,KAAKgE,IAAIgvD,EAAE9vD,KAAK+vD,EAAE/vD,MAAMlD,KAAKiE,IAAI,EAAEwvD,EAAEF,GAAGvzD,KAAKiE,IAAI,EAAEyvD,EAAEF,IAAIM,EAAEtzD,EAAEozD,GAAGpzD,EAAEG,GAAGkzD,EAAEf,GAAGA,EAAEe,EAAEjC,EAAE+B,EAAEZ,EAAEe,EAAEf,EAAEe,EAAEf,GAAGc,IAAIf,GAAGgB,EAAEf,IAAIA,EAAEe,EAAElC,EAAE+B,UAAU/B,GAAGnB,EAAEkB,GAAG9nD,EAAE5V,UAAUm/D,iBAAgB,SAAUrD,EAAE4B,EAAElB,OAAOmB,EAAE7B,EAAEW,KAAI78D,KAAMu+D,YAAYlnC,EAAE8nC,EAAEjD,EAAEW,KAAI78D,KAAMw+D,YAAY3rD,OAAOqtD,eAAehE,EAAE4B,EAAElB,EAAEmB,GAAC/9D,KAAOkgE,eAAehE,EAAE4B,EAAElB,EAAEuC,IAAIjD,EAAEnzB,SAAS5Z,KAAK4uC,IAAI/nD,EAAE5V,UAAU8/D,eAAc,SAAUhE,EAAE4B,EAAElB,EAAEmB,GAAG7B,EAAEnzB,SAAS5Z,KAAK4uC,WAAWoB,EAACn/D,KAAMq9D,OAAO+B,EAAEl4B,EAAEg1B,EAAE,EAAE4B,EAAEqB,GAAGQ,EAAEz4B,EAAEg1B,EAAEU,EAAEkB,EAAElB,EAAEuC,GAAGS,EAAEpD,EAAE4C,GAAG5C,EAAEmD,GAAGf,EAAEd,EAAEc,EAAEhC,EAAEkB,EAAEc,IAAC,KAAQK,EAAE/C,EAAEnzB,SAAS61B,GAAG11C,EAAEk2C,EAAElD,EAAEW,KAAKsC,EAAEF,GAAGA,GAAGW,GAAGpD,EAAE4C,WAAWF,EAAEtC,EAAEkB,EAAE,EAAEoB,GAAGpB,EAAEoB,IAAC,KAAQY,EAAE5D,EAAEnzB,SAASm2B,GAAGh2C,EAAEy2C,EAAEzD,EAAEW,KAAKsC,EAAEW,GAAGA,GAAGF,GAAGpD,EAAEmD,UAAUC,GAAG5pD,EAAE5V,UAAUk/D,oBAAmB,SAAUpD,EAAE4B,EAAElB,WAAWmB,EAAEnB,EAAEmB,GAAG,EAAEA,IAAI70C,EAAE40C,EAAEC,GAAG7B,IAAIlmD,EAAE5V,UAAUk+D,UAAS,SAAUpC,WAAW4B,EAAE5B,EAAE96D,OAAO,EAAEw7D,OAAC,EAAQkB,GAAG,EAAEA,IAAI,IAAI5B,EAAE4B,GAAG/0B,SAAS3nC,OAAO08D,EAAE,GAAGlB,EAAEV,EAAE4B,EAAE,GAAG/0B,UAAUxjC,OAAOq3D,EAAEr4D,QAAQ23D,EAAE4B,IAAI,GAAC99D,KAAOo4B,QAAQt3B,EAAEo7D,EAAE4B,GAAC99D,KAAOq9D,SAASrnD,oBAA3xMimD,GAAoCA,GAAe56D,KAAC,mBAAsB8+D,QAAQA,OAAOC,IAAID,OAAO9+D,KAAIoU,GAAEA,IAAGusB,MAAMq+B,MAAMh/D,mGCOzJi/D,GACQ,EADRA,GAEW,EAFXA,GAGU,EAHVA,GAIS,EC2QTC,GA/PA,WAGK,SACHC,EAAYvtD,GAIPjT,KACEygE,SAAWxtD,EAAQgmB,QAKrBj5B,KACE0gE,gBAAkBztD,EAAQ0tD,eAK5B3gE,KACEktD,UAAYj6C,EAAQjC,SAKtBhR,KACE4gE,OAAS3tD,EAAQ6M,MAKnB9f,KACE6gE,YAAchf,GAAO5uC,EAAQ6M,OAK/B9f,KACE8gE,cAAgB7tD,EAAQ8tD,oBAQ/BP,EAAApgE,UAAA0K,MAAK,eACGgV,EAAK9f,KAAQghE,sBACRR,EAAU,CACnBvnC,QAAOj5B,KAAOk6B,aACdpa,MAAOje,MAAMC,QAAQge,GAASA,EAAMtR,QAAUsR,EAC9C9O,SAAQhR,KAAOg7C,cACf2lB,eAAc3gE,KAAOihE,oBACrBF,aAAY/gE,KAAOkhE,kBAAkB1yD,WASzCgyD,EAAApgE,UAAA85B,WAAU,uBACIumC,UAQdD,EAAApgE,UAAA6gE,kBAAiB,uBACHP,iBAQdF,EAAApgE,UAAA46C,YAAW,uBACGkS,WAQdsT,EAAApgE,UAAA4gE,SAAQ,uBACMJ,QAOdJ,EAAApgE,UAAA+gE,cAAa,uBACCN,aAQdL,EAAApgE,UAAA8gE,gBAAe,uBACDJ,eASdN,EAAApgE,UAAAghE,UAAS,kBACAp6D,KASTw5D,EAAApgE,UAAAihE,SAAQ,SAACre,UACAh8C,KAOTw5D,EAAApgE,UAAAkhE,qBAAoB,kBACXt6D,KAQTw5D,EAAApgE,UAAAmhE,cAAa,SAACve,UACL,GAOTwd,EAAApgE,UAAAohE,cAAa,kBACJx6D,KAOTw5D,EAAApgE,UAAAqhE,aAAY,kBACHz6D,KAOTw5D,EAAApgE,UAAAshE,yBAAwB,kBACf16D,KAQTw5D,EAAApgE,UAAAuhE,UAAS,kBACA36D,KAQTw5D,EAAApgE,UAAAgnD,QAAO,kBACEpgD,KASTw5D,EAAApgE,UAAA86B,WAAU,SAACjC,QACJwnC,SAAWxnC,GASlBunC,EAAApgE,UAAAwhE,kBAAiB,SAACjB,QACXD,gBAAkBC,GASzBH,EAAApgE,UAAAg6C,YAAW,SAACppC,QACLk8C,UAAYl8C,GAQnBwvD,EAAApgE,UAAAyhE,SAAQ,SAAC/hD,QACF8gD,OAAS9gD,OACT+gD,YAAchf,GAAO/hC,IAO5B0gD,EAAApgE,UAAA0hE,kBAAiB,SAAC19D,GAChB4C,KAOFw5D,EAAApgE,UAAAyzC,KAAI,WACF7sC,KAOFw5D,EAAApgE,UAAA2hE,oBAAmB,SAAC39D,GAClB4C,KAEJw5D,EA7PA,YCDgBwB,GAAYzrC,UACtB10B,MAAMC,QAAQy0B,GACTC,GAASD,GAETA,ECxBR,8dAikBH0rC,GA5gBA,SAAAx+D,GAGK,SACHy+D,EAAYjvD,OAAZrP,EAAA5D,KAIQ2gE,OACuBz7D,IAA3B+N,EAAQ0tD,gBAA+B1tD,EAAQ0tD,sBAEjD/8D,EAAAH,EAAAI,KAAA7D,KAAA,CACEi5B,QAAS,EACT0nC,eAAgBA,EAChB3vD,cAA+B9L,IAArB+N,EAAQjC,SAAyBiC,EAAQjC,SAAW,EAC9D8O,WAAyB5a,IAAlB+N,EAAQ6M,MAAsB7M,EAAQ6M,MAAQ,EACrDihD,kBAC2B77D,IAAzB+N,EAAQ8tD,aAA6B9tD,EAAQ8tD,aAAY,CAAI,EAAG,YAO/DoB,QAAO,GAMZv+D,EAAKw+D,oBAAsB,KAM3Bx+D,EAAKy+D,WAAyBn9D,IAAjB+N,EAAQqvD,KAAqBrvD,EAAQqvD,KAAO,KAMzD1+D,EAAK2+D,QAAO,CAAI,EAAG,GAMnB3+D,EAAKgzD,QAAU3jD,EAAQkb,OAMvBvqB,EAAK4+D,aACgBt9D,IAAnB+N,EAAQwF,OAAuBxF,EAAQwF,OAASxF,EAAQwvD,QAM1D7+D,EAAK8+D,SAAWzvD,EAAQ0vD,QAMxB/+D,EAAKizD,YAA2B3xD,IAAlB+N,EAAQ5F,MAAsB4F,EAAQ5F,MAAQ,EAM5DzJ,EAAKg/D,aAA6B19D,IAAnB+N,EAAQ4vD,OAAuB5vD,EAAQ4vD,OAAS,KAM/Dj/D,EAAKq1D,QAAU,KAMfr1D,EAAKk/D,MAAQ,KAMbl/D,EAAKm/D,WAAa,KAMlBn/D,EAAKo/D,uBAAyB,KAE9Bp/D,EAAKu4B,kBAnGkB8mC,GAAAf,EAAAz+D,GA2GzBy+D,EAAA9hE,UAAA0K,MAAK,eACGgV,EAAK9f,KAAQghE,WACb91D,EAAK,IAAOg3D,EAAY,CAC5BI,KAAItiE,KAAOkjE,UAAOljE,KAAUkjE,UAAUp4D,aAAU5F,EAChDipB,OAAMnuB,KAAOkuB,YACbzV,OAAMzY,KAAO+xB,YACb4wC,QAAO3iE,KAAOmjE,aACd91D,MAAKrN,KAAO0yD,WACZmQ,OAAM7iE,KAAOojE,YAASpjE,KAAUojE,YAAYt4D,aAAU5F,EACtD8L,SAAQhR,KAAOg7C,cACf2lB,eAAc3gE,KAAOihE,oBACrBnhD,MAAOje,MAAMC,QAAQge,GAASA,EAAMtR,QAAUsR,EAC9CihD,aAAY/gE,KAAOkhE,kBAAkB1yD,iBAEvCtD,EAAMgwB,WAAUl7B,KAAMk6B,cACfhvB,GASTg3D,EAAA9hE,UAAAghE,UAAS,uBACKnI,SAQdiJ,EAAA9hE,UAAAsyD,SAAQ,uBACMmE,QAQdqL,EAAA9hE,UAAA8iE,QAAO,uBACOb,OAMdH,EAAA9hE,UAAAkhE,qBAAoB,oBACRc,oBAAmB,KACrBiB,EAAarjE,KAAQsjE,2BAEtBC,0BAA0BF,eAErBjB,qBASdF,EAAA9hE,UAAAihE,SAAQ,SAACre,YACGmf,QAAQnf,GAAc,GAAC,KACzBqgB,EAAarjE,KAAQsjE,sBAErBljC,EAAUqC,GACd4gC,EAAcpyD,KAAO+xC,GAAc,EACnCqgB,EAAcpyD,KAAO+xC,GAAc,QAGhCwgB,MAAMH,EAAejjC,EAAS,EAAG,EAAG4iB,GAAc,QAElDmf,QAAQnf,GAAc,GAAK5iB,EAAQyC,mBAE9Bs/B,QAAQnf,GAAc,IAQpCkf,EAAA9hE,UAAAmhE,cAAa,SAACve,UACLA,GAMTkf,EAAA9hE,UAAAqhE,aAAY,uBACEsB,YAMdb,EAAA9hE,UAAAshE,yBAAwB,uBACVsB,wBAMdd,EAAA9hE,UAAAohE,cAAa,kBACJlB,IAQT4B,EAAA9hE,UAAAuhE,UAAS,uBACKY,SAQdL,EAAA9hE,UAAA8tB,UAAS,uBACK0oC,SAQdsL,EAAA9hE,UAAA2xB,UAAS,uBACKywC,SAQdN,EAAA9hE,UAAA+iE,WAAU,uBACIT,UAQdR,EAAA9hE,UAAAgnD,QAAO,uBACO0b,OAQdZ,EAAA9hE,UAAAgjE,UAAS,uBACKR,SAMdV,EAAA9hE,UAAA0hE,kBAAiB,SAAC19D,KAKlB89D,EAAA9hE,UAAAyzC,KAAI,aAKJquB,EAAA9hE,UAAA2hE,oBAAmB,SAAC39D,KAMpB89D,EAAA9hE,UAAAkjE,oBAAmB,eAMbG,EALAC,EAAUhgC,GACVigC,EAAW//B,GACXggC,EAAa,EACbC,EAAW,KACXC,EAAiB,EAEjBC,EAAc,cAETnB,UAEa,QADpBa,EAAWzjE,KAAQ4iE,QAAQoB,cAEzBP,EAAc5/B,IAEhB4/B,EAAczB,GAAYyB,QAENv+D,KADpB6+D,EAAW/jE,KAAQ4iE,QAAQqB,cAEzBF,ErDjNwB,GqDmN1BF,EAAQ7jE,KAAQ4iE,QAAQsB,cACxBJ,EAAc9jE,KAAQ4iE,QAAQuB,yBAEbj/D,KADjBy+D,EAAQ3jE,KAAQ4iE,QAAQwB,iBAEtBT,EAAW//B,SAGG1+B,KADhBw+D,EAAO1jE,KAAQ4iE,QAAQyB,gBAErBX,EAAUhgC,SAGOx+B,KADnB0+D,EAAU5jE,KAAQ4iE,QAAQ0B,mBAExBV,ErD7PyB,MqDoQ3BH,YAAaA,EACbM,YAAaA,EACb9yD,KALW,GAACjR,KAASwiE,QAAUuB,GAAe,EAM9CL,QAASA,EACTG,SAAUA,EACVC,eAAgBA,EAChBH,SAAUA,EACVC,WAAYA,IAOhB1B,EAAA9hE,UAAA+7B,OAAM,eACEknC,EAAarjE,KAAQsjE,sBAErBljC,EAAUqC,GACd4gC,EAAcpyD,KACdoyD,EAAcpyD,WAGXuyD,MAAMH,EAAejjC,EAAS,EAAG,EAAG,QAEpC+hC,QAAO,QACPA,QAAQ,GAAK/hC,EAAQyC,WAGpB5xB,EAAOmvB,EAAQyC,OAAOpwB,MACtB8xD,EAAYtzD,EACZ8vD,EAAY/gE,KAAQkhE,uBAErB8B,uBAAsB,CAAIK,EAAcpyD,KAAMoyD,EAAcpyD,WAC5DsyD,0BAA0BF,QAE1BpK,QAAO,CAAIhoD,EAAO,EAAI8vD,EAAa,GAAI9vD,EAAO,EAAI8vD,EAAa,SAC/D+B,MAAK,CAAI7xD,EAAMA,QACf8xD,WAAU,CAAIwB,EAAWA,IAWhCrC,EAAA9hE,UAAAojE,MAAK,SAACH,EAAejjC,EAAStzB,EAAGC,EAAGi2C,OAC9B3hD,EAAGmjE,EAAQC,EAGfrkC,EAAQiH,aAAa2b,EAAY,EAAG,EAAGA,EAAY,EAAG,GAGtD5iB,EAAQ/f,UAAUvT,EAAGC,GAErBqzB,EAAQskC,gBAEJv2C,EAAMnuB,KAAQ42D,WACdzoC,IAAW5e,EAAAA,EACb6wB,EAAQukC,IACNtB,EAAcpyD,KAAO,EACrBoyD,EAAcpyD,KAAO,EAACjR,KACjBwiE,QACL,EACA,EAAIr2D,KAAKC,IACT,YAGIu2D,OACcz9D,IADPlF,KACN0iE,SAAsB1iE,KAAQ0iE,SAAQ1iE,KAAQwiE,YACjDG,IAAO3iE,KAAUwiE,UACnBr0C,GAAS,GAEN9sB,EAAI,EAAGA,GAAK8sB,EAAQ9sB,IACvBmjE,EAAc,EAAJnjE,EAAQ8K,KAAKC,GAAM+hB,EAAShiB,KAAKC,GAAK,EAACpM,KAAQ62D,OACzD4N,EAAUpjE,EAAI,GAAM,EAACrB,KAAQwiE,QAAUG,EACvCviC,EAAQwkC,OACNvB,EAAcpyD,KAAO,EAAIwzD,EAAUt4D,KAAKsB,IAAI+2D,GAC5CnB,EAAcpyD,KAAO,EAAIwzD,EAAUt4D,KAAKqB,IAAIg3D,YAKzCnC,MAAK,KACR9rC,EAAKv2B,KAAQqiE,MAAM2B,WACT,OAAVztC,IACFA,EAAQkN,IAEVrD,EAAQykC,UAAY7C,GAAYzrC,GAChC6J,EAAQkiC,YAEDM,UACPxiC,EAAQqjC,YAAcJ,EAAcI,YACpCrjC,EAAQ0kC,UAAYzB,EAAcU,YAC9B3jC,EAAQ2kC,aAAe1B,EAAcQ,WACvCzjC,EAAQ2kC,YAAY1B,EAAcQ,UAClCzjC,EAAQ0jC,eAAiBT,EAAcS,gBAEzC1jC,EAAQsjC,QAAUL,EAAcK,QAChCtjC,EAAQujC,SAAWN,EAAcM,SACjCvjC,EAAQwjC,WAAaP,EAAcO,WACnCxjC,EAAQyiC,UAEVziC,EAAQ4kC,aAOV9C,EAAA9hE,UAAAmjE,0BAAyB,SAACF,WACnBjB,oBAAmBpiE,KAAQqhE,SAAS,QAChCgB,MAAK,KACR9rC,EAAKv2B,KAAQqiE,MAAM2B,WAGnB/qC,EAAU,KACE,iBAAL1C,IACTA,EAAQuB,GAAQvB,IAEJ,OAAVA,EACF0C,EAAU,EACDp3B,MAAMC,QAAQy0B,KACvB0C,EAA2B,IAAjB1C,EAAMn1B,OAAem1B,EAAM,GAAK,GAE5B,IAAZ0C,EAAa,KAGTmH,EAAUqC,GACd4gC,EAAcpyD,KACdoyD,EAAcpyD,WAEXmxD,oBAAsBhiC,EAAQyC,YAE9BoiC,wBAAwB5B,EAAejjC,EAAS,EAAG,MAY9D8hC,EAAA9hE,UAAA6kE,wBAAuB,SAAC5B,EAAejjC,EAAStzB,EAAGC,GAEjDqzB,EAAQ/f,UAAUvT,EAAGC,GAErBqzB,EAAQskC,gBAEJv2C,EAAMnuB,KAAQ42D,WACdzoC,IAAW5e,EAAAA,EACb6wB,EAAQukC,IACNtB,EAAcpyD,KAAO,EACrBoyD,EAAcpyD,KAAO,EAACjR,KACjBwiE,QACL,EACA,EAAIr2D,KAAKC,IACT,YAGIu2D,OACcz9D,IADPlF,KACN0iE,SAAsB1iE,KAAQ0iE,SAAQ1iE,KAAQwiE,QACjDG,IAAO3iE,KAAUwiE,UACnBr0C,GAAS,OAEP9sB,OAAC,EAAEojE,OAAO,EAAED,OAAM,MACjBnjE,EAAI,EAAGA,GAAK8sB,EAAQ9sB,IACvBmjE,EAAc,EAAJnjE,EAAQ8K,KAAKC,GAAM+hB,EAAShiB,KAAKC,GAAK,EAACpM,KAAQ62D,OACzD4N,EAAUpjE,EAAI,GAAM,EAACrB,KAAQwiE,QAAUG,EACvCviC,EAAQwkC,OACNvB,EAAcpyD,KAAO,EAAIwzD,EAAUt4D,KAAKsB,IAAI+2D,GAC5CnB,EAAcpyD,KAAO,EAAIwzD,EAAUt4D,KAAKqB,IAAIg3D,IAKlDpkC,EAAQykC,UAAYphC,GACpBrD,EAAQkiC,YACCM,UACPxiC,EAAQqjC,YAAcJ,EAAcI,YACpCrjC,EAAQ0kC,UAAYzB,EAAcU,YAC9BV,EAAcQ,WAChBzjC,EAAQ2kC,YAAY1B,EAAcQ,UAClCzjC,EAAQ0jC,eAAiBT,EAAcS,gBAEzC1jC,EAAQyiC,UAEVziC,EAAQ4kC,aAEZ9C,EA1gBA,CAA2B3B,8dCuB3B2E,GArDA,SAAAzhE,GAGK,SACH0hE,EAAY1iD,OACJxP,EAAUwP,GAAyB,UAEzChf,EAAAI,KAAA7D,KAAA,CACEmuB,OAAQ5e,EAAAA,EACR+yD,KAAMrvD,EAAQqvD,KACd7pD,OAAQxF,EAAQwF,OAChBoqD,OAAQ5vD,EAAQ4vD,OAChB/iD,WAAyB5a,IAAlB+N,EAAQ6M,MAAsB7M,EAAQ6M,MAAQ,EACrD9O,cAA+B9L,IAArB+N,EAAQjC,SAAyBiC,EAAQjC,SAAW,EAC9D2vD,oBAC6Bz7D,IAA3B+N,EAAQ0tD,gBAA+B1tD,EAAQ0tD,eACjDI,kBAC2B77D,IAAzB+N,EAAQ8tD,aAA6B9tD,EAAQ8tD,aAAY,CAAI,EAAG,kBAjB9CqE,GAAAD,EAAA1hE,GA0BxB0hE,EAAA/kE,UAAA0K,MAAK,eACGgV,EAAK9f,KAAQghE,WACb91D,EAAK,IAAOi6D,EAAW,CAC3B7C,KAAItiE,KAAOkjE,UAAOljE,KAAUkjE,UAAUp4D,aAAU5F,EAChD29D,OAAM7iE,KAAOojE,YAASpjE,KAAUojE,YAAYt4D,aAAU5F,EACtDuT,OAAMzY,KAAO+xB,YACbjS,MAAOje,MAAMC,QAAQge,GAASA,EAAMtR,QAAUsR,EAC9C9O,SAAQhR,KAAOg7C,cACf2lB,eAAc3gE,KAAOihE,oBACrBF,aAAY/gE,KAAOkhE,kBAAkB1yD,iBAEvCtD,EAAMgwB,WAAUl7B,KAAMk6B,cACfhvB,GASTi6D,EAAA/kE,UAAAilE,UAAS,SAAC5sD,QACH+pD,QAAU/pD,OACV0jB,UAETgpC,EAnDA,CAA0BG,GAAAv+D,SCqC1Bw+D,GA9CA,WAGK,SACHC,EAAY/iD,OACJxP,EAAUwP,GAAW,GAKxBziB,KACEylE,YAA2BvgE,IAAlB+N,EAAQsjB,MAAsBtjB,EAAQsjB,MAAQ,YAQ9DivC,EAAAplE,UAAA0K,MAAK,eACGyrB,EAAKv2B,KAAQgkE,sBACRwB,EAAI,CACbjvC,MAAO10B,MAAMC,QAAQy0B,GAASA,EAAM/nB,QAAU+nB,QAASrxB,KAS3DsgE,EAAAplE,UAAA4jE,SAAQ,uBACMyB,QASdD,EAAAplE,UAAAslE,SAAQ,SAACnvC,QACFkvC,OAASlvC,GAElBivC,EA5CA,GC2NAG,GAhNA,WAGK,SACHC,EAAYnjD,OACJxP,EAAUwP,GAAW,GAKxBziB,KACEylE,YAA2BvgE,IAAlB+N,EAAQsjB,MAAsBtjB,EAAQsjB,MAAQ,KAKzDv2B,KACE6lE,SAAW5yD,EAAQywD,QAKrB1jE,KACE8lE,eAAiC5gE,IAArB+N,EAAQ4wD,SAAyB5wD,EAAQ4wD,SAAW,KAKlE7jE,KACE+lE,gBAAkB9yD,EAAQ6wD,eAK5B9jE,KACEgmE,UAAY/yD,EAAQ0wD,SAKtB3jE,KACEimE,YAAchzD,EAAQ2wD,WAKxB5jE,KACEkmE,OAASjzD,EAAQR,aAQxBmzD,EAAAxlE,UAAA0K,MAAK,eACGyrB,EAAKv2B,KAAQgkE,sBACR4B,EAAM,CACfrvC,MAAO10B,MAAMC,QAAQy0B,GAASA,EAAM/nB,QAAU+nB,QAASrxB,EACvDw+D,QAAO1jE,KAAOqkE,aACdR,SAAQ7jE,KAAOkkE,cAAWlkE,KAAUkkE,cAAc11D,aAAUtJ,EAC5D4+D,eAAc9jE,KAAOmkE,oBACrBR,SAAQ3jE,KAAOokE,cACfR,WAAU5jE,KAAOskE,gBACjB7xD,MAAKzS,KAAOikE,cAShB2B,EAAAxlE,UAAA4jE,SAAQ,uBACMyB,QAQdG,EAAAxlE,UAAAikE,WAAU,uBACIwB,UAQdD,EAAAxlE,UAAA8jE,YAAW,uBACG4B,WAQdF,EAAAxlE,UAAA+jE,kBAAiB,uBACH4B,iBAQdH,EAAAxlE,UAAAgkE,YAAW,uBACG4B,WAQdJ,EAAAxlE,UAAAkkE,cAAa,uBACC2B,aAQdL,EAAAxlE,UAAA6jE,SAAQ,uBACMiC,QASdN,EAAAxlE,UAAAslE,SAAQ,SAACnvC,QACFkvC,OAASlvC,GAShBqvC,EAAAxlE,UAAA+lE,WAAU,SAACzC,QACJmC,SAAWnC,GAelBkC,EAAAxlE,UAAA2kE,YAAW,SAAClB,QACLiC,UAAYjC,GASnB+B,EAAAxlE,UAAAgmE,kBAAiB,SAACtC,QACXiC,gBAAkBjC,GASzB8B,EAAAxlE,UAAAimE,YAAW,SAAC1C,QACLqC,UAAYrC,GASnBiC,EAAAxlE,UAAAkmE,cAAa,SAAC1C,QACPqC,YAAcrC,GASrBgC,EAAAxlE,UAAAmmE,SAAQ,SAAC9zD,QACFyzD,OAASzzD,GAElBmzD,EA9MA,GCwHAY,GAAA,WAGK,SACHC,EAAYhkD,OACJxP,EAAUwP,GAAW,GAKxBziB,KACEkzD,UAAY,KAKdlzD,KACE0mE,kBAAoBC,QAEAzhE,IAArB+N,EAAQvI,UAAsB1K,KAC3B2K,YAAYsI,EAAQvI,UAMxB1K,KACEqiE,WAAyBn9D,IAAjB+N,EAAQqvD,KAAqBrvD,EAAQqvD,KAAO,KAKtDtiE,KACE4mE,YAA2B1hE,IAAlB+N,EAAQ4zD,MAAsB5zD,EAAQ4zD,MAAQ,KAKzD7mE,KACEk8B,eAAiCh3B,IAArB+N,EAAQ6zD,SAAyB7zD,EAAQ6zD,SAAW,KAKlE9mE,KACE4iE,aAA6B19D,IAAnB+N,EAAQ4vD,OAAuB5vD,EAAQ4vD,OAAS,KAK5D7iE,KACE+mE,WAAyB7hE,IAAjB+N,EAAQ2xB,KAAqB3xB,EAAQ2xB,KAAO,KAKtD5kC,KACEgnE,QAAU/zD,EAAQkmB,cAQzBstC,EAAArmE,UAAA0K,MAAK,eACCJ,EAAQ1K,KAAQiL,qBAChBP,GAA2B,iBAARA,IACrBA,EAAiEA,EAAUI,aAElE27D,EAAK,CACd/7D,SAAUA,EACV43D,KAAItiE,KAAOkjE,UAAOljE,KAAUkjE,UAAUp4D,aAAU5F,EAChD2hE,MAAK7mE,KAAOqhE,WAAQrhE,KAAUqhE,WAAWv2D,aAAU5F,EACnD4hE,SAAQ9mE,KAAOm9B,cACf0lC,OAAM7iE,KAAOojE,YAASpjE,KAAUojE,YAAYt4D,aAAU5F,EACtD0/B,KAAI5kC,KAAOinE,UAAOjnE,KAAUinE,UAAUn8D,aAAU5F,EAChDi0B,OAAMn5B,KAAO6J,eAUjB48D,EAAArmE,UAAA+8B,YAAW,uBACGjB,WASduqC,EAAArmE,UAAA8mE,YAAW,SAACJ,QACL5qC,UAAY4qC,GAUnBL,EAAArmE,UAAA6K,YAAW,uBACGioD,WASduT,EAAArmE,UAAA+mE,oBAAmB,uBACLT,mBAQdD,EAAArmE,UAAA8iE,QAAO,uBACOb,OAQdoE,EAAArmE,UAAAgnE,QAAO,SAAC9E,QACDD,MAAQC,GAQfmE,EAAArmE,UAAAihE,SAAQ,uBACMuF,QAQdH,EAAArmE,UAAAinE,SAAQ,SAACR,QACFD,OAASC,GAQhBJ,EAAArmE,UAAAgjE,UAAS,uBACKR,SAQd6D,EAAArmE,UAAAknE,UAAS,SAACzE,QACHD,QAAUC,GAQjB4D,EAAArmE,UAAA6mE,QAAO,uBACOF,OAQdN,EAAArmE,UAAAmnE,QAAO,SAAC3iC,QACDmiC,MAAQniC,GAQf6hC,EAAArmE,UAAAyJ,UAAS,uBACKm9D,SAWdP,EAAArmE,UAAAuK,YAAW,SAACD,GACS,mBAARA,EAAuB1K,KAC3B0mE,kBAAoBh8D,EACD,iBAARA,EAAqB1K,KAChC0mE,kBAAiB,SAAazjD,UAC4BA,EAAQhb,IACnEyC,IAGMA,OAEYxF,IAAbwF,IAAsB1K,KAC1B0mE,kBAAiB,kBACyCh8D,IAJ7C1K,KACb0mE,kBAAoBC,QAMtBzT,UAAYxoD,GASnB+7D,EAAArmE,UAAAg7B,UAAS,SAACjC,QACH6tC,QAAU7tC,GAEnBstC,EA/OA,GAmRG,IACCe,GAAgB,cAOJC,GAAmBxkD,EAASlS,OAMrCy2D,GAAa,KACVlF,EAAI,IAAOiD,GAAI,CACnBhvC,MAAK,0BAEDssC,EAAM,IAAO8C,GAAM,CACvBpvC,MAAK,UACL9jB,MAAO,OAET+0D,GAAa,KACPhB,GAAK,CACPK,MAAK,IAAMa,GAAA3gE,QAAW,CACpBu7D,KAAMA,EACNO,OAAQA,EACRpqD,OAAQ,IAEV6pD,KAAMA,EACNO,OAAQA,YAIP2E,YAOOG,KACgE,IACxEC,EAAM,GACNC,EAAK,CAAI,IAAK,IAAK,IAAK,GACxBC,EAAI,CAAI,EAAG,IAAK,IAAK,UAE3BF,EAAO1vD,IAAoB,KACrBsuD,GAAK,CACPlE,KAAI,IAAMiD,GAAI,CACZhvC,MAAK,CAAG,IAAK,IAAK,IAAK,SAI7BqxC,EAAO1vD,IAA8B0vD,EAAO1vD,IAE5C0vD,EAAO1vD,IAAwB,KACzBsuD,GAAK,CACP3D,OAAM,IAAM8C,GAAM,CAChBpvC,MAAOsxC,EACPp1D,MAAOA,UAGP+zD,GAAK,CACP3D,OAAM,IAAM8C,GAAM,CAChBpvC,MAAOuxC,EACPr1D,MApBQ,OAwBdm1D,EAAO1vD,IAAkC0vD,EAAO1vD,IAEhD0vD,EAAO1vD,IAAuB0vD,EAAO1vD,IAAsB0J,OACzDgmD,EAAO1vD,KAGT0vD,EAAO1vD,IAAkB,KACnBsuD,GAAK,CACPK,MAAK,IAAMa,GAAA3gE,QAAW,CACpB0R,OAAQhG,EACR6vD,KAAI,IAAMiD,GAAI,CACZhvC,MAAOuxC,IAETjF,OAAM,IAAM8C,GAAM,CAChBpvC,MAAOsxC,EACPp1D,MAAOA,QAGX0mB,OAAQ5pB,EAAAA,KAGZq4D,EAAO1vD,IAA4B0vD,EAAO1vD,IAE1C0vD,EAAO1vD,IAAoC0vD,EACzC1vD,IACA0J,OAAOgmD,EAAO1vD,IAA2B0vD,EAAO1vD,KAE3C0vD,EAON,SACMjB,GAAwB1jD,UACxBA,EAAQhY,4eCndX88D,GACQ,cAgMdC,GAlLA,SAAAvkE,GAGK,SACHwkE,EAAYxlD,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAyB,GAEnCqZ,EAAcx5B,EAAM,GAAK2Q,iBAExB6oB,EAAY5wB,aACZ4wB,EAAYosC,oBACZpsC,EAAYqsC,4BACZrsC,EAAYssC,wBACnBxkE,EAAAH,EAAAI,KAAA7D,KAAM87B,IAAW97B,MAMZqoE,gBACmBnjE,IAAtB+N,EAAQq1D,WAA0Br1D,EAAQq1D,UAM5C1kE,EAAK2kE,mBACsBrjE,IAAzB+N,EAAQi1D,aAA6Bj1D,EAAQi1D,aAAe,IAO9DtkE,EAAKuG,OAAS,KAOdvG,EAAKwG,oBAAiBlF,EAEtBtB,EAAKwH,SAAS6H,EAAQ/H,OAMtBtH,EAAK4kE,2BAC8BtjE,IAAjC+N,EAAQk1D,sBACJl1D,EAAQk1D,qBAOdvkE,EAAK6kE,6BACgCvjE,IAAnC+N,EAAQm1D,wBACJn1D,EAAQm1D,gCA5DYM,GAAAT,EAAAxkE,GAmE5BwkE,EAAA7nE,UAAAuoE,aAAY,uBACEN,YAiBdJ,EAAA7nE,UAAAy8B,YAAW,SAACC,UACHr5B,EAAArD,UAAMy8B,YAAWh5B,KAAA7D,KAAC88B,IAM3BmrC,EAAA7nE,UAAAwoE,gBAAe,uBACDL,eAOdN,EAAA7nE,UAAAyoE,eAAc,uBACoE5gE,IAC9E8/D,KAUJE,EAAA7nE,UAAA+K,SAAQ,uBACMhB,QAQd89D,EAAA7nE,UAAAkL,iBAAgB,uBACFlB,gBAOd69D,EAAA7nE,UAAA0oE,wBAAuB,uBACTN,uBAOdP,EAAA7nE,UAAA2oE,0BAAyB,uBACXN,yBAOdR,EAAA7nE,UAAA0oC,gBAAe,SAAC7L,GACTA,EAAWksB,gBACdlsB,EAAWksB,cAAa,IAAO6f,EAAA/M,IAAP,CAAa,IAEvBj8D,KAAOm9B,cAAe2L,gBAAgB7L,IAOxDgrC,EAAA7nE,UAAA6oE,eAAc,SAACC,QACRzgE,IAAIs/D,GAAuBmB,IAalCjB,EAAA7nE,UAAAgL,SAAQ,SAACI,QACFrB,YAAuBjF,IAAdsG,EAA0BA,EAAYi8D,QAC/Cr9D,eACW,OAAdoB,OAAqBtG,WDmJAkC,OACrB+hE,KAEU,mBAAH/hE,EACT+hE,EAAgB/hE,OAIb,IACCwC,EACA/H,MAAMC,QAAQsF,GAChBwC,EAASxC,GAETmC,GAA+C,mBAAdnC,EAAKyC,UAA2B,IAEjED,EAAM,CAD8BxC,IAGtC+hE,EAAa,kBACJv/D,UAGJu/D,ECxK8BC,CAAeppE,KAAMmK,aACnD5D,WAET0hE,EAhLA,CAA8B/oC,GAAAn4B,+FCtE3B,IACGsiE,GAAW,CACfC,eAAgB,EAChBC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,WAAY,EACZC,aAAc,EACdC,KAAM,EACNC,gBAAiB,EACjBC,eAAgB,GAChBC,iBAAkB,GAClBC,OAAQ,IAMGC,GAAe,CAAId,GAAYS,MAK/BM,GAAiB,CAAIf,GAAYa,QAKjCG,GAAoB,CAAIhB,GAAYE,YAKpCe,GAAoB,CAAIjB,GAAYI,YAEjDc,GAAelB,GCsEfmB,GAvGA,oBAAAC,YAQEA,EAAArqE,UAAAsqE,WAAU,SAAChgE,EAAUuY,EAAS6jD,KAO9B2D,EAAArqE,UAAAuqE,aAAY,SAACjgE,KAOb+/D,EAAArqE,UAAAgL,SAAQ,SAACF,KAMTu/D,EAAArqE,UAAAwqE,WAAU,SAACC,EAAgB5nD,KAM3BwnD,EAAArqE,UAAA0qE,YAAW,SAAC7nD,EAAS/X,KAMrBu/D,EAAArqE,UAAA2qE,uBAAsB,SAACC,EAA4B/nD,KAMnDwnD,EAAArqE,UAAA6qE,eAAc,SAACC,EAAoBjoD,KAMnCwnD,EAAArqE,UAAA+qE,oBAAmB,SAACC,EAAyBnoD,KAM7CwnD,EAAArqE,UAAAirE,eAAc,SAACC,EAAoBroD,KAMnCwnD,EAAArqE,UAAAmrE,iBAAgB,SAACC,EAAsBvoD,KAMvCwnD,EAAArqE,UAAAqrE,UAAS,SAACC,EAAezoD,KAMzBwnD,EAAArqE,UAAAurE,YAAW,SAACC,EAAiB3oD,KAM7BwnD,EAAArqE,UAAAyrE,SAAQ,SAACnhE,EAAUuY,KAMnBwnD,EAAArqE,UAAA0rE,mBAAkB,SAACjH,EAAWpB,KAM9BgH,EAAArqE,UAAA2rE,cAAa,SAACC,EAAYC,KAM1BxB,EAAArqE,UAAA8rE,aAAY,SAACC,EAAWF,KAC1BxB,EArGA,6dCukBA2B,GAljBA,SAAA3oE,GAMK,SACH4oE,EAAYnsD,EAAW+0B,EAAWlkC,EAAYiyC,OAA9Cp/C,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKsc,UAAYA,EAOjBtc,EAAKqxC,UAAYA,EAMjBrxC,EAAKo/C,WAAaA,EAMlBp/C,EAAK0oE,aAAe,EAOpB1oE,EAAKmN,WAAaA,EAMlBnN,EAAK2oE,2BAA6B,KAMlC3oE,EAAK4oE,2BAA6B,KAMlC5oE,EAAK6oE,mBAAqB,KAM1B7oE,EAAK8oE,aAAY,GAMjB9oE,EAAKqK,YAAW,GAMhBrK,EAAK+oE,eAAc,GAMnB/oE,EAAKgpE,yBAAwB,GAM7BhpE,EAAKm2B,MAAK,YAxFc8yC,GAAAR,EAAA5oE,GAgG1B4oE,EAAAjsE,UAAA0sE,gBAAe,SAACC,OACR/pB,EAAUhjD,KAAQgjD,kBACH,GAAdA,EACH+pB,EACAA,EAAUr4C,KAAG,SAAWs4C,UACfA,EAAOhqB,MAUtBqpB,EAAAjsE,UAAA6sE,2BAA0B,SAACr9D,EAAiBE,WACpC5B,EAAMlO,KAAQktE,uBACdjuC,EAAQj/B,KAAQ2sE,eAChB1+D,EAAWjO,KAAQiO,YACrBk/D,EAAQl/D,EAAY7M,OACfC,EAAI,EAAGuB,EAAKgN,EAAgBxO,OAAQC,EAAIuB,EAAIvB,GAAKyO,EACxDmvB,EAAS,GAAKrvB,EAAgBvO,GAC9B49B,EAAS,GAAKrvB,EAAgBvO,EAAI,GAC9BuN,GAAmBV,EAAQ+wB,KAC7BhxB,EAAYk/D,KAAWluC,EAAS,GAChChxB,EAAYk/D,KAAWluC,EAAS,WAG7BkuC,GAaTd,EAAAjsE,UAAAgtE,0BAAyB,SACvBx9D,EACAC,EACArO,EACAsO,EACAu9D,EACAC,OAEMr/D,EAAWjO,KAAQiO,YACrBk/D,EAAQl/D,EAAY7M,OAClB8M,EAAMlO,KAAQktE,uBAChBI,IACFz9D,GAAUC,OAORzO,EAAGksE,EAASC,EALZC,EAAa79D,EAAgBC,GAC7B69D,EAAa99D,EAAgBC,EAAS,GACpC89D,EAAS3tE,KAAQ2sE,eACnBiB,GAAU,MAGTvsE,EAAIwO,EAASC,EAAQzO,EAAIG,EAAKH,GAAKyO,EACtC69D,EAAU,GAAK/9D,EAAgBvO,GAC/BssE,EAAU,GAAK/9D,EAAgBvO,EAAI,IACnCmsE,EAAUv+D,GAAuBf,EAAQy/D,MACzBJ,GACVK,IACF3/D,EAAYk/D,KAAWM,EACvBx/D,EAAYk/D,KAAWO,EACvBE,GAAU,GAEZ3/D,EAAYk/D,KAAWQ,EAAU,GACjC1/D,EAAYk/D,KAAWQ,EAAU,IACxBH,IAAYz/D,IACrBE,EAAYk/D,KAAWQ,EAAU,GACjC1/D,EAAYk/D,KAAWQ,EAAU,GACjCC,GAAU,GAEVA,GAAU,EAEZH,EAAaE,EAAU,GACvBD,EAAaC,EAAU,GACvBJ,EAAUC,SAIPH,GAAUO,GAAYvsE,IAAMwO,EAASC,KACxC7B,EAAYk/D,KAAWM,EACvBx/D,EAAYk/D,KAAWO,GAElBP,GAWTd,EAAAjsE,UAAAytE,uBAAsB,SAACj+D,EAAiBC,EAAQ0W,EAAMzW,EAAQg+D,WACnDzsE,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAAC,KACrCG,EAAM+kB,EAAKllB,GACX0sE,EAAU/tE,KAAQotE,0BACtBx9D,EACAC,EACArO,EACAsO,GACA,GACA,GAEFg+D,EAAYxqE,KAAKyqE,GACjBl+D,EAASrO,SAEJqO,GAQTw8D,EAAAjsE,UAAAsqE,WAAU,SAAChgE,EAAUuY,EAAS6jD,QACvBkH,cAActjE,EAAUuY,OAIzBrT,EAAiBm+D,EAAYD,EAAaG,EAC1Cp+D,EAJE9P,EAAO2K,EAASyV,UAChBrQ,EAASpF,EAASua,YAClBipD,EAAYluE,KAAQiO,YAAY7M,UAGlCrB,GAAQmY,GAA0B,CACpCtI,EAA+ElF,EAAU+lB,6BACzFw9C,EAAY,OACNplD,EAAqEne,EAAUsoB,WACrFnjB,EAAS,UACAxO,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC8sE,EAAM,GACZt+D,EAAM7P,KAAQ6tE,uBACZj+D,EACAC,EACAgZ,EAAMxnB,GACNyO,EACAq+D,GAEFF,EAAa3qE,KAAK6qE,QAEfzB,aAAappE,KAAI,CACpBinE,GAAkBb,OAClBwE,EACAD,EACAvjE,EACAo8D,EACAl+C,UAGF7oB,GAAQmY,IACRnY,GAAQmY,IAER41D,EAAW,GACXl+D,EACE7P,GAAQmY,GACoDxN,EAAU+lB,6BAClE/lB,EAASsa,qBACfnV,EAAM7P,KAAQ6tE,uBACZj+D,EACA,EACwGlF,EAAUuiB,UAClHnd,EACAg+D,QAEGpB,aAAappE,KAAI,CACpBinE,GAAkBb,OAClBwE,EACAJ,EACApjE,EACAo8D,EACAp+C,MAGF3oB,GAAQmY,IACRnY,GAAQmY,IAERtI,EAAkBlF,EAASsa,qBAC3B+oD,EAAU/tE,KAAQotE,0BAChBx9D,EACA,EACAA,EAAgBxO,OAChB0O,GACA,GACA,QAEG48D,aAAappE,KAAI,CACpBinE,GAAkBb,OAClBwE,EACAH,EACArjE,EACAo8D,EACAt+C,MAEOzoB,GAAQmY,IACjBtI,EAAkBlF,EAASsa,sBAC3B+oD,EAAU/tE,KAAQitE,2BAA2Br9D,EAAiBE,IAC7Co+D,GAAYluE,KACtB0sE,aAAappE,KAAI,CACpBinE,GAAkBb,OAClBwE,EACAH,EACArjE,EACAo8D,EACAt+C,MAGKzoB,GAAQmY,KACjBtI,EAAkBlF,EAASsa,0BACtB/W,YAAY3K,KAAKsM,EAAgB,GAAIA,EAAgB,IAC1Dm+D,EAAU/tE,KAAQiO,YAAY7M,YACzBsrE,aAAappE,KAAI,CACpBinE,GAAkBb,OAClBwE,EACAH,EACArjE,EACAo8D,UAGCsH,YAAYnrD,IAQnBopD,EAAAjsE,UAAA4tE,cAAa,SAACtjE,EAAUuY,QACjBspD,2BAA0B,CAC7BhC,GAAkBjB,eAClBrmD,EACA,EACAvY,QAEGgiE,aAAappE,KAAItD,KAAMusE,iCACvBC,2BAA0B,CAC7BjC,GAAkBjB,eAClBrmD,EACA,EACAvY,QAEGkiE,yBAAyBtpE,KAAItD,KAAMwsE,6BAM1CH,EAAAjsE,UAAAiuE,OAAM,kBAEF3B,aAAY1sE,KAAO0sE,aACnBE,yBAAwB5sE,KAAO4sE,yBAC/B3+D,YAAWjO,KAAOiO,cAOtBo+D,EAAAjsE,UAAAkuE,gCAA+B,eAKzBjtE,EAJEurE,EAAwB5sE,KAAQ4sE,yBAEtCA,EAAyB2B,cAIrBC,EACAzuE,EAFEoB,EAAIyrE,EAAyBxrE,OAG/BG,GAAQ,MACPF,EAAI,EAAGA,EAAIF,IAAKE,GAEnBtB,GADAyuE,EAAc5B,EAAyBvrE,IAC+B,KAC1DkpE,GAAkBV,aAC5BtoE,EAAQF,EACCtB,GAAQwqE,GAAkBjB,iBACnCkF,EAAY,GAAKntE,EACjBC,EAAetB,KAAM4sE,yBAA0BrrE,EAAOF,GACtDE,GAAQ,IASd8qE,EAAAjsE,UAAA0rE,mBAAkB,SAACjH,EAAWpB,OACtB1pC,EAAK/5B,KAAQ+5B,SACf8qC,EAAS,KACL4J,EAAiB5J,EAAUb,WACjCjqC,EAAM8qC,UAAY7C,GAChByM,GAAkChrC,SAGpC1J,EAAM8qC,eAAY3/D,KAEhBu+D,EAAW,KACPiL,EAAmBjL,EAAYO,WACrCjqC,EAAM0pC,YAAczB,GAClB0M,GAAsC7qC,QAElC8qC,EAAqBlL,EAAYY,aACvCtqC,EAAM2pC,aACmBx+D,IAAvBypE,EAAmCA,EAAqBjrC,OACpDkrC,EAAsBnL,EAAYS,cACxCnqC,EAAM8pC,SAAW+K,EACbA,EAAoBpgE,QACpBm1B,OACEkrC,EAA4BpL,EAAYU,oBAC9CpqC,EAAM+pC,eAAiB+K,G7DzUQ,M6D4UzBC,EAAsBrL,EAAYW,cACxCrqC,EAAM4pC,cACoBz+D,IAAxB4pE,EACIA,EACAlrC,OACAmrC,EAAmBtL,EAAYQ,WACrClqC,EAAM+qC,eACiB5/D,IAArB6pE,EAAiCA,E7DzST,M6D0SpBC,EAAwBvL,EAAYa,gBAC1CvqC,EAAM6pC,gBACsB1+D,IAA1B8pE,EACIA,E7D3UqB,G6D8UvBj1C,EAAM+qC,UAAS9kE,KAAQssE,oBACpBA,aAAevyC,EAAM+qC,eAErB2H,mBAAqB,WAG5B1yC,EAAM0pC,iBAAcv+D,EACpB60B,EAAM2pC,aAAUx+D,EAChB60B,EAAM8pC,SAAW,KACjB9pC,EAAM+pC,oBAAiB5+D,EACvB60B,EAAM4pC,cAAWz+D,EACjB60B,EAAM+qC,eAAY5/D,EAClB60B,EAAM6pC,gBAAa1+D,GAQvBmnE,EAAAjsE,UAAA6uE,WAAU,SAACl1C,OACH8qC,EAAY9qC,EAAM8qC,UAElBqK,EAAe,CAAI3E,GAAkBP,eAAgBnF,SACvC,iBAATA,GAETqK,EAAgB5rE,MAAK,GAEhB4rE,GAMT7C,EAAAjsE,UAAA+uE,YAAW,SAACp1C,QACL2yC,aAAappE,KAAItD,KAAMovE,aAAar1C,KAO3CsyC,EAAAjsE,UAAAgvE,aAAY,SAACr1C,UAETwwC,GAAkBN,iBAClBlwC,EAAM0pC,YACN1pC,EAAM+qC,UAAS9kE,KAAQgjD,WACvBjpB,EAAM2pC,QACN3pC,EAAM4pC,SACN5pC,EAAM6pC,gBACDkJ,gBAAgB/yC,EAAM8pC,UAC3B9pC,EAAM+pC,eAAc9jE,KAAQgjD,aAQhCqpB,EAAAjsE,UAAAivE,gBAAe,SAACt1C,EAAOk1C,OACfpK,EAAY9qC,EAAM8qC,UACJ,iBAATA,GAA0B9qC,EAAMu1C,kBAAoBzK,SAC3C3/D,IAAd2/D,GAAuB7kE,KACpB0sE,aAAappE,KAAK2rE,EAAWprE,KAAI7D,KAAO+5B,IAE/CA,EAAMu1C,iBAAmBzK,IAQ7BwH,EAAAjsE,UAAAmvE,kBAAiB,SAACx1C,EAAOo1C,OACjB1L,EAAc1pC,EAAM0pC,YACpBC,EAAU3pC,EAAM2pC,QAChBG,EAAW9pC,EAAM8pC,SACjBC,EAAiB/pC,EAAM+pC,eACvBH,EAAW5pC,EAAM4pC,SACjBmB,EAAY/qC,EAAM+qC,UAClBlB,EAAa7pC,EAAM6pC,YAEvB7pC,EAAMy1C,oBAAsB/L,GAC5B1pC,EAAM01C,gBAAkB/L,GACvBG,GAAY9pC,EAAM21C,kBAChB3tE,EAAOg4B,EAAM21C,gBAAiB7L,IACjC9pC,EAAM41C,uBAAyB7L,GAC/B/pC,EAAM61C,iBAAmBjM,GACzB5pC,EAAM81C,kBAAoB/K,GAC1B/qC,EAAM+1C,mBAAqBlM,UAEP1+D,IAAhBu+D,GACF0L,EAAYtrE,KAAI7D,KAAO+5B,GAEzBA,EAAMy1C,mBAAqB/L,EAC3B1pC,EAAM01C,eAAiB/L,EACvB3pC,EAAM21C,gBAAkB7L,EACxB9pC,EAAM41C,sBAAwB7L,EAC9B/pC,EAAM61C,gBAAkBjM,EACxB5pC,EAAM81C,iBAAmB/K,EACzB/qC,EAAM+1C,kBAAoBlM,IAO9ByI,EAAAjsE,UAAAguE,YAAW,SAACnrD,QACLspD,2BAA2B,GAACvsE,KAAS0sE,aAAatrE,YAClDmrE,2BAA6B,UAC7BC,2BAA2B,GAACxsE,KAAS4sE,yBAAyBxrE,YAC9DorE,2BAA6B,SAC5BuD,EAAsB,CAAIxF,GAAkBV,aAAc5mD,QAC3DypD,aAAappE,KAAKysE,QAClBnD,yBAAyBtpE,KAAKysE,IAUrC1D,EAAAjsE,UAAA8sE,qBAAoB,oBACRT,0BACHA,mBAAqBl+D,GAAKvO,KAAMi1C,gBAC5Bq3B,aAAe,GAAC,KACjB75D,EAAKzS,KAAS+Q,YAAU/Q,KAASssE,aAAe,GAAM,EAC5Dj+D,GAAMrO,KAAMysE,mBAAoBh6D,EAAKzS,KAAOysE,gCAGpCA,oBAEhBJ,EAhjBA,CAA4B7B,2gBCsO5BwF,GA/PA,SAAAvsE,GAMK,SACHwsE,EAAY/vD,EAAW+0B,EAAWlkC,EAAYiyC,OAA9Cp/C,EACEH,EAAAI,KAAA7D,KAAMkgB,EAAW+0B,EAAWlkC,EAAYiyC,IAAUhjD,YAMlD4D,EAAKssE,mBAAqB,KAM1BtsE,EAAKgjE,OAAS,KAMdhjE,EAAKusE,sBAAmBjrE,EAMxBtB,EAAKwsE,cAAWlrE,EAMhBtB,EAAKysE,cAAWnrE,EAMhBtB,EAAK0sE,aAAUprE,EAMftB,EAAK68D,cAAWv7D,EAMhBtB,EAAK2sE,cAAWrrE,EAMhBtB,EAAK4sE,cAAWtrE,EAMhBtB,EAAK88D,qBAAkBx7D,EAMvBtB,EAAKspD,eAAYhoD,EAMjBtB,EAAKg9D,YAAS17D,EAMdtB,EAAKsiE,YAAShhE,EAOdtB,EAAK6sE,6BAA0BvrE,WA7FFwrE,GAAAT,EAAAxsE,GAoG/BwsE,EAAA7vE,UAAAqrE,UAAS,SAACC,EAAezoD,WACb2jD,aAGLoH,cAActC,EAAezoD,OAC5BrT,EAAkB87D,EAAc1mD,qBAChClV,EAAS47D,EAAczmD,YACvB0rD,EAAO3wE,KAAQiO,YAAY7M,OAC3B+rE,EAAKntE,KAAQitE,2BAA2Br9D,EAAiBE,QAC1D48D,aAAappE,KAAI,CACpBinE,GAAkBX,WAClB+G,EACAxD,OACKvG,YAEAwJ,SAAQpwE,KAAQmwE,sBAChBE,SAAQrwE,KAAQmwE,iBACrBhkE,KAAKqrC,KAAIx3C,KAAMswE,QAAOtwE,KAAQmwE,uBACzB1P,cACA8P,cACAC,cACA9P,qBACAxT,gBAEG0T,OAAO,GAAC5gE,KAASgjD,WAAUhjD,KAASmwE,sBACpCvP,OAAO,GAAC5gE,KAASgjD,WAAUhjD,KAASmwE,kBAE5ChkE,KAAKqrC,KAAIx3C,KAAMkmE,OAAMlmE,KAAQmwE,uBACxBM,+BAEF7D,yBAAyBtpE,KAAI,CAChCinE,GAAkBX,WAClB+G,EACAxD,OACK+C,wBAEAE,cACAC,cACAC,aACA7P,cACA8P,cACAC,cACA9P,qBACAxT,eACA0T,YACAsF,YACAuK,+BAEFrC,YAAYnrD,KAOnBgtD,EAAA7vE,UAAAirE,eAAc,SAACC,EAAoBroD,WACvB2jD,aAGLoH,cAAc1C,EAAoBroD,OACjCrT,EAAkB07D,EAAmBtmD,qBACrClV,EAASw7D,EAAmBrmD,YAC5B0rD,EAAO3wE,KAAQiO,YAAY7M,OAC3B+rE,EAAKntE,KAAQitE,2BAA2Br9D,EAAiBE,QAC1D48D,aAAappE,KAAI,CACpBinE,GAAkBX,WAClB+G,EACAxD,OACKvG,YAEAwJ,SAAQpwE,KAAQmwE,sBAChBE,SAAQrwE,KAAQmwE,iBACrBhkE,KAAKqrC,KAAIx3C,KAAMswE,QAAOtwE,KAAQmwE,uBACzB1P,cACA8P,cACAC,cACA9P,qBACAxT,gBAEG0T,OAAO,GAAC5gE,KAASgjD,WAAUhjD,KAASmwE,sBACpCvP,OAAO,GAAC5gE,KAASgjD,WAAUhjD,KAASmwE,kBAE5ChkE,KAAKqrC,KAAIx3C,KAAMkmE,OAAMlmE,KAAQmwE,uBACxBM,+BAEF7D,yBAAyBtpE,KAAI,CAChCinE,GAAkBX,WAClB+G,EACAxD,OACK+C,wBAEAE,cACAC,cACAC,aACA7P,cACA8P,cACAC,cACA9P,qBACAxT,eACA0T,YACAsF,YACAuK,+BAEFrC,YAAYnrD,KAMnBgtD,EAAA7vE,UAAAiuE,OAAM,uBACCC,uCAEA8B,cAAWlrE,OACXmrE,cAAWnrE,OACXgrE,mBAAqB,UACrBtJ,OAAS,UACTuJ,sBAAmBjrE,OACnBorE,aAAUprE,OACV07D,YAAS17D,OACTu7D,cAAWv7D,OACXqrE,cAAWrrE,OACXsrE,cAAWtrE,OACXw7D,qBAAkBx7D,OAClBgoD,eAAYhoD,OACZghE,YAAShhE,EACPzB,EAAArD,UAAMiuE,OAAMxqE,KAAA7D,OAOrBiwE,EAAA7vE,UAAA2rE,cAAa,SAACC,EAAY4E,OAClB1zD,EAAS8uD,EAAW5K,YACpBnwD,EAAO+6D,EAAW5kB,UAClBypB,EAAoB7E,EAAW1K,uBAC/BuF,EAAQmF,EAAW3K,SAAQrhE,KAAMgjD,YACjC8tB,EAAS9E,EAAWrK,iBACrBwO,iBAAmBnE,EAAWzK,cAAavhE,KAAMgjD,iBACjDotB,SAAWlzD,EAAO,QAClBmzD,SAAWnzD,EAAO,QAClBgzD,mBAAqBW,OACrBjK,OAASC,OACTyJ,QAAUr/D,EAAK,QACfwvD,SAAWuL,EAAW9xC,kBACtBq2C,SAAWO,EAAO,QAClBN,SAAWM,EAAO,QAClBpQ,gBAAkBsL,EAAW/K,yBAC7B/T,UAAY8e,EAAWhxB,mBACvB4lB,OAASoL,EAAW7K,qBACpB+E,OAASj1D,EAAK,QACdw/D,wBAA0BG,GAEnCX,EA7PA,CAAiCc,GAAAhqE,ghBC4JjCiqE,GAxJA,SAAAvtE,GAMK,SACHwtE,EAAY/wD,EAAW+0B,EAAWlkC,EAAYiyC,UAC5Cv/C,EAAAI,KAAA7D,KAAMkgB,EAAW+0B,EAAWlkC,EAAYiyC,IAAUhjD,YARhBkxE,GAAAD,EAAAxtE,GAmBpCwtE,EAAA7wE,UAAA+wE,qBAAoB,SAACvhE,EAAiBC,EAAQrO,EAAKsO,OAC3C6gE,EAAO3wE,KAAQiO,YAAY7M,OAC3B+rE,EAAKntE,KAAQotE,0BACjBx9D,EACAC,EACArO,EACAsO,GACA,GACA,GAEIshE,EAAuB,CAC3B7G,GAAkBR,gBAClB4G,EACAxD,eAEGT,aAAappE,KAAK8tE,QAClBxE,yBAAyBtpE,KAAK8tE,GAC5B5vE,GAOTyvE,EAAA7wE,UAAA6qE,eAAc,SAACC,EAAoBjoD,OAC3B8W,EAAK/5B,KAAQ+5B,MACb0pC,EAAc1pC,EAAM0pC,YACpBqB,EAAY/qC,EAAM+qC,kBACJ5/D,IAAhBu+D,QAA2Cv+D,IAAd4/D,QAG5ByK,kBAAkBx1C,EAAK/5B,KAAOmvE,kBAC9BnB,cAAc9C,EAAoBjoD,QAClC2pD,yBAAyBtpE,KAAI,CAE9BinE,GAAkBN,iBAClBlwC,EAAM0pC,YACN1pC,EAAM+qC,UACN/qC,EAAM2pC,QACN3pC,EAAM4pC,SACN5pC,EAAM6pC,WACNjgC,G/DyC6B,G+DtC/B0mC,QAEIz6D,EAAkBs7D,EAAmBlmD,qBACrClV,EAASo7D,EAAmBjmD,iBAC7BksD,qBACHvhE,EACA,EACAA,EAAgBxO,OAChB0O,QAEG88D,yBAAyBtpE,KAAK8mE,SAC9BgE,YAAYnrD,KAOnBguD,EAAA7wE,UAAA+qE,oBAAmB,SAACC,EAAyBnoD,OACrC8W,EAAK/5B,KAAQ+5B,MACb0pC,EAAc1pC,EAAM0pC,YACpBqB,EAAY/qC,EAAM+qC,kBACJ5/D,IAAhBu+D,QAA2Cv+D,IAAd4/D,QAG5ByK,kBAAkBx1C,EAAK/5B,KAAOmvE,kBAC9BnB,cAAc5C,EAAyBnoD,QACvC2pD,yBAAyBtpE,KAAI,CAE9BinE,GAAkBN,iBAClBlwC,EAAM0pC,YACN1pC,EAAM+qC,UACN/qC,EAAM2pC,QACN3pC,EAAM4pC,SACN5pC,EAAM6pC,WACN7pC,EAAM8pC,SACN9pC,EAAM+pC,gBAERuG,YAEI9jD,EAAO6kD,EAAwBn+C,UAC/Brd,EAAkBw7D,EAAwBpmD,qBAC1ClV,EAASs7D,EAAwBnmD,YACnCpV,EAAS,EACJxO,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAC1CwO,EAAM7P,KAAQmxE,qBACZvhE,EACAC,EACuB0W,EAAKllB,GAC5ByO,QAGC88D,yBAAyBtpE,KAAK8mE,SAC9BgE,YAAYnrD,KAMnBguD,EAAA7wE,UAAAiuE,OAAM,eACEt0C,EAAK/5B,KAAQ+5B,aAEG70B,MAApB60B,EAAMs3C,YACNt3C,EAAMs3C,YAAUrxE,KAASiO,YAAY7M,QAAMpB,KAEtC0sE,aAAappE,KAAK8mE,SAEpBkE,uCACAv0C,MAAQ,KACNt2B,EAAArD,UAAMiuE,OAAMxqE,KAAA7D,OAMrBixE,EAAA7wE,UAAA+uE,YAAW,SAACp1C,GAEY70B,MAApB60B,EAAMs3C,YACNt3C,EAAMs3C,YAAUrxE,KAASiO,YAAY7M,cAEhCsrE,aAAappE,KAAK8mE,IACvBrwC,EAAMs3C,WAAUrxE,KAAQiO,YAAY7M,QAEtC24B,EAAMs3C,WAAa,EACnB5tE,EAAArD,UAAM+uE,YAAWtrE,KAAA7D,KAAC+5B,QACb2yC,aAAappE,KAAK+mE,KAE3B4G,EAtJA,CAAsCF,GAAAhqE,ghBCsPtCuqE,GAnPA,SAAA7tE,GAMK,SACH8tE,EAAYrxD,EAAW+0B,EAAWlkC,EAAYiyC,UAC5Cv/C,EAAAI,KAAA7D,KAAMkgB,EAAW+0B,EAAWlkC,EAAYiyC,IAAUhjD,YARnBwxE,GAAAD,EAAA9tE,GAmBjC8tE,EAAAnxE,UAAAqxE,sBAAqB,SAAC7hE,EAAiBC,EAAQ0W,EAAMzW,OAC7CiqB,EAAK/5B,KAAQ+5B,MACbuoC,OAA2Bp9D,IAApB60B,EAAM8qC,UACbhC,OAA+B39D,IAAtB60B,EAAM0pC,YACfiO,EAAUnrD,EAAKnlB,YAChBsrE,aAAappE,KAAK+mE,SAClBuC,yBAAyBtpE,KAAK+mE,YAC1BhpE,EAAI,EAAGA,EAAIqwE,IAAWrwE,EAAC,KACxBG,EAAM+kB,EAAKllB,GACXsvE,EAAO3wE,KAAQiO,YAAY7M,OAC3B+rE,EAAKntE,KAAQotE,0BACjBx9D,EACAC,EACArO,EACAsO,GACA,GACC+yD,GAEGuO,EAAuB,CAC3B7G,GAAkBR,gBAClB4G,EACAxD,QAEGT,aAAappE,KAAK8tE,QAClBxE,yBAAyBtpE,KAAK8tE,GAC/BvO,SAGG6J,aAAappE,KAAKgnE,SAClBsC,yBAAyBtpE,KAAKgnE,KAErCz6D,EAASrO,SAEP8gE,SACGoK,aAAappE,KAAK6mE,SAClByC,yBAAyBtpE,KAAK6mE,KAEjCtH,SACG6J,aAAappE,KAAK8mE,SAClBwC,yBAAyBtpE,KAAK8mE,KAE9Bv6D,GAOT0hE,EAAAnxE,UAAAwqE,WAAU,SAACC,EAAgB5nD,OACnB8W,EAAK/5B,KAAQ+5B,MACb8qC,EAAY9qC,EAAM8qC,UAClBpB,EAAc1pC,EAAM0pC,oBACRv+D,IAAd2/D,QAA2C3/D,IAAhBu+D,QAG1BkO,4BACA3D,cAAcnD,EAAgB5nD,QACX/d,IAApB60B,EAAM8qC,WAAuB7kE,KAC1B4sE,yBAAyBtpE,KAAI,CAChCinE,GAAkBP,eAClBvmC,UAGsBv+B,IAAtB60B,EAAM0pC,aAAyBzjE,KAC5B4sE,yBAAyBtpE,KAAI,CAChCinE,GAAkBN,iBAClBlwC,EAAM0pC,YACN1pC,EAAM+qC,UACN/qC,EAAM2pC,QACN3pC,EAAM4pC,SACN5pC,EAAM6pC,WACN7pC,EAAM8pC,SACN9pC,EAAM+pC,qBAGJl0D,EAAkBi7D,EAAe7lD,qBACjClV,EAAS+6D,EAAe5lD,YACxB0rD,EAAO3wE,KAAQiO,YAAY7M,YAC5BgsE,0BACHx9D,EACA,EACAA,EAAgBxO,OAChB0O,GACA,GACA,OAEI8hE,EAAiB,CAAIrH,GAAkBf,OAAQmH,QAChDjE,aAAappE,KAAK+mE,GAAsBuH,QACxChF,yBAAyBtpE,KAAK+mE,GAAsBuH,QACjC1sE,IAApB60B,EAAM8qC,iBACH6H,aAAappE,KAAK6mE,SAClByC,yBAAyBtpE,KAAK6mE,UAEXjlE,IAAtB60B,EAAM0pC,mBACHiJ,aAAappE,KAAK8mE,SAClBwC,yBAAyBtpE,KAAK8mE,UAEhCgE,YAAYnrD,KAOnBsuD,EAAAnxE,UAAAurE,YAAW,SAACC,EAAiB3oD,OACrB8W,EAAK/5B,KAAQ+5B,MACb8qC,EAAY9qC,EAAM8qC,UAClBpB,EAAc1pC,EAAM0pC,oBACRv+D,IAAd2/D,QAA2C3/D,IAAhBu+D,QAG1BkO,4BACA3D,cAAcpC,EAAiB3oD,QACZ/d,IAApB60B,EAAM8qC,WAAuB7kE,KAC1B4sE,yBAAyBtpE,KAAI,CAChCinE,GAAkBP,eAClBvmC,UAGsBv+B,IAAtB60B,EAAM0pC,aAAyBzjE,KAC5B4sE,yBAAyBtpE,KAAI,CAChCinE,GAAkBN,iBAClBlwC,EAAM0pC,YACN1pC,EAAM+qC,UACN/qC,EAAM2pC,QACN3pC,EAAM4pC,SACN5pC,EAAM6pC,WACN7pC,EAAM8pC,SACN9pC,EAAM+pC,qBAGJv9C,EAAOqlD,EAAgB3+C,UACvBrd,EAAkBg8D,EAAgBn7C,6BAClC3gB,EAAS87D,EAAgB3mD,iBAC1BwsD,sBACH7hE,EACA,EAC8B2W,EAC9BzW,QAEGs+D,YAAYnrD,KAOnBsuD,EAAAnxE,UAAAmrE,iBAAgB,SAACC,EAAsBvoD,OAC/B8W,EAAK/5B,KAAQ+5B,MACb8qC,EAAY9qC,EAAM8qC,UAClBpB,EAAc1pC,EAAM0pC,oBACRv+D,IAAd2/D,QAA2C3/D,IAAhBu+D,QAG1BkO,4BACA3D,cAAcxC,EAAsBvoD,QACjB/d,IAApB60B,EAAM8qC,WAAuB7kE,KAC1B4sE,yBAAyBtpE,KAAI,CAChCinE,GAAkBP,eAClBvmC,UAGsBv+B,IAAtB60B,EAAM0pC,aAAyBzjE,KAC5B4sE,yBAAyBtpE,KAAI,CAChCinE,GAAkBN,iBAClBlwC,EAAM0pC,YACN1pC,EAAM+qC,UACN/qC,EAAM2pC,QACN3pC,EAAM4pC,SACN5pC,EAAM6pC,WACN7pC,EAAM8pC,SACN9pC,EAAM+pC,yBAGJj7C,EAAQ2iD,EAAqBx4C,WAC7BpjB,EAAkB47D,EAAqB/6C,6BACvC3gB,EAAS07D,EAAqBvmD,YAChCpV,EAAS,EACJxO,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAC3CwO,EAAM7P,KAAQyxE,sBACZ7hE,EACAC,EACAgZ,EAAMxnB,GACNyO,QAGCs+D,YAAYnrD,KAMnBsuD,EAAAnxE,UAAAiuE,OAAM,gBACCC,uCACAv0C,MAAQ,SAKP7Z,EAASlgB,KAAQkgB,aACL,IAAdA,UACIjS,EAAWjO,KAAQiO,YAChB5M,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAQC,EAAIuB,IAAMvB,EACjD4M,EAAY5M,GAAK4mB,GAAKha,EAAY5M,GAAI6e,UAGnCzc,EAAArD,UAAMiuE,OAAMxqE,KAAA7D,OAMrBuxE,EAAAnxE,UAAAuxE,qBAAoB,eACZ53C,EAAK/5B,KAAQ+5B,WAED70B,IADA60B,EAAM8qC,WACG7kE,KACpBqvE,gBAAgBt1C,EAAK/5B,KAAOivE,iBAET/pE,IAAtB60B,EAAM0pC,aAAyBzjE,KAC5BuvE,kBAAkBx1C,EAAK/5B,KAAOmvE,cAGzCoC,EAjPA,CAAmCR,GAAAhqE,4FCFnC8qE,GAEM,gBCAUC,GAAcC,EAAUniE,EAAiBC,EAAQrO,EAAKsO,OAM1DzO,EAAG2wE,EAAKC,EAAKxgE,EAAII,EAAIqgE,EAAKC,EAAKC,EAAKC,EAL1CC,EAAaziE,EACb0iE,EAAW1iE,EACX2iE,EAAS,EACTxoD,EAAI,EACJ9Q,EAAQrJ,MAEPxO,EAAIwO,EAAQxO,EAAIG,EAAKH,GAAKyO,EAAM,KAC7B4B,EAAK9B,EAAgBvO,GACrByQ,EAAKlC,EAAgBvO,EAAI,QACpB6D,IAAPuM,IACF2gE,EAAM1gE,EAAKD,EACX4gE,EAAMvgE,EAAKD,EACXogE,EAAM9lE,KAAK4N,KAAKq4D,EAAMA,EAAMC,EAAMA,QACtBntE,IAARgtE,IACFloD,GAAKgoD,EACE7lE,KAAKsmE,MAAMP,EAAME,EAAMD,EAAME,IAAQL,EAAMC,IACvCF,IACL/nD,EAAIwoD,IACNA,EAASxoD,EACTsoD,EAAap5D,EACbq5D,EAAWlxE,GAEb2oB,EAAI,EACJ9Q,EAAQ7X,EAAIyO,IAGhBkiE,EAAMC,EACNC,EAAME,EACND,EAAME,GAER5gE,EAAKC,EACLG,EAAKC,SAEPkY,GAAKioD,GACMO,EAAM,CAAIt5D,EAAO7X,IAAMixE,EAAYC,ieClBnCG,GAAU,MACb,MACD,SACG,SACD,QACA,MACF,SACG,WACC,cACG,eACC,UACL,GAsjBZC,GAnjBA,SAAAlvE,GAMK,SACHmvE,EAAY1yD,EAAW+0B,EAAWlkC,EAAYiyC,OAA9Cp/C,EACEH,EAAAI,KAAA7D,KAAMkgB,EAAW+0B,EAAWlkC,EAAYiyC,IAAUhjD,YAMlD4D,EAAKivE,QAAU,KAMfjvE,EAAKmjE,MAAK,GAMVnjE,EAAKkvE,aAAe,EAMpBlvE,EAAKmvE,aAAe,EAMpBnvE,EAAKovE,yBAAsB9tE,EAM3BtB,EAAKqvE,cAAgB,EAMrBrvE,EAAKsvE,eAAiB,KAKtBtvE,EAAKuvE,WAAU,GAMfvvE,EAAKwvE,iBAAmB,KAKxBxvE,EAAKyvE,aAAY,GAMjBzvE,EAAK0vE,WAAU,GAKf1vE,EAAK2vE,WAAU,GAMf3vE,EAAK4vE,SAAQ,GAMb5vE,EAAK6vE,SAAQ,GAMb7vE,EAAK8vE,WAAU,GAOf9vE,EAAK6sE,6BAA0BvrE,WAtGHyuE,GAAAf,EAAAnvE,GA4G9BmvE,EAAAxyE,UAAAiuE,OAAM,eACE3B,EAAejpE,EAAArD,UAAMiuE,OAAMxqE,KAAA7D,aACjC0sE,EAAa6G,WAAUvzE,KAAQuzE,WAC/B7G,EAAayG,WAAUnzE,KAAQmzE,WAC/BzG,EAAa2G,aAAYrzE,KAAQqzE,aAC1B3G,GAOTkG,EAAAxyE,UAAAyrE,SAAQ,SAACnhE,EAAUuY,OACX2wD,EAAS5zE,KAAQkzE,eACjBW,EAAW7zE,KAAQozE,iBACnBU,EAAS9zE,KAAQszE,cACT,UAALvM,OAAiB+M,IAAeF,GAAcC,QAIjD5lE,EAAWjO,KAAQiO,YACrB1M,EAAQ0M,EAAY7M,OAElB2yE,EAAerpE,EAASyV,UAC1BvQ,EAAkB,KAClBE,EAASpF,EAASua,eAGpB6uD,EAAUE,YAAcnC,IACvBkC,GAAgB77D,IACf67D,GAAgB77D,IAChB67D,GAAgB77D,IAChB67D,GAAgB77D,QAkDd+7D,EAAiBH,EAAUhwB,SAAW,KAAI,UACtCiwB,QACD77D,QACAA,GACHtI,EAA6ElF,EAAUsa,gCAEpF9M,GACHtI,EAA6ElF,EAAU2hB,6BAEpFnU,GACHtI,EAAyElF,EAAUknB,uBAEhF1Z,GACHtI,EAAkFlF,EAAU2iB,mBAC5Fvd,EAAS,aAENoI,GACHtI,EAA0ElF,EAAUgmB,uBAC/EojD,EAAUhwB,UACbmwB,EAAe3wE,KAAKsM,EAAgB,GAAC5P,KAAS+Q,YAEhDjB,EAAS,aAENoI,OACGib,EAA8EzoB,EAAUuoB,wBAC9FrjB,EAAe,OACNvO,EAAI,EAAGuB,EAAKuwB,EAAe/xB,OAAQC,EAAIuB,EAAIvB,GAAK,EAClDyyE,EAAUhwB,UACbmwB,EAAe3wE,KAAK6vB,EAAe9xB,EAAI,GAACrB,KAAS+Q,YAEnDnB,EAAgBtM,KAAK6vB,EAAe9xB,GAAI8xB,EAAe9xB,EAAI,OAE9B,IAA3BuO,EAAgBxO,OAAY,OAGhC0O,EAAS,MAIPtO,EAAGxB,KAAQitE,2BAA2Br9D,EAAiBE,MACjDvO,EAAK,UAIf0yE,IACCzyE,EAAMD,GAAS,GAAMqO,EAAgBxO,OAAS0O,EAAM,KAEjDokE,EAAM3yE,EAAQ,EAClB0yE,EAAiBA,EAAeh3B,QAAM,SAAEhW,EAAG1H,OACnC40C,EACJlmE,EAAwB,GAAXimE,EAAM30C,MAAY3vB,EAAgB2vB,EAAIzvB,IACnD7B,EAAwB,GAAXimE,EAAM30C,GAAS,KAAO3vB,EAAgB2vB,EAAIzvB,EAAS,UAC7DqkE,KACDD,EAEGC,UAINC,mBAEDN,EAAUO,gBAAkBP,EAAUQ,yBACnCxI,mBACHgI,EAAUO,eACVP,EAAUQ,kBAERR,EAAUO,sBACPhF,gBAAervE,KAAM+5B,MAAK/5B,KAAOivE,iBACjCrC,yBAAyBtpE,KAAItD,KAAMivE,WAAUjvE,KAAM+5B,SAEtD+5C,EAAUQ,wBACP/E,kBAAiBvvE,KAAM+5B,MAAK/5B,KAAOmvE,kBACnCvC,yBAAyBtpE,KAAItD,KAAMovE,aAAYpvE,KAAM+5B,eAIzDi0C,cAActjE,EAAUuY,OAGzBijB,EAAU4tC,EAAU5tC,WAEtBA,GAAWlC,KACV8vC,EAAUh0D,MAAM,GAAK,GAAKg0D,EAAUh0D,MAAM,GAAK,GAAC,KAE7Cy0D,EAAKT,EAAU5tC,QAAQ,GACvB45B,EAAKgU,EAAU5tC,QAAQ,GACvBsuC,EAAKV,EAAU5tC,QAAQ,GACvBuuC,EAAKX,EAAU5tC,QAAQ,GACvB4tC,EAAUh0D,MAAM,GAAK,IACvBggD,GAAMA,EACN2U,GAAMA,GAEJX,EAAUh0D,MAAM,GAAK,IACvBy0D,GAAMA,EACNC,GAAMA,GAERtuC,EAAO,CAAIquC,EAAIzU,EAAI0U,EAAIC,OAMnBC,EAAU10E,KAAQgjD,gBACnB0pB,aAAappE,KAAI,CACpBinE,GAAkBX,WAClBroE,EACAC,EACA,KACAge,IACAA,IACAA,IACA,EACA,EACA,OACKwzD,yBACAC,eACJ,EAAG,GACJzzD,SACKixD,wBACLvqC,GAAWlC,GACPA,GACAkC,EAAQxR,KAAG,SAAW+nC,UACbA,EAAIiY,OAEfZ,EAAUO,iBACVP,EAAUQ,sBACPvN,WACAyM,cACAE,gBACAD,cACAX,kBACAC,aACLkB,QAEIn0D,EAAQ,EAAI40D,OACb9H,yBAAyBtpE,KAAI,CAChCinE,GAAkBX,WAClBroE,EACAC,EACA,KACAge,IACAA,IACAA,IACA,EACA,EACA,OACKwzD,yBACAC,eACJnzD,EAAOA,GACRN,SACKixD,wBACLvqC,IACE4tC,EAAUO,iBACVP,EAAUQ,sBACPvN,WACAyM,cACAE,gBACAD,cACAX,kBACAC,aACLkB,SAGG7F,YAAYnrD,OArN2B,KAEvC9Q,GAAUnS,KAAMktE,uBAAwBxiE,EAAS0J,aAAS,WAG3DmS,OAAI,KACR3W,EAAkBlF,EAASsa,qBACvB+uD,GAAgB77D,GAClBqO,EAAI,CAAI3W,EAAgBxO,gBACf2yE,GAAgB77D,GACzBqO,EAAuE7b,EAAUuiB,kBACxE8mD,GAAgB77D,GACzBqO,EAA+D7b,EAC5DuiB,UACAze,MAAM,EAAG,WACHulE,GAAgB77D,GAA0B,KAC7C2Q,EAAqEne,EAAUsoB,WACrFzM,EAAI,WACKllB,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAC3CklB,EAAKjjB,KAAKulB,EAAMxnB,GAAG,SAGlB2sE,cAActjE,EAAUuY,WACvB0xD,EAAYb,EAAUa,UACxBC,EAAa,EACbC,OAAO,EACF3rD,EAAI,EAAG4rD,EAAKvuD,EAAKnlB,OAAQ8nB,EAAI4rD,IAAM5rD,EAAC,IAC1BhkB,MAAbyvE,EAAsB,KAClBI,EAAQjD,GACZgC,EAAU/B,SACVniE,EACAglE,EACAruD,EAAK2C,GACLpZ,GAEF8kE,EAAaG,EAAM,GACnBF,EAAUE,EAAM,QAEhBF,EAAUtuD,EAAK2C,WAER7nB,EAAIuzE,EAAYvzE,EAAIwzE,EAASxzE,GAAKyO,EACzC7B,EAAY3K,KAAKsM,EAAgBvO,GAAIuO,EAAgBvO,EAAI,QAErDG,EAAMyM,EAAY7M,OACxBwzE,EAAaruD,EAAK2C,QACb8rD,WAAWzzE,EAAOC,GACvBD,EAAQC,OAEL4sE,YAAYnrD,MA4KrB2vD,EAAAxyE,UAAAg0E,gBAAe,eACPP,EAAW7zE,KAAQozE,iBACnBU,EAAS9zE,KAAQszE,WACjBM,EAAS5zE,KAAQkzE,eAEjB+B,EAASj1E,KAAQ0zE,WACnBG,IACIoB,KAASj1E,KAASqzE,eAAYrzE,KAC7BqzE,aAAa4B,GAAS,CACzBxR,YAAaoQ,EAAYpQ,YACzBC,QAASmQ,EAAYnQ,QACrBI,eAAgB+P,EAAY/P,eAC5BgB,UAAW+O,EAAY/O,UACvBnB,SAAUkQ,EAAYlQ,SACtBC,WAAYiQ,EAAYjQ,WACxBC,SAAUgQ,EAAYhQ,gBAItBqR,EAAOl1E,KAAQwzE,SACf0B,KAAOl1E,KAASuzE,aAAUvzE,KACzBuzE,WAAW2B,GAAO,CACrB3vC,KAAMuuC,EAAUvuC,KAChBovC,UAAWb,EAAUa,WAAa7wC,GAClCqxC,aAAcrB,EAAUqB,cAAgBpxC,GACxCjkB,MAAOg0D,EAAUh0D,YAGfs1D,EAAOp1E,KAAQyzE,SACjBG,IACIwB,KAAOp1E,KAASmzE,aAAUnzE,KACzBmzE,WAAWiC,GAAO,CACrBvQ,UAAW+O,EAAU/O,cAW7B+N,EAAAxyE,UAAA40E,WAAU,SAACzzE,EAAOC,OACVqyE,EAAW7zE,KAAQozE,iBACnBU,EAAS9zE,KAAQszE,WAEjB2B,EAASj1E,KAAQ0zE,WACjBwB,EAAOl1E,KAAQwzE,SACf4B,EAAOp1E,KAAQyzE,cAChBW,sBAECpxB,EAAUhjD,KAAQgjD,WAClBqyB,EAAW3C,GAAWoB,EAAUqB,cAEhCvuC,EAAO5mC,KAAQ+yE,aAAe/vB,EAC9Bpe,EAAI5kC,KAAQ+mE,MACZhD,EAAc8P,EACfA,EAAY/O,UAAY34D,KAAKkjB,IAAIykD,EAAUh0D,MAAM,IAAO,EACzD,OAEC4sD,aAAappE,KAAI,CACpBinE,GAAkBZ,WAClBpoE,EACAC,EACA6zE,EACAvB,EAAUhwB,SACVsxB,EACAtB,EAAU/B,SACV/uB,EACApc,EACAquC,EACAlR,EAAc/gB,EACdpe,EACAswC,EACA,SAEGtI,yBAAyBtpE,KAAI,CAChCinE,GAAkBZ,WAClBpoE,EACAC,EACA6zE,EACAvB,EAAUhwB,SACVsxB,EACAtB,EAAU/B,SACV,EACAnrC,EACAquC,EACAlR,EACAn/B,EACAswC,EACA,EAAIlyB,KAQR4vB,EAAAxyE,UAAA8rE,aAAY,SAACC,EAAWyE,OAClBkD,EAAWF,EAAWC,KACrB1H,OAGGmJ,EAAgBnJ,EAAUjJ,UAC3BoS,IAIH1B,EAAS5zE,KAAQkzE,kBAEfU,EAAS,QACJV,eAAiBU,GAExBA,EAAU/O,UAAY7C,GACpBsT,EAActR,YAAcvgC,MAT9BmwC,EAAY,UACPV,eAAiBU,OAYlB2B,EAAkBpJ,EAAU/I,eAC7BmS,IAIH1B,EAAW7zE,KAAQozE,oBAEjBS,EAAW,QACNT,iBAAmBS,OAEpBhQ,EAAW0R,EAAgBrR,cAC3BJ,EAAiByR,EAAgBpR,oBACjCW,EAAYyQ,EAAgBtR,WAC5BL,EAAa2R,EAAgBjR,gBACnCuP,EAAYnQ,QAAU6R,EAAgBlR,cAAgB3gC,GACtDmwC,EAAYhQ,SAAWA,EAAWA,EAASr1D,QAAUm1B,GACrDkwC,EAAY/P,oBACS5+D,IAAnB4+D,EnE7a2B,EmE6a4BA,EACzD+P,EAAYlQ,SAAW4R,EAAgBnR,eAAiBxgC,GACxDiwC,EAAY/O,eACI5/D,IAAd4/D,EnEtYsB,EmEsYuBA,EAC/C+O,EAAYjQ,gBACK1+D,IAAf0+D,EnEtauB,GmEsawBA,EACjDiQ,EAAYpQ,YAAczB,GACxBuT,EAAgBvR,YAAcngC,SAtBhCgwC,EAAc,UACTT,iBAAmBS,EAyB1BC,EAAS9zE,KAAQszE,eACX/tC,EAAO4mC,EAAUqJ,WAAahyC,GACpCgB,GAAae,OACPkwC,EAAYtJ,EAAUhL,gBAC5B2S,EAAUhwB,SAAWqoB,EAAUuJ,cAC/B5B,EAAUvuC,KAAOA,EACjBuuC,EAAU/B,SAAW5F,EAAUwJ,cAC/B7B,EAAUE,UAAY7H,EAAUyJ,eAChC9B,EAAUa,UAAYxI,EAAU0J,eAChC/B,EAAUqB,aACRhJ,EAAU2J,mBAAqB/xC,GACjC+vC,EAAUO,eAAiBlI,EAAU4J,oBACrCjC,EAAUQ,iBAAmBnI,EAAU6J,sBACvClC,EAAU5tC,QAAUimC,EAAU8J,cAAgBjyC,GAC9C8vC,EAAUh0D,WAAsB5a,IAAduwE,EAAuB,CAAI,EAAG,GAAKA,MAE/CS,EAAc/J,EAAUgK,aACxBC,EAAcjK,EAAUkK,aACxBC,EAAqBnK,EAAUlL,oBAC/BsV,EAAepK,EAAUnxB,mBAC1B+rB,MAAQoF,EAAUlF,WAAO,QACzB6L,kBAA+B5tE,IAAhBgxE,EAA4B,EAAIA,OAC/CnD,kBAA+B7tE,IAAhBkxE,EAA4B,EAAIA,OAC/CpD,yBACoB9tE,IAAvBoxE,GAA2CA,OACxCrD,mBAAiC/tE,IAAjBqxE,EAA6B,EAAIA,OAEjD7C,WAAaG,GACiB,iBAAvBA,EAAYpQ,YAChBoQ,EAAYpQ,YACZt8D,EAAO0sE,EAAYpQ,cACvBoQ,EAAYnQ,QACZmQ,EAAY/P,eAAc,IAE1B+P,EAAY/O,UACZ+O,EAAYlQ,SACZkQ,EAAYjQ,WAAU,IAEtBiQ,EAAYhQ,SAAS/1D,OAAI,IACtB,QAEF0lE,SACHM,EAAUvuC,KACVuuC,EAAUh0D,OACTg0D,EAAUa,WAAS,MACnBb,EAAUqB,cAAY,UACpB1B,SAAWG,EACc,iBAAnBA,EAAU/O,UACf+O,EAAU/O,UAAS,IACb19D,EAAOysE,EAAU/O,WAAS,QA/F1B7kE,KACP+mE,MAAK,QAiGP0J,wBAA0BG,GAEnCgC,EAjjBA,CAAgC7B,GAAAhqE,SC/B1ByvE,GAAkB,QACZC,GAAA1vE,gBACCgqE,GAAAhqE,cACF2vE,GAAA3vE,mBACK4vE,GAAA5vE,gBACH0vE,GAAA1vE,aACH6vE,GAAA7vE,SAqFV8vE,GAlFA,WAMK,SACHC,EAAY52D,EAAW+0B,EAAWlkC,EAAYiyC,GAIzChjD,KACE+2E,WAAa72D,EAKflgB,KACEg3E,WAAa/hC,EAKfj1C,KACE+iD,YAAcC,EAKhBhjD,KACEi3E,YAAclmE,EAKhB/Q,KACEk3E,kBAAiB,UAMxBJ,EAAA12E,UAAAiuE,OAAM,eACE8I,EAAmB,WACdC,KAAIp3E,KAASk3E,kBAAiB,CACvCC,EAAoBC,GAAQD,EAAoBC,IAAI,OAC9CC,EAAQr3E,KAAQk3E,kBAAkBE,WAC7BE,KAAcD,EAAQ,KACzBE,EAAqBF,EAASC,GAAYjJ,SAChD8I,EAAoBC,GAAME,GAAcC,UAGrCJ,GAQTL,EAAA12E,UAAAo3E,WAAU,SAACr+C,EAAQs+C,OACXC,OAAuBxyE,IAAXi0B,EAAuBA,EAAOisB,WAAQ,IACpDuyB,EAAO33E,KAAQk3E,kBAAkBQ,QACrBxyE,IAAZyyE,IACFA,EAAO,QACFT,kBAAkBQ,GAAaC,OAElCC,EAASD,EAAQF,QACNvyE,IAAX0yE,IAEFA,EAAM,IAAOC,EADOrB,GAAmBiB,IACfz3E,KACjB+2E,WAAU/2E,KACVg3E,WAAUh3E,KACVi3E,YAAWj3E,KACX+iD,aAEP40B,EAAQF,GAAeG,UAElBA,GAEXd,EAhFA,ujBCwKAgB,GAlLA,SAAAr0E,GAGK,SACHs0E,EAAY/9C,OAAZp2B,EACEH,EAAAI,KAAA7D,OAAAA,YAGA4D,EAAKo0E,wBAA0Bp0E,EAAKq0E,mBAAmBryE,KAAKhC,GAM5DA,EAAKs0E,OAASl+C,EAKdp2B,EAAKu0E,uBAAyB,cAnBNC,GAAAL,EAAAt0E,GA4B1Bs0E,EAAA33E,UAAAy8B,YAAW,SAACC,UACH91B,KAST+wE,EAAA33E,UAAAg9B,aAAY,SAACH,UACJj2B,KAUT+wE,EAAA33E,UAAAi9B,YAAW,SAACJ,EAAY98B,UACf6G,KAST+wE,EAAA33E,UAAAi4E,mBAAkB,SAACC,EAAO38C,EAAM2X,GACzBglC,EAAM38C,KACT28C,EAAM38C,GAAI,IAEZ28C,EAAM38C,GAAM2X,EAAKilC,UAAUnzB,YAAc9R,GAa3CykC,EAAA33E,UAAAo4E,uBAAsB,SAAC11E,EAAQoX,EAAYo+D,UAOpC,SACO38C,EAAM88C,OACRnoE,EAAQtQ,KAAQq4E,mBAAmBzyE,KAAI5F,KAAOs4E,EAAO38C,UACpD74B,EAAO41E,kBAAkBx+D,EAAYyhB,EAAM88C,EAAWnoE,IAC7D1K,KAAI5F,OAaV+3E,EAAA33E,UAAAi+B,2BAA0B,SACxBxxB,EACAowB,EACAqB,EACAhuB,EACA0uB,KAcF+4C,EAAA33E,UAAAipC,eAAc,SAACvM,EAAOG,EAAYqB,UACzBt3B,KAMT+wE,EAAA33E,UAAAu4E,SAAQ,uBACMT,QAOdH,EAAA33E,UAAAyoD,mBAAkB,aAOlBkvB,EAAA33E,UAAA63E,mBAAkB,SAACxzE,GAC2CA,EAAMtE,OACxDw8B,aAAe2jC,IAAiBtgE,KACnC44E,2BAWTb,EAAA33E,UAAAy4E,UAAS,SAAChS,OACJiS,EAAajS,EAAMlqC,kBACnBm8C,GAAcxY,IAAqBwY,GAAcxY,IACnDuG,EAAM1iE,iBAAiBqB,EAAgBxF,KAAOg4E,yBAE5Cc,GAAcxY,KAChBuG,EAAMhzB,OACNilC,EAAajS,EAAMlqC,YAEdm8C,GAAcxY,IAMvByX,EAAA33E,UAAAw4E,wBAAuB,eACf5+C,EAAKh6B,KAAQ24E,WACf3+C,EAAMK,cAAgBL,EAAMI,kBAAoBmB,IAClDvB,EAAMzzB,WAGZwxE,EAhLA,CAA4BlvE,EAAA9B,meC2T5BgyE,GA9SA,SAAAt1E,GAGK,SACHu1E,EAAYh/C,OAAZp2B,EACEH,EAAAI,KAAA7D,KAAMg6B,IAAKh6B,YAMX4D,EAAKqkC,UAAY,KAMjBrkC,EAAKq1E,mBAQLr1E,EAAKs1E,e7HfC,EAAG,EAAG,EAAG,EAAG,EAAG,G6HuBrBt1E,EAAKu1E,gB7HvBC,EAAG,EAAG,EAAG,EAAG,EAAG,G6H+BrBv1E,EAAKu8B,uB7H/BC,EAAG,EAAG,EAAG,EAAG,EAAG,G6HoCrBv8B,EAAKw8B,QAAU,KAKfx8B,EAAKw1E,iBAAkB,WAnDOC,GAAAL,EAAAv1E,GA4DhCu1E,EAAA54E,UAAAk5E,aAAY,SAACn5E,EAAQoM,EAAW0sB,OAE1BgP,EAAW7H,EADTm5C,EAAcv5E,KAAQ24E,WAAW/+C,eAGrCz5B,GACoB,KAApBA,EAAO+K,MAAM+tB,SACb94B,EAAOs5B,YAAc8/C,KAEf12C,EAAS1iC,EAAOq5E,6BACAC,oBACpBr5C,EAAUyC,EAAOE,WAAU,YAI7B3C,GAC0B,IAAzBA,EAAQyC,OAAOpwB,OACd2tB,EAAQyC,OAAO33B,MAAMqB,YAAcA,OAMvB6sE,uBAETnxC,UAAY,UACZ7H,QAAU,UACVg5C,iBAAkB,SAPlBnxC,UAAY9nC,OACZigC,QAAUA,OACVg5C,iBAAkB,SAOfnxC,UAAS,EACjBA,EAAYtR,SAASC,cAAa,QACxB6C,UAAY8/C,MAClBruE,EAAQ+8B,EAAU/8B,MACtBA,EAAMk7B,SAAQ,WACdl7B,EAAMuH,MAAK,OACXvH,EAAMwH,OAAM,WAENmwB,GADNzC,EAAUqC,MACaI,OACvBoF,EAAUnR,YAAY+L,IACtB33B,EAAQ23B,EAAO33B,OACTk7B,SAAQ,WACdl7B,EAAMo7B,KAAI,IACVp7B,EAAMwuE,gBAAe,gBAChBzxC,UAAYA,OACZ7H,QAAUA,IAUnB44C,EAAA54E,UAAAu5E,KAAI,SAACv5C,EAASnD,EAAY/uB,OAClB80C,EAAa/lB,EAAW+lB,WACxB42B,EAAa38C,EAAWhsB,KAAK,GAAK+xC,EAAc,EAChD62B,EAAc58C,EAAWhsB,KAAK,GAAK+xC,EAAc,EACjDhyC,EAAWisB,EAAWvB,UAAU1qB,SAChC8oE,EAAUnpE,GAAWzC,GACrB6rE,EAAWrpE,GAAYxC,GACvB8rE,EAAcvpE,GAAevC,GAC7B+rE,EAAazpE,GAActC,GAEjCtB,GAAeqwB,EAAWkB,2BAA4B27C,GACtDltE,GAAeqwB,EAAWkB,2BAA4B47C,GACtDntE,GAAeqwB,EAAWkB,2BAA4B67C,GACtDptE,GAAeqwB,EAAWkB,2BAA4B87C,GAEtD75C,EAAQ+G,OACRT,GAAetG,GAAUpvB,EAAU4oE,EAAWC,GAC9Cz5C,EAAQskC,YACRtkC,EAAQ85C,OAAOJ,EAAQ,GAAK92B,EAAY82B,EAAQ,GAAK92B,GACrD5iB,EAAQwkC,OAAOmV,EAAS,GAAK/2B,EAAY+2B,EAAS,GAAK/2B,GACvD5iB,EAAQwkC,OAAOoV,EAAY,GAAKh3B,EAAYg3B,EAAY,GAAKh3B,GAC7D5iB,EAAQwkC,OAAOqV,EAAW,GAAKj3B,EAAYi3B,EAAW,GAAKj3B,GAC3D5iB,EAAQu5C,OACRjzC,GAAetG,EAASpvB,EAAU4oE,EAAWC,IAS/Cb,EAAA54E,UAAA+5E,cAAa,SAAC/5C,EAASnD,EAAY/uB,OAC3B4rE,EAAUnpE,GAAWzC,GACrB6rE,EAAWrpE,GAAYxC,GACvB8rE,EAAcvpE,GAAevC,GAC7B+rE,EAAazpE,GAActC,GAEjCtB,GAAeqwB,EAAWkB,2BAA4B27C,GACtDltE,GAAeqwB,EAAWkB,2BAA4B47C,GACtDntE,GAAeqwB,EAAWkB,2BAA4B67C,GACtDptE,GAAeqwB,EAAWkB,2BAA4B87C,OAEhDG,EAAQp6E,KAAQmgC,sBACtBvzB,GAAewtE,EAAUN,GACzBltE,GAAewtE,EAAUL,GACzBntE,GAAewtE,EAAUJ,GACzBptE,GAAewtE,EAAUH,GAEzB75C,EAAQ+G,OACR/G,EAAQskC,YACRtkC,EAAQ85C,OAAO/tE,KAAKwX,MAAMm2D,EAAQ,IAAK3tE,KAAKwX,MAAMm2D,EAAQ,KAC1D15C,EAAQwkC,OAAOz4D,KAAKwX,MAAMo2D,EAAS,IAAK5tE,KAAKwX,MAAMo2D,EAAS,KAC5D35C,EAAQwkC,OAAOz4D,KAAKwX,MAAMq2D,EAAY,IAAK7tE,KAAKwX,MAAMq2D,EAAY,KAClE55C,EAAQwkC,OAAOz4D,KAAKwX,MAAMs2D,EAAW,IAAK9tE,KAAKwX,MAAMs2D,EAAW,KAChE75C,EAAQu5C,QASVX,EAAA54E,UAAAi6E,qBAAoB,SAACt6E,EAAMqgC,EAASnD,OAC5BjD,EAAKh6B,KAAQ24E,cACf3+C,EAAM70B,YAAYpF,GAAI,KAClByoC,EAAK,IAAOC,GAAA1hC,QAChBhH,EAAIC,KACCmgC,sBACLlD,EACAmD,GAEFpG,EAAMx1B,cAAcgkC,KASxBwwC,EAAA54E,UAAAk6E,UAAS,SAACl6C,EAASnD,QACZo9C,qBAAqB/+C,GAA2B8E,EAASnD,IAQhE+7C,EAAA54E,UAAAm6E,WAAU,SAACn6C,EAASnD,QACbo9C,qBAAqB/+C,GAA4B8E,EAASnD,IAejE+7C,EAAA54E,UAAAo6E,mBAAkB,SAChB1pE,EACAC,EACAC,EACAgyC,EACAvwC,EACAC,EACAi0B,OAEM15B,EAAMwF,EAAQ,EACdvF,EAAMwF,EAAS,EACfvF,EAAK61C,EAAajyC,EAClB3D,GAAMD,EACNG,GAAOwD,EAAO,GAAK61B,EACnBp5B,GAAOuD,EAAO,UACb9D,GAAgBhN,KAChBk5E,cACLjsE,EACAC,EACAC,EACAC,GACC4D,EACD1D,EACAC,IAYJyrE,EAAA54E,UAAAipC,eAAc,SAACvM,EAAOG,EAAYqB,OAqB5B38B,EApBE84E,EAAc7tE,GAAc5M,KAC3BmgC,sBACLrD,EAAMtuB,SAEF4xB,EAAOpgC,KAAQogC,QAGfs6C,EADK16E,KAAQ24E,WACOvkE,eACtBsmE,IAOG9rE,GAAmB8rE,EANC9tE,GACvBqwB,EAAWmB,2BACXtB,EAAMtuB,UAI6C,OAC5C,aAMH1B,EAAIX,KAAKwX,MAAM82D,EAAY,IAC3B1tE,EAAIZ,KAAKwX,MAAM82D,EAAY,IAC3BE,EAAYhkD,SAASC,cAAa,UAClCgkD,EAAaD,EAAU53C,WAAU,MACvC43C,EAAUloE,MAAQ,EAClBkoE,EAAUjoE,OAAS,EACnBkoE,EAAWC,UAAU,EAAG,EAAG,EAAG,GAC9BD,EAAWnzC,UAAUrH,EAAQyC,OAAQ/1B,EAAGC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1DpL,EAAOi5E,EAAWE,aAAa,EAAG,EAAG,EAAG,GAAGn5E,WACpCo5E,SACK,kBAARA,EAAI1xE,SAEK2xE,WAENr5E,SAGO,IAAZA,EAAK,GACA,KAEFA,GAEXq3E,EA5SA,CAAkCiC,GAAAl0E,SClBlCm0E,GACQ,SADRA,GAES,UAFTA,GAGO,QAHPA,GAIa,aAJbA,GAKS,UALTA,GAMM,gBCSUC,GACdvrE,EACAC,EACArO,EACAsO,EACA80B,EACAw2C,EACArJ,EACAjyD,EACAu7D,EACA91C,EACArO,EACAlmB,OAEIU,EAAK9B,EAAgBC,GACrBiC,EAAKlC,EAAgBC,EAAS,GAC9B4B,EAAK,EACLI,EAAK,EACLud,EAAgB,EAChBksD,EAAW,WAENC,IACP9pE,EAAKC,EACLG,EAAKC,EAELJ,EAAK9B,EADLC,GAAUC,GAEVgC,EAAKlC,EAAgBC,EAAS,GAC9ByrE,GAAYlsD,EACZA,EAAgBjjB,KAAK4N,MAAMrI,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,OAGpE0pE,UACO1rE,EAASrO,EAAMsO,GAAUwrE,EAAWlsD,EAAgBgsD,WAEzDruD,GAAequD,EAASE,GAAYlsD,EAClCosD,EAASvlE,GAAKxE,EAAIC,EAAIqb,GACtB0uD,EAASxlE,GAAKpE,EAAIC,EAAIib,GAEtB2uD,EAAc7rE,EAASC,EACvB6rE,EAAcL,EACdM,EAAOR,EAASt7D,EAAQu7D,EAAyB91C,EAAMX,EAAM1N,GAC5DrnB,EAASrO,EAAMsO,GAAUwrE,EAAWlsD,EAAgBwsD,GACzDL,QAOEhN,EAJEvjD,EAAO/U,GAAKxE,EAAIC,EADtBqb,GAAe6uD,EAAON,GAAYlsD,GAE5BnE,EAAOhV,GAAKpE,EAAIC,EAAIib,MAItB/b,EAAQ,KACJ6qE,EAAI,CAAIL,EAAQC,EAAQzwD,EAAMC,GACpChO,GAAO4+D,EAAM,EAAG,EAAG,EAAG7qE,EAAU6qE,EAAMA,GACtCtN,EAAUsN,EAAK,GAAKA,EAAK,QAEzBtN,EAAUiN,EAASxwD,MA2BjB8wD,EAxBE1vE,EAAKD,KAAKC,GACVuyB,EAAM,GACNo9C,EAAgBL,EAAc5rE,IAAWD,KAG/Cuf,EAAgB,EAChBksD,EAAWK,EACXjqE,EAAK9B,EAHLC,EAAS6rE,GAIT5pE,EAAKlC,EAAgBC,EAAS,GAG1BksE,EAAa,CACfR,QAEIS,EAAgB7vE,KAAK4M,MAAMjH,EAAKD,EAAIH,EAAKD,GACzC88D,IACFyN,GAAiBA,EAAgB,GAAK5vE,EAAKA,OAEvCU,GAAKke,EAAOwwD,GAAU,EACtBzuE,GAAKke,EAAOwwD,GAAU,SAC5B98C,EAAO,GAAC,CAAK7xB,EAAGC,GAAI6uE,EAAOR,GAAU,EAAGY,EAAep3C,GAChDjG,UAIAt9B,EAAI,EAAGuB,EAAKgiC,EAAKxjC,OAAQC,EAAIuB,GAAE,CACtC24E,QACIluE,EAAQlB,KAAK4M,MAAMjH,EAAKD,EAAIH,EAAKD,MACjC88D,IACFlhE,GAASA,EAAQ,GAAKjB,EAAKA,QAEPlH,IAAlB42E,EAA2B,KACzB7/B,EAAQ5uC,EAAQyuE,KACpB7/B,GAASA,EAAQ7vC,GAAK,EAAKA,EAAK6vC,GAAS7vC,EAAK,EAAIA,EAAK,EACnDD,KAAKkjB,IAAI4sB,GAAS81B,EAAQ,OACrB,KAGX+J,EAAgBzuE,UAEV4uE,EAAS56E,EACX66E,EAAa,EACV76E,EAAIuB,IAAMvB,EAAC,KAEVqF,EAAMoZ,EAAQu7D,EAAyB91C,EAAMX,EADrC2pC,EAAU3rE,EAAKvB,EAAI,EAAIA,GAC2B61B,MAE9DrnB,EAASC,EAAStO,GAClB85E,EAAWlsD,EAAgBgsD,EAASc,EAAax1E,EAAM,EAAC,MAI1Dw1E,GAAcx1E,KAEZrF,IAAM46E,OAGJE,EAAQ5N,EACV3pC,EAAKw3C,UAAUx5E,EAAKq5E,EAAQr5E,EAAKvB,GACjCujC,EAAKw3C,UAAUH,EAAQ56E,GAErByL,EAAImJ,GAAKxE,EAAIC,EADnBqb,GAAequD,EAASc,EAAa,EAAIZ,GAAYlsD,GAE/CriB,EAAIkJ,GAAKpE,EAAIC,EAAIib,GACvB4R,EAAOr7B,KAAI,CAAEwJ,EAAGC,EAAGmvE,EAAa,EAAG7uE,EAAO8uE,IAC1Cf,GAAUc,UAELv9C,ECnFN,IACG09C,I9HoII9sE,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,G8HjIjC+sE,GAAE,GAEFC,GAAE,GAEFC,GAAE,GAEFC,GAAE,GAKL,SACMC,GAAgBC,UAChBA,EAAuB,GAAGC,iBAG7BC,GAAQ,IAAOn8C,OACmB,IAEpCp5B,OAAOw1E,aAAa,MAAO,IAAUx1E,OAAOw1E,aAAa,MACzDx1E,OAAOw1E,aAAa,OAAO,IAAUx1E,OAAOw1E,aAAa,OACzDx1E,OAAOw1E,aAAa,OAAO,IAAUx1E,OAAOw1E,aAAa,OACzDx1E,OAAOw1E,aAAa,OAAO,IAAUx1E,OAAOw1E,aAAa,OACzDx1E,OAAOw1E,aAAa,QAAO,IAAUx1E,OAAOw1E,aAAa,QAAO,KASjE,SACMC,GAAoBn4C,EAAMo4C,SACvB,UAALA,GAA0B,QAALA,GAAqBH,GAASI,KAAKr4C,KAC3Do4C,EAAa,UAALA,EAAiB,OAAS,SAE7BpG,GAAAsG,WAAWF,OAqkCpBG,GAlkCA,WAMK,SACHC,EAAYrsE,EAAYiyC,EAAYq6B,EAAU3Q,GAIzC1sE,KACEq9E,SAAWA,EAKbr9E,KACEgjD,WAAaA,EAMfhjD,KACE+Q,WAAaA,EAKf/Q,KACEs9E,WAKFt9E,KACE0sE,aAAeA,EAAaA,aAK9B1sE,KACEiO,YAAcy+D,EAAaz+D,YAK7BjO,KACEu9E,iBAAgB,GAKlBv9E,KACEw9E,oBhI9HC,EAAG,EAAG,EAAG,EAAG,EAAG,GgImIlBx9E,KACE4sE,yBAA2BF,EAAaE,yBAK1C5sE,KACEy9E,kBAAoB,KAKtBz9E,KACE09E,cAAgB,EAIlB19E,KACEmzE,WAAazG,EAAayG,YAAU,GAItCnzE,KACEqzE,aAAe3G,EAAa2G,cAAY,GAI1CrzE,KACEuzE,WAAa7G,EAAa6G,YAAU,GAKtCvzE,KACE29E,QAAO,GAKT39E,KACE6yE,QAAO,UAUduK,EAAAh9E,UAAAw9E,YAAW,SAACh5C,EAAMswC,EAASE,EAASH,OAC5BlyE,EAAM6hC,EAAOswC,EAAUE,EAAUH,UAC9BpC,QAAQ9vE,GAAG,OAAA/C,KACN6yE,QAAQ9vE,OAEhB8wE,EAAcoB,EAASj1E,KAAQqzE,aAAa4B,GAAa,KACzDrB,EAAYwB,EAAOp1E,KAAQmzE,WAAWiC,GAAW,KACjDtB,EAAS9zE,KAAQuzE,WAAW2B,GAC5BlyB,EAAUhjD,KAAQgjD,WAClBljC,EAAK,CACTg0D,EAAUh0D,MAAM,GAAKkjC,EACrB8wB,EAAUh0D,MAAM,GAAKkjC,GAEjBg6B,EAAQD,GACZn4C,EACAkvC,EAAUa,WAAa7wC,IAEnBigC,EACJkR,GAAapB,EAAY/O,UAAY+O,EAAY/O,UAAY,EAEzD+Y,EAAQj5C,EAAKx7B,MAAK,MAClB00E,EAAWD,EAAMz8E,OACjB28E,EAAM,GACNtrE,WzEyIwB8yB,EAAMs4C,EAAOE,WACvCD,EAAWD,EAAMz8E,OACnBqR,EAAQ,EACHpR,EAAI,EAAGA,EAAIy8E,IAAYz8E,EAAC,KACzB28E,EAAe74C,GAAiBI,EAAMs4C,EAAMx8E,IAClDoR,EAAQtG,KAAKiE,IAAIqC,EAAOurE,GACxBD,EAAOz6E,KAAK06E,UAEPvrE,EyEjJSwrE,CAAkBnK,EAAUvuC,KAAMs4C,EAAOE,GACjDh9C,EAAa2E,GAAkBouC,EAAUvuC,MAEzC24C,EAAczrE,EAAQsxD,EACtBz8B,EAAmB,GAEnBL,GAAKi3C,EAAc,GAAKp+D,EAAM,GAC9BonB,GALSnG,EAAa+8C,EAKR/Z,GAAejkD,EAAM,GAEnCynB,EAAK,CACT90B,MAAOw0B,EAAI,EAAI96B,KAAKsO,MAAMwsB,GAAK96B,KAAKqrC,KAAKvQ,GACzCv0B,OAAQw0B,EAAI,EAAI/6B,KAAKsO,MAAMysB,GAAK/6B,KAAKqrC,KAAKtQ,GAC1CI,oBAAqBA,IAEP,GAAZxnB,EAAM,IAAuB,GAAZA,EAAM,IACzBwnB,EAAoBhkC,KAAI,QAAUwc,GAEpCwnB,EAAoBhkC,KAAI,OAASwwE,EAAUvuC,MACvC0vC,KACF3tC,EAAoBhkC,KAAI,cAAgBuwE,EAAYpQ,aACpDn8B,EAAoBhkC,KAAI,YAAcygE,GACtCz8B,EAAoBhkC,KAAI,UAAYuwE,EAAYnQ,SAChDp8B,EAAoBhkC,KAAI,WAAauwE,EAAYlQ,UACjDr8B,EAAoBhkC,KAAI,aAAeuwE,EAAYjQ,aAEnC/hC,GAA0Bs8C,kCAAoCC,0BAClEh+E,UAAU2kE,cACpBz9B,EAAoBhkC,KAAI,cAAc,CAAGuwE,EAAYhQ,WACrDv8B,EAAoBhkC,KAAI,iBAAmBuwE,EAAY/P,kBAGvDsR,GACF9tC,EAAoBhkC,KAAI,YAAcswE,EAAU/O,WAElDv9B,EAAoBhkC,KAAI,eAAe,UACvCgkC,EAAoBhkC,KAAI,YAAY,cAGhCjC,EAFEg9E,EAAY,GAAMrB,EAClBlwE,EAAIkwE,EAAQkB,EAAcG,EAAYta,KAExCkR,EAAS,IACN5zE,EAAI,EAAGA,EAAIy8E,IAAYz8E,EAC1BimC,EAAoBhkC,KAAI,aAAa,CACnCu6E,EAAMx8E,GACNyL,EAAIuxE,EAAYN,EAAO18E,GACvB,IAAO0iE,EAAchjC,GAAc1/B,EAAI0/B,OAIzCq0C,EAAO,IACJ/zE,EAAI,EAAGA,EAAIy8E,IAAYz8E,EAC1BimC,EAAoBhkC,KAAI,WAAW,CACjCu6E,EAAMx8E,GACNyL,EAAIuxE,EAAYN,EAAO18E,GACvB,IAAO0iE,EAAchjC,GAAc1/B,EAAI0/B,gBAIxC8xC,QAAQ9vE,GAAOwkC,EACbA,GAYT61C,EAAAh9E,UAAAk+E,sBAAqB,SACnBl+C,EACA0/B,EACA0U,EACAC,EACA8J,EACArP,EACAsP,GAEAp+C,EAAQskC,YACRtkC,EAAQ85C,OAAOp0E,MAAMs6B,EAAS0/B,GAC9B1/B,EAAQwkC,OAAO9+D,MAAMs6B,EAASo0C,GAC9Bp0C,EAAQwkC,OAAO9+D,MAAMs6B,EAASq0C,GAC9Br0C,EAAQwkC,OAAO9+D,MAAMs6B,EAASm+C,GAC9Bn+C,EAAQwkC,OAAO9+D,MAAMs6B,EAAS0/B,GAC1BoP,SACGoO,WAAqCpO,EAAgB,QACrD7M,MAAMjiC,IAETo+C,SACGC,gBACHr+C,EACyBo+C,GAE3Bp+C,EAAQyiC,WAwBZua,EAAAh9E,UAAAs+E,iCAAgC,SAC9BC,EACAC,EACAl/B,EACAC,EACAltC,EACAC,EACAyK,EACAC,EACA2pB,EACAC,EACAh2B,EACA8O,EACA++D,EACA34C,EACA44C,EACA77D,OAyBI1W,EArBAO,EAAI4yC,GAFRviC,GAAW2C,EAAM,IAGb/S,EAAI4yC,GAFRviC,GAAW0C,EAAM,IAIXmnB,EAAIx0B,EAAQs0B,EAAU43C,EAAaA,EAAa53C,EAAUt0B,EAC1Dy0B,EAAIx0B,EAASs0B,EAAU43C,EAAcA,EAAc53C,EAAUt0B,EAC7DqsE,EAAO74C,EAAQ,GAAKe,EAAInnB,EAAM,GAAKomB,EAAQ,GAC3C84C,EAAO94C,EAAQ,GAAKgB,EAAIpnB,EAAM,GAAKomB,EAAQ,GAC3C+4C,EAAOnyE,EAAIo5B,EAAQ,GACnBg5C,EAAOnyE,EAAIm5B,EAAQ,UAErB44C,GAA2B,IAAb9tE,KAChBsrE,GAAG,GAAK2C,EACRxC,GAAG,GAAKwC,EACR3C,GAAG,GAAK4C,EACR3C,GAAG,GAAK2C,EACR3C,GAAG,GAAK0C,EAAOF,EACfvC,GAAG,GAAKD,GAAG,GACXC,GAAG,GAAK0C,EAAOF,EACfvC,GAAG,GAAKD,GAAG,IAII,IAAbxrE,GAYFpE,GAXAL,EAAYS,IhI7WR,EAAG,EAAG,EAAG,EAAG,EAAG,GgI+WjB0yC,EACAC,EACA,EACA,EACA3uC,GACC0uC,GACAC,GAGuB28B,IAC1B1vE,GAAeL,EAAWgwE,IAC1B3vE,GAAeL,EAAWiwE,IAC1B5vE,GAAeL,EAAWkwE,IAC1BjtE,GACErD,KAAKgE,IAAImsE,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,IACjCtwE,KAAKgE,IAAImsE,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,IACjCtwE,KAAKiE,IAAIksE,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,IACjCtwE,KAAKiE,IAAIksE,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIC,GAAG,IACjCJ,KAGF7sE,GACErD,KAAKgE,IAAI8uE,EAAMA,EAAOF,GACtB5yE,KAAKgE,IAAI+uE,EAAMA,EAAOF,GACtB7yE,KAAKiE,IAAI6uE,EAAMA,EAAOF,GACtB5yE,KAAKiE,IAAI8uE,EAAMA,EAAOF,GACtB3C,IAGAwC,IACF/xE,EAAIX,KAAKwX,MAAM7W,GACfC,EAAIZ,KAAKwX,MAAM5W,KAGfoyE,WAAYryE,EACZsyE,WAAYryE,EACZsyE,WAAYp4C,EACZq4C,WAAYp4C,EACZH,QAASA,EACTC,QAASA,EACT41C,aAAY,CACV1tE,KAAMmtE,GAAU,GAChBltE,KAAMktE,GAAU,GAChBjtE,KAAMitE,GAAU,GAChBhtE,KAAMgtE,GAAU,GAChBn0E,MAAO+a,GAETs8D,gBAAiBhzE,EACjBuT,MAAOA,IAeXs9D,EAAAh9E,UAAAo/E,oBAAmB,SACjBp/C,EACAq/C,EACAC,EACAC,EACA1mD,EACAi2C,EACAsP,OAEMM,KAAgB5P,IAAmBsP,GAEnCoB,EAAMD,EAAW/C,aACjB/5C,EAASzC,EAAQyC,OACjBg9C,EAAgBrB,EACjBA,EAAkB,GAAKmB,EAAW7/D,MAAM,GAAM,EAC/C,SAEF8/D,EAAI1wE,KAAO2wE,GAAiBh9C,EAAOpwB,MAAQgtE,GAC3CG,EAAIxwE,KAAOywE,GAAiB,GAC5BD,EAAIzwE,KAAO0wE,GAAiBh9C,EAAOnwB,OAAS+sE,GAC5CG,EAAIvwE,KAAOwwE,GAAiB,IAGxBf,GAAU9+E,KACPs+E,sBACHl+C,EACAk8C,GACAC,GACAC,GACAC,GACyBvN,EACAsP,GAG7B33C,GACEzG,EACAu/C,EAAWJ,gBACXtmD,EACAymD,EACAC,EAAW54C,QACX44C,EAAW34C,QACX24C,EAAWN,WACXM,EAAWL,WACXK,EAAWR,WACXQ,EAAWP,WACXO,EAAW7/D,SAGR,GAOTs9D,EAAAh9E,UAAAiiE,MAAK,SAACjiC,WACKk9C,WAAU,KACXwC,EAASlzE,GAAc5M,KAAMw9E,mBAAkB,CAAG,EAAG,IACrDuC,EAAa,IAAG//E,KAAQgjD,WAC9B5iB,EAAQ+G,OACR/G,EAAQ/f,UAAUy/D,EAAO,GAAKC,EAAYD,EAAO,GAAKC,GACtD3/C,EAAQvgB,OAAM7f,KAAM09E,eAEtBt9C,EAAQkiC,YACCgb,YACPl9C,EAAQsH,WASZ01C,EAAAh9E,UAAAq+E,gBAAe,SAACr+C,EAASouC,GACvBpuC,EACe,YAC4CouC,EAAY,GACvEpuC,EAAQ0kC,UAAmC0J,EAAY,GACvDpuC,EAAQsjC,QAAwC8K,EAAY,GAC5DpuC,EAAQujC,SAA0C6K,EAAY,GAC9DpuC,EAAQwjC,WAAoC4K,EAAY,GACpDpuC,EAAQ2kC,cACV3kC,EAAQ0jC,eAAwC0K,EAAY,GAC5DpuC,EAAQ2kC,YAA0CyJ,EAAY,MAYlE4O,EAAAh9E,UAAA4/E,6BAA4B,SAACp7C,EAAMswC,EAASD,EAAWG,OAC/CtB,EAAS9zE,KAAQuzE,WAAW2B,GAE5B3tC,EAAKvnC,KAAQ49E,YAAYh5C,EAAMswC,EAASE,EAASH,GAEjDpB,EAAW7zE,KAAQqzE,aAAa4B,GAChCjyB,EAAUhjD,KAAQgjD,WAClBg6B,EAAQD,GACZn4C,EACAkvC,EAAUa,WAAa7wC,IAEnBuxC,EAAWuB,GAAAsG,WAAWpJ,EAAUqB,cAAgBpxC,IAChDggC,EACJ8P,GAAeA,EAAY/O,UAAY+O,EAAY/O,UAAY,SAU/Dv9B,MAAOA,EACPpqB,QAPc6/D,GADFz1C,EAAM90B,MAAQuwC,EAAa,EAAI8wB,EAAUh0D,MAAM,IAC7B,GAAK,GAAMk9D,GAASjZ,EAQlD3mD,QANCi4D,EAAW9tC,EAAM70B,OAAUswC,EAC5B,GAAK,GAAMqyB,GAAYtR,IAuB3BqZ,EAAAh9E,UAAA6/E,SAAQ,SACN7/C,EACAq/C,EACAlzE,EACAmgE,EACAmS,EACAqB,EACAC,EACAC,GAE4B,IACxBC,EhI9fqBC,EAAYC,OgI+f5B9C,mBAAqB17E,EAAOwK,EAASvM,KAAOw9E,oBACnD6C,EAAgBrgF,KAAQy9E,wBAEdA,oBAAiBz9E,KACpBy9E,kBAAiB,IAExB4C,EAAmBxjE,GAAW7c,KACvBiO,YACL,EAACjO,KACIiO,YAAY7M,OACjB,EACAmL,EAASvM,KACJy9E,mBhI3gBgB6C,EgI6gBFtgF,KAAMw9E,mBhI7gBQ+C,EgI6gBYh0E,EhI5gBnD+zE,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,YgI4gBrBC,EACArjE,EACFC,EACAqjE,EACAC,EACAC,EACAC,EACA/Z,EACAjiC,EACAswC,EACAD,EACAG,EAqBwDnyD,EACtDnW,EAAGC,EAAG8zE,EApCNx/E,EAAI,EACFuB,EAAK8pE,EAAatrE,OACpBqL,EAAI,EAaJq0E,EAAc,EACdC,EAAgB,EAChBC,EAAsB,KACtBC,EAAwB,KACtBC,EAAelhF,KAAQu9E,iBACvB4D,EAAYnhF,KAAQ09E,cACpB0D,EACJj1E,KAAKwX,MAAgD,KAA1CxX,KAAK4M,OAAOxM,EAAU,GAAIA,EAAU,KAAc,KAEzDwtB,EAAK,CACTqG,QAASA,EACT4iB,WAAUhjD,KAAOgjD,WACjBjyC,WAAU/Q,KAAO+Q,WACjBC,SAAUmwE,GAKNE,EAASrhF,KACR0sE,cAAgBA,GAAY1sE,KAASq9E,SAAW,EAAI,IAGpDh8E,EAAIuB,GAAE,KACL4rE,EAAc9B,EAAarrE,UAC+BmtE,EAAY,SAErEjE,GAAkBjB,eACrBrmD,EAAiEurD,EAAY,GAC7EqS,EAAkBrS,EAAY,GACzBvrD,EAAQhY,mBAGO/F,IAAlBi7E,GACChuE,GAAWguE,EAAeU,EAAgBzsE,eAIzC/S,EAFFA,EAA2BmtE,EAAY,GAAM,EAL7CntE,EAA2BmtE,EAAY,cAUtCjE,GAAkBhB,WACjBuX,EAAcO,SACXhf,MAAMjiC,GACX0gD,EAAc,GAEZC,EAAgBM,IAClBjhD,EAAQyiC,SACRke,EAAgB,GAEbD,GAAgBC,IACnB3gD,EAAQskC,YACR+b,EAAQjhE,IACRkhE,EAAQlhE,OAERne,aAECkpE,GAAkBf,WAEf/3D,EAAK4uE,EADX5zE,EAA2B+hE,EAAY,IAEjC38D,EAAKwuE,EAAiB5zE,EAAI,GAG1BiC,EAFK2xE,EAAiB5zE,EAAI,GAEhBgF,EACV9C,EAFK0xE,EAAiB5zE,EAAI,GAEhBoF,EACVmE,EAAI7J,KAAK4N,KAAKrL,EAAKA,EAAKC,EAAKA,GACnCyxB,EAAQ85C,OAAOzoE,EAAKuE,EAAGnE,GACvBuuB,EAAQukC,IAAIlzD,EAAII,EAAImE,EAAG,EAAG,EAAI7J,KAAKC,IAAI,KACrC/K,aAECkpE,GAAkBd,WACrBrpC,EAAQ4kC,cACN3jE,aAECkpE,GAAkBb,OACrBj9D,EAA2B+hE,EAAY,GACvCgS,EAAKhS,EAAY,OACX9jE,EAA0E8jE,EAAY,GACtF1H,EAAW0H,EAAY,GACvBvwD,EAA2B,GAAtBuwD,EAAYptE,OAAcotE,EAAY,QAAKtpE,EACtD60B,EAAMrvB,SAAWA,EACjBqvB,EAAM9W,QAAUA,EACV5hB,KAAK6/E,IACTA,EAAgB7/E,GAAC,QAEb89C,EAAS+hC,EAAgB7/E,GAC3B4c,EACFA,EAAGoiE,EAAkB5zE,EAAG+zE,EAAI,EAAGrhC,IAE/BA,EAAO,GAAKkhC,EAAiB5zE,GAC7B0yC,EAAO,GAAKkhC,EAAiB5zE,EAAI,GACjC0yC,EAAO/9C,OAAS,GAElB0lE,EAAS3nB,EAAQplB,KACf14B,aAECkpE,GAAkBX,WACrBn9D,EAA2B+hE,EAAY,GACvCgS,EAA4BhS,EAAY,GACxC3H,EAA4E2H,EAAY,GAGxFrxD,EAAiCqxD,EAAY,GAC7CpxD,EAAiCoxD,EAAY,OACzC97D,EAAgC87D,EAAY,GAC1Cv1C,EAAiCu1C,EAAY,GAC7CznC,EAAiCynC,EAAY,GAC7CxnC,EAAiCwnC,EAAY,GAC7C7N,GAAyC6N,EAAY,IACvDx9D,GAAkCw9D,EAAY,IAC5C1uD,GAAqD0uD,EAAY,IACnE/7D,GAA+B+7D,EAAY,IACzC8S,GAAuF9S,EAAY,QAEpG3H,GAAS2H,EAAYptE,QAAU,GAAE,CAEpCwjC,EAA8B4pC,EAAY,IAC1C0G,EAAiC1G,EAAY,IAC7CyG,EAAmCzG,EAAY,IAC/C4G,EAAiC5G,EAAY,QACvC+S,GAAevhF,KAAQggF,6BAC3Bp7C,EACAswC,EACAD,EACAG,GAEFvO,EAAQ0a,GAAgBh6C,MACxBinC,EAAY,GAAK3H,MACXqP,GAAqC1H,EAAY,IACvDrxD,GAAWokE,GAAgBpkE,QAAU+4D,IAAWl2E,KAASgjD,WACzDwrB,EAAY,GAAKrxD,MACXi5D,GAAqC5H,EAAY,IACvDpxD,GAAWmkE,GAAgBnkE,QAAUg5D,IAAWp2E,KAASgjD,WACzDwrB,EAAY,GAAKpxD,EACjB1K,EAASm0D,EAAMn0D,OACf87D,EAAY,GAAK97D,EACjBD,GAAQo0D,EAAMp0D,MACd+7D,EAAY,IAAM/7D,OAGhBwhE,QAAc,EACdzF,EAAYptE,OAAS,KACvB6yE,GAAwCzF,EAAY,SAGlDtoC,QAAO,EAAEmuC,QAAc,EAAEC,QAAgB,EACzC9F,EAAYptE,OAAS,IACvB8kC,GAAwCsoC,EAAY,IACpD6F,GAAyC7F,EAAY,IACrD8F,GAA2C9F,EAAY,MAEvDtoC,GAAUlC,GACVqwC,IAAiB,EACjBC,IAAmB,GAGjB3T,IAAkBygB,EAEpBpwE,IAAYmwE,EACFxgB,IAAmBygB,IAE7BpwE,IAAYmwE,WAEVK,GAAa,EACV/0E,EAAI+zE,EAAI/zE,GAAK,OAEhBwnE,IACAA,GAAeuN,MAAgB/uE,GAAKzS,KAAQgjD,iBAuBxC1H,GAAI,CACRlb,EACAq/C,EACA5Y,EAtBI8Y,GAAU3/E,KAAQ0+E,iCACtB7X,EAAMp0D,MACNo0D,EAAMn0D,OACN2tE,EAAiB5zE,GACjB4zE,EAAiB5zE,EAAI,GACrBgG,GACAC,EACAyK,EACAC,EACA2pB,EACAC,EACAh2B,GACA8O,GACA++D,EACA34C,GACAmuC,IAAkBC,GAClBrxD,GAQAgW,EACAo7C,GAC6B2M,EACzB,KACJ1M,GAC6B2M,EACzB,MAEFQ,QAAS,EACTC,QAAiB,KACjBtB,GAAqBkB,GAAsB,KACvCh8E,GAAQk7E,EAAK/zE,MACd60E,GAAuBh8E,IAAK,CAE/Bg8E,GAAuBh8E,IAASg2C,eAIlCmmC,GAAYH,GAAuBh8E,WAC5Bg8E,GAAuBh8E,IAC9Bo8E,GAAoBhF,GAAgB+E,IAChCrB,EAAkB7iB,SAASmkB,IAAiB,SAKhDtB,GACAA,EAAkB7iB,SAASoiB,GAAW/C,gBAIpC6E,KAEErB,GACFA,EAAkB3iB,OAAOikB,SAGtBlC,oBAAoB15E,MAAK9F,KAAOyhF,KAEnCrB,GACFA,EAAkB3iB,OAAOkiB,GAAW/C,mBAEjC4C,oBAAoB15E,MAAK9F,KAAOs7C,OAErCj6C,aAECkpE,GAAkBZ,eACfpoE,GAA+BitE,EAAY,GAC3ChtE,GAA6BgtE,EAAY,GACzC6G,GAAkC7G,EAAY,GAC9C1qB,GAAkC0qB,EAAY,GACpD4G,EAAiC5G,EAAY,OACvCuD,GAAkCvD,EAAY,GAC9CmT,GAA2CnT,EAAY,GACvD5nC,GAAiC4nC,EAAY,GACnDyG,EAAmCzG,EAAY,OACzCzK,GAAqCyK,EAAY,IACvD5pC,EAA8B4pC,EAAY,IAC1C0G,EAAiC1G,EAAY,QACvCoT,GAAe,CACIpT,EAAY,IACZA,EAAY,KAG/BsF,GAAS9zE,KAAQuzE,WAAW2B,GAC5B3vC,GAAOuuC,GAAUvuC,KACjBkwC,GAAS,CACb3B,GAAUh0D,MAAM,GAAK6hE,GACrB7N,GAAUh0D,MAAM,GAAK6hE,IAGnBE,QAAY,EACZt8C,MAAIvlC,KAAS29E,QACfkE,GAAY7hF,KAAQ29E,QAAQp4C,KAE5Bs8C,GAAY,QACPlE,QAAQp4C,IAAQs8C,QAGjBC,GAAax2D,GAAiB+0D,EAAkB9+E,GAAOC,GAAK,GAC5DugF,GACJ51E,KAAKkjB,IAAIomD,GAAU,IACnBhvC,GAAyBlB,GAAMX,EAAMi9C,OACnC/9B,IAAYi+B,IAAcD,GAAU,KAChCnN,GAAS30E,KAAQuzE,WAAW2B,GAASP,UAErCqN,GAAQ7G,GACZkF,EACA9+E,GACAC,GACA,EACAojC,GANck9C,GAAaC,IAAcnL,GAAAsG,WAAWvI,IAQpD5C,GACA5lE,KAAKkjB,IAAIomD,GAAU,IACnBhvC,GACAlB,GACAs8C,GACAT,EAA4B,EAACphF,KAAQ09E,eAEvCuE,EAAS,GAAMD,GAAK,CAC0B,IACtCrF,GAAsB,GACxBnwE,QAAC,EAAE01E,QAAE,EAAE/F,QAAK,EAAE50C,QAAK,EAAE46C,QAAI,KACzBlN,EAAS,IACNzoE,GAAI,EAAG01E,GAAKF,GAAM5gF,OAAQoL,GAAI01E,KAAM11E,GAAC,CAExC2vE,IADAgG,GAAOH,GAAMx1E,KACuB,GACpC+6B,GAAKvnC,KAAQ49E,YAAYzB,GAAOjH,EAAO,GAAMD,GAC7C93D,EACyBglE,GAAK,IAC3B1M,GAAU,GAAK,GAAK1R,GAAcA,IACrC3mD,EACEi4D,GAAW9tC,GAAM70B,OACG,GAAlB,GAAM2iE,IAAgBtR,GAAc0R,GAAU,GAC9CA,GAAU,GACZ7uC,OACI+4C,GAAU3/E,KAAQ0+E,iCACtBn3C,GAAM90B,MACN80B,GAAM70B,OACNyvE,GAAK,GACLA,GAAK,GACL56C,GAAM90B,MACN80B,GAAM70B,OACNyK,EACAC,EACA,EACA,EACA+kE,GAAK,GACLP,IACA,EACA59C,IACA,EACA/gB,MAGAm9D,GACAA,EAAkB7iB,SAASoiB,GAAW/C,cAAY,MAE5CqF,EAERtF,GAAuBr5E,KAAI,CACzB88B,EACAq/C,EACAl4C,GACAo4C,GACA,EACA,KACA,UAIFvK,EAAO,IACJ5oE,GAAI,EAAG01E,GAAKF,GAAM5gF,OAAQoL,GAAI01E,KAAM11E,GAAC,CAExC2vE,IADAgG,GAAOH,GAAMx1E,KACuB,GACpC+6B,GAAKvnC,KAAQ49E,YAAYzB,GAAOjH,EAASE,EAAO,IAChDj4D,EAAiCglE,GAAK,GACtC/kE,EAAUi4D,GAAW9tC,GAAM70B,OAASk0B,GAC9B+4C,GAAU3/E,KAAQ0+E,iCACtBn3C,GAAM90B,MACN80B,GAAM70B,OACNyvE,GAAK,GACLA,GAAK,GACL56C,GAAM90B,MACN80B,GAAM70B,OACNyK,EACAC,EACA,EACA,EACA+kE,GAAK,GACLP,IACA,EACA59C,IACA,EACA/gB,MAGAm9D,GACAA,EAAkB7iB,SAASoiB,GAAW/C,cAAY,MAE5CqF,EAERtF,GAAuBr5E,KAAI,CACzB88B,EACAq/C,EACAl4C,GACAo4C,GACA,EACA,KACA,OAIFS,GACFA,EAAkBvsC,KAChB8oC,GAAuBjoD,IAAIgoD,aAGtB0F,GAAI,EAAGC,GAAK1F,GAAuBv7E,OAAQghF,GAAIC,KAAMD,GAACpiF,KACxDw/E,oBAAoB15E,MAAK9F,KAAO28E,GAAuByF,QAIhE/gF,aAECkpE,GAAkBV,qBACO3kE,IAAxBg7E,EAAiC,KAE7BvhD,GAASuhD,EADfj9D,EAAiEurD,EAAY,GACjCqS,MACxCliD,GAAM,OACDA,KAGTt9B,aAECkpE,GAAkBT,KACjBuX,EACFP,SAEKze,MAAMjiC,KAEX/+B,aAECkpE,GAAkBR,oBACrBt9D,EAA2B+hE,EAAY,GACvCgS,EAA4BhS,EAAY,GACxC1hE,EAAIuzE,EAAiB5zE,GAGrBm0E,GAFA7zE,EAAIszE,EAAiB5zE,EAAI,IAEX,GAAO,GADrBk0E,EAAU7zE,EAAI,GAAO,KAEN2zE,GAASG,IAAWF,IACjCtgD,EAAQ85C,OAAOptE,EAAGC,GAClB0zE,EAAQE,EACRD,EAAQE,GAELn0E,GAAK,EAAGA,EAAI+zE,EAAI/zE,GAAK,EAGxBk0E,GAFA7zE,EAAIuzE,EAAiB5zE,IAEP,GAAO,EACrBm0E,GAFA7zE,EAAIszE,EAAiB5zE,EAAI,IAEX,GAAO,EACjBA,GAAK+zE,EAAK,GAAKG,IAAWF,GAASG,IAAWF,IAChDtgD,EAAQwkC,OAAO93D,EAAGC,GAClB0zE,EAAQE,EACRD,EAAQE,KAGVv/E,aAECkpE,GAAkBP,eACrBgX,EAAsBxS,OACjB8O,WAAa9O,EAAY,GAE1BsS,SACGze,MAAMjiC,GACX0gD,EAAc,EACVC,IACF3gD,EAAQyiC,SACRke,EAAgB,IAIpB3gD,EAAQykC,UAAmE2J,EAAY,KACrFntE,aAECkpE,GAAkBN,iBACrBgX,EAAwBzS,EACpBuS,IACF3gD,EAAQyiC,SACRke,EAAgB,QAEbtC,gBAAgBr+C,EAAkCouC,KACrDntE,aAECkpE,GAAkBL,OACjBmX,EACFN,IAEA3gD,EAAQyiC,WAERxhE,kBAGAA,GAIJy/E,GAAW9gF,KACRqiE,MAAMjiC,GAET2gD,GACF3gD,EAAQyiC,UAaZua,EAAAh9E,UAAAkiF,QAAO,SACLliD,EACAq/C,EACAlzE,EACA40E,EACAtC,EACAuB,QAEK1C,cAAgByD,OAChBlB,SACH7/C,EACAq/C,EACAlzE,EAASvM,KACJ0sE,aACLmS,OACA35E,OACAA,EACAk7E,IAcJhD,EAAAh9E,UAAAmiF,oBAAmB,SACjBniD,EACA7zB,EACA40E,EACAjB,EACAC,eAEKzC,cAAgByD,OACTlB,SACV7/C,EACA,EACA7zB,EAASvM,KACJ4sE,0BACL,EACAsT,EACAC,IAGN/C,EAhkCA,GCtFMoF,GAAK,CACTtH,GACAA,GACAA,GACAA,GACAA,GACAA,IAGFuH,GAAA,WAYK,SACHC,EACEztC,EACAlkC,EACAiyC,EACAq6B,EACAsF,EACAC,GAKG5iF,KACEg3E,WAAa/hC,EAKfj1C,KACE6iF,UAAYxF,EAKdr9E,KACE+iD,YAAcC,EAKhBhjD,KACEi3E,YAAclmE,EAKhB/Q,KACEuoE,cAAgBqa,EAKlB5iF,KACE8iF,mBAAkB,GAKpB9iF,KACE+iF,qBAAuB,KAKzB/iF,KACEgjF,wBjI7DC,EAAG,EAAG,EAAG,EAAG,EAAG,QiI+DhBC,iBAAiBN,UAOxBD,EAAAtiF,UAAAu5E,KAAI,SAACv5C,EAAS7zB,OACN22E,EAAcljF,KAAQmjF,cAAc52E,GAC1C6zB,EAAQskC,YACRtkC,EAAQ85C,OAAOgJ,EAAe,GAAIA,EAAe,IACjD9iD,EAAQwkC,OAAOse,EAAe,GAAIA,EAAe,IACjD9iD,EAAQwkC,OAAOse,EAAe,GAAIA,EAAe,IACjD9iD,EAAQwkC,OAAOse,EAAe,GAAIA,EAAe,IACjD9iD,EAAQu5C,QAQV+I,EAAAtiF,UAAA6iF,iBAAgB,SAACN,WACJxpD,KAAUwpD,EAAe,KAC9BS,EAASpjF,KAAQ8iF,mBAAmB3pD,QACtBj0B,IAAdk+E,IACFA,EAAS,QACJN,mBAAmB3pD,GAAUiqD,OAE9BC,EAAsBV,EAAgBxpD,WACjCs+C,KAAe4L,EAAmB,KACrC3W,EAAe2W,EAAoB5L,GACzC2L,EAAU3L,GAAW,IAAQ0F,GAAQn9E,KAC9Bi3E,YAAWj3E,KACX+iD,YAAW/iD,KACX6iF,UACLnW,MAURgW,EAAAtiF,UAAAkjF,aAAY,SAACF,WACAjqD,KAAMn5B,KAAS8iF,2BAClBS,EAAUvjF,KAAQ8iF,mBAAmB3pD,GAClC93B,EAAI,EAAGuB,EAAKwgF,EAAUhiF,OAAQC,EAAIuB,IAAMvB,KAC3C+hF,EAAU/hF,KAAMkiF,EAAU,OACrB,SAIN,GAaTb,EAAAtiF,UAAAi+B,2BAA0B,SACxBxxB,EACAkE,EACAC,EACAstB,EACAhuB,EACAkzE,OAGMC,EAA6B,GADnCnlD,EAAenyB,KAAKwX,MAAM2a,IACa,EACjC/xB,EAAYS,GAAgBhN,KAC3BgjF,uBACL1kD,EAAe,GACfA,EAAe,GACf,EAAIvtB,GACJ,EAAKA,GACJC,GACAnE,EAAW,IACXA,EAAW,IAGR+tE,GAAU56E,KAAS+iF,qBACrBnI,IAAU56E,KACP+iF,qBAAuBtgD,GAC1BghD,EACAA,QAkBAC,EAfEtjD,EAAOpgC,KAAQ+iF,qBAGnB3iD,EAAQyC,OAAOpwB,QAAUgxE,GACzBrjD,EAAQyC,OAAOnwB,SAAW+wE,GAE1BrjD,EAAQyC,OAAOpwB,MAAQgxE,EACvBrjD,EAAQyC,OAAOnwB,OAAS+wE,GACd7I,GACVx6C,EAAQy6C,UAAU,EAAG,EAAG4I,EAAaA,QAOZv+E,SAAlBqjE,gBAEPn6D,GADAs1E,G/HhBIn0E,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,G+HiBL1C,GAC5BwB,GACEq1E,EACA3yE,GAAU/Q,KAASuoE,cAAgBjqC,GACnColD,QAMAjM,EAFEkM,WAmKyBlrE,WACUvT,IAAvC0+E,GAA2BnrE,GAAqB,OAC3CmrE,GAA2BnrE,WAG9BxH,EAAgB,EAATwH,EAAa,EACpBorE,EAAgBprE,EAASA,EACzBqrE,EAAS,IAAOjiF,MAAMgiF,EAAgB,GACnCxiF,EAAI,EAAGA,GAAKoX,IAAUpX,EAAC,IAAA,IACrB2b,EAAI,EAAGA,GAAKvE,IAAUuE,EAAC,KACxBwiB,EAAan+B,EAAIA,EAAI2b,EAAIA,KAC3BwiB,EAAaqkD,EAAa,UAG1BvrE,EAAWwrE,EAAUtkD,GACpBlnB,IACHA,EAAQ,GACRwrE,EAAUtkD,GAAclnB,GAE1BA,EAAShV,KAA4C,IAArCmV,EAASpX,GAAK4P,GAAQwH,EAASuE,IAAU,GACrD3b,EAAI,GACNiX,EAAShV,KAA4C,IAArCmV,EAASpX,GAAK4P,GAAQwH,EAASuE,IAAU,GAEvDA,EAAI,IACN1E,EAAShV,KAA4C,IAArCmV,EAASpX,GAAK4P,GAAQwH,EAASuE,IAAU,GACrD3b,EAAI,GACNiX,EAAShV,KAA4C,IAArCmV,EAASpX,GAAK4P,GAAQwH,EAASuE,IAAU,YAM3D+mE,EAAU,GACAnhF,GAAPvB,EAAI,EAAQyiF,EAAU1iF,QAAQC,EAAIuB,IAAMvB,EAC3CyiF,EAAUziF,IACZ0iF,EAAWzgF,KAAIwC,MAAfi+E,EAAmBD,EAAUziF,WAIjCuiF,GAA2BnrE,GAAUsrE,EAC9BA,EA3MWC,CAAmB1lD,GAQhC,SACM2lD,EAAgBhhE,EAASvY,WAC1Bw5E,EAAY9jD,EAAQ06C,aAAa,EAAG,EAAG2I,EAAaA,GACvD9hF,KACMygF,EAAI,EAAGx/E,EAAK+gF,EAAQviF,OAAQghF,EAAIx/E,EAAIw/E,IAAC,GACxC8B,EAAUP,EAAQvB,IAAM,EAAC,KAExBoB,GACA/L,IAAgByD,IACfzD,IAAgByD,KACuB,IAAzCsI,EAAoBj/E,QAAQ0e,GAAe,KAErCkhE,GAAOR,EAAQvB,GAAK,GAAK,EACzBt1E,EAAIwxB,EAAgB6lD,EAAMV,EAC1B12E,EAAIuxB,GAAiB6lD,EAAMV,EAAe,GAC1CW,EAAS9zE,EAAS2S,EAASvY,EAAUoC,EAAIA,EAAIC,EAAIA,MACnDq3E,EAAM,OACDA,EAGXhkD,EAAQy6C,UAAU,EAAG,EAAG4I,EAAaA,UAOf,IAIxBpiF,EAAG2b,EAAGomE,EAAWiB,EAAU1lD,EAHzB2lD,EAAK/hF,OAAO8C,KAAIrF,KAAM8iF,oBAAoBpuD,IAAIkD,YACpD0sD,EAAGn1D,KAAKtuB,GAGHQ,EAAIijF,EAAGljF,OAAS,EAAGC,GAAK,IAAKA,EAAC,KAC3Bq2E,EAAY4M,EAAGjjF,GAAG+jD,eACxBg+B,EAASpjF,KAAQ8iF,mBAAmBpL,GAC/B16D,EAAIwlE,GAAMphF,OAAS,EAAG4b,GAAK,IAAKA,UAGlB9X,KADjBm/E,EAAWjB,EADX3L,EAAc+K,GAAMxlE,OAGlB2hB,EAAS0lD,EAAS9B,oBAChBniD,EACA7zB,EACAyE,EACAizE,EACAP,IAEQ,OACD/kD,IAYjB+jD,EAAAtiF,UAAA+iF,cAAa,SAAC52E,OACN0oC,EAASj1C,KAAQg3E,eAClB/hC,EAAS,OACL,SAEH/lC,EAAO+lC,EAAU,GACjB9lC,EAAO8lC,EAAU,GACjB7lC,EAAO6lC,EAAU,GACjB5lC,EAAO4lC,EAAU,GACjBiuC,EAAc,CAAIh0E,EAAMC,EAAMD,EAAMG,EAAMD,EAAMC,EAAMD,EAAMD,UAClE0N,GAAYqmE,EAAgB,EAAG,EAAG,EAAG32E,EAAW22E,GACzCA,GAMTR,EAAAtiF,UAAA8hB,QAAO,kBACE3e,EAAOvD,KAAM8iF,qBAatBJ,EAAAtiF,UAAAkiF,QAAO,SACLliD,EACAq/C,EACAlzE,EACA40E,EACAtC,EACA0F,EACAnE,GAE4B,IACtBkE,EAAK/hF,OAAO8C,KAAIrF,KAAM8iF,oBAAoBpuD,IAAIkD,QACpD0sD,EAAGn1D,KAAKtuB,QAICm2E,aACP52C,EAAQ+G,YACHwyC,KAAKv5C,EAAS7zB,QAIjBlL,EAAGuB,EAAIoa,EAAGoK,EAAIuwD,EAASC,EADrB4M,EAAeD,GAAsC/B,OAEvDpC,GACFkE,EAAG/V,UAEAltE,EAAI,EAAGuB,EAAK0hF,EAAGljF,OAAQC,EAAIuB,IAAMvB,EAAC,KAC/Bq2E,EAAY4M,EAAGjjF,GAAG+jD,eACxBuyB,EAAO33E,KAAQ8iF,mBAAmBpL,GAC7B16D,EAAI,EAAGoK,EAAKo9D,EAAapjF,OAAQ4b,EAAIoK,IAAMpK,EAAC,MAGhC9X,KADf0yE,EAASD,EADW6M,EAAaxnE,MAG/B46D,EAAO0K,QACLliD,EACAq/C,EACAlzE,EACA40E,EACAtC,EACAuB,SAMCpJ,YACP52C,EAAQsH,WAGdg7C,EAjVA,GAyVMkB,GAA0B,OAoDhCa,GAAehC,0gBC8sBfiC,GA/kCA,SAAAjhF,GASK,SACHkhF,EACEvkD,EACA4iB,EACA90C,EACA3B,EACA40E,EACAyD,EACAC,OAPFjhF,EASEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKkhF,SAAW1kD,EAMhBx8B,EAAKm/C,YAAcC,EAMnBp/C,EAAKyP,QAAUnF,EAMftK,EAAKmhF,WAAax4E,EAMlB3I,EAAK85E,cAAgByD,EAMrBv9E,EAAKohF,kBAAoBJ,EAMzBhhF,EAAKqhF,eAAiBJ,EAMtBjhF,EAAKshF,kBAAoB,KAMzBthF,EAAKuhF,oBAAsB,KAM3BvhF,EAAKwhF,kBAAoB,KAMzBxhF,EAAKyhF,WAAa,KAMlBzhF,EAAK0hF,aAAe,KAMpB1hF,EAAKgjE,OAAS,KAMdhjE,EAAK2hF,cAAgB,EAMrB3hF,EAAK4hF,cAAgB,EAMrB5hF,EAAK6hF,aAAe,EAMpB7hF,EAAK8hF,cAAgB,EAMrB9hF,EAAK+hF,cAAgB,EAMrB/hF,EAAKgiF,cAAgB,EAMrBhiF,EAAKiiF,sBAAuB,EAM5BjiF,EAAKkiF,eAAiB,EAMtBliF,EAAKmiF,YAAW,CAAI,EAAG,GAMvBniF,EAAKoiF,YAAc,EAMnBpiF,EAAKmjE,MAAK,GAMVnjE,EAAKkvE,aAAe,EAMpBlvE,EAAKmvE,aAAe,EAMpBnvE,EAAKovE,qBAAsB,EAM3BpvE,EAAKqvE,cAAgB,EAMrBrvE,EAAKqiF,WAAU,CAAI,EAAG,GAMtBriF,EAAKsvE,eAAiB,KAMtBtvE,EAAKwvE,iBAAmB,KAMxBxvE,EAAK0vE,WAAa,KAMlB1vE,EAAK65E,kBAAiB,GAMtB75E,EAAKsiF,oBlIrOC,EAAG,EAAG,EAAG,EAAG,EAAG,YkIMaC,GAAAxB,EAAAlhF,GAyOpCkhF,EAAAvkF,UAAAgmF,YAAW,SAACx2E,EAAiBC,EAAQrO,EAAKsO,WAC9B82D,YAGJyZ,EAAmBxjE,GACvBjN,EACAC,EACArO,EACA,EAACxB,KACI+kF,WAAU/kF,KACVy9E,mBAEDr9C,EAAOpgC,KAAQ8kF,SACfuB,EAAcrmF,KAAQkmF,mBACtBI,EAAQlmD,EAAQgH,YACI,QAAjBs+C,gBACPtlD,EAAQgH,YAAck/C,EAAKtmF,KAAQ0lF,mBAEjC10E,EAAQhR,KAAQ8lF,oBACXD,uBACP70E,GAAQhR,KAAS09E,uBAEVr8E,EAAI,EAAGuB,EAAKy9E,EAAiBj/E,OAAQC,EAAIuB,EAAIvB,GAAK,EAAC,KACpDyL,EAAIuzE,EAAiBh/E,GAACrB,KAASulF,cAC/Bx4E,EAAIszE,EAAiBh/E,EAAI,GAACrB,KAASwlF,iBAE1B,IAAbx0E,GACuB,GADThR,KACT+lF,YAAY,IACM,GADC/lF,KACnB+lF,YAAY,GAAO,KAElBrmC,EAAU5yC,EAAC9M,KAAQulF,cACnB5lC,EAAU5yC,EAAC/M,KAAQwlF,cACzBx4E,GACEq5E,EACA3mC,EACAC,EACA,EACA,EACA3uC,GACC0uC,GACAC,GAEHvf,EAAQiH,aAAavhC,MAAMs6B,EAASimD,GACpCjmD,EAAQ/f,UAAUq/B,EAASC,GAC3Bvf,EAAQtgB,MAAK9f,KAAM+lF,YAAY,GAAC/lF,KAAQ+lF,YAAY,IACpD3lD,EAAQqH,UAASznC,KACV4mE,OAAM5mE,KACN2lF,cAAa3lF,KACb4lF,cAAa5lF,KACbgmF,YAAWhmF,KACXylF,cAAYzlF,KACXulF,eAAavlF,KACbwlF,cAAaxlF,KACdgmF,YAAWhmF,KACXylF,cAEPrlD,EAAQiH,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,QAEpCjH,EAAQqH,UAASznC,KACV4mE,OAAM5mE,KACN2lF,cAAa3lF,KACb4lF,cAAa5lF,KACbgmF,YAAWhmF,KACXylF,aACL34E,EACAC,EAAC/M,KACIgmF,YAAWhmF,KACXylF,cAIe,QAAjBC,gBACPtlD,EAAQgH,YAAck/C,KAW1B3B,EAAAvkF,UAAAmmF,UAAS,SAAC32E,EAAiBC,EAAQrO,EAAKsO,WAC5BwjE,YAAwB,KAAdtzE,KAAS+mE,YAGpBmM,gBAAclzE,KAChBwmF,qBAAoBxmF,KAAMkzE,qBAExBE,kBAAgBpzE,KAClBymF,uBAAsBzmF,KAAMozE,uBAE9BsT,qBAAoB1mF,KAAMszE,gBACzB+M,EAAmBxjE,GACvBjN,EACAC,EACArO,EACAsO,EAAM9P,KACD+kF,WAAU/kF,KACVy9E,mBAEDr9C,EAAOpgC,KAAQ8kF,SACjB9zE,EAAQhR,KAAQizE,uBACXD,sBACPhiE,GAAQhR,KAAS09E,eAEZ7tE,EAASrO,EAAKqO,GAAUC,EAAM,KAC7BhD,EAAIuzE,EAAiBxwE,GAAM7P,KAAS8yE,aACpC/lE,EAAIszE,EAAiBxwE,EAAS,GAAC7P,KAAS+yE,gBAE/B,IAAb/hE,GACsB,GADRhR,KACTimF,WAAW,IACM,GADCjmF,KAClBimF,WAAW,GAAO,KAEjBI,EAAiBr5E,GAAgBhN,KAChCkmF,mBACLp5E,EACAC,EACA,EACA,EACAiE,GACClE,GACAC,GAEHqzB,EAAQiH,aAAavhC,MAAMs6B,EAASimD,GACpCjmD,EAAQ/f,UAAUvT,EAAGC,GACrBqzB,EAAQtgB,MAAK9f,KAAMimF,WAAW,GAACjmF,KAAQimF,WAAW,SACzC7S,kBACPhzC,EAAQumD,WAAU3mF,KAAM+mE,MAAO,EAAG,QAE3BmM,gBACP9yC,EAAQwmD,SAAQ5mF,KAAM+mE,MAAO,EAAG,GAElC3mC,EAAQiH,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,aAE3B+rC,kBACPhzC,EAAQumD,WAAU3mF,KAAM+mE,MAAOj6D,EAAGC,QAE3BmmE,gBACP9yC,EAAQwmD,SAAQ5mF,KAAM+mE,MAAOj6D,EAAGC,MAexC43E,EAAAvkF,UAAAymF,cAAa,SAACj3E,EAAiBC,EAAQrO,EAAKsO,EAAQg3E,OAC5C1mD,EAAOpgC,KAAQ8kF,SACfzE,EAAmBxjE,GACvBjN,EACAC,EACArO,EACAsO,EAAM9P,KACD+kF,WAAU/kF,KACVy9E,mBAEPr9C,EAAQ85C,OAAOmG,EAAiB,GAAIA,EAAiB,QACjDj/E,EAASi/E,EAAiBj/E,OAC1B0lF,IACF1lF,GAAU,WAEHC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/B++B,EAAQwkC,OAAOyb,EAAiBh/E,GAAIg/E,EAAiBh/E,EAAI,WAEvDylF,GACF1mD,EAAQ4kC,YAEHxjE,GAWTmjF,EAAAvkF,UAAA2mF,WAAU,SAACn3E,EAAiBC,EAAQ0W,EAAMzW,WAC/BzO,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAC1CwO,EAAM7P,KAAQ6mF,cACZj3E,EACAC,EACA0W,EAAKllB,GACLyO,GACA,UAGGD,GAUT80E,EAAAvkF,UAAAwqE,WAAU,SAAClgE,MACJyH,GAAUnS,KAAMqT,QAAS3I,EAAS0J,sBAG9BixE,YAAUrlF,KAASslF,aAAY,MAC7BD,YAAUrlF,KACZwmF,qBAAoBxmF,KAAMqlF,iBAExBC,cAAYtlF,KACdymF,uBAAsBzmF,KAAMslF,kBAE7BjF,EAAmB/zD,GAAA06D,gBACvBt8E,EAAQ1K,KACH+kF,WAAU/kF,KACVy9E,mBAED/uE,EAAK2xE,EAAiB,GAAKA,EAAiB,GAC5C1xE,EAAK0xE,EAAiB,GAAKA,EAAiB,GAC5C5nE,EAAStM,KAAK4N,KAAKrL,EAAKA,EAAKC,EAAKA,GAClCyxB,EAAOpgC,KAAQ8kF,SACrB1kD,EAAQskC,YACRtkC,EAAQukC,IACN0b,EAAiB,GACjBA,EAAiB,GACjB5nE,EACA,EACA,EAAItM,KAAKC,SAEFi5E,YACPjlD,EAAQkiC,YAEDgjB,cACPllD,EAAQyiC,SAGE,UAALkE,OAAK/mE,KACPumF,UAAU77E,EAASknB,YAAa,EAAG,EAAG,KAW/C+yD,EAAAvkF,UAAAgL,SAAQ,SAACF,QACF4gE,mBAAmB5gE,EAAMg4D,UAAWh4D,EAAMk4D,kBAC1C2I,cAAc7gE,EAAMm2D,iBACpB6K,aAAahhE,EAAM+7D,YAM1B0d,EAAAvkF,UAAAinC,aAAY,SAAC96B,QACNw4E,WAAax4E,GAUpBo4E,EAAAvkF,UAAAuqE,aAAY,SAACjgE,UACEA,EAASyV,gBAEfjI,QACEuzD,UACmD/gE,cAGrDwN,QACE+yD,eACwDvgE,cAG1DwN,QACEyzD,YACqDjhE,cAGvDwN,QACEmzD,eACwD3gE,cAG1DwN,QACEizD,oBAC6DzgE,cAG/DwN,QACEqzD,iBAC0D7gE,cAG5DwN,QACE6yD,uBACgErgE,cAGlEwN,QACE0yD,WACoDlgE,KAiB/Di6E,EAAAvkF,UAAA0qE,YAAW,SAAC7nD,EAAS/X,OACbR,EAAWQ,EAAMi8D,qBAANj8D,CAA4B+X,GACxCvY,GAAayH,GAAUnS,KAAMqT,QAAS3I,EAAS0J,oBAG/ChJ,SAASF,QACTy/D,aAAajgE,KASpBi6E,EAAAvkF,UAAA2qE,uBAAsB,SAACrgE,WACfkW,EAAalW,EAAS+W,qBACnBpgB,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,EAACrB,KAC5C2qE,aAAa/pD,EAAWvf,KAUjCsjF,EAAAvkF,UAAAqrE,UAAS,SAAC/gE,QACCs6E,oBACPt6E,EAAiEA,EAASsU,oBAAmBhf,KACtFglF,kBAAiBhlF,KACjBilF,qBAGHr1E,EAAkBlF,EAASsa,qBAC3BlV,EAASpF,EAASua,iBACf2hD,QAAM5mE,KACRomF,YAAYx2E,EAAiB,EAAGA,EAAgBxO,OAAQ0O,GAEjD,UAALi3D,OAAK/mE,KACPumF,UAAU32E,EAAiB,EAAGA,EAAgBxO,OAAQ0O,IAU/D60E,EAAAvkF,UAAAirE,eAAc,SAAC3gE,QACJs6E,oBACPt6E,EAAsEA,EAASsU,oBAAmBhf,KAC3FglF,kBAAiBhlF,KACjBilF,qBAGHr1E,EAAkBlF,EAASsa,qBAC3BlV,EAASpF,EAASua,iBACf2hD,QAAM5mE,KACRomF,YAAYx2E,EAAiB,EAAGA,EAAgBxO,OAAQ0O,GAEjD,UAALi3D,OAAK/mE,KACPumF,UAAU32E,EAAiB,EAAGA,EAAgBxO,OAAQ0O,IAU/D60E,EAAAvkF,UAAA6qE,eAAc,SAACvgE,WACJs6E,oBACPt6E,EAAsEA,EAASsU,oBAAmBhf,KAC3FglF,kBAAiBhlF,KACjBilF,iBAGJ9yE,GAAUnS,KAAMqT,QAAS3I,EAAS0J,sBAG9BkxE,aAAY,MACdmB,uBAAsBzmF,KAAMslF,kBAC3BllD,EAAOpgC,KAAQ8kF,SACfl1E,EAAkBlF,EAASsa,qBACjCob,EAAQskC,iBACHmiB,cACHj3E,EACA,EACAA,EAAgBxO,OAChBsJ,EAASua,aACT,GAEFmb,EAAQyiC,YAEI,UAALkE,MAAK,KACNkgB,EAAev8E,EAAS2hB,uBACzBk6D,UAAUU,EAAc,EAAG,EAAG,MAUvCtC,EAAAvkF,UAAA+qE,oBAAmB,SAACzgE,QACTs6E,oBACPt6E,EAA2EA,EAASsU,oBAAmBhf,KAChGglF,kBAAiBhlF,KACjBilF,qBAGHiC,EAAiBx8E,EAAS0J,eAC3BjC,GAAUnS,KAAMqT,QAAS6zE,YAGrB5B,aAAY,MACdmB,uBAAsBzmF,KAAMslF,kBAC3BllD,EAAOpgC,KAAQ8kF,SACfl1E,EAAkBlF,EAASsa,qBAC7BnV,EAAS,EACP0W,EAAqC7b,EAASuiB,UAC9Cnd,EAASpF,EAASua,YACxBmb,EAAQskC,oBACCrjE,EAAI,EAAGuB,EAAK2jB,EAAKnlB,OAAQC,EAAIuB,IAAMvB,EAC1CwO,EAAM7P,KAAQ6mF,cACZj3E,EACAC,EACA0W,EAAKllB,GACLyO,GACA,GAGJswB,EAAQyiC,YAEI,UAALkE,MAAK,KACNogB,EAAgBz8E,EAAS2iB,wBAC1Bk5D,UAAUY,EAAe,EAAGA,EAAc/lF,OAAQ,MAU3DujF,EAAAvkF,UAAAurE,YAAW,SAACjhE,WACDs6E,oBACPt6E,EAAmEA,EAASsU,oBAAmBhf,KACxFglF,kBAAiBhlF,KACjBilF,iBAGJ9yE,GAAUnS,KAAMqT,QAAS3I,EAAS0J,sBAG9BkxE,cAAYtlF,KAASqlF,WAAU,MAC7BA,YAAUrlF,KACZwmF,qBAAoBxmF,KAAMqlF,iBAExBC,cAAYtlF,KACdymF,uBAAsBzmF,KAAMslF,kBAE7BllD,EAAOpgC,KAAQ8kF,SACrB1kD,EAAQskC,iBACHqiB,WACHr8E,EAAS+lB,6BACT,EAC8B/lB,EAASuiB,UACvCviB,EAASua,kBAEFogE,YACPjlD,EAAQkiC,YAEDgjB,cACPllD,EAAQyiC,YAGE,UAALkE,MAAK,KACNqgB,EAAoB18E,EAASgmB,4BAC9B61D,UAAUa,EAAmB,EAAG,EAAG,MAS5CzC,EAAAvkF,UAAAmrE,iBAAgB,SAAC7gE,WACNs6E,oBACPt6E,EAAwEA,EAASsU,oBAAmBhf,KAC7FglF,kBAAiBhlF,KACjBilF,iBAGJ9yE,GAAUnS,KAAMqT,QAAS3I,EAAS0J,sBAG9BkxE,cAAYtlF,KAASqlF,WAAU,MAC7BA,YAAUrlF,KACZwmF,qBAAoBxmF,KAAMqlF,iBAExBC,cAAYtlF,KACdymF,uBAAsBzmF,KAAMslF,kBAE7BllD,EAAOpgC,KAAQ8kF,SACfl1E,EAAkBlF,EAAS+lB,6BAC7B5gB,EAAS,EACPgZ,EAAQne,EAASsoB,WACjBljB,EAASpF,EAASua,YACxBmb,EAAQskC,oBACCrjE,EAAI,EAAGuB,EAAKimB,EAAMznB,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCklB,EAAOsC,EAAMxnB,GACnBwO,EAAM7P,KAAQ+mF,WAAWn3E,EAAiBC,EAAQ0W,EAAMzW,QAEjDu1E,YACPjlD,EAAQkiC,YAEDgjB,cACPllD,EAAQyiC,YAGE,UAALkE,MAAK,KACNsgB,EAAqB38E,EAASuoB,6BAC/BszD,UAAUc,EAAoB,EAAGA,EAAmBjmF,OAAQ,MAQrEujF,EAAAvkF,UAAAomF,qBAAoB,SAAC5S,OACbxzC,EAAOpgC,KAAQ8kF,SACfwC,EAAgBtnF,KAAQklF,kBACzBoC,EAMCA,EAAiBziB,WAAa+O,EAAU/O,YAC1CyiB,EAAiBziB,UAAY+O,EAAU/O,UACvCzkC,EAAQykC,UAAY+O,EAAU/O,YAPhCzkC,EAAQykC,UAAY+O,EAAU/O,eACzBqgB,kBAAiB,CACpBrgB,UAAW+O,EAAU/O,aAc3B8f,EAAAvkF,UAAAqmF,uBAAsB,SAAC5S,OACfzzC,EAAOpgC,KAAQ8kF,SACfyC,EAAkBvnF,KAAQmlF,oBAC3BoC,GAoBCA,EAAmB7jB,SAAWmQ,EAAYnQ,UAC5C6jB,EAAmB7jB,QAAUmQ,EAAYnQ,QACzCtjC,EAAQsjC,QAAUmQ,EAAYnQ,SAE5BtjC,EAAQ2kC,cACLhjE,EAAOwlF,EAAmB1jB,SAAUgQ,EAAYhQ,WACnDzjC,EAAQ2kC,YACLwiB,EAAmB1jB,SAAWgQ,EAAYhQ,UAG3C0jB,EAAmBzjB,gBAAkB+P,EAAY/P,iBACnDyjB,EAAmBzjB,eAAiB+P,EAAY/P,eAChD1jC,EAAQ0jC,eAAiB+P,EAAY/P,iBAGrCyjB,EAAmB5jB,UAAYkQ,EAAYlQ,WAC7C4jB,EAAmB5jB,SAAWkQ,EAAYlQ,SAC1CvjC,EAAQujC,SAAWkQ,EAAYlQ,UAE7B4jB,EAAmBziB,WAAa+O,EAAY/O,YAC9CyiB,EAAmBziB,UAAY+O,EAAY/O,UAC3C1kC,EAAQ0kC,UAAY+O,EAAY/O,WAE9ByiB,EAAmB3jB,YAAciQ,EAAYjQ,aAC/C2jB,EAAmB3jB,WAAaiQ,EAAYjQ,WAC5CxjC,EAAQwjC,WAAaiQ,EAAYjQ,YAE/B2jB,EAAmB9jB,aAAeoQ,EAAYpQ,cAChD8jB,EAAmB9jB,YAAcoQ,EAAYpQ,YAC7CrjC,EAAQqjC,YAAcoQ,EAAYpQ,eAhDpCrjC,EAAQsjC,QAAUmQ,EAAYnQ,QAC1BtjC,EAAQ2kC,cACV3kC,EAAQ2kC,YAAY8O,EAAYhQ,UAChCzjC,EAAQ0jC,eAAiB+P,EAAY/P,gBAEvC1jC,EAAQujC,SAAWkQ,EAAYlQ,SAC/BvjC,EAAQ0kC,UAAY+O,EAAY/O,UAChC1kC,EAAQwjC,WAAaiQ,EAAYjQ,WACjCxjC,EAAQqjC,YAAcoQ,EAAYpQ,iBAC7B0hB,oBAAmB,CACtBzhB,QAASmQ,EAAYnQ,QACrBG,SAAUgQ,EAAYhQ,SACtBC,eAAgB+P,EAAY/P,eAC5BH,SAAUkQ,EAAYlQ,SACtBmB,UAAW+O,EAAY/O,UACvBlB,WAAYiQ,EAAYjQ,WACxBH,YAAaoQ,EAAYpQ,eAyC/BkhB,EAAAvkF,UAAAsmF,qBAAoB,SAAC5S,OACb1zC,EAAOpgC,KAAQ8kF,SACf0C,EAAgBxnF,KAAQolF,kBACxBzQ,EAAYb,EAAUa,UACxBb,EAAUa,UACV7wC,GACC0jD,GAUCA,EAAiBjiD,MAAQuuC,EAAUvuC,OACrCiiD,EAAiBjiD,KAAOuuC,EAAUvuC,KAClCnF,EAAQmF,KAAOuuC,EAAUvuC,MAEvBiiD,EAAiB7S,WAAaA,IAChC6S,EAAiB7S,UAA4CA,EAC7Dv0C,EAAQu0C,UAA4CA,GAElD6S,EAAiBrS,cAAgBrB,EAAUqB,eAC7CqS,EAAiBrS,aAAkDrB,EAAUqB,aAC7E/0C,EAAQ+0C,aAAkDrB,EAAUqB,gBAnBtE/0C,EAAQmF,KAAOuuC,EAAUvuC,KACzBnF,EAAQu0C,UAA4CA,EACpDv0C,EAAQ+0C,aAAkDrB,EAAUqB,kBAC/DiQ,kBAAiB,CACpB7/C,KAAMuuC,EAAUvuC,KAChBovC,UAAWA,EACXQ,aAAcrB,EAAUqB,gBAyB9BwP,EAAAvkF,UAAA0rE,mBAAkB,SAACjH,EAAWpB,MACvBoB,OAGG4J,EAAiB5J,EAAUb,gBAC5BqhB,WAAU,CACbxgB,UAAW7C,GACTyM,GAAkChrC,UAN1BzjC,KACPqlF,WAAa,QASf5hB,OAGGiL,EAAmBjL,EAAYO,WAC/B2K,EAAqBlL,EAAYY,aACjCuK,EAAsBnL,EAAYS,cAClC2K,EAA4BpL,EAAYU,oBACxC2K,EAAsBrL,EAAYW,cAClC2K,EAAmBtL,EAAYQ,WAC/B+K,EAAwBvL,EAAYa,qBACrCghB,aAAY,CACf5hB,aACyBx+D,IAAvBypE,EACIA,EACAjrC,GACNmgC,SAAU+K,GAA4CjrC,GACtDmgC,eAAgB+K,G3E/2Ba,E2Ek3B7BlL,cAC0Bz+D,IAAxB4pE,EACIA,EACAlrC,GACNkhC,UAAS9kE,KACF+iD,kBACiB79C,IAArB6pE,EACGA,E3E/0BkB,G2Ei1BxBnL,gBAC4B1+D,IAA1B8pE,EACIA,E3Ej3BmB,G2Em3BzBvL,YAAazB,GACX0M,GAAsC7qC,UAjC5B7jC,KACTslF,aAAe,MA4CxBX,EAAAvkF,UAAA2rE,cAAa,SAACC,MACPA,OAGGzH,EAAYyH,EAAW5kB,aACxBmd,OAGGkjB,EAAczb,EAAW5K,YAEzBsmB,EAAa1b,EAAW3K,SAAS,GACjCsmB,EAAc3b,EAAWrK,YACzBimB,EAAa5b,EAAW7K,qBACzBokB,cAAgBkC,EAAY,QAC5BjC,cAAgBiC,EAAY,QAC5BhC,aAAelhB,EAAU,QACzBqC,OAAS8gB,OACThC,cAAgB1Z,EAAW9xC,kBAC3ByrD,cAAgBgC,EAAY,QAC5B/B,cAAgB+B,EAAY,QAC5B9B,qBAAuB7Z,EAAW/K,yBAClC6kB,eAAiB9Z,EAAWhxB,mBAC5B+qC,YAAW,MACThjC,YAAc6kC,EAAW,QACzB7kC,YAAc6kC,EAAW,SAE3B5B,YAAczhB,EAAU,QArBjBvkE,KACP4mE,OAAS,UALH5mE,KACR4mE,OAAS,MAmClB+d,EAAAvkF,UAAA8rE,aAAY,SAACC,MACNA,OAGGmJ,EAAgBnJ,EAAUjJ,aAC3BoS,OAGGuS,EAAqBvS,EAActR,gBACpCkP,eAAc,CACjBrO,UAAW7C,GACT6lB,GAA0CpkD,UAN9BzjC,KACXkzE,eAAiB,SASlBqC,EAAkBpJ,EAAU/I,eAC7BmS,OAGGuS,EAAuBvS,EAAgBvR,WACvC+jB,EAAyBxS,EAAgBlR,aACzC2jB,EAA0BzS,EAAgBrR,cAC1C+jB,EAAgC1S,EAAgBpR,oBAChD+jB,EAA0B3S,EAAgBnR,cAC1C+jB,EAAuB5S,EAAgBtR,WACvCmkB,EAA4B7S,EAAgBjR,qBAC7C8O,iBAAgB,CACnB1P,aAC6Bx+D,IAA3B6iF,EACIA,EACArkD,GACNmgC,SAAUmkB,GAENrkD,GACJmgC,eAAgBmkB,G3En9BW,E2Es9B3BtkB,cAC8Bz+D,IAA5BgjF,EACIA,EACAtkD,GACNkhC,eAC2B5/D,IAAzBijF,EACIA,E3El7BgB,E2Eo7BtBvkB,gBACgC1+D,IAA9BkjF,EACIA,E3Ep9BiB,G2Es9BvB3kB,YAAazB,GACX8lB,GAA8CjkD,UAlChC7jC,KACbozE,iBAAmB,SAqCpBiV,EAAWlc,EAAUqJ,UACrBU,EAAc/J,EAAUgK,aACxBC,EAAcjK,EAAUkK,aACxBC,EAAqBnK,EAAUlL,oBAC/BsV,EAAepK,EAAUnxB,cACzBy6B,EAAYtJ,EAAUhL,gBACtBmnB,EAAWnc,EAAUlF,UACrBshB,EAAgBpc,EAAU0J,eAC1B2S,EAAmBrc,EAAU2J,uBAC9BxC,WAAU,CACb/tC,UAAmBrgC,IAAbmjF,EAAyBA,EAAW7kD,GAC1CmxC,eACoBzvE,IAAlBqjF,EAA8BA,EAAgBzkD,GAChDqxC,kBACuBjwE,IAArBsjF,EACIA,EACAzkD,SAEHgjC,WAAqB7hE,IAAbojF,EAAyBA,EAAQ,QACzCxV,kBACa5tE,IAAhBgxE,EAAyBl2E,KAAQ+iD,YAAcmzB,EAAc,OAC1DnD,kBACa7tE,IAAhBkxE,EAAyBp2E,KAAQ+iD,YAAcqzB,EAAc,OAC1DpD,yBACoB9tE,IAAvBoxE,GAAmCA,OAChCrD,mBAAiC/tE,IAAjBqxE,EAA6BA,EAAe,OAC5D0P,WAAU,MACRljC,YAAc0yB,EAAU,QACxB1yB,YAAc0yB,EAAU,SAjFnBz1E,KACP+mE,MAAK,IAoFhB4d,EA7kCA,CAAsCna,ICjCtCie,GAKU,WALVA,GAUQ,sDCVRC,GAKa,cALbA,GAUc,eAVdA,GAeU,WAfVA,GAoBW,6mBCqEXC,GAvFA,SAAAllF,GAMK,SACHmlF,EAAY16E,EAAQ6C,EAAYiyC,EAAYjpB,OAA5Cn2B,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKsK,OAASA,EAMdtK,EAAKm/C,YAAcC,EAMnBp/C,EAAKmN,WAAaA,EAMlBnN,EAAKm2B,MAAQA,WAhCO8uD,GAAAD,EAAAnlF,GAsCtBmlF,EAAAxoF,UAAAmG,QAAO,gBACA/B,cAAcgB,IAMrBojF,EAAAxoF,UAAAgU,UAAS,uBACKlG,QAOd06E,EAAAxoF,UAAAihE,SAAQ,kBACCr6D,KAMT4hF,EAAAxoF,UAAAmhE,cAAa,uBACCxe,aAMd6lC,EAAAxoF,UAAAu6C,cAAa,uBACwB5pC,YAMrC63E,EAAAxoF,UAAAu8B,SAAQ,uBACM5C,OAOd6uD,EAAAxoF,UAAAyzC,KAAI,WACF7sC,KAEJ4hF,EArFA,CAAwB9hF,EAAAC,4eCqJR+hF,GAAYjiB,EAAOkiB,EAAaC,OACxCC,EAAuCpiB,KAEzCoiB,EAAIzwD,KAAOyJ,GAAY,KACnBinD,EAAUD,EAAI9mD,SAChBgnD,GAAY,SAIhBD,EACGE,MAAI,WACCD,GACFJ,OAGHM,OAAK,SAAW7mD,GACX2mD,IAIU,kBAAV3mD,EAAMn5B,MACO,wBAAbm5B,EAAMr5B,QAEN4/E,IAEAC,QAnBM,WACZG,GAAY,OAyBVt/B,EAAY,CAChB7jD,EAAWijF,EAAKzjF,EAAgBujF,GAChC/iF,EAAWijF,EAAKzjF,EAAiBwjF,sBAGjCn/B,EAAa1uC,QAAQlV,KAxKzB,SAAAxC,GAQK,SACH6lF,EACEp7E,EACA6C,EACAiyC,EACAxqB,EACAC,EACA8wD,OANF3lF,EAQEH,EAAAI,KAAA7D,KAAMkO,EAAQ6C,EAAYiyC,EAAYsd,KAAetgE,YAMrD4D,EAAK4lF,KAAOhxD,EAMZ50B,EAAKgjE,OAAM,IAAO1kC,MACE,OAAhBzJ,IACF70B,EAAKgjE,OAAOnuC,YAAcA,GAO5B70B,EAAK6lF,UAAY,KAMjB7lF,EAAKm2B,MAAQumC,GAMb18D,EAAK8lF,mBAAqBH,IAlDHI,GAAAL,EAAA7lF,GAyDzB6lF,EAAAlpF,UAAAihE,SAAQ,uBACMuF,QAQd0iB,EAAAlpF,UAAAwpF,kBAAiB,gBACV7vD,MAAQumC,QACRupB,sBACAtjF,WAQP+iF,EAAAlpF,UAAA0pF,iBAAgB,gBACU5kF,SAAf6L,aAAwB/Q,KAC1B+Q,WAAaiB,GAAShS,KAAMkO,QAAMlO,KAAS4mE,OAAOl0D,aAEpDqnB,MAAQumC,QACRupB,sBACAtjF,WASP+iF,EAAAlpF,UAAAyzC,KAAI,gBACO9Z,OAASumC,IAAetgE,KAAS+5B,OAASumC,UAC5CvmC,MAAQumC,QACR/5D,eACAmjF,mBAAkB1pF,KAAAA,KAAYwpF,WAC9BC,UAAYX,GAAW9oF,KACrB4mE,OAAM5mE,KACN8pF,iBAAiBlkF,KAAI5F,MAAAA,KACrB4pF,kBAAkBhkF,KAAI5F,SAQjCspF,EAAAlpF,UAAAinE,SAAQ,SAACR,QACFD,OAASC,GAQhByiB,EAAAlpF,UAAAypF,eAAc,gBACHJ,iBACFA,iBACAA,UAAY,OAxHvB,CAA2BM,GAAAhjF,ueCbvBijF,GAAqB,KAEzBC,GAAA,SAAAxmF,GAQK,SACHymF,EAAYrjB,EAAOruC,EAAKvnB,EAAMwnB,EAAaqgD,EAAYviD,OAAvD3yB,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKssE,mBAAqB,KAM1BtsE,EAAKgjE,OAAUC,GAAK,IAAO3kC,MAEP,OAAhBzJ,IAC+B70B,EAAW,OAAE60B,YAAcA,GAO9D70B,EAAKu+D,QAAO,GAMZv+D,EAAK6hE,OAASlvC,EAMd3yB,EAAK6lF,UAAY,KAMjB7lF,EAAKumF,YAAcrR,EAMnBl1E,EAAKk/D,MAAQ7xD,EAMbrN,EAAK4lF,KAAOhxD,EAKZ50B,EAAKwmF,kBAnEeC,GAAAH,EAAAzmF,GA0EtBymF,EAAA9pF,UAAAkqF,WAAU,mBACcplF,SAAbklF,UAAsBpqF,KAASmqF,cAAgB7pB,GAAiB,CAClE0pB,KACHA,GAAqBvnD,GAAsB,EAAG,IAEhDunD,GAAmBviD,UAASznC,KAAM4mE,OAAQ,EAAG,OAE3CojB,GAAmBlP,aAAa,EAAG,EAAG,EAAG,QACpCsP,UAAW,QACT19E,GACPs9E,GAAqB,UAChBI,UAAW,UAGK,SAAbA,UAMdF,EAAA9pF,UAAAmqF,qBAAoB,gBACb/lF,cAAcgB,IAMrB0kF,EAAA9pF,UAAAwpF,kBAAiB,gBACVO,YAAc7pB,QACdupB,sBACAU,wBAMPL,EAAA9pF,UAAA0pF,iBAAgB,gBACTK,YAAc7pB,QACVwC,YACF8D,OAAOn0D,MAAKzS,KAAQ8iE,MAAM,QAC1B8D,OAAOl0D,OAAM1S,KAAQ8iE,MAAM,SAE3BA,MAAK,MAAS8D,OAAOn0D,WAAYm0D,OAAOl0D,aAE1Cm3E,sBACAU,wBAOPL,EAAA9pF,UAAAihE,SAAQ,SAACre,eACFwnC,cAAcxnC,QACPmf,QAAQnf,GAAUhjD,KAASmiE,QAAQnf,GAAUhjD,KAAS4mE,QAOpEsjB,EAAA9pF,UAAAmhE,cAAa,SAACve,eACPwnC,cAAcxnC,QACPmf,QAAQnf,GAAcA,EAAa,GAMjDknC,EAAA9pF,UAAAohE,cAAa,uBACC2oB,aAMdD,EAAA9pF,UAAAkhE,qBAAoB,oBACR4O,2BACCoa,aAAU,KACX73E,EAAKzS,KAAQ8iE,MAAM,GACnBpwD,EAAM1S,KAAQ8iE,MAAM,GACpB1iC,EAAUqC,GAAsBhwB,EAAOC,GAC7C0tB,EAAQqqD,SAAS,EAAG,EAAGh4E,EAAOC,QACzBw9D,mBAAqB9vC,EAAQyC,iBAE7BqtC,mBAAkBlwE,KAAQ4mE,mBAGvBsJ,oBAOdga,EAAA9pF,UAAAgnD,QAAO,uBACO0b,OAMdonB,EAAA9pF,UAAAsqF,OAAM,uBACQlB,MAMdU,EAAA9pF,UAAAyzC,KAAI,mBACOs2C,aAAe7pB,GAAe,MAChC6pB,YAAc7pB,OAEctgE,KAAa,OAAEw4B,IAAGx4B,KAAQwpF,WAClD98E,QACFk9E,yBAEFH,UAAYkB,GAAAC,YAAW5qF,KACrB4mE,OAAM5mE,KACN8pF,iBAAiBlkF,KAAI5F,MAAAA,KACrB4pF,kBAAkBhkF,KAAI5F,SASjCkqF,EAAA9pF,UAAAoqF,cAAa,SAACxnC,WACFyiB,SAAMzlE,KAASmiE,QAAQnf,QAI3BngB,EAASlM,SAASC,cAAa,eAChCurC,QAAQnf,GAAcngB,EAE3BA,EAAOpwB,MAAQtG,KAAKqrC,KAAIx3C,KAAM4mE,OAAOn0D,MAAQuwC,GAC7CngB,EAAOnwB,OAASvG,KAAKqrC,KAAIx3C,KAAM4mE,OAAOl0D,OAASswC,OAEzC6nC,EAAMhoD,EAAOE,WAAU,SAC7B8nD,EAAI/qE,MAAMkjC,EAAYA,GACtB6nC,EAAIpjD,UAASznC,KAAM4mE,OAAQ,EAAG,GAE9BikB,EAAIC,yBAAwB,WAII,aAA5BD,EAAIC,0BAAuC9qF,KAASsqF,aACtDO,EAAIhmB,UAAYvuC,GAAQt2B,KAAMylE,QAC9BolB,EAAIJ,SAAS,EAAG,EAAG5nD,EAAOpwB,MAAOowB,EAAOnwB,QAExCm4E,EAAIC,yBAAwB,iBAC5BD,EAAIpjD,UAASznC,KAAM4mE,OAAQ,EAAG,gBAExBmkB,EAAUF,EAAI/P,aAAa,EAAG,EAAGj4C,EAAOpwB,MAAOowB,EAAOnwB,QACtD/Q,EAAOopF,EAAQppF,KACfqU,EAAChW,KAAQylE,OAAO,GAAK,IACrBnuC,EAACt3B,KAAQylE,OAAO,GAAK,IACrB1kE,EAACf,KAAQylE,OAAO,GAAK,IACrB3kE,EAACd,KAAQylE,OAAO,GAEbpkE,EAAI,EAAGuB,EAAKjB,EAAKP,OAAQC,EAAIuB,EAAIvB,GAAK,EAC7CM,EAAKN,IAAM2U,EACXrU,EAAKN,EAAI,IAAMi2B,EACf31B,EAAKN,EAAI,IAAMN,EACfY,EAAKN,EAAI,IAAMP,EAEjB+pF,EAAIG,aAAaD,EAAS,EAAG,MASjCb,EAAA9pF,UAAAypF,eAAc,gBACHJ,iBACFA,iBACAA,UAAY,OAGvBS,EAjQA,CAAwBpjF,EAAAC,kBA4QRkkF,GAAIpkB,EAAOruC,EAAKvnB,EAAMwnB,EAAaqgD,EAAYviD,OACzDgC,EAAYM,GAAe5wB,IAAIuwB,EAAKC,EAAalC,UAChDgC,IACHA,EAAS,IAAO0xD,GAAUpjB,EAAOruC,EAAKvnB,EAAMwnB,EAAaqgD,EAAYviD,GACrEsC,GAAepwB,IAAI+vB,EAAKC,EAAalC,EAAOgC,IAEvCA,geCwJT2yD,GAtYA,SAAAznF,GAGK,SACH0nF,EAAY1oE,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAW,GAKrBwW,OAA8B/zB,IAApB+N,EAAQgmB,QAAwBhmB,EAAQgmB,QAAU,EAK5DjoB,OAAgC9L,IAArB+N,EAAQjC,SAAyBiC,EAAQjC,SAAW,EAK/D8O,OAA0B5a,IAAlB+N,EAAQ6M,MAAsB7M,EAAQ6M,MAAQ,EAKtD6gD,OACuBz7D,IAA3B+N,EAAQ0tD,gBAA+B1tD,EAAQ0tD,gBAEjD/8D,EAAAH,EAAAI,KAAA7D,KAAA,CACEi5B,QAASA,EACTjoB,SAAUA,EACV8O,MAAOA,EACPihD,kBAC2B77D,IAAzB+N,EAAQ8tD,aAA6B9tD,EAAQ8tD,aAAY,CAAI,EAAG,GAClEJ,eAAgBA,WAOb1H,aAA6B/zD,IAAnB+N,EAAQiK,OAAuBjK,EAAQiK,OAAM,CAAI,GAAK,IAMrEtZ,EAAKwnF,kBAAoB,KAMzBxnF,EAAKynF,mBACsBnmF,IAAzB+N,EAAQq4E,aACJr4E,EAAQq4E,aACR5C,GAMN9kF,EAAK2nF,mBACsBrmF,IAAzB+N,EAAQu4E,aACJv4E,EAAQu4E,aACR/C,GAMN7kF,EAAK6nF,mBACsBvmF,IAAzB+N,EAAQy4E,aACJz4E,EAAQy4E,aACRjD,GAMN7kF,EAAK+nF,kBACqBzmF,IAAxB+N,EAAQwlB,YAA4BxlB,EAAQwlB,YAAc,KAIzD,IACGouC,OAAwB3hE,IAAhB+N,EAAQg2E,IAAoBh2E,EAAQg2E,IAAM,KAKlD2C,OAA8B1mF,IAApB+N,EAAQ24E,QAAwB34E,EAAQ24E,QAAU,KAK9DpzD,EAAMvlB,EAAQulB,IAElBjvB,UAAiBrE,IAARszB,GAAqBquC,GAAQ,GACtCt9D,IAAQs9D,GAAUA,GAAS+kB,EAAU,QAExB1mF,IAARszB,GAAoC,IAAfA,EAAIp3B,SAAiBylE,IAC7CruC,EAAuCquC,EAAOruC,KAAOrxB,EAAO0/D,IAE9Dt9D,QAAerE,IAARszB,GAAqBA,EAAIp3B,OAAS,EAAG,GAIzC,IACG03E,OACY5zE,IAAhB+N,EAAQulB,IAAoB8nC,GAAkBA,UAMhD18D,EAAK6hE,YAA2BvgE,IAAlB+N,EAAQsjB,MAAsBuB,GAAQ7kB,EAAQsjB,OAAS,KAMrE3yB,EAAKioF,WAAaC,GAAA7jF,IAChB4+D,EACuBruC,EACvBozD,EACAhoF,EAAK+nF,aACL7S,EACAl1E,EAAK6hE,QAOP7hE,EAAKmoF,aAA6B7mF,IAAnB+N,EAAQpD,OAAuBoD,EAAQpD,OAAM,CAAI,EAAG,GAKnEjM,EAAKooF,mBACsB9mF,IAAzB+N,EAAQg5E,aACJh5E,EAAQg5E,aACRvD,GAMN9kF,EAAK2+D,QAAU,KAMf3+D,EAAKk/D,WAAyB59D,IAAjB+N,EAAQhC,KAAqBgC,EAAQhC,KAAO,cA3J1Ci7E,GAAAf,EAAA1nF,GAmKjB0nF,EAAA/qF,UAAA0K,MAAK,eACGgV,EAAK9f,KAAQghE,sBACRmqB,EAAI,CACbjuE,OAAMld,KAAOi5D,QAAQzqD,QACrB88E,aAAYtrF,KAAOqrF,cACnBG,aAAYxrF,KAAOurF,cACnBG,aAAY1rF,KAAOyrF,cACnBhzD,YAAWz4B,KAAO2rF,aAClBp1D,MAAKv2B,KACEylE,QAAMzlE,KAASylE,OAAOj3D,MAAKxO,KACvBylE,OAAOj3D,QAAKxO,KACZylE,aAAUvgE,EACrBszB,IAAGx4B,KAAO0qF,SACV76E,OAAM7P,KAAO+rF,QAAQv9E,QACrBy9E,aAAYjsF,KAAOgsF,cACnB/6E,KAAqB,OAAjBjR,KAAO8iE,MAAc9iE,KAAQ8iE,MAAMt0D,aAAUtJ,EACjD+zB,QAAOj5B,KAAOk6B,aACdpa,MAAOje,MAAMC,QAAQge,GAASA,EAAMtR,QAAUsR,EAC9C9O,SAAQhR,KAAOg7C,cACf2lB,eAAc3gE,KAAOihE,uBAUzBkqB,EAAA/qF,UAAAghE,UAAS,mBACEgqB,kBAAiB,OAAAprF,KACZorF,sBAEVluE,EAAMld,KAAQi5D,QACZhoD,EAAIjR,KAAQonD,kBAEXmkC,eAAiB9C,IAAwBzoF,KACzCyrF,eAAiBhD,GAAwB,KAEzCx3E,EAAI,OACA,KAETiM,EAAMld,KAAQi5D,QAAQzqD,aACb+8E,eAAiB9C,KACxBvrE,EAAO,IAAMjM,EAAK,SAEXw6E,eAAiBhD,KACxBvrE,EAAO,IAAMjM,EAAK,YAIbo6E,eAAiB3C,GAAmB,KACtCz3E,EAAI,OACA,KAELiM,IAAMld,KAAUi5D,UAClB/7C,EAAMld,KAAQi5D,QAAQzqD,cAGjB68E,eAAiB3C,IAAoB1oF,KACrCqrF,eAAiB3C,KAEtBxrE,EAAO,IAAMA,EAAO,GAAKjM,EAAK,SAGzBo6E,eAAiB3C,IAAsB1oF,KACvCqrF,eAAiB3C,KAEtBxrE,EAAO,IAAMA,EAAO,GAAKjM,EAAK,QAG5B8vD,EAAY/gE,KAAQkhE,yBAC1BhkD,EAAO,IAAM6jD,EAAa,GAC1B7jD,EAAO,IAAM6jD,EAAa,QAErBqqB,kBAAoBluE,OACbkuE,mBAUdD,EAAA/qF,UAAA+rF,UAAS,SAACjvE,QACH+7C,QAAU/7C,OACVkuE,kBAAoB,MAQ3BD,EAAA/qF,UAAA4jE,SAAQ,uBACMyB,QASd0lB,EAAA/qF,UAAAihE,SAAQ,SAACre,eACK6oC,WAAWxqB,SAASre,IASlCmoC,EAAA/qF,UAAAmhE,cAAa,SAACve,eACA6oC,WAAWtqB,cAAcve,IAMvCmoC,EAAA/qF,UAAAqhE,aAAY,uBACEoqB,WAAWzkC,WAMzB+jC,EAAA/qF,UAAAshE,yBAAwB,uBACVD,gBAMd0pB,EAAA/qF,UAAAohE,cAAa,uBACCqqB,WAAWrqB,iBAMzB2pB,EAAA/qF,UAAAkhE,qBAAoB,uBACNuqB,WAAWvqB,wBAQzB6pB,EAAA/qF,UAAAuhE,UAAS,mBACEY,QAAO,OAAAviE,KACFuiE,YAEV1yD,EAAM7P,KAAQ+rF,gBAETC,eAAiBtD,GAAmB,KACrCz3E,EAAIjR,KAAQonD,UACZglC,EAAapsF,KAAQ6rF,WAAWzkC,cACjCn2C,IAASm7E,EAAa,OAClB,KAETv8E,EAASA,EAAOrB,aAETw9E,eAAiBtD,IAAoB1oF,KACrCgsF,eAAiBtD,KAEtB74E,EAAO,GAAKu8E,EAAc,GAAKn7E,EAAK,GAAKpB,EAAO,SAG3Cm8E,eAAiBtD,IAAsB1oF,KACvCgsF,eAAiBtD,KAEtB74E,EAAO,GAAKu8E,EAAc,GAAKn7E,EAAK,GAAKpB,EAAO,gBAG/C0yD,QAAU1yD,OACH0yD,SAQd4oB,EAAA/qF,UAAAsqF,OAAM,uBACQmB,WAAWnB,UAQzBS,EAAA/qF,UAAAgnD,QAAO,uBACQ0b,MAA+B9iE,KAAU8iE,MAApC9iE,KAAQ6rF,WAAWzkC,WAMvC+jC,EAAA/qF,UAAA0hE,kBAAiB,SAAC19D,QACXynF,WAAW1nF,iBAAiBqB,EAAkBpB,IAUrD+mF,EAAA/qF,UAAAyzC,KAAI,gBACGg4C,WAAWh4C,QAMlBs3C,EAAA/qF,UAAA2hE,oBAAmB,SAAC39D,QACbynF,WAAW7mF,oBAAoBQ,EAAkBpB,IAE1D+mF,EApYA,CAAmB5qB,ICxCN8rB,GAAwB,GCQlC,IASGC,GAAkB,OA8TrB,SAEDC,EACA7hF,EACAQ,EACA+X,EACAupE,OAKIlL,EAHEtV,EAAa9gE,EAAMm2D,WACnB8K,EAAYjhE,EAAM+7D,UAGpBulB,IACFD,EAAeC,EACflL,EACEtV,GAAcG,GAAaA,EAAUlF,UAAO,QAAU/hE,MAEtD8mE,EAAU,IACRA,EAAWxK,iBAAmBlB,GAAiB,WAG7CmsB,EAAcF,EAAa/U,WAC/BtsE,EAAMrB,YACNqxE,IAEFuR,EAAY1gB,cAAcC,EAAYsV,GACtCmL,EAAYhhB,UAAU/gE,EAAUuY,MAE9BkpD,GAAaA,EAAUlF,UAAO,KAC1BylB,EAAaH,EAAa/U,WAC9BtsE,EAAMrB,YACNqxE,IAEFwR,EAAWxgB,aAAaC,EAAWmV,GACnCoL,EAAW7gB,SAASnhE,EAAUuY,gBAzI/B,SAEDspE,EACA7hF,EACAQ,EACA+X,EACAupE,OAEM/oB,EAAcv4D,EAAMk4D,eACtBK,EAAW,KACPkpB,EAAmBJ,EAAa/U,WACpCtsE,EAAMrB,YACNqxE,IAEFyR,EAAiB7gB,mBAAmB,KAAMrI,GAC1CkpB,EAAiB1hB,eAAevgE,EAAUuY,OAEtCkpD,EAAYjhE,EAAM+7D,aACpBkF,GAAaA,EAAUlF,UAAO,KAC1BylB,GAAcF,GAA6BD,GAAc/U,WAC7DtsE,EAAMrB,YACNqxE,IAEFwR,EAAWxgB,aAAaC,GACxBugB,EAAW7gB,SAASnhE,EAAUuY,aAuK/B,SAEDspE,EACA7hF,EACAQ,EACA+X,EACAupE,OAEM3nB,EAAY35D,EAAMg4D,UAClBO,EAAcv4D,EAAMk4D,eACtByB,GAAapB,EAAW,KACpBmpB,EAAgBL,EAAa/U,WACjCtsE,EAAMrB,YACNqxE,IAEF0R,EAAc9gB,mBAAmBjH,EAAWpB,GAC5CmpB,EAAcjhB,YAAYjhE,EAAUuY,OAEhCkpD,EAAYjhE,EAAM+7D,aACpBkF,GAAaA,EAAUlF,UAAO,KAC1BylB,GAAcF,GAA6BD,GAAc/U,WAC7DtsE,EAAMrB,YACNqxE,IAEFwR,EAAWxgB,aAAaC,GACxBugB,EAAW7gB,SAASnhE,EAAUuY,gBArE/B,SAEDspE,EACA7hF,EACAQ,EACA+X,EACAupE,OAKIlL,EAHEtV,EAAa9gE,EAAMm2D,WACnB8K,EAAYjhE,EAAM+7D,UAGpBulB,IACFD,EAAeC,EACflL,EACEtV,GAAcG,GAAaA,EAAUlF,UAAO,QAAU/hE,MAEtD8mE,EAAU,IACRA,EAAWxK,iBAAmBlB,GAAiB,WAG7CmsB,EAAcF,EAAa/U,WAC/BtsE,EAAMrB,YACNqxE,IAEFuR,EAAY1gB,cAAcC,EAAYsV,GACtCmL,EAAYphB,eAAe3gE,EAAUuY,MAEnCkpD,GAAaA,EAAUlF,UAAO,KAC1BylB,GAAcF,GAA6BD,GAAc/U,WAC7DtsE,EAAMrB,YACNqxE,IAEFwR,EAAWxgB,aAAaC,EAAWmV,GACnCoL,EAAW7gB,SAASnhE,EAAUuY,qBAnJ/B,SAEDspE,EACA7hF,EACAQ,EACA+X,EACAupE,OAEM/oB,EAAcv4D,EAAMk4D,eACtBK,EAAW,KACPkpB,EAAmBJ,EAAa/U,WACpCtsE,EAAMrB,YACNqxE,IAEFyR,EAAiB7gB,mBAAmB,KAAMrI,GAC1CkpB,EAAiBxhB,oBAAoBzgE,EAAUuY,OAE3CkpD,EAAYjhE,EAAM+7D,aACpBkF,GAAaA,EAAUlF,UAAO,KAC1BylB,GAAcF,GAA6BD,GAAc/U,WAC7DtsE,EAAMrB,YACNqxE,IAEFwR,EAAWxgB,aAAaC,GACxBugB,EAAW7gB,SAASnhE,EAAUuY,kBAU/B,SAEDspE,EACA7hF,EACAQ,EACA+X,EACAupE,OAEM3nB,EAAY35D,EAAMg4D,UAClBO,EAAcv4D,EAAMk4D,eACtBK,GAAeoB,EAAS,KACpB+nB,EAAgBL,EAAa/U,WACjCtsE,EAAMrB,YACNqxE,IAEF0R,EAAc9gB,mBAAmBjH,EAAWpB,GAC5CmpB,EAAcrhB,iBAAiB7gE,EAAUuY,OAErCkpD,EAAYjhE,EAAM+7D,aACpBkF,GAAaA,EAAUlF,UAAO,KAC1BylB,GAAcF,GAA6BD,GAAc/U,WAC7DtsE,EAAMrB,YACNqxE,IAEFwR,EAAWxgB,aAAaC,GACxBugB,EAAW7gB,SAASnhE,EAAUuY,wBAzH/B,SAED4pE,EACAniF,EACAQ,EACA+X,EACAupE,OAGInrF,EAAGuB,EADDge,EAAalW,EAAS+W,yBAEvBpgB,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,EAAC,EAE7CyrF,EADyBR,GAAmB1rE,EAAWvf,GAAG8e,YAExD0sE,EACAjsE,EAAWvf,GACX6J,EACA+X,EACAupE,YA/JH,SAEDD,EACA7hF,EACAQ,EACA+X,EACAupE,OAEM3nB,EAAY35D,EAAMg4D,UAClBO,EAAcv4D,EAAMk4D,eACtByB,GAAapB,EAAW,KACpBspB,EAAeR,EAAa/U,WAChCtsE,EAAMrB,YACNqxE,IAEF6R,EAAajhB,mBAAmBjH,EAAWpB,GAC3CspB,EAAaniB,WAAWlgE,EAAUuY,OAE9BkpD,EAAYjhE,EAAM+7D,aACpBkF,GAAaA,EAAUlF,UAAO,KAC1BylB,GAAcF,GAA6BD,GAAc/U,WAC7DtsE,EAAMrB,YACNqxE,IAEFwR,EAAWxgB,aAAaC,GACxBugB,EAAW7gB,SAASnhE,EAAUuY,eAtDlB+pE,GAAaC,EAAUC,UAC9Bz1D,SAAStwB,EAAO8lF,GAAW,IAAMx1D,SAAStwB,EAAO+lF,GAAW,aAkBrDC,GAAap8E,EAAYiyC,SA3Cd,GA4CIjyC,EAAciyC,WAgD7BoqC,GACdP,EACA5pE,EACA/X,EACAyT,EACAva,EACAwa,EACA4tE,OAEIxlC,GAAU,EACRglB,EAAa9gE,EAAMm2D,cACrB2K,EAAU,KACR8M,EAAa9M,EAAWxK,gBACxBsX,GAAcxY,IAAqBwY,GAAcxY,GACnD0L,EAAWjK,oBAAoB39D,IAE3B00E,GAAcxY,IAChB0L,EAAWn4B,OAEbilC,EAAa9M,EAAWxK,gBACxBwK,EAAWlK,kBAAkB19D,GAC7B4iD,GAAU,UAsBb,SAED6lC,EACA5pE,EACA/X,EACAyT,EACAC,EACA4tE,OAEM9hF,EAAWQ,EAAMi8D,qBAANj8D,CAA4B+X,OACxCvY,EAAQ,WAGPqX,EAAqBrX,EAASsU,oBAClCL,EACAC,MAEe1T,EAAMiyB,cAErBkwD,GAAeR,EAAa9qE,EAAoB7W,EAAO+X,SAGvD6pE,EADyBR,GAAmBvqE,EAAmB5B,YAE7D0sE,EACA9qE,EACA7W,EACA+X,EACAupE,IA9CJc,CACET,EACA5pE,EACA/X,EACAyT,EACAC,EACA4tE,GAGKxlC,EA+CN,SACMqmC,GAAeR,EAAaniF,EAAUQ,EAAO+X,MAChDvY,EAASyV,WAAajI,GAOX20E,EAAYrV,WAAWtsE,EAAMrB,YAAaqxE,IAClDxQ,WACuDhgE,EAC5DuY,EACA/X,EAAMiyB,4BAVAvc,EAA6ElW,EAAU8W,gBACpFngB,EAAI,EAAGuB,EAAKge,EAAWxf,OAAQC,EAAIuB,IAAMvB,EAChDgsF,GAAeR,EAAajsE,EAAWvf,GAAI6J,EAAO+X,ieCojBxDsqE,GA7sBA,SAAA9pF,GAGK,SACH+pF,EAAYC,OAAZ7pF,EACEH,EAAAI,KAAA7D,KAAMytF,IAAWztF,YAGjB4D,EAAK8pF,6BAA+B9pF,EAAK+pF,wBAAwB/nF,KAAKhC,GAKtEA,EAAKgqF,wBAMLhqF,EAAKiqF,QAAS,EAKdjqF,EAAKkqF,uBAAyB,KAK9BlqF,EAAKmqF,kBAAoB,KAMzBnqF,EAAKoqF,mBAAoB,EAMzBpqF,EAAKqqF,oBAAsBzuE,IAM3B5b,EAAKsqF,iBzIsGC3+E,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,GyIhGnC3L,EAAKuqF,kBAMLvqF,EAAKwqF,gBAAkB,KAMvBxqF,EAAKyqF,oBAAsB,KAM3BzqF,EAAK0qF,qBAAuB,KAM5B1qF,EAAK2qF,aAAe,KAMpB3qF,EAAK4qF,oBAAqB,EAK1B5qF,EAAKu0E,uBAAyB,KAM9Bv0E,EAAK6qF,UAAW,WA9FoBC,GAAAlB,EAAA/pF,GAuGtC+pF,EAAAptF,UAAAk5E,aAAY,SAACn5E,EAAQoM,EAAW0sB,GAC1BA,EAAU,IACZ94B,EAAS,MAEXsD,EAAArD,UAAMk5E,aAAYz1E,KAAA7D,KAACG,EAAQoM,EAAW0sB,IAQxCu0D,EAAAptF,UAAAuuF,aAAY,SAACC,EAAe3xD,EAAYmjD,OAChClyE,EAAS+uB,EAAW/uB,OACpBwtB,EAAYuB,EAAWvB,UACvB5qB,EAAS4qB,EAAU5qB,OACnBC,EAAa2qB,EAAU3qB,WACvBmJ,EAAawhB,EAAUxhB,WACvBlJ,EAAW0qB,EAAU1qB,SACrBuJ,EAAmBL,EAAW9F,YAC9By6E,EAAY7uF,KAAQ24E,WAAWj8C,YAC/BsmB,EAAa/lB,EAAW+lB,WACxBoF,EAAYnrB,EAAWmrB,UACvBy2B,IACJz2B,EAAUjU,KAAuBiU,EAAUjU,KAEvC/T,EAAOpgC,KAAQogC,QACf3tB,EAAQtG,KAAKwX,MAAMsZ,EAAWhsB,KAAK,GAAK+xC,GACxCtwC,EAASvG,KAAKwX,MAAMsZ,EAAWhsB,KAAK,GAAK+xC,GAEzCzM,EAAas4C,EAAazvD,YAAcllB,EAAWhG,WACnDiG,EAAao8B,EAAankC,GAASmI,GAAoB,KACvDu0E,EAAWv4C,EACbpqC,KAAKqrC,MAAMtpC,EAAO,GAAKqM,EAAiB,IAAMJ,GAAc,EAC5D,EACA40E,EAAQx4C,EACRpqC,KAAKsO,OAAOvM,EAAO,GAAKqM,EAAiB,IAAMJ,GAC/C,SAEI5N,EAASvM,KAAQw6E,mBACrB1pE,EACAC,EACAC,EACAgyC,EACAvwC,EACAC,EACAq8E,EAAQ50E,GAEVy0E,EAActM,QACZliD,EACA,EACA7zB,EACAyE,EACA6tE,OACA35E,EACAk7E,WAEO2O,EAAQD,IAOrBtB,EAAAptF,UAAA0oC,gBAAe,SAAC7L,QACLk7C,wBAAsBn4E,KACxB2uF,aAAY3uF,KACVm4E,uBACLl7C,EACAA,EAAWksB,gBAWjBqkC,EAAAptF,UAAAi9B,YAAW,SAACJ,EAAY98B,OAChB6iD,EAAa/lB,EAAW+lB,WACxBvnB,EAAawB,EAAWK,iBAAiBL,EAAW2L,sB3IrEpCzoC,EAAQ2M,EAAGC,GAC5BT,GAAInM,EAAQ2M,EAAG,EAAG,EAAGC,EAAG,EAAG,G2IuEhCiiF,CAAShvF,KAAMm5E,eAAgB,EAAIn2B,EAAY,EAAIA,GACnDt1C,GAAW1N,KAAMmgC,sBAAqBngC,KAAOm5E,oBAEvCoG,EAAkB1xE,GAAiB7N,KAAMm5E,qBAE1CG,aAAan5E,EAAQo/E,EAAiB9jD,EAAWxC,aAChDmH,EAAOpgC,KAAQogC,QACfyC,EAASzC,EAAQyC,OAEjBgqD,EAAW7sF,KAAQuuF,aACnBpW,EAAsBn4E,KAAQm4E,4BAEhC0U,GAAeA,EAAY3qE,cAC3Bi2D,GAA0BA,EAAuBj2D,uBAEzCk3D,iBAAmBv2C,EAAOpwB,MAAQ,IAC1CowB,EAAOpwB,MAAQ,QAELw1B,cAIRx1B,EAAQtG,KAAKwX,MAAMsZ,EAAWhsB,KAAK,GAAK+xC,GACxCtwC,EAASvG,KAAKwX,MAAMsZ,EAAWhsB,KAAK,GAAK+xC,GAC3CngB,EAAOpwB,OAASA,GAASowB,EAAOnwB,QAAUA,GAC5CmwB,EAAOpwB,MAAQA,EACfowB,EAAOnwB,OAASA,EACZmwB,EAAO33B,MAAMqB,YAAcgzE,IAC7B18C,EAAO33B,MAAMqB,UAAYgzE,SAEZnG,iBACfh5C,EAAQy6C,UAAU,EAAG,EAAGpoE,EAAOC,QAG5B4nE,UAAUl6C,EAASnD,OAElBvB,EAAYuB,EAAWvB,UACvBxhB,EAAawhB,EAAUxhB,WAGzB+0E,GAAU,KACVxzD,EAAWvtB,QAAMlO,KAASyuF,SAAQ,KAC9B/T,EAAc99D,GAAe6e,EAAWvtB,OAAQgM,IACtD+0E,GACGngF,GAAe4rE,EAAaz9C,EAAW/uB,SACxCiE,GAAiBuoE,EAAaz9C,EAAW/uB,UAChClO,KACJm6E,cAAc/5C,EAASnD,EAAYy9C,QAIvCiU,aAAa9B,EAAa5vD,GAE3BgyD,GACF7uD,EAAQsH,eAGL6yC,WAAWn6C,EAASnD,OAEnBhE,EAAUwC,EAAWxC,QACrBgP,EAASjoC,KAAQioC,iBACnBhP,IAAYwwB,WAAWxhB,EAAU/8B,MAAM+tB,WACzCgP,EAAU/8B,MAAM+tB,QAAsB,IAAZA,EAAa,GAAQ3xB,OAAO2xB,SAG/Ck1D,oBAAsBzyD,EAAU1qB,gBAClCm9E,kBAAoBzyD,EAAU1qB,cAC9B88E,uBAAyB,WAEpB7lD,WAQdulD,EAAAptF,UAAAy8B,YAAW,SAACC,cACCC,QAIN,SACOC,YACE8wD,yBAAsB9tF,KAAU4tF,wBAAuB,KACzD38E,EAAI,MAASmvB,QAAQyC,OAAOpwB,WAAY2tB,QAAQyC,OAAOnwB,QAC7D9F,GAAK5M,KAAMm5E,eAAgBloE,OACrBH,EAAM9Q,KAAQouF,gBACdr9E,EAAU/Q,KAAQiuF,oBAClBj9E,EAAQhR,KAAQmuF,kBAChBj0E,EAAUla,KAAQquF,oBAClBngF,EAAMlO,KAAQkuF,gBACdl0D,EAAKh6B,KAAQ24E,WACbuW,EAAU,GACVz8E,EAAQxB,EAAK,GAAKo7E,GAClB35E,EAASzB,EAAK,GAAKo7E,GACzB6C,EAAW5rF,KAAItD,KACRw6E,mBACH1pE,EACAC,EACAC,EACAq7E,GACA55E,EACAC,EACA,GACAlE,aAEE1L,EAASk3B,EAAM0C,YACfniB,EAAmBL,EAAW9F,eAElCtR,EAAOs8B,YACPllB,EAAWhG,aACVpF,GAAeyL,EAAkBrM,GAAM,SAEpC4c,EAAS5c,EAAO,GACdiM,EAAa/H,GAASmI,GACxBw0E,EAAQ,EACRpoD,OAAO,EACJ7b,EAASvQ,EAAiB,IAE/BosB,EAAUxsB,IADR40E,EAEFG,EAAW5rF,KAAItD,KACRw6E,mBACH1pE,EACAC,EACAC,EACAq7E,GACA55E,EACAC,EACAi0B,GACAn4B,SAEJsc,GAAU3Q,MAEZ40E,EAAQ,EACRjkE,EAAS5c,EAAO,GACT4c,EAASvQ,EAAiB,IAE/BosB,EAAUxsB,IADR40E,EAEFG,EAAW5rF,KAAItD,KACRw6E,mBACH1pE,EACAC,EACAC,EACAq7E,GACA55E,EACAC,EACAi0B,GACAn4B,SAEJsc,GAAU3Q,OAIT2zE,gCFtWb78E,EACAi+E,EACA/rE,EACAgmD,EACAj7D,EACA6C,EACAC,OAIMovB,EAAUqC,GAFFxxB,EAAK,GAAKo7E,GACTp7E,EAAK,GAAKo7E,IAEzBjsD,EAAQ+uD,uBAAwB,UAC1BtsD,EAASzC,EAAQyC,OACjBikC,EAAQ,IAAOsoB,GAAAroF,QACnBq5B,EACAisD,GACAn+E,EACA,KACA8C,GAEIq+E,EAAelsE,EAAS/hB,OAExBkuF,EAAcnjF,KAAKsO,MAAO,SAAuB40E,GACjDE,EAAgB,GACbluF,EAAI,EAAGA,GAAKguF,IAAgBhuF,EAAC,KAC9B4hB,EAAUE,EAAS9hB,EAAI,GACvBmuF,EAAuBvsE,EAAQ3X,oBAAsB69D,KACtDA,OAGDvB,EAAS4nB,EAAqBvsE,EAASlS,MACtC62D,GAGA/lE,MAAMC,QAAQ8lE,KACjBA,EAAM,CAAIA,YAGNrxC,EAAK,KAAM,UADHl1B,EAAIiuF,GACoBlqC,SAAS,KAAK52C,OAAM,GACjDwO,EAAI,EAAGoK,EAAKwgD,EAAOxmE,OAAQ4b,EAAIoK,IAAMpK,EAAC,KACvCyyE,EAAgB7nB,EAAO5qD,GACvBtS,EAAW+kF,EAActoB,qBAAdsoB,CAAoCxsE,MAChDvY,GAAayH,GAAWjE,EAAQxD,EAAS0J,kBAGxClJ,EAAQukF,EAAc3kF,QACtBw3D,EAAOp3D,EAAMg4D,UACfZ,GACFA,EAAKoD,SAASnvC,OAEVssC,EAAS33D,EAAMk4D,YACjBP,IACFA,EAAO6C,SAASnvC,GAChBssC,EAAOkC,YAAY,OAErB75D,EAAMq8D,aAAQriE,OACR2hE,EAAQ4oB,EAAcpuB,cACxBwF,GAAgC,IAAvBA,EAAM3sC,aAAkB,KAC7B0xD,EAAU/kB,EAAMpF,mBACjBmqB,EAAO,aAIN3C,EAAMtyD,SAASC,cAAa,UAClCqyD,EAAIx2E,MAAQm5E,EAAQ,GACpB3C,EAAIv2E,OAASk5E,EAAQ,OACf8D,EAAazG,EAAIlmD,WAAU,KAAK,CAAGujD,OAAO,IAChDoJ,EAAW7qB,UAAYtuC,EACvBm5D,EAAWjF,SAAS,EAAG,EAAGxB,EAAIx2E,MAAOw2E,EAAIv2E,QACzCxH,EAAMm8D,SAAQ,IACRsoB,GAAA5oF,QAAI,CACNkiF,IAAKA,EACL2C,QAASA,EACT1uE,OAAQ2pD,EAAMzF,YACdoqB,aAAc/C,GACdiD,aAAcjD,GACd54E,OAAQg3D,EAAMlF,YACd1oC,QAAS,EACThoB,KAAM41D,EAAMzf,UACZtnC,MAAO+mD,EAAM7F,WACbhwD,SAAU61D,EAAM7rB,cAChB2lB,eAAgBkG,EAAM5F,2BAItB9nC,EAASjuB,EAAMrB,aAAe,GAChC+lF,EAAiBL,EAAiBp2D,MAEpCy2D,EAAc,GACdL,EAAiBp2D,GAAUy2D,EAC3BA,EAAe13E,IAAoB,GACnC03E,EAAe13E,IAAmB,GAClC03E,EAAe13E,IAAwB,GACvC03E,EAAe13E,IAAkB,IAEnC03E,EAAellF,EAASyV,UAAUnF,QAAO,QAAQ,KAAO1X,KACtDoH,EACAQ,eAKA2kF,EAAattF,OAAO8C,KAAKkqF,GAC5B76D,IAAIkD,QACJzI,KAAKtuB,GACQ+B,GAAPvB,EAAI,EAAQwuF,EAAWzuF,QAAQC,EAAIuB,IAAMvB,EAAC,KAC3CuuF,EAAiBL,EAAiBM,EAAWxuF,YACxCtB,KAAQ6vF,OACXE,EAAeF,EAAe7vF,OAC3Bid,EAAI,EAAGoK,EAAK0oE,EAAa1uF,OAAQ4b,EAAIoK,EAAIpK,GAAK,EAAC,CACtD8pD,EAAS17D,SAAS0kF,EAAa9yE,EAAI,YAC1BO,EAAI,EAAGwyE,EAAKb,EAAW9tF,OAAQmc,EAAIwyE,IAAMxyE,EAChDupD,EAASz/B,aAAa6nD,EAAW3xE,IACjCupD,EAAS6D,aAAamlB,EAAa9yE,aAKpCojB,EAAQ06C,aAAa,EAAG,EAAGj4C,EAAOpwB,MAAOowB,EAAOnwB,QEgPjBs9E,CAC5B/+E,EACAi+E,EAAUlvF,KACL+tF,kBACL/zD,EAAM1uB,mBACN4C,EACA6C,EACAC,GAGJgsB,WF9OkBF,EAAO3Z,EAAU+gE,OACnC+L,EAAc,MAChB/L,EAAS,KACLp3E,EAAIX,KAAKsO,MAAMtO,KAAKwX,MAAMmZ,EAAM,IAAMuvD,IACtCt/E,EAAIZ,KAAKsO,MAAMtO,KAAKwX,MAAMmZ,EAAM,IAAMuvD,IAItC/mF,EAGJ,GAFC6P,GAAMrI,EAAG,EAAGo3E,EAAUzxE,MAAQ,GAC7B0C,GAAMpI,EAAG,EAAGm3E,EAAUxxE,OAAS,GAAKwxE,EAAUzxE,OAE5CuD,EAAIkuE,EAAUviF,KAAK2D,GACnBgyB,EAAI4sD,EAAUviF,KAAK2D,EAAQ,GAE3BjE,EADI6iF,EAAUviF,KAAK2D,EAAQ,GACnB,KAAOgyB,EAAI,IAAMthB,GACzBs5E,EAAcnjF,KAAKsO,MAAO,SAAuB0I,EAAS/hB,QAC5DC,GAAKA,EAAIiuF,GAAgB,GAC3BW,EAAe3sF,KAAK6f,EAAS9hB,EAAIiuF,EAAc,WAG5CW,EE0NCC,CAAUpzD,EAAK98B,KAAO+tF,kBAAiB/tF,KAAO8tF,0BAEhDloF,KAAI5F,QAaVwtF,EAAAptF,UAAAi+B,2BAA0B,SACxBxxB,EACAowB,EACAqB,EACAhuB,EACA0uB,OALFp7B,EAAA5D,aAOYuuF,kBA6CN5vD,EA1CE5tB,EAAaksB,EAAWvB,UAAU3qB,WAClCC,EAAWisB,EAAWvB,UAAU1qB,SAChCgpB,EAAKh6B,KAAQ24E,WAGbx1D,EAAQ,GAQR8gE,EAAe,SAAahhE,EAASvY,EAAU80B,OAC7Cz8B,EAAMoE,EAAO8b,GACb6d,EAAQ3d,EAASpgB,MAClB+9B,OAcgB,IAAVA,GAAkBtB,EAAasB,EAAMtB,WAAU,IACrC,IAAfA,SACFrc,EAASpgB,IAAO,EAChBi8B,EAAQz5B,OAAOy5B,EAAQmxD,YAAYrvD,GAAQ,GACpCxwB,EAAS2S,EAAS+W,EAAOtvB,GAElCo2B,EAAMp2B,SAAWA,EACjBo2B,EAAMtB,WAAaA,OArBX,IACW,IAAfA,SACFrc,EAASpgB,IAAO,EACTuN,EAAS2S,EAAS+W,EAAOtvB,GAElCs0B,EAAQ17B,KACL6f,EAASpgB,GAAG,CACXkgB,QAASA,EACT+W,MAAOA,EACPtvB,SAAUA,EACV80B,WAAYA,EACZlvB,SAAUA,MAgBZ8/E,EAAc,MAAS7B,0BACpBpW,wBACPiY,EAAe9sF,KAAItD,KAAMm4E,wBAE3BiY,EAAe7yD,MAAI,SAAEqxD,UACXjwD,EAASiwD,EAAcvwD,2BAC7BxxB,EACAkE,EACAC,EACAstB,EACA2lD,EACA2K,IAAkBhrF,EAAKu0E,uBACnBl7C,EAAWksB,cAAc+T,MAAMxoC,KAAG,SAAE6V,UAASA,EAAKriC,SAClD,SAIDy2B,IAMT6uD,EAAAptF,UAAAyoD,mBAAkB,eACV7uB,EAAKh6B,KAAQ24E,WACf3+C,EAAMK,cAAUr6B,KAAWuuF,cAC7Bv0D,EAAMzzB,WASVinF,EAAAptF,UAAAutF,wBAAuB,SAAClpF,QACjBm0E,2BAQP4U,EAAAptF,UAAAg9B,aAAY,SAACH,OACLwwD,EAAWztF,KAAQ24E,WACnBkW,EAAepB,EAAY/wD,gBAC5BmyD,EAAY,OACR,MAGHwB,EAAYpzD,EAAWmrB,UAAUjU,IACjCm8C,EAAcrzD,EAAWmrB,UAAUjU,IACnCg0B,EAAuBslB,EAAY3kB,0BACnCV,EAAyBqlB,EAAY1kB,qCAGlC8kB,SAAW1lB,GAAwBkoB,IACxCjoB,GAA0BkoB,cAEvB1C,yBAA0B,GACxB,OAEJA,yBAA0B,MAEzB2C,EAAmBtzD,EAAW/uB,OAC9BwtB,EAAYuB,EAAWvB,UACvBxhB,EAAawhB,EAAUxhB,WACvBnJ,EAAa2qB,EAAU3qB,WACvBiyC,EAAa/lB,EAAW+lB,WACxBwtC,EAAsB/C,EAAYjnF,cAClCiqF,EAA0BhD,EAAY7kB,kBACxC8nB,EAAyBjD,EAAY5kB,sBAEV3jE,IAA3BwrF,IACFA,EAAyB1D,QAGrBl8E,EAAS4qB,EAAU5qB,OAAOtC,QAC1BN,EAASG,GACbkiF,EACAE,EAA0B1/E,GAEtB4/E,EAAW,CAAIziF,EAAOM,SACtB+L,EAAmBL,EAAW9F,eAGlCy6E,EAAazvD,YACbllB,EAAWhG,aACVpF,GAAeyL,EAAkB0iB,EAAW/uB,QAAM,KAO7CiM,EAAa/H,GAASmI,GACtBq2E,EAASzkF,KAAKiE,IAAIgC,GAASlE,GAAU,EAAGiM,GAC9CjM,EAAO,GAAKqM,EAAiB,GAAKq2E,EAClC1iF,EAAO,GAAKqM,EAAiB,GAAKq2E,EAClC32E,GAAgBnJ,EAAQoJ,OAClB22E,WzImRU3iF,EAAQgM,OACtBK,EAAmBL,EAAW9F,YAC9BtD,EAASF,GAAU1C,MAEvBgM,EAAWhG,aACVpD,EAAO,GAAKyJ,EAAiB,IAAMzJ,EAAO,IAAMyJ,EAAiB,IAAC,KAE7DJ,EAAa/H,GAASmI,GAItB1K,EAHa1D,KAAKsO,OACrB3J,EAAO,GAAKyJ,EAAiB,IAAMJ,GAEVA,EAC5BjM,EAAO,IAAM2B,EACb3B,EAAO,IAAM2B,SAER3B,EyIlSgB4iF,CAAYH,EAAY,GAAIz2E,GAG7C22E,EAAW,GAAKt2E,EAAiB,IACjCs2E,EAAW,GAAKt2E,EAAiB,GAEjCo2E,EAAYrtF,KAAI,CACdutF,EAAW,GAAK12E,EAChB02E,EAAW,GACXA,EAAW,GAAK12E,EAChB02E,EAAW,KAGbA,EAAW,GAAKt2E,EAAiB,IACjCs2E,EAAW,GAAKt2E,EAAiB,IAEjCo2E,EAAYrtF,KAAI,CACdutF,EAAW,GAAK12E,EAChB02E,EAAW,GACXA,EAAW,GAAK12E,EAChB02E,EAAW,cAMThD,QAAM7tF,KACPiuF,qBAAuBl9E,GAAU/Q,KACjCguF,mBAAqBwC,GAAmBxwF,KACxCsuF,sBAAwBoC,GAC7B5hF,GAAc9O,KAAMkuF,gBAAiBhgF,eAEhCsgF,oBAAqB,GACnB,OAGJD,aAAe,UAEfV,QAAS,MASVkD,EAPElE,EAAW,IAAOhW,GACtBsW,GAAmBp8E,EAAYiyC,GAC/B90C,EACA6C,EACAiyC,QAIO21B,WAAWhQ,iBAClBooB,EAAqB,IAAOla,GAC1BsW,GAAmBp8E,EAAYiyC,GAC/B90C,EACA6C,EACAiyC,QAKAguC,EADE/xC,EAAiB1iC,QAEnB0iC,EAAc,SACP59C,EAAI,EAAGuB,EAAK+tF,EAAYvvF,OAAQC,EAAIuB,IAAMvB,EACjDwtF,EAAaoC,aACXt0E,GAAag0E,EAAYtvF,GAAI6Y,GAC7BnJ,EACAkuC,GAGJ+xC,EAAgBr1E,GAA4BsjC,EAAgB/kC,YAEnD7Y,EAAI,EAAGuB,EAAK+tF,EAAYvvF,OAAQC,EAAIuB,IAAMvB,EACjDwtF,EAAaoC,aAAaN,EAAYtvF,GAAI0P,EAAYmJ,OAIpDyE,WD3kB0B5N,EAAYiyC,OACxC9iC,EAAYitE,GAAap8E,EAAYiyC,UACpC9iC,EAAYA,ECykBQgxE,CAA0BngF,EAAYiyC,GAEzD7mB,EAID,SACOlZ,OACJ2kD,EACEuB,EACJlmD,EAAQ3X,oBAAsBmiF,EAAYniF,sBACxC69D,IACFvB,EAASuB,EAAclmD,EAASlS,IAE9B62D,EAAM,KACFupB,EAAKnxF,KAAQoxF,cACjBnuE,EACAtE,EACAipD,EACAilB,EACAmE,EACAD,QAEGlD,OAAM7tF,KAAQ6tF,QAAUsD,IAE/BvrF,KAAI5F,MAEFqxF,EAAa10E,GAAazO,EAAQgM,GAElCiJ,EAAW0rE,EAAayC,oBAAoBD,GAC9CX,GACFvtE,EAASgM,KAAKuhE,OAEPrvF,EAAI,EAAGuB,EAAKugB,EAAS/hB,OAAQC,EAAIuB,IAAMvB,EAC9C86B,EAAOhZ,EAAS9hB,SAEb0sF,kBAAoB5qE,MAEnBouE,EAA0B1E,EAAYxe,SACtCugB,EAAa,IAAOnK,GACxBv2E,EACA6C,EACAiyC,EACA6rC,EAAa2C,cACbD,EACA9D,EAAY7kB,0BAGVmoB,IAAqB/wF,KAClBm4E,uBAAsB,IAAOsM,GAChCv2E,EACA6C,EACAiyC,EACA6rC,EAAa2C,cACbT,EAAsB1iB,SACtBof,EAAY7kB,yBAIXqlB,oBAAsBl9E,OACtBi9E,kBAAoBwC,OACpBlC,qBAAuBoC,OACvBxC,gBAAkBhgF,OAClBkgF,gBAAkBt9E,OAClBu9E,oBAAsBn0E,OACtBq0E,aAAeK,OACfd,uBAAyB,UAEzBU,oBAAqB,GACnB,GAYThB,EAAAptF,UAAAgxF,cAAa,SACXnuE,EACAtE,EACAipD,EACA2kB,EACA3tE,EACA4tE,OAEK5kB,EAAM,OACF,MAEL5gB,GAAU,KACVnlD,MAAMC,QAAQ8lE,GAAM,IAAA,IACbvmE,EAAI,EAAGuB,EAAKglE,EAAOxmE,OAAQC,EAAIuB,IAAMvB,EAC5C2lD,EACEomC,GACEb,EACAtpE,EACA2kD,EAAOvmE,GACPsd,EAAgB3e,KACX0tF,6BACL9uE,EACA4tE,IACGxlC,OAGTA,EAAUomC,GACRb,EACAtpE,EACA2kD,EACAjpD,EAAgB3e,KACX0tF,6BACL9uE,EACA4tE,UAGGxlC,GAEXwmC,EA3sBA,CAAwCiE,GAAA1qF,meCZxC2qF,GAjBA,SAAAjuF,GAGK,SACHkuF,EAAYlvE,UACVhf,EAAAI,KAAA7D,KAAMyiB,IAAWziB,YALK4xF,GAAAD,EAAAluF,GAYxBkuF,EAAAvxF,UAAAq9B,eAAc,sBACDo0D,GAAA9qF,QAAyB/G,OAExC2xF,EAfA,CAA0BG,GAAA/qF,+FCMvB,IA0MHgrF,GAzMA,WAGK,SACH1xB,EAAY2xB,GAGPhyF,KACEiyF,OAAM,IAAOjpB,EAAA/M,IAAP,CAAc+1B,GAOtBhyF,KACEkyF,OAAM,UAQb7xB,EAAAjgE,UAAAq9D,OAAM,SAACvvD,EAAQhG,GACO,IACdqiC,EAAI,CACRr7B,KAAMhB,EAAO,GACbiB,KAAMjB,EAAO,GACbkB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,GACbhG,MAAOA,QAGJ+pF,OAAOx0B,OAAOlzB,QACd2nD,OAAO/qF,EAAOe,IAAUqiC,GAQ/B81B,EAAAjgE,UAAAyzC,KAAI,SAACs+C,EAAS9uF,WACN+uF,EAAK,IAAOvwF,MAAMwB,EAAOjC,QACtBC,EAAI,EAAGwR,EAAIxP,EAAOjC,OAAQC,EAAIwR,EAAGxR,IAAC,KACnC6M,EAASikF,EAAQ9wF,GACjB6G,EAAQ7E,EAAOhC,GAGfkpC,EAAI,CACRr7B,KAAMhB,EAAO,GACbiB,KAAMjB,EAAO,GACbkB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,GACbhG,MAAOA,GAETkqF,EAAM/wF,GAAKkpC,OACN2nD,OAAO/qF,EAAOe,IAAUqiC,OAE1B0nD,OAAOp+C,KAAKu+C,IAQnB/xB,EAAAjgE,UAAAuqC,OAAM,SAACziC,OACCmqF,EAAMlrF,EAAOe,GAIbqiC,EAAIvqC,KAAQkyF,OAAOG,sBACbH,OAAOG,GACiB,YAAxBJ,OAAOtnD,OAAOJ,IAQ5B81B,EAAAjgE,UAAAoyD,OAAM,SAACtkD,EAAQhG,OACPqiC,EAAIvqC,KAAQkyF,OAAO/qF,EAAOe,IAE3B8H,GADK,CAAIu6B,EAAKr7B,KAAMq7B,EAAKp7B,KAAMo7B,EAAKn7B,KAAMm7B,EAAKl7B,MAClCnB,UACXy8B,OAAOziC,QACPu1D,OAAOvvD,EAAQhG,KAQxBm4D,EAAAjgE,UAAAkyF,OAAM,kBACOtyF,KAAQiyF,OAAO/0B,MACbxoC,KAAG,SAAW6V,UAClBA,EAAKriC,UAShBm4D,EAAAjgE,UAAAmyF,YAAW,SAACrkF,GACU,IACdskF,EAAI,CACRtjF,KAAMhB,EAAO,GACbiB,KAAMjB,EAAO,GACbkB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,WAEJlO,KAAQiyF,OAAO70B,OAAOo1B,GACpB99D,KAAG,SAAW6V,UAClBA,EAAKriC,UAWhBm4D,EAAAjgE,UAAA+a,QAAO,SAAC7K,eACMmiF,SAAQzyF,KAAMsyF,SAAUhiF,IAStC+vD,EAAAjgE,UAAAsyF,gBAAe,SAACxkF,EAAQoC,eACVmiF,SAAQzyF,KAAMuyF,YAAYrkF,GAASoC,IASjD+vD,EAAAjgE,UAAAqyF,SAAQ,SAACpvF,EAAQiN,WACXquB,EACKt9B,EAAI,EAAGwR,EAAIxP,EAAOjC,OAAQC,EAAIwR,EAAGxR,OACxCs9B,EAASruB,EAASjN,EAAOhC,IACf,OACDs9B,SAGJA,GAMT0hC,EAAAjgE,UAAA8hB,QAAO,kBACE3e,EAAOvD,KAAMkyF,SAMtB7xB,EAAAjgE,UAAAg4B,MAAK,gBACE65D,OAAO75D,aACP85D,OAAM,IAOb7xB,EAAAjgE,UAAAgU,UAAS,SAAC9F,OACF3M,EAAI3B,KAAQiyF,OAAOxzB,gBAClBjvD,GACL7N,EAAKuN,KACLvN,EAAKwN,KACLxN,EAAKyN,KACLzN,EAAK0N,KACLf,IAOJ+xD,EAAAjgE,UAAAwhB,OAAM,SAAC+wE,WAEMtxF,UADN4wF,OAAOp+C,KAAK8+C,EAAMV,OAAO/0B,OACdy1B,EAAMT,OAAMlyF,KACrBkyF,OAAO7wF,GAAKsxF,EAAMT,OAAO7wF,IAGpCg/D,EAvMA,0gBC+JG,SACMuyB,GAAkBC,UACpBA,EAGDhxF,MAAMC,QAAQ+wF,GAAe,SACd51D,UACR41D,GAIe,mBAAfA,EACFA,WAGQ51D,UACP41D,IAbD,SAiBXC,GA9JA,SAAArvF,GAGK,SACHsvF,EAAY9/E,OAAZrP,EACEH,EAAAI,KAAA7D,OAAAA,YAMA4D,EAAKsW,WAAaY,GAAc7H,EAAQiH,YAMxCtW,EAAKovF,cAAgBJ,GAAkB3/E,EAAQ24C,cAM/ChoD,EAAKqvF,8BACiC/tF,IAApC+N,EAAQigF,yBACJjgF,EAAQigF,wBAQdtvF,EAAKojD,SAAU,EAMfpjD,EAAK81B,YACex0B,IAAlB+N,EAAQ8mB,MAAsB9mB,EAAQ8mB,MAAQwB,GAMhD33B,EAAKuvF,YAA2BjuF,IAAlB+N,EAAQmgF,OAAsBngF,EAAQmgF,eA9CnCC,GAAAN,EAAAtvF,GAqDnBsvF,EAAA3yF,UAAAurD,gBAAe,uBACDqnC,eAMdD,EAAA3yF,UAAAyrD,2BAA0B,uBACZonC,0BAQdF,EAAA3yF,UAAAm7C,cAAa,uBACCrhC,YAOd64E,EAAA3yF,UAAA+9C,eAAc,kBACLn3C,KAQT+rF,EAAA3yF,UAAAu8B,SAAQ,uBACMjD,QAMdq5D,EAAA3yF,UAAAg/B,SAAQ,uBACM+zD,QAMdJ,EAAA3yF,UAAAkzF,kBAAiB,aAQjBP,EAAA3yF,UAAAmzF,QAAO,gBACAhtF,WAUPwsF,EAAA3yF,UAAAozF,gBAAe,SAAC5nC,QACTonC,cAAgBJ,GAAkBhnC,QAClCrlD,WAOPwsF,EAAA3yF,UAAAqzF,SAAQ,SAAC15D,QACFL,OAASK,OACTxzB,WAETwsF,EApIA,CAAqBzoF,EAAAvD,SCtCrB2sF,GAMY,aANZA,GAae,gBAbfA,GAoBO,QApBPA,GA4Be,gBA5BfA,GAmCmB,oBAnCnBA,GA0CiB,kBA1CjBA,GAiDmB,6BC7CHC,GAAIzlF,EAAQ6C,YAChBxB,EAAAA,GAAWA,EAAAA,EAAUA,EAAAA,EAAUA,EAAAA,ICFxC,IACCqkF,IAAkB,WA0HNC,GAAIC,EAAKC,GAUpB,OAAA,SACc7lF,EAAQ6C,EAAYmJ,EAAY85E,EAASC,OAClDnxF,EAAM9C,eArFd8zF,EACAC,EACA7lF,EACA6C,EACAmJ,EACA85E,EACAC,OAEMC,EAAG,IAAOC,eAChBD,EAAIE,KAAI,MAEI,mBAAHN,EAAqBA,EAAI5lF,EAAQ6C,EAAYmJ,GAAc45E,GAClE,GAEEC,EAAO5zE,WAAayD,KACtBswE,EAAIG,aAAY,eAElBH,EAAII,gBAAkBV,GAKtBM,EAAIK,OAAM,SAAa9vF,OAEhByvF,EAAIM,QAAWN,EAAIM,QAAU,KAAON,EAAIM,OAAS,IAAG,KACjDz0F,EAAOg0F,EAAO5zE,UAEhBrd,OAAM,EACN/C,GAAQ6jB,IAAmB7jB,GAAQ6jB,GACrC9gB,EAASoxF,EAAIO,aACJ10F,GAAQ6jB,IACjB9gB,EAASoxF,EAAIQ,eAEX5xF,GAAM,IAAO6xF,WAAYC,gBACvBV,EAAIO,aAAY,oBAIX10F,GAAQ6jB,KACjB9gB,EAAqCoxF,EAAIW,UAEvC/xF,EACFkxF,EAEGD,EAAOjxE,aAAahgB,EAAM,CACzBoL,OAAQA,EACRyU,kBAAmBzI,IAErB65E,EAAOrxE,eAAe5f,IAGxBmxF,SAGFA,KAMJC,EAAIY,QAAUb,EACdC,EAAIa,OAyBFC,CACElB,EACAC,EACA7lF,EACA6C,EACAmJ,GAKG,SACOiJ,EAAUb,GAClBxf,EAAOmyF,YAAY9xE,QACHje,IAAZ8uF,GACFA,EAAQ7wE,KAGa8wE,GAAoB5xF,ICjKhD,4fAoCH6yF,GAAA,SAAAzxF,GAKK,SACH0xF,EAAYp1F,EAAMq1F,EAAaC,OAA/BzxF,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAOV4D,EAAKqf,QAAUmyE,EAOfxxF,EAAKuf,SAAWkyE,WArBmBC,GAAAH,EAAA1xF,GAuBvC0xF,EAvBA,CAAuCt1F,GA8/BvC01F,GA/3BA,SAAA9xF,GAGK,SACH+xF,EAAY/yE,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAW,IAE3B7e,EAAAH,EAAAI,KAAA7D,KAAA,CACE4rD,aAAc34C,EAAQ24C,aACtB1xC,gBAAYhV,EACZ60B,MAAOwB,GACP63D,WAAyBluF,IAAlB+N,EAAQmgF,OAAsBngF,EAAQmgF,eAO1CqC,QAAUpzF,EAMfuB,EAAK8xF,QAAUziF,EAAQ8gF,OAMvBnwF,EAAKi/E,eAAiC39E,IAArB+N,EAAQoqE,UAAgCpqE,EAAQoqE,SAMjEz5E,EAAK+xF,KAAO1iF,EAAQ6gF,SAEG5uF,IAAnB+N,EAAQ2iF,OACVhyF,EAAK6xF,QAAUxiF,EAAQ2iF,YACA1wF,IAAdtB,EAAK+xF,OACdpsF,GAAO3F,EAAK8xF,QAAS,GAErB9xF,EAAK6xF,QAAU5B,GACbjwF,EAAK+xF,KACkD/xF,EAAK8xF,UAQhE9xF,EAAKiyF,eACkB3wF,IAArB+N,EAAQ6iF,SAAyB7iF,EAAQ6iF,SAAWnC,OAuDlDoC,EAAY5yE,EArDV6yE,OACwB9wF,IAA5B+N,EAAQ+iF,iBAAgC/iF,EAAQ+iF,uBAMlDpyF,EAAKqyF,eAAiBD,EAAe,IAAOjE,GAAU,KAMtDnuF,EAAKsyF,oBAAmB,IAAOnE,GAM/BnuF,EAAKuyF,qBAAuB,EAM5BvyF,EAAKwyF,sBAAqB,GAO1BxyF,EAAKyyF,SAAQ,GAObzyF,EAAK0yF,UAAS,GAMd1yF,EAAK2yF,mBAAkB,GAMvB3yF,EAAK4yF,oBAAsB,KAGvB30F,MAAMC,QAAQmR,EAAQkQ,UACxBA,EAAWlQ,EAAQkQ,SACVlQ,EAAQkQ,WAEjBA,GADA4yE,EAAa9iF,EAAQkQ,UACCmnB,YAEnB0rD,QAAkC9wF,IAAf6wF,IACtBA,EAAU,IAAOzqD,GAAAvkC,QAAWoc,SAEbje,IAAbie,GACFvf,EAAK6yF,oBAAoBtzE,QAERje,IAAf6wF,GACFnyF,EAAK8yF,wBAAwBX,YA3HRT,GAAAE,EAAA/xF,GA2IzB+xF,EAAAp1F,UAAAu2F,WAAU,SAAC1zE,QACJ2zE,mBAAmB3zE,QACnB1c,WAQPivF,EAAAp1F,UAAAw2F,mBAAkB,SAAC3zE,OACX4zE,EAAa1vF,EAAO8b,WAEhB6zE,YAAYD,EAAY5zE,SAO7B8zE,mBAAmBF,EAAY5zE,OAE9BvY,EAAWuY,EAAQhY,iBACrBP,EAAQ,KACJwD,EAASxD,EAAS0J,iBACf6hF,gBAAcj2F,KAChBi2F,eAAex4B,OAAOvvD,EAAQ+U,aAGhCmzE,sBAAsBS,GAAc5zE,OAGtCze,cAAa,IACZ0wF,GAAkBxB,GAA4BzwE,cAnBzCuzE,qBAAmBx2F,KACrBw2F,oBAAoB7rD,OAAO1nB,IA2BtCuyE,EAAAp1F,UAAA22F,mBAAkB,SAACF,EAAY5zE,QACxBszE,mBAAmBM,GAAU,CAChCpxF,EAAOwd,EAASzd,EAAgBxF,KAAOg3F,qBAAoBh3F,MAC3DyF,EACEwd,EACA1iB,EAA8BP,KACzBg3F,qBAAoBh3F,QAa/Bw1F,EAAAp1F,UAAA02F,YAAW,SAACD,EAAY5zE,OAClBg0E,GAAQ,EACNvrF,EAAKuX,EAAQ5X,oBACRnG,IAAPwG,IACIA,EAAG05C,aAAQplD,KAAWq2F,SAG1BY,GAAQ,EAH0Bj3F,KAC7Bq2F,SAAS3qF,EAAG05C,YAAcniC,GAK/Bg0E,IACF1tF,KAASstF,KAAU72F,KAASs2F,WAAY,SACnCA,UAAUO,GAAc5zE,GAExBg0E,GAQTzB,EAAAp1F,UAAA60F,YAAW,SAAC9xE,QACLszE,oBAAoBtzE,QACpB5c,WAQPivF,EAAAp1F,UAAAq2F,oBAAmB,SAACtzE,WACZgvE,EAAO,GACP+E,EAAW,GACXC,EAAgB,GAEb91F,EAAI,EAAG8nB,EAAShG,EAAS/hB,OAAQC,EAAI8nB,EAAQ9nB,IAAC,KAE/Cw1F,EAAa1vF,EADb8b,EAAUE,EAAS9hB,SAEhBy1F,YAAYD,EAAY5zE,IAC/Bi0E,EAAY5zF,KAAK2f,GAIZ5hB,EAAI,UAAG+1F,EAASF,EAAY91F,OAAQC,EAAI+1F,EAAQ/1F,IAAC,KAClD4hB,EACA4zE,EAAa1vF,EADb8b,EAAUi0E,EAAY71F,SAEvB01F,mBAAmBF,EAAY5zE,OAE9BvY,EAAWuY,EAAQhY,iBACrBP,EAAQ,KACJwD,EAASxD,EAAS0J,YACxB+9E,EAAQ7uF,KAAK4K,GACbipF,EAAiB7zF,KAAK2f,aAEjBmzE,sBAAsBS,GAAc5zE,OAGpCgzE,gBAAcj2F,KAChBi2F,eAAepiD,KAAKs+C,EAASgF,GAG3B91F,EAAI,UAAGg2F,EAASH,EAAY91F,OAAQC,EAAIg2F,EAAQh2F,IAACrB,KACnDwE,cAAa,IACZ0wF,GAAkBxB,GAA4BwD,EAAY71F,MASpEm0F,EAAAp1F,UAAAs2F,wBAAuB,SAACX,OAClBuB,GAAsB,OACrBnzF,iBACHuvF,IAGG,SACOhvF,GACH4yF,IACHA,GAAsB,EACtBvB,EAAWzyF,KAAKoB,EAAIue,SACpBq0E,GAAsB,WAIvBnzF,iBACHuvF,IAGG,SACOhvF,GACH4yF,IACHA,GAAsB,EACtBvB,EAAWprD,OAAOjmC,EAAIue,SACtBq0E,GAAsB,MAI5BvB,EAAW5xF,iBACTolC,GAGG,SACO7kC,GACH4yF,IACHA,GAAsB,OACjBX,WACuDjyF,EAAImkC,SAEhEyuD,GAAsB,IAExB1xF,KAAI5F,OAER+1F,EAAW5xF,iBACTolC,GAGG,SACO7kC,GACH4yF,IACHA,GAAsB,OACjBC,cACuD7yF,EAAImkC,SAEhEyuD,GAAsB,IAExB1xF,KAAI5F,YAEHw2F,oBAAsBT,GAQ7BP,EAAAp1F,UAAAg4B,MAAK,SAACo/D,MACAA,EAAQ,SACCC,KAASz3F,KAASu2F,mBAAkB,CACnCv2F,KAAQu2F,mBAAmBkB,GAChCt8E,QAAQlV,QAELuwF,2BACHD,mBAAkB,QAClBF,SAAQ,QACRC,UAAS,iBAGPL,uBAEIvqF,UADNuqF,eAAe96E,QAAOnb,KAAM03F,sBAAsB9xF,KAAI5F,OAC9CA,KAASo2F,sBAAqBp2F,KACpC03F,sBAAqB13F,KAAMo2F,sBAAsB1qF,SAInD8qF,qBAAmBx2F,KACrBw2F,oBAAoBp+D,aAGlB69D,gBAAcj2F,KAChBi2F,eAAe79D,aAEjBg+D,sBAAqB,OAEpBuB,EAAU,IAAOzC,GAAkBxB,SACpClvF,cAAcmzF,QACdpxF,WAePivF,EAAAp1F,UAAAw3F,eAAc,SAACtnF,WACJ2lF,eAAc,OAAAj2F,KACTi2F,eAAe96E,QAAQ7K,QACrBkmF,qBAAmBx2F,KAC5Bw2F,oBAAoBr7E,QAAQ7K,IAgBrCklF,EAAAp1F,UAAAy3F,iCAAgC,SAAChrF,EAAYyD,OACrCpC,EAAM,CAAIrB,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,gBAC5DirF,uBAAuB5pF,GAAM,SAAY+U,UAClCA,EAAQhY,cACZwU,qBAAqB5S,GACzByD,EAAS2S,cA0BtBuyE,EAAAp1F,UAAA03F,uBAAsB,SAAC5pF,EAAQoC,WACpB2lF,eAAc,OAAAj2F,KACTi2F,eAAevD,gBAAgBxkF,EAAQoC,QACrCkmF,qBAAmBx2F,KAC5Bw2F,oBAAoBr7E,QAAQ7K,IAmBrCklF,EAAAp1F,UAAA23F,iCAAgC,SAAC7pF,EAAQoC,eAC3BwnF,uBACV5pF,GAIG,SACO+U,MACSA,EAAQhY,cACZmV,iBAAiBlS,GAAM,KAC5BywB,EAASruB,EAAS2S,MACpB0b,EAAM,OACDA,OAcjB62D,EAAAp1F,UAAA43F,sBAAqB,uBACPxB,qBASdhB,EAAAp1F,UAAAy8B,YAAW,eACL1Z,cACKqzE,oBACPrzE,EAAQnjB,KAAQw2F,oBAAoBlsD,WAAW97B,MAAM,QACvCynF,iBACd9yE,EAAQnjB,KAAQi2F,eAAe3D,SAC1B/uF,EAAOvD,KAAMo2F,wBAChB10F,EAAOyhB,EAAU/f,EAASpD,KAAMo2F,yBAGoCjzE,GAS1EqyE,EAAAp1F,UAAA63F,wBAAuB,SAACprF,OAChBsW,EAAQ,eACT00E,iCAAiChrF,GAAU,SAAYoW,GAC1DE,EAAS7f,KAAK2f,MAETE,GAeTqyE,EAAAp1F,UAAAkxF,oBAAmB,SAACpjF,eACT+nF,eAAcj2F,KACTi2F,eAAe1D,YAAYrkF,QACzBsoF,oBAAmBx2F,KACrBw2F,oBAAoBlsD,WAAW97B,MAAM,OAkBrDgnF,EAAAp1F,UAAA83F,8BAA6B,SAACrrF,EAAYsrF,OAQlCrrF,EAAID,EAAW,GACfE,EAAIF,EAAW,GACjBurF,EAAiB,KACfl5E,EAAY,CAAIM,IAAKA,KACvBL,EAAqB5P,EAAAA,EACnBrB,EAAM,EAAKqB,EAAAA,GAAWA,EAAAA,EAAUA,EAAAA,EAAUA,EAAAA,GAC1C0tC,EAASk7C,GAA0Bh2F,cACpC8zF,eAAevD,gBAClBxkF,GAGG,SACO+U,MACJg6B,EAAOh6B,GAAO,KACVvY,EAAWuY,EAAQhY,cACnBotF,EAA6Bl5E,MACnCA,EAAqBzU,EAASuU,eAC5BnS,EACAC,EACAmS,EACAC,IAEuBk5E,EAA0B,CACjDD,EAAiBn1E,MAKXq1E,EAAcnsF,KAAK4N,KAAKoF,GAC9BjR,EAAO,GAAKpB,EAAIwrF,EAChBpqF,EAAO,GAAKnB,EAAIurF,EAChBpqF,EAAO,GAAKpB,EAAIwrF,EAChBpqF,EAAO,GAAKnB,EAAIurF,OAKjBF,GAaT5C,EAAAp1F,UAAAgU,UAAS,SAAC9F,eACI2nF,eAAe7hF,UAAU9F,IAYvCknF,EAAAp1F,UAAAm4F,eAAc,SAAC7sF,OACPuX,EAAOjjB,KAAQq2F,SAAS3qF,EAAG05C,wBACdlgD,IAAZ+d,EAAwBA,EAAU,MAS3CuyE,EAAAp1F,UAAAo4F,gBAAe,SAACnG,OACRpvE,EAAOjjB,KAAQs2F,UAAUjE,eACZntF,IAAZ+d,EAAwBA,EAAU,MAS3CuyE,EAAAp1F,UAAAq4F,UAAS,uBACK/C,SAMdF,EAAAp1F,UAAAoxF,YAAW,uBACG3O,WASd2S,EAAAp1F,UAAAs4F,OAAM,uBACQ/C,MAOdH,EAAAp1F,UAAA42F,qBAAoB,SAACvyF,OACbwe,EAAoExe,EAAMtE,OAC1E02F,EAAa1vF,EAAO8b,GACpBvY,EAAWuY,EAAQhY,iBACpBP,OAQGwD,EAASxD,EAAS0J,YACpByiF,KAAU72F,KAASo2F,mCACTA,sBAAsBS,QACzBZ,gBAAcj2F,KAChBi2F,eAAex4B,OAAOvvD,EAAQ+U,SAG5BgzE,gBAAcj2F,KAChBi2F,eAAezjC,OAAOtkD,EAAQ+U,QAfjC4zE,KAAU72F,KAASo2F,6BACdH,gBAAcj2F,KAChBi2F,eAAetrD,OAAO1nB,QAExBmzE,sBAAsBS,GAAc5zE,OAevCvX,EAAKuX,EAAQ5X,gBACRnG,IAAPwG,EAAgB,KACZitF,EAAMjtF,EAAG05C,gBACNixC,SAASsC,KAAS11E,SACpB21E,mBAAmB31E,QACnBozE,SAASsC,GAAO11E,aAGlB21E,mBAAmB31E,QACnBqzE,UAAUO,GAAc5zE,OAE1B1c,eACA/B,cAAa,IACZ0wF,GAAkBxB,GAA+BzwE,KAUzDuyE,EAAAp1F,UAAAy4F,WAAU,SAAC51E,OACHvX,EAAKuX,EAAQ5X,oBACRnG,IAAPwG,EACKA,KAAE1L,KAASq2F,SAEXlvF,EAAO8b,KAAOjjB,KAAUs2F,WAOnCd,EAAAp1F,UAAA8hB,QAAO,uBACO+zE,eAAe/zE,WAAa3e,EAAOvD,KAAMo2F,wBAQvDZ,EAAAp1F,UAAA6wF,aAAY,SAAC/iF,EAAQ6C,EAAYmJ,WACzB4+E,EAAkB94F,KAAQk2F,oBAC1B6C,EAAa/4F,KAAQ61F,UAAU3nF,EAAQ6C,cACpC1P,EAAOuB,OACRo2F,EAAeD,EAAc13F,GACby3F,EAAmBpG,gBACvCsG,GAIG,SACO91F,UACD4L,GAAe5L,EAAOgL,OAAQ8qF,UAIrCC,EAAK9C,qBACP8C,EAAKz0F,cAAa,IACZ0wF,GAAkBxB,KAExBuF,EAAKxD,QAAQ5xF,KAAIo1F,EAEfD,EACAjoF,EACAmJ,EAAU,SACAiJ,UACDgzE,0BACF3xF,cAAa,IACZ0wF,GACFxB,QACAxuF,EACAie,KAGJvd,KAAIqzF,GAAA,kBAEG9C,0BACF3xF,cAAa,IACZ0wF,GAAkBxB,MAExB9tF,KAAIqzF,IAERH,EAAmBr7B,OAAOu7B,EAAY,CAAG9qF,OAAQ8qF,EAAaxqF,mBAvCzDnN,EAAI,EAAGuB,EAAKm2F,EAAc33F,OAAQC,EAAIuB,IAAMvB,IAA5CA,QA0CJ2lD,QAAOhnD,KACLy1F,UAAYpzF,GAAYrC,KAAQm2F,qBAAuB,GAGhEX,EAAAp1F,UAAAmzF,QAAO,gBACAn7D,OAAM,QACN89D,oBAAoB99D,QACzB30B,EAAArD,UAAMmzF,QAAO1vF,KAAA7D,OAQfw1F,EAAAp1F,UAAA84F,mBAAkB,SAAChrF,OAEb9G,EADE0xF,EAAkB94F,KAAQk2F,oBAEhC4C,EAAmBpG,gBAAgBxkF,GAAM,SAAYhL,MAC/C8M,GAAO9M,EAAOgL,OAAQA,UACxB9G,EAAMlE,GACC,KAGPkE,GACF0xF,EAAmBnuD,OAAOvjC,IAW9BouF,EAAAp1F,UAAAm3F,cAAa,SAACt0E,OACN4zE,EAAa1vF,EAAO8b,GACtB4zE,KAAU72F,KAASo2F,6BAAqBp2F,KAC9Bo2F,sBAAsBS,QAEzBZ,gBAAcj2F,KAChBi2F,eAAetrD,OAAO1nB,QAG1By0E,sBAAsBz0E,QACtB1c,WAQPivF,EAAAp1F,UAAAs3F,sBAAqB,SAACz0E,OACd4zE,EAAa1vF,EAAO8b,QACrBszE,mBAAmBM,GAAY17E,QAAQlV,eAChCswF,mBAAmBM,OACzBnrF,EAAKuX,EAAQ5X,aACRnG,IAAPwG,UAAgB1L,KACNq2F,SAAS3qF,EAAG05C,wBAEdkxC,UAAUO,QACjBryF,cAAa,IACZ0wF,GAAkBxB,GAA+BzwE,KAWzDuyE,EAAAp1F,UAAAw4F,mBAAkB,SAAC31E,OACbk2E,GAAU,UACHztF,KAAE1L,KAASq2F,SAAQ,GAAAr2F,KACnBq2F,SAAS3qF,KAAQuX,EAAO,aACnBozE,SAAS3qF,GACrBytF,GAAU,eAIPA,GAST3D,EAAAp1F,UAAAg5F,UAAS,SAACxD,QACHH,QAAUG,GAQjBJ,EAAAp1F,UAAAi5F,OAAM,SAACvF,GACLvqF,GAAMvJ,KAAM01F,QAAS,QAChB0D,UAAUvF,GAAIC,EAAG9zF,KAAO01F,WAEjCF,EA73BA,CAA2B8D,GAAAvyF,mKC7JvBwyF,GACAC,eARAC,GAAUC,GAAc,YAUnBC,eACK1yF,MAAK,4CAEV2yF,eACK3yF,MAAK,8CAsBV4yF,GAAWC,MACZP,KAAqBlqD,kBAEdA,WAAWyqD,EAAK,OAGtBP,KAAqBI,KAAqBJ,KAAqBlqD,kBAChEkqD,GAAmBlqD,WACZA,WAAWyqD,EAAK,cAIhBP,GAAiBO,EAAK,SACzBptF,cAGO6sF,GAAiB11F,KAAK,KAAMi2F,EAAK,SACpCz9B,UAEGk9B,GAAiB11F,KAAI7D,KAAO85F,EAAK,qBApCxCP,GADiB,mBAAVlqD,WACYA,WAEAsqD,SAElBjtF,GACL6sF,GAAmBI,OAIfH,GADmB,mBAAZpqD,aACcA,aAEAwqD,SAEpBltF,GACL8sF,GAAqBI,WAyDzBG,GAFAC,GAAK,GACLC,IAAW,EAEXC,IAAa,WAERC,KACAF,IAAaF,KAGlBE,IAAW,EACPF,GAAa34F,OACb44F,GAAQD,GAAan4E,OAAOo4E,IAE5BE,IAAa,EAEbF,GAAM54F,QACNg5F,eAICA,SACDH,QAGAxiC,EAAUoiC,GAAWM,IACzBF,IAAW,UAEPvzF,EAAMszF,GAAM54F,OACVsF,GAAG,KACLqzF,GAAeC,GACfA,GAAK,KACIE,GAAaxzF,GACdqzF,IACAA,GAAaG,IAAYG,MAGjCH,IAAa,EACbxzF,EAAMszF,GAAM54F,OAEhB24F,GAAe,KACfE,IAAW,WAnEUK,MACjBd,KAAuBpqD,oBAEhBA,aAAakrD,OAGnBd,KAAuBI,KAAwBJ,KAAuBpqD,oBACvEoqD,GAAqBpqD,aACdA,aAAakrD,OAIbd,GAAmBc,SACrB5tF,cAGM8sF,GAAmB31F,KAAK,KAAMy2F,SAChCj+B,UAGEm9B,GAAmB31F,KAAI7D,KAAOs6F,KAgD7CC,CAAgB9iC,aAiBX+iC,GAAKV,EAAKt9D,QACVs9D,IAAMA,OACNt9D,MAAQA,WAYRi+D,MA5BThB,GAAQiB,SAAQ,SAAaZ,OACrBx+C,EAAI,IAAOz5C,MAAMgB,UAAUzB,OAAS,MACpCyB,UAAUzB,OAAS,EAAC,IAAA,IACXC,EAAI,EAAGA,EAAIwB,UAAUzB,OAAQC,IAClCi6C,EAAKj6C,EAAI,GAAKwB,UAAUxB,GAGhC24F,GAAM12F,KAAI,IAAKk3F,GAAKV,EAAKx+C,IACJ,IAAjB0+C,GAAM54F,QAAiB64F,IACvBJ,GAAWO,KASnBI,GAAKp6F,UAAUi6F,IAAG,gBACTP,IAAIh0F,MAAM,KAAI9F,KAAOw8B,QAE9Bi9D,GAAQvuC,MAAK,UACbuuC,GAAQkB,SAAU,EAClBlB,GAAQmB,IAAG,GACXnB,GAAQoB,KAAI,GACZpB,GAAQqB,QAAO,GACfrB,GAAQsB,SAAQ,GAIhBtB,GAAQhzF,GAAKg0F,GACbhB,GAAQuB,YAAcP,GACtBhB,GAAQ9yF,KAAO8zF,GACfhB,GAAQwB,IAAMR,GACdhB,GAAQyB,eAAiBT,GACzBhB,GAAQ0B,mBAAqBV,GAC7BhB,GAAQ2B,KAAOX,GACfhB,GAAQ4B,gBAAkBZ,GAC1BhB,GAAQ6B,oBAAsBb,GAE9BhB,GAAQp1F,UAAS,SAAagF,aAE9BowF,GAAQ8B,QAAO,SAAalyF,aACdpC,MAAK,qCAGnBwyF,GAAQ+B,IAAG,sBACX/B,GAAQgC,MAAK,SAAaC,aACZz0F,MAAK,mCAEnBwyF,GAAQkC,MAAK,kBAAuB,OClKhCC,GAA4Br5F,OAAOs5F,2BAAyB,SAC3Bz0F,WAC7B/B,EAAO9C,OAAO8C,KAAK+B,GACnB00F,EAAW,GACNz6F,EAAI,EAAGA,EAAIgE,EAAKjE,OAAQC,IAC/By6F,EAAYz2F,EAAKhE,IAAMkB,OAAOw5F,yBAAyB30F,EAAK/B,EAAKhE,WAE5Dy6F,GAGPE,GAAY,WAChBC,GAAQlI,OAAM,SAAYpnF,OACnBuvF,GAASvvF,GAAC,SACTupB,EAAO,GACF70B,EAAI,EAAGA,EAAIwB,UAAUzB,OAAQC,IACpC60B,EAAQ5yB,KAAK64F,GAAQt5F,UAAUxB,YAE1B60B,EAAQpoB,KAAI,KAGjBzM,EAAI,UACJi6C,EAAOz4C,UACP6D,EAAM40C,EAAKl6C,OACXg7F,EAAM90F,OAAOqF,GAAGqO,QAAQghF,IAAY,SAAWlvF,MAC5C,OAADA,EAAU,MAAA,OACVzL,GAAKqF,EAAG,OAASoG,SACbA,mBACYxF,OAAOg0C,EAAKj6C,sBACZu2B,OAAO0jB,EAAKj6C,0BAGnByiB,KAAKS,UAAU+2B,EAAKj6C,YACpBg7F,qCAIFvvF,MAGJA,EAAIwuC,EAAKj6C,GAAIA,EAAIqF,EAAKoG,EAAIwuC,IAAOj6C,GACpCi7F,GAAOxvF,KAAOyvF,GAASzvF,GACzBsvF,GAAG,IAAUtvF,EAEbsvF,GAAG,IAAUD,GAAQrvF,UAGlBsvF,GAOTH,GAAQO,UAAS,SAAYv+E,EAAIw+E,WACb,IAAP/C,KAAqD,IAA1BA,GAAQgD,cAAsB,OAC3Dz+E,UAIS,IAAPy7E,GAAuB,OAAA,kBAEvBuC,GAAQO,UAAUv+E,EAAIw+E,GAAK32F,MAAK9F,KAAO6C,gBAI9C85F,GAAS,wBAENA,EAAM,IACLjD,GAAQkD,iBAAgB,MAAA,IAChB31F,MAAMw1F,GACP/C,GAAQmD,iBACjB34D,QAAQ44D,MAAML,GAEdv4D,QAAQ1B,MAAMi6D,GAEhBE,GAAS,SAEJ1+E,EAAGnY,MAAK9F,KAAO6C,iBAOtBk6F,GAAM,GACNC,GAAa,KAkC0B,SAClCb,GAAQ/0F,EAAK61F,OAEhBpS,EAAG,CACLqS,KAAI,GACJC,QAASC,WAGPv6F,UAAUzB,QAAU,IAAGypF,EAAIwS,MAAQx6F,UAAU,IAC7CA,UAAUzB,QAAU,IAAGypF,EAAIyS,OAASz6F,UAAU,IAC9C06F,GAAUN,GAEZpS,EAAI2S,WAAaP,EACRA,GAEThB,GAAQwB,QAAQ5S,EAAKoS,GAGnBS,GAAY7S,EAAI2S,cAAa3S,EAAI2S,YAAa,GAC9CE,GAAY7S,EAAIwS,SAAQxS,EAAIwS,MAAQ,GACpCK,GAAY7S,EAAIyS,UAASzS,EAAIyS,QAAS,GACtCI,GAAY7S,EAAI8S,iBAAgB9S,EAAI8S,eAAgB,GACpD9S,EAAIyS,SAAQzS,EAAIsS,QAAUS,IACvBC,GAAYhT,EAAKzjF,EAAKyjF,EAAIwS,gBAoC1BO,GAAiBxB,EAAK0B,OACzB5yF,EAAQixF,GAAQv0B,OAAOk2B,UAEvB5yF,EAAK,KACYixF,GAAQmB,OAAOpyF,GAAO,GAAC,IAAUkxF,EAAG,KACpCD,GAAQmB,OAAOpyF,GAAO,GAAC,IAEnCkxF,WAKFgB,GAAehB,EAAK0B,UACpB1B,WAeAyB,GAAYhT,EAAK3iF,EAAO61F,MAG3BlT,EAAI8S,eACJz1F,GACA81F,GAAW91F,EAAM+1F,UAEjB/1F,EAAM+1F,UAAYhC,GAAQgC,WAExB/1F,EAAMg2F,aAAeh2F,EAAMg2F,YAAY99F,YAAc8H,GAAK,KAC1DmgB,EAAMngB,EAAM+1F,QAAQF,EAAclT,UACjCqR,GAAS7zE,KACZA,EAAMw1E,GAAYhT,EAAKxiE,EAAK01E,IAEvB11E,MAIL81E,WA+FmBtT,EAAK3iF,MACxBw1F,GAAYx1F,GAAK,OACZ2iF,EAAIsS,QAAO,YAAY,gBAC5BjB,GAASh0F,GAAK,KACZk2F,EAAM,IAAUt6E,KAAKS,UAAUrc,GAAO8S,QAAO,SAAA,IACPA,QAAO,KAAA,OACPA,QAAO,OAAA,KAAY,WACtD6vE,EAAIsS,QAAQiB,EAAM,aAEvBC,GAASn2F,GAAK,OACT2iF,EAAIsS,QAAO,GAAMj1F,EAAK,aAC3Bq1F,GAAUr1F,GAAK,OACV2iF,EAAIsS,QAAO,GAAMj1F,EAAK,cAE3Bo0F,GAAOp0F,GAAK,OACP2iF,EAAIsS,QAAO,OAAO,QA9GXmB,CAAgBzT,EAAK3iF,MACjCi2F,EAAS,OACJA,MAIL94F,EAAO9C,OAAO8C,KAAK6C,GACnBq2F,WApCe/hE,OACfgiE,EAAI,UAERhiE,EAAMrhB,SAAO,SAAU5K,EAAK4zE,GAC1Bqa,EAAKjuF,IAAO,KAGPiuF,EA6BWC,CAAYp5F,MAE1BwlF,EAAI2S,aACNn4F,EAAO9C,OAAOm8F,oBAAoBx2F,IAKhCy2F,GAAQz2F,KACJ7C,EAAKd,QAAO,YAAe,GAAKc,EAAKd,QAAO,gBAAmB,GAAC,OAC/Dq6F,GAAY12F,MAID,IAAhB7C,EAAKjE,OAAY,IACf48F,GAAW91F,GAAK,KACdmB,EAAOnB,EAAMmB,KAAI,KAAUnB,EAAMmB,KAAI,UAClCwhF,EAAIsS,QAAO,YAAe9zF,EAAI,IAAM,cAEzCw1F,GAAS32F,GAAK,OACT2iF,EAAIsS,QAAQz8D,OAAOtgC,UAAUglD,SAASvhD,KAAKqE,GAAK,aAErD42F,GAAO52F,GAAK,OACP2iF,EAAIsS,QAAQzhD,KAAKt7C,UAAUglD,SAASvhD,KAAKqE,GAAK,WAEnDy2F,GAAQz2F,GAAK,OACR02F,GAAY12F,OA+CnBvF,EA3CAo8F,EAAI,GAAOviE,GAAQ,EAAOwiE,EAAM,WAGhCC,GAAQ/2F,KACVs0B,GAAQ,EACRwiE,EAAM,WAIJhB,GAAW91F,MAEb62F,EAAI,cADI72F,EAAMmB,KAAI,KAAUnB,EAAMmB,KAAI,IACf,YAIrBw1F,GAAS32F,KACX62F,EAAI,IAASr+D,OAAOtgC,UAAUglD,SAASvhD,KAAKqE,IAI1C42F,GAAO52F,KACT62F,EAAI,IAASrjD,KAAKt7C,UAAU8+F,YAAYr7F,KAAKqE,IAI3Cy2F,GAAQz2F,KACV62F,EAAI,IAASH,GAAY12F,IAGP,IAAhB7C,EAAKjE,QAAkBo7B,GAAyB,GAAhBt0B,EAAM9G,OAItC28F,EAAe,EACbc,GAAS32F,GACJ2iF,EAAIsS,QAAQz8D,OAAOtgC,UAAUglD,SAASvhD,KAAKqE,GAAK,UAEhD2iF,EAAIsS,QAAO,WAAW,YAIjCtS,EAAIqS,KAAK55F,KAAK4E,GAIZvF,EADE65B,WAsCequD,EAAK3iF,EAAO61F,EAAcQ,EAAal5F,WACtD1C,EAAM,GACDtB,EAAI,EAAGwR,EAAI3K,EAAM9G,OAAQC,EAAIwR,IAAKxR,EACrC89F,GAAej3F,EAAOZ,OAAOjG,IAC/BsB,EAAOW,KAAK87F,GAAevU,EAAK3iF,EAAO61F,EAAcQ,EACjDj3F,OAAOjG,IAAI,IAEfsB,EAAOW,KAAI,WAGf+B,EAAK8V,SAAO,SAAUpY,GACfA,EAAI+9B,MAAK,UACZn+B,EAAOW,KAAK87F,GAAevU,EAAK3iF,EAAO61F,EAAcQ,EACjDx7F,GAAK,OAGNJ,EArDI08F,CAAYxU,EAAK3iF,EAAO61F,EAAcQ,EAAal5F,GAEnDA,EAAKqvB,KAAG,SAAU3xB,UAClBq8F,GAAevU,EAAK3iF,EAAO61F,EAAcQ,EAAax7F,EAAKy5B,MAItEquD,EAAIqS,KAAKv1E,eA6GmBhlB,EAAQo8F,EAAMC,OACtCM,EAAc,SACL38F,EAAO48F,QAAM,SAAU30D,EAAM40D,GACxCF,OACIE,EAAIj7F,QAAO,OAAU,EAAG+6F,WACrB10D,EAAO40D,EAAIxkF,QAAO,kBAAA,IAAwB5Z,OAAS,IACzD,GAEU,GACJ49F,EAAO,IACF,KAAJD,EAAI,GAAeA,EAAI,OAAQ,IAEhCp8F,EAAOmL,KAAI,SAAQ,IAEnBkxF,EAAO,GAGTA,EAAO,GAAKD,EAAI,IAASp8F,EAAOmL,KAAI,MAAK,IAAUkxF,EAAO,GA5H1DS,CAAqB98F,EAAQo8F,EAAMC,IAxBjCA,EAAO,GAAKD,EAAOC,EAAO,YA+C5BJ,GAAY12F,aACNjB,MAAM7G,UAAUglD,SAASvhD,KAAKqE,GAAK,aAwBzCk3F,GAAevU,EAAK3iF,EAAO61F,EAAcQ,EAAax7F,EAAKy5B,OAC9DnzB,EAAM+yF,EAAKsD,MACfA,EAAOn9F,OAAOw5F,yBAAyB7zF,EAAOnF,IAAG,CAAOmF,MAAOA,EAAMnF,KAC5DkF,IAELm0F,EADEsD,EAAKj3F,IACDoiF,EAAIsS,QAAO,kBAAkB,WAE7BtS,EAAIsS,QAAO,WAAW,WAG1BuC,EAAKj3F,MACP2zF,EAAMvR,EAAIsS,QAAO,WAAW,YAG3BgC,GAAeZ,EAAax7F,KAC/BsG,EAAI,IAAStG,EAAG,KAEbq5F,IACCvR,EAAIqS,KAAK34F,QAAQm7F,EAAKx3F,OAAS,GAE/Bk0F,EADEE,GAAOyB,GACHF,GAAYhT,EAAK6U,EAAKx3F,MAAO,MAE7B21F,GAAYhT,EAAK6U,EAAKx3F,MAAO61F,EAAe,IAE5Cx5F,QAAO,OAAS,IAEpB63F,EADE5/D,EACI4/D,EAAIhzF,MAAK,MAAOsrB,KAAG,SAAUirE,cACnBA,KACb7xF,KAAI,MAAO4pB,OAAO,GAElB,KAAU0kE,EAAIhzF,MAAK,MAAOsrB,KAAG,SAAUirE,eACzBA,KACd7xF,KAAI,OAIXsuF,EAAMvR,EAAIsS,QAAO,aAAa,YAG9BO,GAAYr0F,GAAI,IACdmzB,GAASz5B,EAAI+9B,MAAK,SAAA,OACbs7D,GAET/yF,EAAOya,KAAKS,UAAS,GAAMxhB,IAClB+9B,MAAK,iCACZz3B,EAAOA,EAAKquB,OAAO,EAAGruB,EAAKjI,OAAS,GACpCiI,EAAOwhF,EAAIsS,QAAQ9zF,EAAI,UAEvBA,EAAOA,EAAK2R,QAAO,KAAA,OACPA,QAAO,OAAA,KACPA,QAAO,WAAA,KACnB3R,EAAOwhF,EAAIsS,QAAQ9zF,EAAI,kBAIpBA,EAAI,KAAU+yF,WA6Bd6C,GAAQW,UACR/9F,MAAMC,QAAQ89F,YAIdrC,GAAUsC,SACA,kBAAHA,WAIPvD,GAAOuD,UACC,OAARA,WASAxB,GAASwB,SACC,iBAAHA,WAIP3D,GAAS2D,SACC,iBAAHA,WASPnC,GAAYmC,eACT,IAAHA,WAIAhB,GAASiB,UACTvD,GAASuD,IAAwB,oBAAjBC,GAAeD,YAK/BvD,GAASsD,SACC,iBAAHA,GAA4B,OAARA,WAI3Bf,GAAOryF,UACP8vF,GAAS9vF,IAAsB,kBAAhBszF,GAAetzF,YAK9BkyF,GAAQjyF,UACR6vF,GAAS7vF,KACK,mBAAhBqzF,GAAerzF,IAA2BA,aAAazF,gBAKrD+2F,GAAW6B,SACD,mBAAHA,WAgBPE,GAAe72E,UACf3mB,OAAOnC,UAAUglD,SAASvhD,KAAKqlB,YAI/B82E,GAAI7+F,UACJA,EAAI,GAAE,IAASA,EAAEikD,SAAS,IAAMjkD,EAAEikD,SAAS,IAvbpD62C,GAAQgE,SAAQ,SAAYx3F,MAC1BA,EAAMA,EAAIy3F,eACLnD,GAAOt0F,MACNu0F,GAAc/f,KAAKx0E,GAAG,KACpB03F,EAAMzG,GAAQyG,IAClBpD,GAAOt0F,GAAG,eACJg0F,EAAMR,GAAQlI,OAAOjuF,MAAMm2F,GAASp5F,WACxCqhC,QAAQ1B,MAAK,YAAc/5B,EAAK03F,EAAK1D,SAGvCM,GAAOt0F,GAAG,oBAGPs0F,GAAOt0F,IAoChBwzF,GAAQgC,QAAU9B,GAIlBA,GAAQmB,OAAM,MACN,CAAI,EAAG,WACL,CAAI,EAAG,cACJ,CAAI,EAAG,YACT,CAAI,EAAG,UACT,CAAI,GAAI,SACT,CAAI,GAAI,UACP,CAAI,GAAI,SACT,CAAI,GAAI,SACR,CAAI,GAAI,UACP,CAAI,GAAI,YACN,CAAI,GAAI,QACZ,CAAI,GAAI,WACL,CAAI,GAAI,KAIlBnB,GAAQv0B,OAAM,SACH,cACD,iBACC,mBACE,YACL,cACE,aACF,iBAEE,uHCzLDw4B,EAAYzzF,UACZA,EAAE9I,KAAK+B,KAAK+G,OAGjB0zF,EAA+B,oBAANC,OACzBC,EAA+B,oBAANC,OAEzBC,EAAiBL,EAAY79F,OAAOnC,UAAUglD,UAE9Cs7C,EAAcN,EAAYxoE,OAAOx3B,UAAUugG,SAC3CC,EAAcR,EAAY94F,OAAOlH,UAAUugG,SAC3CE,EAAeT,EAAYljD,QAAQ98C,UAAUugG,YAE7CN,EAAe,IACbS,EAAcV,EAAYE,OAAOlgG,UAAUugG,YAG7CJ,EAAe,IACbQ,EAAcX,EAAYI,OAAOpgG,UAAUugG,kBAGxCK,EAAoB94F,EAAO+4F,MAClB,iBAAL/4F,EAAkB,OACpB,aAGP+4F,EAAiB/4F,IACV,QACDwE,UACC,YA8FFw0F,EAAch5F,SACM,iBAApBu4F,EAAev4F,YAkBfi5F,EAAcj5F,SACM,iBAApBu4F,EAAev4F,YAiBfk5F,EAAkBl5F,SACE,qBAApBu4F,EAAev4F,YAiBfm5F,EAAkBn5F,SACE,qBAApBu4F,EAAev4F,YAWfo5F,EAAsBp5F,SACF,yBAApBu4F,EAAev4F,YAMfq5F,EAAcr5F,SACC,oBAAXs5F,cAIJF,EAAsBG,QACzBH,EAAsBp5F,GACtBA,aAAiBs5F,sBAIdE,EAAmBx5F,SACC,sBAApBu4F,EAAev4F,YAOfy5F,EAAWz5F,SACC,oBAAR05F,WAIJF,EAAmBD,QACtBC,EAAmBx5F,GACnBA,aAAiB05F,UA9LvBC,EAAAC,QAAQC,kBAAoBC,EAC5BH,EAAAC,QAAQG,oBAAsBC,EAC9BL,EAAAC,QAAQK,aAAeC,EAkBvBP,EAAAC,QAAQO,mBAdWtrF,SAGF,oBAAPgmB,SACPhmB,aAAiBgmB,SAGP,OAAVhmB,GACY,iBAALA,GACU,mBAAVA,EAAMqyE,MACK,mBAAXryE,EAAMsyE,OAgBhBwY,EAAAC,QAAQQ,2BAVmBp6F,SACH,oBAAXs5F,aAA+BA,YAAYe,OAC7Cf,YAAYe,OAAOr6F,GAI1Bk6F,EAAal6F,IACby5F,EAAWz5F,IASf25F,EAAAC,QAAQU,sBAHct6F,SACQ,eAArBu6F,EAAgBv6F,IAOzB25F,EAAAC,QAAQY,6BAHqBx6F,SACC,sBAArBu6F,EAAgBv6F,IAOzB25F,EAAAC,QAAQa,uBAHez6F,SACO,gBAArBu6F,EAAgBv6F,IAOzB25F,EAAAC,QAAQc,uBAHe16F,SACO,gBAArBu6F,EAAgBv6F,IAOzB25F,EAAAC,QAAQe,qBAHa36F,SACS,cAArBu6F,EAAgBv6F,IAOzB25F,EAAAC,QAAQgB,sBAHc56F,SACQ,eAArBu6F,EAAgBv6F,IAOzB25F,EAAAC,QAAQiB,sBAHc76F,SACQ,eAArBu6F,EAAgBv6F,IAOzB25F,EAAAC,QAAQkB,wBAHgB96F,SACM,iBAArBu6F,EAAgBv6F,IAOzB25F,EAAAC,QAAQmB,wBAHgB/6F,SACM,iBAArBu6F,EAAgBv6F,IAOzB25F,EAAAC,QAAQoB,yBAHiBh7F,SACK,kBAArBu6F,EAAgBv6F,IAOzB25F,EAAAC,QAAQqB,0BAHkBj7F,SACI,mBAArBu6F,EAAgBv6F,IAOzBg5F,EAAcO,QACF,oBAAH2B,KACPlC,EAAa,IAAKkC,KAYpBvB,EAAAC,QAAQuB,eATOn7F,SACC,oBAAHk7F,MAIJlC,EAAcO,QACjBP,EAAch5F,GACdA,aAAiBk7F,MAOvBjC,EAAcM,QACF,oBAAH6B,KACPnC,EAAa,IAAKmC,KAWpBzB,EAAAC,QAAQyB,eATOr7F,SACC,oBAAHo7F,MAIJnC,EAAcM,QACjBN,EAAcj5F,GACdA,aAAiBo7F,MAOvBlC,EAAkBK,QACF,oBAAP+B,SACPpC,EAAiB,IAAKoC,SAWxB3B,EAAAC,QAAQ2B,mBATWv7F,SACC,oBAAPs7F,UAIJpC,EAAkBK,QACrBL,EAAkBl5F,GAClBA,aAAiBs7F,UAOvBnC,EAAkBI,QACF,oBAAPiC,SACPrC,EAAiB,IAAKqC,SAKxB7B,EAAAC,QAAQ6B,mBAHWz7F,UACVm5F,EAAkBn5F,IAO3Bo5F,EAAsBG,QACF,oBAAXD,aACPF,EAAqB,IAAKE,aAW5BK,EAAAC,QAAQ8B,cAAgBrC,EAKxBG,EAAmBD,QACC,oBAAXD,aACQ,oBAARI,UACPF,EAAkB,IAAKE,SAAQ,IAAKJ,YAAY,GAAI,EAAG,IAWzDK,EAAAC,QAAQ+B,WAAalC,MAGjBmC,EAAgD,oBAAjBC,kBAAoCA,uBAAoB7+F,WAClF8+F,EAA4B97F,SACR,+BAApBu4F,EAAev4F,YAEf+7F,EAAoB/7F,eACK,IAArB47F,SAImC,IAAnCE,EAA4BvC,UACrCuC,EAA4BvC,QAAUuC,EAA2B,IAAKF,IAGjEE,EAA4BvC,QAC/BuC,EAA4B97F,GAC5BA,aAAiB47F,YA6BdI,EAAeh8F,UACf84F,EAAoB94F,EAAOw4F,YAI3ByD,EAAej8F,UACf84F,EAAoB94F,EAAO04F,YAI3BwD,EAAgBl8F,UAChB84F,EAAoB94F,EAAO24F,YAI3BwD,EAAen8F,UACfm4F,GAAmBW,EAAoB94F,EAAO44F,YAI9CwD,EAAep8F,UACfq4F,GAAmBS,EAAoB94F,EAAO64F,GAhDvDc,EAAAC,QAAQyC,oBAAsBN,EAK9BpC,EAAAC,QAAQ0C,yBAHiBt8F,SACI,2BAApBu4F,EAAev4F,IAOxB25F,EAAAC,QAAQ2C,uBAHev8F,SACM,0BAApBu4F,EAAev4F,IAOxB25F,EAAAC,QAAQ4C,uBAHex8F,SACM,0BAApBu4F,EAAev4F,IAOxB25F,EAAAC,QAAQ6C,2BAHmBz8F,SACE,uBAApBu4F,EAAev4F,IAOxB25F,EAAAC,QAAQ8C,qCAH6B18F,SACR,gCAApBu4F,EAAev4F,IAOxB25F,EAAAC,QAAQ+C,eAAiBX,EAKzBrC,EAAAC,QAAQgD,eAAiBX,EAKzBtC,EAAAC,QAAQiD,gBAAkBX,EAK1BvC,EAAAC,QAAQkD,eAAiBX,EAKzBxC,EAAAC,QAAQmD,eAAiBX,EAWzBzC,EAAAC,QAAQoD,0BATkBh9F,UAEtBg8F,EAAeh8F,IACfi8F,EAAej8F,IACfk8F,EAAgBl8F,IAChBm8F,EAAen8F,IACfo8F,EAAep8F,IAWnB25F,EAAAC,QAAQqD,0BANkBj9F,SACA,oBAAV8yE,aACZumB,EAAcr5F,IACd+7F,EAAoB/7F,wDAK6BiT,SAAO,SAAUiqF,GACpE7iG,OAAO+/B,eAAeu/D,EAAAC,QAASsD,EAAM,CACnCC,YAAY,EACZn9F,MAAK,qBACOjB,MAAMm+F,EAAM,6FCxUxBE,EAA8B,mBAAN9E,QAAkD,iBAAlBA,OAAO+E,YAG/DC,YAAYC,CAAS,6BAErBC,EAAmB,SAAwBx9F,WAC1Co9F,GAAkBp9F,GAAqB,iBAALA,GAAsBs4F,OAAO+E,eAAer9F,IAG5D,uBAAfs9F,EAAUt9F,IAGdy9F,EAAiB,SAAwBz9F,WACxCw9F,EAAoBx9F,IAGP,OAAVA,GACM,iBAALA,GACY,iBAAZA,EAAM9G,QACb8G,EAAM9G,QAAU,GACD,mBAAfokG,EAAUt9F,IACY,sBAAtBs9F,EAAUt9F,EAAM09F,SAGdC,EAAyB,kBACrBH,EAAoB7iG,WADC,GAI7B6iG,EAAoBI,kBAAoBH,EAExC9D,EAAAC,QAAiB+D,EAA4BH,EAAsBC,kFC1B/DI,EAAWC,EAASC,EAAY,6BAEpCpE,EAAAC,QAAc,SAA+Bz4F,EAAM68F,OAC9CC,EAAYF,EAAa58F,IAAQ68F,SACjB,mBAATC,GAA4BJ,EAAS18F,EAAI,gBAAmB,EAC/D28F,EAASG,GAEVA,yDCXJC,EAEAC,EAAeC,YACfC,EAAYC,SACZC,EAAa/jG,UAGbgkG,EAAqB,SAAaC,cAE7BJ,EAAS,yBAA4BI,EAAgB,iBAArDJ,SACC75F,MAGNk6F,EAAQrkG,OAAOw5F,4BACf6K,EAAK,IAEPA,EAAK,aACGl6F,GACRk6F,EAAQ,SAINC,EAAc,qBACPJ,GAEPK,EAAiBF,EAAK,sBAKhBC,QACCE,cAGAH,EAAM/jG,UAAS,UAAYoF,UAC1B++F,UACDH,IAXe,GAevBA,EAECI,EAAaC,EAAA,QAAA,GAEbC,EAAW5kG,OAAO6kG,gBAAc,SAAct6F,UAAYA,EAAEu6F,WAE5DC,EAAS,GAETC,EAA8B,oBAAVvsB,WAA6BorB,EAAYe,EAASnsB,YAEtEwsB,EAAU,oBAC4B,oBAAdC,eAAiCrB,EAAYqB,yBAC7D5lG,sBACwB,oBAAX2/F,YAA8B4E,EAAY5E,uCACtCyF,EAAaE,EAAQ,GAAI3G,OAAOkH,aAAetB,qCACvCA,oBACjBkB,qBACCA,6BACQA,6BACAA,cACD,oBAAPK,QAA0BvB,EAAYuB,mBACjC,oBAANrH,OAAyB8F,EAAY9F,mBAC3CpjD,qBACgB,oBAAR0kD,SAA2BwE,EAAYxE,kBAClDlmD,mBACKksD,iCACSC,iCACTC,iCACSC,6BACb9gG,eACD+gG,mBACKC,2BACsB,oBAAZC,aAA+B9B,EAAY8B,8BAC/B,oBAAZC,aAA+B/B,EAAY+B,sCACf,oBAApBC,qBAAuChC,EAAYgC,kCACtE7B,wBACSe,gBACQ,oBAATe,UAA4BjC,EAAYiC,yBAC7B,oBAAVC,WAA6BlC,EAAYkC,0BAC/B,oBAAVC,WAA6BnC,EAAYmC,wBAClDC,mBACH7oF,4BACYsnF,EAAaE,EAASA,EAAQ,GAAI3G,OAAOkH,cAAgBtB,WAC3D,iBAAJtiF,KAAoBA,KAAOsiF,UACzB,oBAAHhD,IAAsBgD,EAAYhD,6BACd,oBAAHA,KAAwB6D,EAAyBE,GAAQ,IAAK/D,KAAM5C,OAAOkH,aAAtCtB,WAC5Dj6F,gBACEyrB,kBACAr1B,sBACIknD,wBACFhyB,qBACa,oBAAPsF,QAA0BqpE,EAAYrpE,kBACnC,oBAAL0rE,MAAwBrC,EAAYqC,qBACtCC,8BACIC,2BACO,oBAAPC,QAA0BxC,EAAYwC,mBAC9CloE,eACO,oBAAH4iE,IAAsB8C,EAAY9C,6BACd,oBAAHA,KAAwB2D,EAAyBE,GAAQ,IAAK7D,KAAM9C,OAAOkH,aAAtCtB,wBACvB,oBAAjBrC,kBAAoCqC,EAAYrC,6BAClEz8F,mCACiB2/F,EAAaE,EAAQ,GAAI3G,OAAOkH,aAAetB,aAChEa,EAAazG,OAAS4F,kBACjBC,qBACGS,iBACJS,gBACDd,iBACkB,oBAAVzrB,WAA6BorB,EAAYprB,iCACjB,oBAAjB6tB,kBAAoCzC,EAAYyC,kCAC3C,oBAAXC,YAA8B1C,EAAY0C,4BAC/B,oBAAXC,YAA8B3C,EAAY2C,yBACpDC,qBACa,oBAAPxF,QAA0B4C,EAAY5C,oBAC/B,oBAAPyF,QAA0B7C,EAAY6C,oBAC/B,oBAAPvF,QAA0B0C,EAAY1C,SAGvDwF,EAAM,SAAYC,EAAO9/F,OACxBnB,KACI,oBAAJmB,EACHnB,EAAQw+F,EAAqB,gCACf,wBAAJr9F,EACVnB,EAAQw+F,EAAqB,2BACf,6BAAJr9F,EACVnB,EAAQw+F,EAAqB,iCACf,qBAAJr9F,EAA2B,KACjC4U,EAAKkrF,EAAM,4BACXlrF,IACH/V,EAAQ+V,EAAG7d,mBAEE,6BAAJiJ,EAAmC,KACzC+/F,EAAMD,EAAM,oBACZC,IACHlhG,EAAQi/F,EAASiC,EAAIhpG,mBAIvBonG,EAAWn+F,GAAQnB,EAEZA,GAGJmhG,EAAc,0BACO,+CACN,6CACI,uDACA,oDACH,mDACE,0DACK,iDACR,mEACS,wEACP,8CACC,2CACJ,wCACC,6CACI,oDACG,uDACA,mDACJ,uCACR,yDACS,qEACA,kDACC,mDACA,yCACV,mCACI,sCACD,wCACG,2CACA,6CACE,uDACD,sDACA,8CACC,+CACN,qCACG,yCACC,8CACI,uDACI,mDACR,wCACH,mDACc,sDACX,2CACA,gDACK,oDACD,kDACD,kDACC,0DACO,2DACN,qDACA,kDACH,8CACD,6CACA,mDAKjBC,EAAUC,EAAA1lG,KAAU2iG,SAAS3iG,KAAMhC,MAAMzB,UAAUwhB,QACnD4nF,EAAeD,EAAA1lG,KAAU2iG,SAAS1gG,MAAOjE,MAAMzB,UAAUmF,QACzDkkG,EAAWF,EAAA1lG,KAAU2iG,SAAS3iG,KAAMyD,OAAOlH,UAAU4a,SACrD0uF,EAAYH,EAAA1lG,KAAU2iG,SAAS3iG,KAAMyD,OAAOlH,UAAUoO,OAGtDm7F,EAAU,qGACVC,EAAY,WACZC,EAAY,SAAyBC,OACpCliF,EAAQ8hF,EAAUI,EAAQ,EAAG,GAC7BpiF,EAAOgiF,EAAUI,GAAQ,MACpB,MAALliF,GAAqB,MAAJF,EAAY,MAAA,IACtB2+E,EAAY,qDACR,MAAJ3+E,GAAqB,MAALE,EAAa,MAAA,IAC7By+E,EAAY,sDAEnB1nE,EAAM,UACV8qE,EAASK,EAAQH,GAAU,SAAY7oE,EAAOipE,EAAQC,EAAOC,GAC5DtrE,EAAOA,EAAOv9B,QAAU4oG,EAAQP,EAASQ,EAAWL,EAAY,MAAUG,GAAUjpE,KAE9EnC,GAIJurE,EAAgB,SAA6B7gG,EAAM68F,OAElDiE,EADAC,EAAgB/gG,KAEhBghG,EAAOhB,EAAgBe,KAE1BA,EAAa,KADbD,EAAQd,EAAee,IACK,GAAC,KAG1BC,EAAO7C,EAAY4C,GAAa,KAC/BliG,EAAQs/F,EAAW4C,MACnBliG,IAAUo/F,IACbp/F,EAAQghG,EAAOkB,SAEA,IAALliG,IAA0Bg+F,EAAY,MAAA,IACtCO,EAAU,aAAgBp9F,EAAI,+DAIxC8gG,MAAOA,EACP9gG,KAAM+gG,EACNliG,MAAOA,aAICm+F,EAAY,aAAgBh9F,EAAI,qBAG3Cw4F,EAAAC,QAAc,SAAyBz4F,EAAM68F,MAC7B,iBAAJ78F,GAAqC,IAAhBA,EAAKjI,OAAY,MAAA,IACtCqlG,EAAU,gDAEjB5jG,UAAUzB,OAAS,GAAwB,kBAAZ8kG,EAA0B,MAAA,IAClDO,EAAU,iDAGjBzkB,EAAQ6nB,EAAaxgG,GACrBihG,EAAoBtoB,EAAM5gF,OAAS,EAAI4gF,EAAM,GAAC,GAE9CmkB,EAAY+D,EAAgB,IAAOI,EAAiB,IAAQpE,GAC5DqE,EAAoBpE,EAAU98F,KAC9BnB,EAAQi+F,EAAUj+F,MAClBsiG,GAAqB,EAErBL,EAAQhE,EAAUgE,MAClBA,IACHG,EAAoBH,EAAM,GAC1BX,EAAaxnB,EAAOsnB,EAAO,CAAE,EAAG,GAAIa,aAG5B9oG,EAAI,EAAGopG,GAAQ,EAAMppG,EAAI2gF,EAAM5gF,OAAQC,GAAK,EAAC,KACjD8gF,EAAOH,EAAM3gF,GACbumB,EAAQ8hF,EAAUvnB,EAAM,EAAG,GAC3Bz6D,EAAOgiF,EAAUvnB,GAAM,OAGnB,MAALv6D,GAAsB,MAALA,GAAsB,MAALA,GAC3B,MAAJF,GAAoB,MAAJA,GAAoB,MAAJA,IAElCE,IAAUF,EAAI,MAAA,IAEP2+E,EAAY,2DAEf,gBAAJlkB,GAA2BsoB,IAC9BD,GAAqB,GAMlBH,EAAO7C,EAFX+C,EAAiB,KADjBD,GAAiB,IAAUnoB,GACgB,KAG1Cj6E,EAAQs/F,EAAW+C,WACA,MAATriG,EAAa,MACjBi6E,KAAQj6E,GAAK,KACbg+F,EAAY,MAAA,IACNO,EAAU,sBAAyBp9F,EAAI,yDAI/Cu9F,GAAUvlG,EAAI,GAAM2gF,EAAM5gF,OAAM,KAC/Bs+F,EAAOkH,EAAM1+F,EAAOi6E,GAWvBj6E,GAVDuiG,IAAU/K,IASD,QAAaA,KAAI,kBAAyBA,EAAKz3F,KAC/Cy3F,EAAKz3F,IAELC,EAAMi6E,QAGfsoB,EAAQJ,EAAOniG,EAAOi6E,GACtBj6E,EAAQA,EAAMi6E,GAGXsoB,IAAUD,IACbhD,EAAW+C,GAAqBriG,WAI5BA,yDCtUJwiG,EAA0B,oBAANlK,QAA0BA,oBAGlDqB,EAAAC,QAAc,iBACQ,mBAAV4I,IACM,mBAANlK,SACgB,iBAAhBkK,EAAU,SACE,iBAAZlK,OAAM,QAEVmK,0DCRR9I,EAAAC,QAAc,cACI,mBAANtB,QAA4D,mBAA5Bj+F,OAAOqoG,sBAAoC,OAAW,KACvE,iBAAfpK,OAAOkH,SAAqB,OAAW,MAE9CtgG,EAAG,GACHyjG,EAAMrK,OAAM,QACZsK,EAASvoG,OAAOsoG,MACN,iBAAHA,EAAgB,OAAW,KAEA,oBAAlCtoG,OAAOnC,UAAUglD,SAASvhD,KAAKgnG,GAA0B,OAAW,KAC/B,oBAArCtoG,OAAOnC,UAAUglD,SAASvhD,KAAKinG,GAA6B,OAAW,MAYtED,KADLzjG,EAAIyjG,GADS,GAEDzjG,EAAG,OAAW,KACJ,mBAAX7E,OAAO8C,MAAmD,IAA5B9C,OAAO8C,KAAK+B,GAAKhG,OAAY,OAAW,KAE5C,mBAA1BmB,OAAOm8F,qBAAiF,IAA3Cn8F,OAAOm8F,oBAAoBt3F,GAAKhG,OAAY,OAAW,MAE3G2pG,EAAOxoG,OAAOqoG,sBAAsBxjG,MACpB,IAAhB2jG,EAAK3pG,QAAgB2pG,EAAK,KAAOF,EAAG,OAAW,MAE9CtoG,OAAOnC,UAAU4qG,qBAAqBnnG,KAAKuD,EAAKyjG,GAAG,OAAY,KAE1B,mBAA/BtoG,OAAOw5F,yBAAuC,KACpDkP,EAAa1oG,OAAOw5F,yBAAyB30F,EAAKyjG,MAb1C,KAcRI,EAAW/iG,QAA8C,IAA1B+iG,EAAW5F,WAAmB,OAAW,SAGtE,sECpCRxD,EAAAC,QAAiB0E,SAASpmG,UAAUwF,MAAQslG,oDCFb,IAE3BC,EAAa,kDACbC,EAAQvpG,MAAMzB,UAAUoO,MACxB68F,EAAQ9oG,OAAOnC,UAAUglD,SACzBkmD,EAAQ,oBAEZzJ,EAAAC,QAAc,SAAiByJ,OACvBprG,EAAMH,QACO,mBAANG,GAAyBkrG,EAAMxnG,KAAK1D,KAAYmrG,EAAQ,MAAA,IACrD5oG,UAAUyoG,EAAgBhrG,WAIpCqrG,EAFAlwD,EAAO8vD,EAAMvnG,KAAKhB,UAAW,GAG7B4oG,EAAM,8BACcD,EAAK,KACjB7sE,EAASx+B,EAAO2F,MAAK9F,KAErBs7C,EAAK15B,OAAOwpF,EAAMvnG,KAAKhB,oBAEvBN,OAAOo8B,KAAYA,EACZA,cAIJx+B,EAAO2F,MACVylG,EACAjwD,EAAK15B,OAAOwpF,EAAMvnG,KAAKhB,cAK/B6oG,EAAcv/F,KAAKiE,IAAI,EAAGjQ,EAAOiB,OAASk6C,EAAKl6C,QAC/CuqG,EAAS,GACJtqG,EAAI,EAAGA,EAAIqqG,EAAarqG,IAC7BsqG,EAAUroG,KAAI,IAAOjC,MAGzBmqG,EAAQhF,SAAQ,SAAS,oBAAwBmF,EAAU79F,KAAI,KAAI,4CAA3D04F,CAA4GiF,GAEhHtrG,EAAOC,UAAS,KACZwrG,EAAK,aACTA,EAAMxrG,UAAYD,EAAOC,UACzBorG,EAAMprG,UAAS,IAAOwrG,EACtBA,EAAMxrG,UAAY,YAGforG,sEC9CX3J,EAAAC,QAAiByH,EAAA1lG,KAAU2iG,SAAS3iG,KAAMtB,OAAOnC,UAAU4C,gGCCvD6oG,EAAS5F,EAAY,8BACrB6F,EAAQ7F,EAAY,6BACpB8F,EAAgB9F,EAAY,mBAAoB,IAASsD,EAAK1lG,KAAKioG,EAAOD,GAE1EG,EAAQ/F,EAAY,qCAAsC,GAC1DgG,EAAkBhG,EAAY,2BAA4B,GAC1DiG,EAAOjG,EAAY,iBAEnBgG,EAAe,IAEjBA,EAAe,OAAQ,CAAI/jG,MAAO,UAC1BwE,GAERu/F,EAAkB,KAIpBpK,EAAAC,QAAc,SAAqBqK,OAC9Bl3F,EAAO82F,EAAcxC,EAAMuC,EAAOjpG,cAClCmpG,GAASC,EAAe,KACvBvM,EAAOsM,EAAM/2F,EAAI,UACjByqF,EAAK0M,cAERH,EACCh3F,EAAI,SACI,CACN/M,MAAO,EAAIgkG,EAAK,EAAGC,EAAiB/qG,QAAUyB,UAAUzB,OAAS,aAI/D6T,OAGJo3F,EAAS,kBACLN,EAAcxC,EAAMsC,EAAQhpG,YAGhCopG,EACHA,EAAgBpK,EAAAC,QAAc,QAAS,CAAI55F,MAAOmkG,IAElDxK,EAAAC,QAAeh8F,MAAQumG,wDC7BpBC,EAdAC,EAAQhqG,OAAOnC,UAAUglD,SACzBonD,EAAUhG,SAASpmG,UAAUglD,SAC7BqnD,EAAS,sBACTC,EAA8B,mBAANlM,QAAkD,iBAAlBA,OAAO+E,YAC/DoH,EAAWpqG,OAAO6kG,eAYtBvF,EAAAC,QAAc,SAAgC7jF,MAChC,mBAAFA,EAAiB,OACpB,KAEJwuF,EAAUxvB,KAAKuvB,EAAQ3oG,KAAKoa,IAAE,OAC1B,MAEHyuF,QAEM,+BADAH,EAAM1oG,KAAKoa,OAGjB0uF,EAAQ,OACL,UAEoB,IAAjBL,EAAiC,KACvCM,EA1Bc,eACdF,EAAc,OACX,aAGAlG,SAAQ,wBAARA,SACC95F,KAoBYmgG,GACpBP,IAAoBM,GAAgBD,EAASC,UAEvCD,EAAS1uF,KAAQquF,gGC9BrBQ,EAAYrH,EAAS,6BAErBsH,EADa7F,EAAA,QAAA,IAC2C,iBAAlB1G,OAAO+E,YAE7CyH,EAAcC,IAEdC,EAASzH,EAAS,0BAClB0H,EAAS,gBAETC,EAAiB7qG,OAAO6kG,eACxB2F,GAAkBM,GAAQD,GAC7BE,EAAQN,GAAW,SAAYO,MACF,mBAAjBC,EAAOD,GAA0B,KACvCtsG,EAAG,IAAOusG,EAAOD,QACf/M,OAAO+E,eAAetkG,GAAG,MAAA,IACpBgnG,UAAS,uDAA0DsF,EAAU,wDAEpFE,EAAQL,EAAensG,GACvBgqG,EAAaoC,EAAKI,EAAOjN,OAAO+E,iBAC/B0F,EAAU,KACVyC,EAAaN,EAAeK,GAChCxC,EAAaoC,EAAKK,EAAYlN,OAAO+E,aAEtC4H,EAAUI,GAActC,EAAWhjG,yBAsBtC45F,EAAAC,QAAc,SAA4B55F,WACpCk6F,EAAal6F,KACb6kG,EAnBY,SAA8B7kG,OAC3CylG,GAAY,SAChBL,EAAQH,GAAS,SAAYS,EAAQL,OAC/BI,EAAS,QAERtkG,EAAOukG,EAAO/pG,KAAKqE,GACnBmB,IAASkkG,IACZI,EAAYtkG,SAELqD,QAGJihG,EAQAE,CAAe3lG,GADQglG,EAAOJ,EAAU5kG,GAAQ,GAAG,8CCpDvD4lG,EAASvrG,OAAOnC,UAAU4C,eAC1B+qG,EAAWxrG,OAAOnC,UAAUglD,SAEhCy8C,EAAAC,QAAc,SAAqB16F,EAAK6W,EAAI4sE,MACpB,sBAAhBkjB,EAASlqG,KAAKoa,GAA2B,MAAA,IAC/Bvb,UAAS,mCAEnBmQ,EAAIzL,EAAIhG,UACRyR,KAAOA,EAAC,IAAA,IACCxR,EAAI,EAAGA,EAAIwR,EAAGxR,IACnB4c,EAAGpa,KAAKgnF,EAAKzjF,EAAI/F,GAAIA,EAAG+F,gBAGnBmW,KAAKnW,EACN0mG,EAAOjqG,KAAKuD,EAAKmW,IACjBU,EAAGpa,KAAKgnF,EAAKzjF,EAAImW,GAAIA,EAAGnW,0DCdpC4mG,EAAa,oKAcjBnM,EAAAC,QAAc,mBACThtC,EAAG,GACEzzD,EAAI,EAAGA,EAAI2sG,EAAc5sG,OAAQC,IACR,mBAAtBmsG,EAAOQ,EAAc3sG,MAC/ByzD,EAAIA,EAAI1zD,QAAU4sG,EAAc3sG,WAG3ByzD,yDCnBJm5C,YAAQhI,CAAY,wCACpBgI,EAAK,IAEPA,EAAK,GAAA,gBACGvhG,GAERuhG,EAAQ,KAIVpM,EAAAC,QAAiBmM,+FCRbC,EAAYzI,EAAS,6BAErB0I,EADajH,EAAA,QAAA,IAC2C,iBAAlB1G,OAAO+E,YAE7C6I,EAAcnB,IAEdoB,EAAW5I,EAAS,2BAA4B,IAAI,SAAsBjpE,EAAOt0B,WAC3E7G,EAAI,EAAGA,EAAIm7B,EAAMp7B,OAAQC,GAAK,KAClCm7B,EAAMn7B,KAAO6G,EAAK,OACd7G,SAGF,GAEJitG,EAAS7I,EAAS,0BAClB8I,EAAS,gBAETC,EAAiBjsG,OAAO6kG,eACxB+G,GAAkBd,GAAQmB,GAC7BlB,EAAQc,GAAW,SAAYb,OAC1BtsG,EAAG,IAAOusG,EAAOD,QACf/M,OAAO+E,eAAetkG,GAAG,MAAA,IACpBgnG,UAAS,uDAA0DsF,EAAU,wDAEpFE,EAAQe,EAAevtG,GACvBgqG,EAAaoC,EAAKI,EAAOjN,OAAO+E,iBAC/B0F,EAAU,KACVyC,EAAac,EAAef,GAChCxC,EAAaoC,EAAKK,EAAYlN,OAAO+E,aAEtCgJ,EAAUhB,GAActC,EAAWhjG,OAgBrC45F,EAAAC,QAAc,SAAyB55F,OACjCA,GAAqB,iBAALA,EAAkB,OAAW,MAC7CimG,EAAc,KACdM,EAAMH,EAAOJ,EAAUhmG,GAAQ,GAAG,UAC/BmmG,EAASD,EAAaK,IAAO,UAEhCpB,GAlBY,SAA8BnlG,OAC3CwmG,GAAU,SACdpB,EAAQiB,GAAS,SAAYX,EAAQL,OAC/BmB,EAAO,IAEVA,EAAUd,EAAO/pG,KAAKqE,KAAWqlG,QACzB7gG,QAGJgiG,EAUAC,CAAezmG,OhBuZvB+zF,GAAQ2S,MAAQ1H,EAAA,SAKhBjL,GAAQn6F,QAAUm9F,GAKlBhD,GAAQ4S,UAAYtR,GAKpBtB,GAAQ6S,OAASxS,GAKjBL,GAAQ8S,2BAHmBlP,UACX,MAAPA,GAOT5D,GAAQ+S,SAAW3Q,GAKnBpC,GAAQgT,SAAW/S,GAKnBD,GAAQiT,kBAHUrP,SACC,iBAAHA,GAOhB5D,GAAQkT,YAAczR,GAKtBzB,GAAQmT,SAAWvQ,GACnB5C,GAAQ2S,MAAMQ,SAAWvQ,GAKzB5C,GAAQoT,SAAW9S,GAKnBN,GAAQqT,OAASxQ,GACjB7C,GAAQ2S,MAAMU,OAASxQ,GAMvB7C,GAAQsT,QAAU5Q,GAClB1C,GAAQ2S,MAAMY,cAAgB7Q,GAK9B1C,GAAQwT,WAAazR,GAUrB/B,GAAQyT,qBARa7P,UACJ,OAARA,GACU,kBAAHA,GACG,iBAAHA,GACG,iBAAHA,GACG,iBAAHA,QACG,IAAHA,qCiB/hBhBgC,EAAAC,QAAc,SAAqBjC,UAC1BA,GAAiB,iBAAHA,GACD,mBAARA,EAAI8P,MACI,mBAAR9P,EAAIv9B,MACS,mBAAbu9B,EAAI+P,cjB+hBlB3T,GAAQ4T,SAAW3I,EAAA,aAYf4I,GAAM,mFAIDC,SACHtjG,EAAC,IAAOivC,KACR4M,EAAI,CAAI03C,GAAIvzF,EAAEujG,YACNhQ,GAAIvzF,EAAEwjG,cACNjQ,GAAIvzF,EAAEyjG,eAAepiG,KAAI,YAC7BrB,EAAE0jG,UAAWL,GAAOrjG,EAAE2jG,YAAa9nD,GAAMx6C,KAAI,cAqC9CqxF,GAAe/3F,EAAKipG,UACpB9tG,OAAOnC,UAAU4C,eAAea,KAAKuD,EAAKipG,GAjCnDpU,GAAQ1lF,IAAG,WACT2tB,QAAQ3tB,IAAG,UAAYw5F,KAAa9T,GAAQlI,OAAOjuF,MAAMm2F,GAASp5F,+CkB9jB5C,mBAAbN,OAAO+tG,OAEhBzO,EAAAC,QAAc,SAAqByO,EAAMC,GACnCA,IACFD,EAAKE,OAASD,EACdD,EAAKnwG,UAAYmC,OAAO+tG,OAAOE,EAAUpwG,UAAS,CAChD89F,YAAW,CACTh2F,MAAOqoG,EACPlL,YAAY,EACZx1D,UAAU,EACVu8D,cAAc,OAOtBvK,EAAAC,QAAc,SAAqByO,EAAMC,MACnCA,EAAS,CACXD,EAAKE,OAASD,MACVE,EAAQ,aACZA,EAAStwG,UAAYowG,EAAUpwG,UAC/BmwG,EAAKnwG,UAAS,IAAOswG,EACrBH,EAAKnwG,UAAU89F,YAAcqS,OlBwjBnCtU,GAAQ0U,SAAWzJ,EAAA,SAEnBjL,GAAQwB,QAAO,SAAY3sB,EAAQlkB,OAE5BA,IAAQ2vC,GAAS3vC,GAAG,OAAUkkB,UAE/BzrE,EAAO9C,OAAO8C,KAAKunD,GACnBvrD,EAAIgE,EAAKjE,OACNC,KACLyvE,EAAOzrE,EAAKhE,IAAMurD,EAAIvnD,EAAKhE,WAEtByvE,UAOL8/B,GAAwC,oBAANpQ,OAAyBA,OAAM,8BAA4Bt7F,WA0DxF2rG,GAAsBC,EAAQC,OAKhCD,EAAM,KACLE,EAAS,IAAO/pG,MAAK,2CACzB+pG,EAAUF,OAASA,EACnBA,EAASE,SAEJD,EAAGD,GAlEZ7U,GAAQgV,UAAS,SAAsBC,MAClB,mBAARA,EAAuB,MAAA,IACtBxuG,UAAS,uDAEjBkuG,IAA4BM,EAASN,IAAwB,KAC3D3yF,KACS,mBADTA,EAAKizF,EAASN,KACU,MAAA,IAChBluG,UAAS,wEAErBH,OAAO+/B,eAAerkB,EAAI2yF,GAAwB,CAChD1oG,MAAO+V,EAAIonF,YAAY,EAAOx1D,UAAU,EAAOu8D,cAAc,IAExDnuF,WAGAA,YACHkzF,EAAgBC,EAChBloB,EAAO,IAAOnsD,SAAO,SAAWC,EAASq0E,GAC3CF,EAAiBn0E,EACjBo0E,EAAgBC,KAGd/1D,EAAI,GACCj6C,EAAI,EAAGA,EAAIwB,UAAUzB,OAAQC,IACpCi6C,EAAKh4C,KAAKT,UAAUxB,IAEtBi6C,EAAKh4C,MAAI,SAAWy3E,EAAK7yE,GACnB6yE,EACFq2B,EAAcr2B,GAEdo2B,EAAejpG,UAKjBgpG,EAASprG,MAAK9F,KAAOs7C,SACdy/B,GACPq2B,EAAcr2B,UAGTmO,SAGT3mF,OAAO+uG,eAAerzF,EAAI1b,OAAO6kG,eAAe8J,IAE5CN,IAA0BruG,OAAO+/B,eAAerkB,EAAI2yF,GAAwB,CAC9E1oG,MAAO+V,EAAIonF,YAAY,EAAOx1D,UAAU,EAAOu8D,cAAc,IAExD7pG,OAAOgvG,iBACZtzF,EACA29E,GAA0BsV,KAI9BjV,GAAQgV,UAAUO,OAASZ,GAiD3B3U,GAAQwV,qBAlCaP,MACA,mBAARA,EAAuB,MAAA,IACtBxuG,UAAS,6DAMZgvG,YACHp2D,EAAI,GACCj6C,EAAI,EAAGA,EAAIwB,UAAUzB,OAAQC,IACpCi6C,EAAKh4C,KAAKT,UAAUxB,QAGlBswG,EAAUr2D,EAAK3zB,SACD,mBAAPgqF,EAAsB,MAAA,IACrBjvG,UAAS,kDAEjBs/B,EAAIhiC,KACJ+wG,EAAE,kBACGY,EAAQ7rG,MAAMk8B,EAAMn/B,YAI7BquG,EAASprG,MAAK9F,KAAOs7C,GAClB8tC,MAAI,SAAU/gE,GAAOqxE,GAAQgB,SAASqW,EAAGnrG,KAAK,KAAM,KAAMyiB,gBAC5CupF,GAAOlY,GAAQgB,SAASmW,GAAsBjrG,KAAK,KAAMgsG,EAAKb,cAGjFxuG,OAAO+uG,eAAeI,EAAenvG,OAAO6kG,eAAe8J,IAC3D3uG,OAAOgvG,iBAAiBG,EACA9V,GAA0BsV,IAC3CQ,GmBjsBTG,GAAc,SAAmB3pG,OAC3BnI,SAAcmI,QACV,WAAJnI,IACY,OAAVmI,EACFnI,EAAI,OACKk8F,GAAAn6F,QAAaoG,GACtBnI,EAAI,QACKk8F,GAAAqT,OAAYpnG,GACrBnI,EAAI,OACKk8F,GAAAmT,SAAclnG,GACvBnI,EAAI,SACKk8F,GAAAsT,QAAarnG,KACtBnI,EAAI,UAGDA,GAST+xG,GAAc,SAAY/0F,EAAMja,aACnBC,KAAOD,EAChBia,EAAKha,GAAOD,EAAOC,UAEdga,GAQTg1F,GAAW,SAAY7uG,SACf8uG,EAAM,OACR//D,EAAQ,YACDlvC,KAAOG,EAChB8uG,EAAO,EAAI//D,GAASlvC,EACpBivG,EAAO,EAAI//D,EAAQ,GAAK/uC,EAAOH,KAC7BkvC,SAEG+/D,GAQTC,GAAa,SAAYz1E,SACjBt5B,EAAM,WACH7B,EAAI,EAAGuB,EAAK45B,EAAMp7B,OAAQC,EAAIuB,EAAIvB,GAAK,EAC9C6B,EAAOs5B,EAAMn7B,IAAMm7B,EAAMn7B,EAAI,UAExB6B,SC9DHgvG,GAAMnK,mBAENoK,GAAW,CACfrI,OAAM,SAAW1N,MACD,iBAAHA,EAAgB,MAAA,IACfn1F,MAAK,iCAAoCm1F,UAE9C8V,GAAI9V,IAEb2N,OAAM,SAAWqI,MACD,iBAAHA,EAAgB,MAAA,IACfnrG,MAAK,iCAAoCmrG,UAE9CF,GAAI5qG,OAAO8qG,KAEpBC,QAAO,SAAWC,MACD,kBAAJA,EAAkB,MAAA,IACjBrrG,MAAK,kCAAqCqrG,UAE/CA,EAAI,IAAM,KAEnBC,KAAI,SAAWA,OACRtW,GAAAqT,OAAYiD,GAAI,MAAA,IACTtrG,MAAK,+BAAkCsrG,UAE5CL,GAAIK,EAAKC,gBAElBh2E,MAAK,SAAWA,OACTy/D,GAAAn6F,QAAa06B,GAAK,MAAA,IACXv1B,MAAK,gCAAmCu1B,UAE7C01E,GAAIpuF,KAAKS,UAAUiY,KAE5Bt5B,OAAM,SAAWkE,UACR8qG,GAAIpuF,KAAKS,UAAUnd,aAS9BqrG,GAAW,SAAY1yG,QACfA,KAAQoyG,IAAW,MAAA,IACblrG,MAAK,6BAAgClH,UAE1CoyG,GAAYpyG,UC/Cf2yG,GAAM7K,mBAIN8K,GAAa,CACjB7I,OAAM,SAAW1N,OACVA,GAAiB,iBAAHA,EAAgB,MAAA,IACvBn1F,MAAK,mCAAsCm1F,UAEhDsW,GAAItW,IAEb2N,OAAM,SAAW3N,OACVA,GAAiB,iBAAHA,EAAgB,MAAA,IACvBn1F,MAAK,mCAAsCm1F,SAEjDgW,EAAMx6E,OAAO86E,GAAItW,OACnBz8E,MAAMyyF,GAAG,MAAA,IACDnrG,MAAK,qCAAwCm1F,UAElDgW,GAETC,QAAO,SAAWjW,OACXA,GAAiB,iBAAHA,EAAgB,MAAA,IACvBn1F,MAAK,mCAAsCm1F,OAEnDkW,KACG,MAAHlW,EACFkW,GAAO,UACK,MAAHlW,YAGCn1F,MAAK,oCAAuCm1F,GAFtDkW,GAAO,SAIFA,GAETC,KAAI,SAAWnW,OACRA,GAAiB,iBAAHA,EAAgB,MAAA,IACvBn1F,MAAK,mCAAsCm1F,SAEjDmW,EAAI,IAAO72D,KAAKg3D,GAAItW,OACtBz8E,MAAM4yF,EAAKK,WAAO,MAAA,IACV3rG,MAAK,mCAAsCm1F,UAEhDmW,GAET/1E,MAAK,SAAW4/D,OACTA,GAAiB,iBAAHA,EAAgB,MAAA,IACvBn1F,MAAK,mCAAsCm1F,OAEnD5/D,MAEFA,EAAQ1Y,KAAKC,MAAM2uF,GAAItW,UAChBrhB,QAGJv+C,GAA0B,UAAjBq1E,GAAYr1E,GAAkB,MAAA,IAChCv1B,MAAK,qCAAwCm1F,UAElD5/D,GAETt5B,OAAM,SAAWk5F,OACVA,GAAiB,iBAAHA,EAAgB,MAAA,IACvBn1F,MAAK,mCAAsCm1F,OAEnDh1F,MAEFA,EAAM0c,KAAKC,MAAM2uF,GAAItW,UACdrhB,QAGJ3zE,GAAsB,WAAfyqG,GAAYzqG,GAAiB,MAAA,IAC7BH,MAAK,sCAAyCm1F,UAEnDh1F,IASXyrG,GAAW,SAAY9yG,QACfA,KAAQ4yG,IAAa,MAAA,IACf1rG,MAAK,+BAAkClH,UAE5C4yG,GAAc5yG,WC1EV,SAAY+yG,MACD,WAAlBjB,GAAYiB,GAAoB9yG,KAC7B+G,QAAU+rG,wBACSA,GAAM,MAAA,IACpB7rG,MAAK,wBAEVF,QAAU+rG,EAAO/rG,cAGlBhH,EAAO8xG,GAAW7xG,KAAM+G,cACzBgsG,UAAYD,EAAOC,WAAaN,GAAgB1yG,QAChDizG,YAAcF,EAAOE,aAAeH,GAAkB9yG,IClB1D,MACGkzG,GAAUC,GAAc,SAAYJ,SAElCK,EAAM,OACRC,QAFJN,EAAShB,GAAW,GAAKgB,MAIvBM,EAASN,EAAOzW,SACTyW,EAAOzW,aAELt5F,KAAO+vG,EAChBK,EAAOpwG,GAAG,IAAAswG,GAAcP,EAAO/vG,SAE5BuwG,QAAUF,OACVG,QAAUJ,GAQjBF,GAAO7yG,UAAUozG,YAAW,SAAYzwG,eAC1BuwG,QAAOtzG,KAAQszG,QAAO,IAASvwG,EAAMA,GASnDkwG,GAAO7yG,UAAUqzG,WAAU,SAAYnjG,EAAUkuB,OAC3C+d,YACOx5C,KAAG/C,KAASuzG,WACrBh3D,EAAOjsC,EAASzM,KAAK26B,EAASz7B,EAAG/C,KAAOwzG,YAAYzwG,KACvC,IAATw5C,EAAc,QAatB02D,GAAO7yG,UAAU2yG,UAAS,SAAYhwG,EAAKmF,EAAO7E,QAC1CN,KAAG/C,KAASuzG,SAAO,MAAA,IACbtsG,MAAK,gBAAmBlE,eAExBwwG,QAAQxwG,GAAKgwG,UAAU7qG,EAAO7E,IAS5C4vG,GAAO7yG,UAAU4yG,YAAW,SAAYjwG,EAAKq5F,QACrCr5F,KAAG/C,KAASuzG,SAAO,MAAA,IACbtsG,MAAK,gBAAmBlE,eAExBwwG,QAAQxwG,GAAKiwG,YAAY5W,IAQvC6W,GAAO7yG,UAAUszG,WAAU,SAAY3wG,QAC/BA,KAAG/C,KAASuzG,SAAO,MAAA,IACbtsG,MAAK,gBAAmBlE,eAExBwwG,QAAQxwG,GAAKgE,SAW3BksG,GAAO7yG,UAAUuzG,UAAS,SAAYC,SAC9BC,EAAgB,aACX9wG,KAAG/C,KAASuzG,QACrBM,EAAgB7zG,KAAMwzG,YAAYzwG,KAAQ,MAGxC4wG,GAAY,SAChBC,EAAMH,YAAU,SAAUpX,EAAGyX,UACvBA,KAAYD,IACdF,EAAYG,IAENH,KAEHA,UC5GHT,GAWH,MACGa,GAASC,GAAa,SAAY3wG,EAAQiN,QACzC2jG,QAAU5wG,OACV6wG,UAAS,QACTC,WAAU,QACVC,UAAY9jG,OACZ+jG,eAAiB,MAGxBN,GAAM3zG,UAAUk0G,kBAAiB,gBACtBD,gBACPjlE,aAAYpvC,KAAMq0G,qBAEfA,eAAiBhlE,WAAUrvC,KAAMu0G,mBAAmB3uG,KAAI5F,QAG/D+zG,GAAM3zG,UAAUm0G,mBAAkB,gBAC3BF,eAAiB,UACjBD,UAASp0G,KAAMi0G,QAAOj0G,KAAOk0G,YAGpCH,GAAM3zG,UAAUoyD,OAAM,SAAYnvD,QACvBmxG,cACPplE,aAAYpvC,KAAMw0G,mBAEfA,aAAenlE,WAAUrvC,KAAMy0G,iBAAiB7uG,KAAI5F,KAAOqD,KAGlE0wG,GAAM3zG,UAAUq0G,iBAAgB,SAAYC,QACrCF,aAAe,WACdnxG,EAAMrD,KAAQi0G,QACdU,EAAS30G,KAAQm0G,WAAW3lG,gBACzBnN,EAAIszG,EAAUvzG,OAAS,EAAGC,GAAK,IAAKA,EAAC,OACtCuzG,EAAWD,EAAUtzG,GACrBwzG,EAASD,EAASC,WACpBtuG,GAAU,QACRwzB,EAAK,GACX86E,EAAOpB,YAAU,SAAU1wG,EAAK+wG,OAC1BgB,KACEhB,KAAYY,MAQPrxG,EAAOywG,KAAcY,EAAUZ,GAAQ,IAE9CgB,EAAeD,EAAO7B,YAAYjwG,EAAK2xG,EAAUZ,IACjDzwG,EAAOywG,GAAYY,EAAUZ,GAC7B/5E,EAAMh3B,GAAO+xG,EACbvuG,GAAU,QACHw0E,SAdgB,CACzB+5B,EAAeD,EAAOnB,WAAW3wG,SAC3BgyG,EAAoBF,EAAO9B,UAAUhwG,EAAK+xG,GAC5CzxG,EAAOywG,KAAciB,IACvBxuG,GAAU,EACVlD,EAAOywG,GAAYiB,EACnBh7E,EAAMh3B,GAAO+xG,OAafvuG,GAAOvG,KAASm0G,WAAW5vG,QAAQqwG,IAAa,GAClDA,EAAStkG,SAASypB,KAUxBg6E,GAAM3zG,UAAU40G,WAAU,SAAY1kG,OAChC2kG,UACCd,WAAUn0G,KAAQm0G,WAAWl3D,QAAM,SAAU23D,SAC1CjqE,EAASiqE,EAAStkG,WAAaA,SACjCq6B,IACFsqE,EAAkBL,IAEZjqE,MAELsqE,EAAe,MAAA,IACRhuG,MAAK,oDAEX5D,EAAMrD,KAAQi0G,QACdiB,EAAQl1G,KAAQk0G,UACtBe,EAAgBJ,OAAOpB,YAAU,SAAU1wG,EAAK+wG,UACvCzwG,EAAOywG,UACPoB,EAASpB,WAEbQ,qBASPP,GAAM3zG,UAAU+0G,SAAQ,SAAYrC,EAAQxiG,SACpCskG,EAAQ,CACZC,OAAM,IAAAO,GAAatC,GACnBxiG,SAAUA,WAIHjP,EAAI,EAAGuB,EAAE5C,KAAQm0G,WAAW/yG,OAAQC,EAAIuB,IAAMvB,EAAC,OAChDsyG,EAAYiB,EAASC,OAAOlB,UAAS3zG,KAAMm0G,WAAW9yG,GAAGwzG,WAC3DlB,EAAS,MAAA,IACD1sG,MAAK,oDACyC0sG,MAGtDiB,EAAStkG,WAAQtQ,KAAUm0G,WAAW9yG,GAAGiP,SAAQ,MAAA,IACzCrJ,MAAK,kEAIdktG,WAAW7wG,KAAKsxG,QAChBS,oBAAoBT,YAEF76E,OACqB,SAAjCo6E,WAAW5vG,QAAQqwG,GAAgB,MAAA,IAChC3tG,MAAK,0DAEX4tG,EAASD,EAASC,WACpBtuG,GAAU,QACRlD,EAAMrD,KAAQi0G,QACpBY,EAAOpB,YAAU,SAAU1wG,EAAK+wG,MAC1B/wG,KAAOg3B,EAAK,OACRu7E,EAAkBT,EAAO9B,UAAUhwG,EAAKg3B,EAAMh3B,GAAMg3B,GACtD12B,EAAOywG,KAAcwB,IACvB/uG,GAAU,EACVlD,EAAOywG,GAAYwB,OAIrB/uG,GAAOvG,KACJs0G,qBAEP1uG,KAAI5F,OAOR+zG,GAAM3zG,UAAUi1G,oBAAmB,SAAYT,SACvC76E,EAAK,GACLm7E,EAAQ,GACR7xG,EAAMrD,KAAQi0G,QACpBW,EAASC,OAAOpB,YAAU,SAAU1wG,EAAK+wG,OACnCyB,QACEC,EAAsBZ,EAASC,OAAOnB,WAAW3wG,GACjDgyG,EAAoBH,EAASC,OAAO9B,UACxChwG,EACAyyG,MAEE1B,KAAYzwG,EAAM,IAElBkyG,EAAoBX,EAASC,OAAO7B,YAAYjwG,EAAKM,EAAOywG,UACrD/4B,GACPw6B,EAAoBC,OAGtBD,EAAoBC,EAEtBz7E,EAAMh3B,GAAOwyG,EACbL,EAASpB,GAAYiB,EACrB1xG,EAAOywG,GAAYc,EAASC,OAAO9B,UAAUhwG,EAAKwyG,gBAEzCzB,KAAYoB,EAAQl1G,KACxBk0G,UAAUJ,GAAYoB,EAASpB,GAEtCc,EAAStkG,SAASypB,IAQpBg6E,GAAM3zG,UAAU2yG,UAAS,SAAY1vG,SAC7BoyG,EAAU,WACPp0G,EAAI,EAAGuB,EAAE5C,KAAQm0G,WAAW/yG,OAAQC,EAAIuB,IAAMvB,EAAC,OAChDuzG,EAAQ50G,KAAQm0G,WAAW9yG,GACjCuzG,EAASC,OAAOpB,YAAU,SAAU1wG,EAAK+wG,GACnCA,KAAYzwG,IACdoyG,EAAW3B,GAAYc,EAASC,OAAO9B,UACrChwG,EACAM,EAAOywG,GACPzwG,iBAKGN,KAAOM,EAAM,KAChBN,KAAO0yG,GAAU,OACfvtG,EAAQ7E,EAAON,GACfhD,EAAO8xG,GAAY3pG,GACnBwtG,EAAajD,GAAgB1yG,GACnC01G,EAAW1yG,GAAO2yG,EAAWxtG,UAG1ButG,gBCpNHzB,OAGF2B,YAEKC,KACHD,IACFpzE,OAAOv9B,oBAAmB,WAAa6wG,IAEzCtzE,OAAOp+B,iBAAgB,WAAa0xG,IACpCF,GAAK,IAAAG,GAAaC,GAAiBC,SAASxX,OAAI,SAC9Cn7F,EACA6xG,SAEMe,EAAW,aACNlzG,KAAOM,EACZA,EAAON,KAASmyG,EAASnyG,KAC3BkzG,EAAYlzG,GAAOM,EAAON,IAG9BmzG,QAAQC,UAAU9yG,EAAM,GAAM+yG,GAAeH,gBAIxCJ,KACPF,GAAMnjD,OAAOujD,GAAiBC,SAASxX,gBCtBhC6X,GAAYnuG,EAAOouG,SACpBC,EAASpqG,KAAKuX,IAAI,GAAI4yF,UACpBnqG,KAAKwX,MAAMzb,EAAQquG,GAAUA,GAAQnxD,WC2B/C2wD,GA1BG,SACkBvX,OACfwT,KACAxT,EAAKp9F,OAAS,EAAC,CAEjB4wG,EADaxT,EAAKpiB,UAAU,GACdhzE,MAAK,UAEnB4oG,EAAM,UAEDC,GAAWD,IAkBpBoE,GAXG,SACgB/yG,OACbmzG,EAAI,UACFx0B,EAAQ+vB,GAAS1uG,UACnB2+E,EAAM5gF,OAAS,IACjBo1G,EAAI,KAAUx0B,EAAMl0E,KAAI,MAEnB0oG,GFKTC,GAAgB,SAAY3D,EAAQxiG,UAC3BqlG,GAAMR,SAASrC,EAAQxiG,IAOhComG,GAAkB,SAAYpmG,GAC5BqlG,GAAMX,WAAW1kG,IAQnBqmG,GAAiB,SAAYtzG,UACpB+yG,GAAeT,GAAM5C,UAAU1vG,KAGxCuzG,GAAgBhB,GAEhBA,SCuDAiB,YAxGqBniF,EAAKzhB,OAEpBgoC,EAEFA,cAHFhoC,EAAUA,GAAO,IAGLA,EAAQgoC,QAEX,CAAIa,SAAU,WAGjB0G,EAAO9tB,EAAImyB,UACX3sC,EAAasoC,EAAKjH,gBAAgBpnC,cAEpCwnB,EAAM7qB,EAAQE,KACdwxC,EAAKrH,QACPxf,EAAO6mB,EAAK1H,UACZhqC,EAAS0xC,EAAK5wB,YACd5gB,EAAWwxC,EAAKxH,yBAEV87D,EAAWpiF,EAAIwT,cAEnBvM,EADEm7E,EACK3qG,KAAK4qG,MAAQ5qG,KAAKoK,IAAIugG,EAASE,YAAc,KAE7C,EAETlmG,EAAM,CAAI,EAAG,GACbE,EAAW,QAGP8hG,EAAM,CACVhiG,OAAM,CACJ/J,QAAS+J,EACTiiG,UAAS,SAAW1zF,EAAO0a,OACrBu8E,SAEFA,EADEv8E,GAAK,SAAcA,EACT5tB,KAAKiE,IAAI,EAAGjE,KAAKqrC,KAAKrrC,KAAKoK,IAAIwjB,EAAM4B,MAAQxvB,KAAK8qG,MAElD,EAIZZ,IAFFh3F,EAAQpD,GAAUoD,EAAOnF,EAAU,cAEf,GAAIo8F,GAAS,IAE/BD,GAAYh3F,EAAM,GAAIi3F,IAG1BtD,YAAW,SAAW5W,SACdpa,EAAQoa,EAAIhzF,MAAK,QACF,IAAjB44E,EAAM5gF,OAAY,MAAA,IACV6F,MAAK,4BAA+Bm1F,UAGzCngF,GADI,CAAIwtC,WAAWu4B,EAAM,IAAKv4B,WAAWu4B,EAAM,KAChC,YAAe9nE,KAGzCyhB,KAAI,CACF50B,QAAS40B,EACTo3E,UAAS,SAAW7qG,UACXmuG,GAAYnuG,EAAO,IAE5B8qG,YAAap7E,QAEf5mB,SAAQ,CACNjK,QAASiK,EACT+hG,UAAS,SAAW7qG,UACXmuG,GAAYnuG,EAAO,IAE5B8qG,YAAap7E,kBAIRs/E,EAAYn9E,GACfyoB,EAAKrH,SAAWF,EAClBuH,EAAKvH,QAAQ14C,OAAOC,OAAM,GAAKu3B,EAAOkhB,gBAGxBlhB,GACdyoB,EAAKpC,UAAUrmB,EAAMjpB,iBAETipB,GACZyoB,EAAKjI,QAAQxgB,EAAM4B,mBAEH5B,GAChByoB,EAAKpI,YAAYrgB,EAAM/oB,iBAIrBwhD,EAASwW,EAAAmuC,IAAOhC,SAASrC,EAAQoE,YAE9BE,IACP5kD,EAAM,CACJ1hD,OAAQ0xC,EAAK5wB,YACb+J,KAAM6mB,EAAK1H,UACX9pC,SAAUwxC,EAAKxH,uBAInBtmB,EAAIjuB,GAAE,UAAY2wG,cAGhB1iF,EAAI7tB,GAAE,UAAYuwG,GAClBpuC,EAAAmuC,IAAOnC,WAAWkC,wjBE/EhBG,GAMQ,cAQdC,GAAA,SAAA7zG,GAMK,SACH8zG,EAAYx3G,EAAMy3G,EAAMniB,EAAcoiB,OAAtC7zG,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAOV4D,EAAKuf,SAAWkyE,EAOhBzxF,EAAK4zG,KAAOA,EAOZ5zG,EAAKsW,WAAau9F,WA7BgBC,GAAAH,EAAA9zG,GA+BtC8zG,EA/BA,CAAsC13G,GAiQtC83G,GApNA,SAAAl0G,GAGK,SACHm0G,EAAYn1F,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAyB,IAEzC7e,EAAAH,EAAAI,KAAA7D,KAAA,CACE8E,YAAa3C,WAOV01G,eAAgB,EAMrBj0G,EAAKk0G,SAAQ,WACPC,EAAqB9kG,EAAQ8kG,mBAC/B9kG,EAAQ8kG,mBAAkB,GAErB12G,EAAI,EAAGuB,EAAKm1G,EAAmB32G,OAAQC,EAAIuB,IAAMvB,EAAC,KACrD0yF,EAASgkB,EAAmB12G,GACf,mBAAN0yF,IACTA,EAAM,IAAOA,GAEfnwF,EAAKk0G,SAASx0G,KAAKywF,GACnBnwF,EAAKi0G,cACHj0G,EAAKi0G,eAAiB9jB,EAAO5zE,YAAcyD,UAO/ChgB,EAAKs1C,YAAcjmC,EAAQiH,WACvBY,GAAc7H,EAAQiH,YACtB,KAMJtW,EAAKo0G,gBAAkB,KAMvBp0G,EAAKq0G,QAAUhlG,EAAQnQ,QAAU,KAMjCc,EAAKzD,OAAS8S,EAAQ9S,OAAS8S,EAAQ9S,OAAS,cA3D1Bu3G,GAAAE,EAAAn0G,GAmExBm0G,EAAAx3G,UAAA83G,cAAa,SAACV,EAAM/yG,OASdmgC,EAREjG,EAASl6B,EAAMtE,OAAOw+B,OACtBjK,EAAG10B,KAAQ2/B,SACbzlB,EAAUla,KAAQk5C,YACjBh/B,IAEHA,EADawa,EAAImyB,UACCtL,yBAId48D,EAAOn4G,KAAQ83G,SACZz2G,EAAI,EAAGuB,EAAKu1G,EAAQ/2G,OAAQC,EAAIuB,IAAMvB,EAAC,KACxC0yF,EAASokB,EAAQ92G,GACnB0V,EAAQ4nB,OACHk5E,eAAiB9jB,EAAO5zE,YAAcyD,UAChC1e,IAAT0/B,IACFA,GAAI,IAAOwzE,aAAcj2E,OAAOxD,IAElC5nB,EAAQ6tB,OAEJzhB,EAAQnjB,KAAQq4G,iBAAiBtkB,EAAQh9E,EAAK,CAClD4L,kBAAmBzI,OAEjBiJ,GAAYA,EAAS/hB,OAAS,EAAC,MACxB62G,eACFA,QAAQ7/E,aACR6/E,QAAQhjB,YAAY9xE,SAEtB3e,cAAa,IACZ8yG,GACFD,GACAG,EACAr0F,EACAjJ,aAWV09F,EAAAx3G,UAAAk4G,mBAAkB,eACV5jF,EAAG10B,KAAQ2/B,YACbjL,EAAG,KACC6jF,EAAQv4G,KAAQG,OAAMH,KAAQG,OAASu0B,EAAIwT,mBAC5C8vE,gBAAe,CAClBvyG,EAAO8yG,EAAU/yG,EAAcxF,KAAOw4G,WAAUx4G,MAChDyF,EAAO8yG,EAAU/yG,EAAmBxF,KAAOy4G,WAAUz4G,MACrDyF,EAAO8yG,EAAU/yG,EAAkBxF,KAAOy4G,WAAUz4G,MACpDyF,EAAO8yG,EAAU/yG,EAAcxF,KAAOy4G,WAAUz4G,SAWtD43G,EAAAx3G,UAAAquD,UAAS,SAACE,SACE3G,aAAe2G,GAAM3uD,KACxBs4G,0BAEEtwD,cAAgB2G,GAAM3uD,KACxB04G,uBAEPj1G,EAAArD,UAAMquD,UAAS5qD,KAAA7D,KAAC2uD,IASlBipD,EAAAx3G,UAAAg8B,OAAM,SAAC1H,QACAgkF,uBACLj1G,EAAArD,UAAMg8B,OAAMv4B,KAAA7D,KAAC00B,QACJszB,aAAShoD,KACXs4G,sBAWTV,EAAAx3G,UAAAi4G,iBAAgB,SAACtkB,EAAQnvD,EAAM3xB,cAIxB8gF,EAAOjxE,aAAa8hB,EAAM3xB,SAEtBvG,UACA,OAOXkrG,EAAAx3G,UAAAs4G,qBAAoB,gBACTV,uBACFA,gBAAgB78F,QAAQlV,QACxB+xG,gBAAkB,OAO3BJ,EAAAx3G,UAAAo4G,WAAU,SAAC/zG,WACHk0G,EAAQl0G,EAAMm0G,aAAaD,MACxBt3G,EAAI,EAAGuB,EAAK+1G,EAAMv3G,OAAQC,EAAIuB,IAAMvB,EAAC,KACtCm2G,EAAOmB,EAAMpuE,KAAKlpC,GAClBw3G,EAAM,IAAOC,WACnBD,EAAO10G,iBACLqB,EAAcxF,KACTk4G,cAActyG,KAAI5F,KAAOw3G,SAEvBK,cACPgB,EAAOE,kBAAkBvB,GAEzBqB,EAAOG,WAAWxB,KAQxBI,EAAAx3G,UAAAq4G,WAAU,SAACh0G,GACTA,EAAMnE,kBACNmE,EAAMpE,iBACNoE,EAAMm0G,aAAaK,WAAU,QAEjCrB,EAlNA,CAA0B1oD,GAAAnoD,ujBC5BpBmyG,GAAU,CAAI,EAAG,EAAG,EAAG,GACvBC,GAAW,GAKXC,GAMO,cANPA,GAYK,YA6DXC,GAAA,SAAA51G,GAOK,SACH61G,EAAYv5G,EAAMojB,EAAUkpB,OAA5BzoC,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAOV4D,EAAKuf,SAAWA,EAOhBvf,EAAK8jD,gBAAkBrb,WAvBMktE,GAAAD,EAAA71G,GAyBjC61G,EAzBA,CAAiCz5G,GA60C9B,SACM25G,GAAe14G,EAAGC,UAClBD,EAAEwE,MAAQvE,EAAEuE,MAYlB,SACMm0G,GACPC,EACAC,EACAz/F,OAEMxP,EAAWivG,EAAYjvG,YAEzBA,EAASyV,YAAcjI,GAAmB,KACxC2yD,EAAqEngE,KAr7C1C,IAu7C3BivG,EAAYr0G,MAAoC,KAC5C25C,EAAiB1iC,KACnB0iC,IACF4rB,EAAqEA,EAClE//D,QACAyB,UAAU0yC,EAAgB/kC,QAEzB0/F,EAA0BjgG,GAC9BkxD,EAAej5C,YACfnV,GAAmBi9F,EAAkBx/F,IAEjC2/F,EACJ1tG,KAAK4N,KAAK6/F,GAA2B/uC,EAAe94C,mBAC/C8nF,EAA0BA,OAI/BhtG,EAAa4P,GAAmBi9F,EAAkBx/F,UACxDi/F,GAAY,GAAK18F,GAAmBk9F,EAAY1gG,QAAQ,GAAIiB,GAC5Di/F,GAAY,GAAK18F,GAAmBk9F,EAAY1gG,QAAQ,GAAIiB,GACrDF,GAAyBnN,EAAYssG,IAY3C,SACMW,GAAqBJ,EAAkBC,EAAaz/F,OACrDxP,EAAWivG,EAAYjvG,YAG3BA,EAASyV,YAAcjI,IA59CQ,IA69C/ByhG,EAAYr0G,MAAoC,KAE5CulE,EAAqEngE,EACnEu0C,EAAiB1iC,YACnB0iC,IACF4rB,EAAqEA,EAClE//D,QACAyB,UAAU0yC,EAAgB/kC,IAExBsC,GACLquD,EAAevrD,gBACb7C,GAAmBi9F,EAAkBx/F,IAEvCA,OAGErN,EAAa4P,GAAmBi9F,EAAkBx/F,UACxDi/F,GAAY,GAAK18F,GAAmBk9F,EAAY1gG,QAAQ,GAAIiB,GAC5Di/F,GAAY,GAAK18F,GAAmBk9F,EAAY1gG,QAAQ,GAAIiB,GACrDsC,GACLxD,GAAiBnM,EAAYssG,IAC7Bj/F,OAcJ6/F,GA/3CA,SAAAt2G,GAGK,SACHu2G,EAAY/mG,OAq3CN/H,EAjuCAiY,EApJNvf,EACEH,EAAAI,KAAA7D,KAAqDiT,IAAOjT,QAG5D4D,EAAKq2G,0BAA4Br2G,EAAKozF,qBAAqBpxF,KAAKhC,GAMhEA,EAAKsuD,WAAaj/C,EAAQg/C,UAAYh/C,EAAQg/C,UAAYT,GAO1D5tD,EAAKs2G,wBAAuB,SAAaxyD,UzFlKtB,SAAaA,OAC5Bpb,EAAoEob,EAAgBpb,qBAExFA,EAAcmkB,UACZnkB,EAAcokB,SAAWpkB,EAAcqkB,WACxCrkB,EAAc2iB,SyF8JNkrD,CAAWzyD,IzFnDA,SAAaA,UAC5BA,EAAgB3nD,MAAQgtC,GAAoBC,YyFkDTotE,CAAY1yD,IAOpD9jD,EAAKy2G,iBAAmBpnG,EAAQqnG,gBAC5BrnG,EAAQqnG,gBACR12G,EAAKs2G,wBAMTt2G,EAAK22G,uBAAyBtnG,EAAQunG,sBAClCvnG,EAAQunG,sBACRxpD,GAOJptD,EAAK62G,eAAiB,KAOtB72G,EAAK82G,gBAAkB,KAMvB92G,EAAK+2G,WAAU,CAAI,EAAG,GAQtB/2G,EAAKg3G,wBAAyB,EAM9Bh3G,EAAKi3G,uBAAyB,KAO9Bj3G,EAAKk3G,OAAM,IAAO/oB,GAMlBnuF,EAAKm3G,qBACwB71G,IAA3B+N,EAAQ+nG,eAA+B/nG,EAAQ+nG,eAAiB,GAMlEp3G,EAAKq3G,kBAAmB,EAQxBr3G,EAAKs3G,kBAAmB,EAMxBt3G,EAAKu3G,cAAa,GAOlBv3G,EAAKw3G,SAAQ,IAAOC,GAAAt0G,QAAW,CAC7BjE,OAAM,IAAMw4G,GAAAv0G,QAAY,CACtBivF,iBAAiB,EACjB5C,QAASngF,EAAQmgF,QAEnBloF,MAAO+H,EAAQ/H,MAAQ+H,EAAQ/H,OAkwC7BA,EAAQy8D,cACG1kD,EAASlS,UACjB7F,EAAMgN,MAnwCXiwD,sBAAsB,EACtBC,wBAAwB,IAQ1BxkE,EAAK23G,iBAAgB,OACV33G,EAAK43G,oBAAoB51G,KAAKhC,cACzBA,EAAK63G,yBAAyB71G,KAAKhC,cACnCA,EAAK63G,yBAAyB71G,KAAKhC,WACtCA,EAAK83G,sBAAsB91G,KAAKhC,cAC7BA,EAAK+3G,yBAAyB/1G,KAAKhC,mBAC9BA,EAAKg4G,8BAA8Bh2G,KAAKhC,gBAC3CA,EAAKi4G,2BAA2Bj2G,KAAKhC,UAC3CA,EAAKk4G,qBAAqBl2G,KAAKhC,sBACnBA,EAAKm4G,iCAAiCn2G,KAAKhC,IAOnEA,EAAKq0G,QAAU,KAKfr0G,EAAKo4G,cAAgB,KAGjB/oG,EAAQkQ,SACVA,EAAWlQ,EAAQkQ,SACVlQ,EAAQnQ,SACjBc,EAAKq0G,QAAUhlG,EAAQnQ,OACvBqgB,EAAQ,IAAOmoB,GAAAvkC,QAAWnD,EAAKq0G,QAAQp7E,eACvCj5B,EAAKq0G,QAAQ9zG,iBACXuvF,GACA9vF,EAAKq4G,iBAAiBr2G,KAAKhC,IAE7BA,EAAKq0G,QAAQ9zG,iBACXuvF,GACA9vF,EAAKs4G,oBAAoBt2G,KAAKhC,MAG7Buf,EAAQ,MAAA,IACDlc,MAAK,wEAIbgM,EAAQkpG,eACVv4G,EAAKo4G,cAAgB/oG,EAAQkpG,cAO/Bv4G,EAAKw4G,UAAYj5F,EAEjBvf,EAAKw4G,UAAUjhG,QAAQvX,EAAKy4G,YAAYz2G,KAAKhC,IAC7CA,EAAKw4G,UAAUj4G,iBACbolC,GACA3lC,EAAK04G,kBAAkB12G,KAAKhC,IAE9BA,EAAKw4G,UAAUj4G,iBACbolC,GACA3lC,EAAK24G,qBAAqB32G,KAAKhC,IAOjCA,EAAK44G,kBAAoB,KAMzB54G,EAAKkrD,OAAM,CAAI,EAAG,GAKlBlrD,EAAK64G,oBACuBv3G,IAA1B+N,EAAQypG,eACH94G,EAAKo4G,cACN/oG,EAAQypG,uBAlNGnD,GAAAS,EAAAv2G,GAyNnBu2G,EAAA55G,UAAAi8G,YAAW,SAACp5F,OACJvY,EAAWuY,EAAQhY,iBACrBP,EAAQ,KACJiyG,EAAM38G,KAAQu7G,iBAAiB7wG,EAASyV,WAC1Cw8F,GACFA,EAAO15F,EAASvY,OAGdgqB,EAAG10B,KAAQ2/B,SACbjL,GAAOA,EAAIi0B,cAAU3oD,KAAWgoD,aAAShoD,KACtC48G,sBAAqB58G,KAAM26G,WAAYjmF,GAE9CzR,EAAQ9e,iBAAiBqB,EAAgBxF,KAAOi6G,4BAQlDD,EAAA55G,UAAAy8G,oBAAmB,SAACn4G,EAAKo4G,YACbjC,uBAAsB,MACzBA,uBAAsB,IAAOvvE,GAAAvkC,gBAC5Boc,EAAQnjB,KAAQ66G,uBAAuBvwE,WACpCjpC,EAAI,EAAGuB,EAAKk6G,EAAS17G,OAAQC,EAAIuB,IAAMvB,UACxC4X,EAAU6jG,EAASz7G,GAChBg2B,EAAI,EAAG0lF,EAAK9jG,EAAQ7X,OAAQi2B,EAAI0lF,IAAM1lF,EAAC,KACxCpU,EAAUhK,EAAQoe,GAAGpU,QACvBA,IAAyC,IAA9BE,EAAS5e,QAAQ0e,IAAejjB,KACxC66G,uBAAuBv3G,KAAK2f,QAKlCze,cAAa,IACZ60G,GACFD,GAA2Bp5G,KACtB66G,uBACLn2G,MAURs1G,EAAA55G,UAAA48G,eAAc,SAAC/5F,QACRg6F,0BAA0Bh6F,QAEtBw3F,gBAAiD,IAAnCz6G,KAASo8G,UAAUhwF,mBACnCgvF,SAAS1+E,YAAY66D,cAAav3F,KAAMy6G,qBACxCA,eAAiB,MAExBx3F,EAAQje,oBACNQ,EAAgBxF,KACXi6G,4BAQTD,EAAA55G,UAAA68G,0BAAyB,SAACh6F,OAClBi6F,EAAKl9G,KAAQ86G,OAEbqC,EAAa,GACnBD,EAAM/hG,SAGD,SACOooB,GACJtgB,IAAYsgB,EAAKtgB,SACnBk6F,EAAc75G,KAAKigC,cAIhBliC,EAAI87G,EAAc/7G,OAAS,EAAGC,GAAK,IAAKA,EAAC,SAC1C+7G,EAAeD,EAAc97G,GAC1B2b,EAAChd,KAAQm7G,cAAc/5G,OAAS,EAAG4b,GAAK,IAAKA,EAAChd,KAC5Cm7G,cAAcn+F,GAAG,KAAOogG,GAAYp9G,KACtCm7G,cAAc51G,OAAOyX,EAAG,GAGjCkgG,EAAMvyE,OAAOyyE,KAUjBpD,EAAA55G,UAAAquD,UAAS,SAACE,QACC8rD,iBAAmB9rD,SACrBysD,SAAS1+E,YAAY66D,cAAav3F,KAAMy6G,qBACxCA,eAAiB,MAExBh3G,EAAArD,UAAMquD,UAAS5qD,KAAA7D,KAAC2uD,IASlBqrD,EAAA55G,UAAAg8B,OAAM,SAAC1H,QACA0mF,SAASh/E,OAAO1H,GACrBjxB,EAAArD,UAAMg8B,OAAMv4B,KAAA7D,KAAC00B,IAQfslF,EAAA55G,UAAAi9G,WAAU,uBACIjC,UAOdpB,EAAA55G,UAAA67G,iBAAgB,SAACx3G,GACXA,EAAMwe,SAAOjjB,KACVo8G,UAAU94G,KAAKmB,EAAMwe,UAQ9B+2F,EAAA55G,UAAA87G,oBAAmB,SAACz3G,GACdA,EAAMwe,SAAOjjB,KACVo8G,UAAUzxE,OAAOlmC,EAAMwe,UAQhC+2F,EAAA55G,UAAAk8G,kBAAiB,SAAC53G,QACX23G,YAAoC33G,EAAImkC,UAO/CmxE,EAAA55G,UAAA42F,qBAAoB,SAACtyF,YACTw2G,iBAAgB,KAClBj4F,EAAkCve,EAAIvE,YACvC68G,eAAe/5F,QACfo5F,YAAYp5F,KAQrB+2F,EAAA55G,UAAAm8G,qBAAoB,SAAC73G,OACbue,EAAkCve,EAAImkC,aACvCm0E,eAAe/5F,IAQtB+2F,EAAA55G,UAAAo7G,oBAAmB,SAACv4F,EAASvY,OACrBuD,EAAcvD,EAAS2a,iBAGvBs0F,EAAW,CACf12F,QAASA,EACTvY,SAAUA,EACVuO,QAAO,CAAGhL,EAAaA,SAGpB6sG,OAAOr9C,OAAO/yD,EAAS0J,YAAaulG,IAQ3CK,EAAA55G,UAAAu7G,yBAAwB,SAAC14F,EAASvY,WAC1ByjB,EAASzjB,EAAS2a,iBACfhkB,EAAI,EAAGuB,EAAKurB,EAAO/sB,OAAQC,EAAIuB,IAAMvB,EAAC,KACvC4M,EAAckgB,EAAO9sB,GAGrBs4G,EAAW,CACf12F,QAASA,EACTvY,SAAUA,EACV2yF,MAAK,CAAGh8F,GACRiE,MAAOjE,EACP4X,QAAO,CAAGhL,EAAaA,SAGpB6sG,OAAOr9C,OAAO/yD,EAAS0J,YAAaulG,KAS7CK,EAAA55G,UAAAq7G,yBAAwB,SAACx4F,EAASvY,WAC1BuD,EAAcvD,EAAS2a,iBACpBhkB,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAS,EAAGC,EAAIuB,IAAMvB,EAAC,KAChD4X,EAAUhL,EAAYO,MAAMnN,EAAGA,EAAI,GAGnCs4G,EAAW,CACf12F,QAASA,EACTvY,SAAUA,EACVpF,MAAOjE,EACP4X,QAASA,QAGN6hG,OAAOr9C,OAAOzvD,GAAeiL,GAAU0gG,KAShDK,EAAA55G,UAAAw7G,8BAA6B,SAAC34F,EAASvY,WAC/BmzE,EAAQnzE,EAAS2a,iBACdrI,EAAI,EAAGoK,EAAKy2D,EAAMz8E,OAAQ4b,EAAIoK,IAAMpK,UACrC/O,EAAc4vE,EAAM7gE,GACjB3b,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAS,EAAGC,EAAIuB,IAAMvB,EAAC,KAChD4X,EAAUhL,EAAYO,MAAMnN,EAAGA,EAAI,GAGnCs4G,EAAW,CACf12F,QAASA,EACTvY,SAAUA,EACV2yF,MAAK,CAAGrgF,GACR1X,MAAOjE,EACP4X,QAASA,QAGN6hG,OAAOr9C,OAAOzvD,GAAeiL,GAAU0gG,KAUlDK,EAAA55G,UAAAs7G,sBAAqB,SAACz4F,EAASvY,WACvB4yG,EAAQ5yG,EAAS2a,iBACdrI,EAAI,EAAGoK,EAAKk2F,EAAMl8G,OAAQ4b,EAAIoK,IAAMpK,UACrC/O,EAAcqvG,EAAMtgG,GACjB3b,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAS,EAAGC,EAAIuB,IAAMvB,EAAC,KAChD4X,EAAUhL,EAAYO,MAAMnN,EAAGA,EAAI,GAGnCs4G,EAAW,CACf12F,QAASA,EACTvY,SAAUA,EACV2yF,MAAK,CAAGrgF,GACR1X,MAAOjE,EACP4X,QAASA,QAGN6hG,OAAOr9C,OAAOzvD,GAAeiL,GAAU0gG,KAUlDK,EAAA55G,UAAAy7G,2BAA0B,SAAC54F,EAASvY,WAC5B6nB,EAAW7nB,EAAS2a,iBACjB9H,EAAI,EAAGwyE,EAAKx9D,EAASnxB,OAAQmc,EAAIwyE,IAAMxyE,UACxC+/F,EAAQ/qF,EAAShV,GACdP,EAAI,EAAGoK,EAAKk2F,EAAMl8G,OAAQ4b,EAAIoK,IAAMpK,UACrC/O,EAAcqvG,EAAMtgG,GACjB3b,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAS,EAAGC,EAAIuB,IAAMvB,EAAC,KAChD4X,EAAUhL,EAAYO,MAAMnN,EAAGA,EAAI,GAGnCs4G,EAAW,CACf12F,QAASA,EACTvY,SAAUA,EACV2yF,MAAK,CAAGrgF,EAAGO,GACXjY,MAAOjE,EACP4X,QAASA,QAGN6hG,OAAOr9C,OAAOzvD,GAAeiL,GAAU0gG,KAiBpDK,EAAA55G,UAAA07G,qBAAoB,SAAC74F,EAASvY,OACtBuD,EAAcvD,EAASknB,YAGvB2rF,EAAiB,CACrBt6F,QAASA,EACTvY,SAAUA,EACVpF,MAhrBsB,EAirBtB2T,QAAO,CAAGhL,EAAaA,IAInBuvG,EAAwB,CAC5Bv6F,QAASA,EACTvY,SAAUA,EACVpF,MAjrB6B,EAkrB7B2T,QAAO,CAAGhL,EAAaA,IAGnBwvG,EAAe,CAAIF,EAAmBC,GAC5CD,EAAkBE,gBAAkBA,EACpCD,EAAyBC,gBAAkBA,OACtC3C,OAAOr9C,OAAO/tD,GAAazB,GAAcsvG,OAC1C1yC,EAAuEngE,EACrEu0C,EAAiB1iC,QACnB0iC,GAAcj/C,KAAS2/B,SAAM,KACzBzlB,EAAUla,KAAQ2/B,SAASknB,UAAUtL,gBAC3CsvB,EAAiBA,EACd//D,QACAyB,UAAU0yC,EAAgB/kC,GAC7B2wD,EAAiBj3C,GAAA8pF,WACqC7yC,GACpDt+D,UAAU2N,EAAY+kC,QAErB67D,OAAOr9C,OAAOoN,EAAez2D,YAAaopG,IAQjDxD,EAAA55G,UAAA27G,iCAAgC,SAAC94F,EAASvY,WAClCkW,EAAalW,EAAS+W,qBACnBpgB,EAAI,EAAGA,EAAIuf,EAAWxf,SAAUC,EAAC,KAClCs8G,EAAW/8F,EAAWvf,IAE5Bs7G,EADY38G,KAAQu7G,iBAAiBoC,EAASx9F,YACvC8C,EAAS06F,KAWpB3D,EAAA55G,UAAAw9G,6BAA4B,SAAC3vG,EAAakV,EAAUvC,OAC9Ci9F,EAAa79G,KAAQy6G,eACpBoD,EAKcA,EAAc5yG,cACtB0a,eAAe1X,IALxB4vG,EAAa,IAAO9nF,EAAAhvB,QAAO,IAAKknB,GAAAlnB,QAAMkH,SACjCwsG,eAAiBoD,OACjBzC,SAAS1+E,YAAYi6D,WAAWknB,WAKvCA,EAAcp1G,IAAG,WAAa0a,GAC9B06F,EAAcp1G,IAAG,aAAemY,GACzBi9F,GAQT7D,EAAA55G,UAAA0E,YAAW,SAAC4iD,UACLA,EAAgBpb,qBAGhBkwE,kBAAoB90D,EAItBA,EAAgBhzB,IAAImyB,UAAUzK,kBAC/BsL,EAAgB3nD,MAAQgtC,GAAoBK,aAAWptC,KACjD4vD,wBAAsB5vD,KAEvBgwC,mBAAmB0X,QAEjB+yD,gBAAcz6G,KAASq6G,iBAAiB3yD,KAO7CyI,IALAzI,EAAgB3nD,MAAQgtC,GAAoBC,cAAWhtC,KACjD46G,yBAEC56G,KAAQ89G,eAMfp2D,EAAgB3nD,MAAQgtC,GAAoBC,cAAWhtC,KACpD46G,wBAAyB,GAGzBn3G,EAAArD,UAAM0E,YAAWjB,KAAA7D,KAAC0nD,KAAqByI,OAvB1CA,GA8BN6pD,EAAA55G,UAAAovD,gBAAe,SAAC9qD,QACTk2G,wBAAyB,OACzBiC,oBAAoBn4G,EAAG1E,KAAOm7G,uBAE7B4C,EAAM,CACVr5G,EAAImI,WAAW,GAAC7M,KAAS8uD,OAAO,GAChCpqD,EAAImI,WAAW,GAAC7M,KAAS8uD,OAAO,IAE5B3rC,EAAQ,GACRvC,EAAU,GACPvf,EAAI,EAAGuB,EAAE5C,KAAQm7G,cAAc/5G,OAAQC,EAAIuB,IAAMvB,EAAC,KACnD28G,EAAWh+G,KAAQm7G,cAAc95G,GACjCs4G,EAAcqE,EAAY,GAC1B/6F,EAAU02F,EAAY12F,SACM,IAA9BE,EAAS5e,QAAQ0e,IACnBE,EAAS7f,KAAK2f,OAEVvY,EAAWivG,EAAYjvG,UACQ,IAAjCkW,EAAWrc,QAAQmG,IACrBkW,EAAWtd,KAAKoH,WAEZ2yF,EAAQsc,EAAYtc,MACtBpvF,OAAW,EACTgL,EAAU0gG,EAAY1gG,QACtB3T,EAAQ04G,EAAY,GAEnBD,EAAO38G,OAASsJ,EAASua,aAC9B84F,EAAOz6G,KAAK2V,EAAQ3T,GAAOy4G,EAAO38G,gBAG5BsJ,EAASyV,gBACVjI,GACHjK,EAAc8vG,EACd9kG,EAAQ,GAAK8kG,EACb9kG,EAAQ,GAAK8kG,aAEV7lG,IACHjK,EAAcvD,EAAS2a,kBACXs0F,EAAYr0G,OAASy4G,EACjC9kG,EAAQ,GAAK8kG,EACb9kG,EAAQ,GAAK8kG,aAEV7lG,IACHjK,EAAcvD,EAAS2a,kBACXs0F,EAAYr0G,MAAQA,GAASy4G,EACzC9kG,EAAQ3T,GAASy4G,aAEd7lG,QAKAA,IACHjK,EAAcvD,EAAS2a,kBACXg4E,EAAM,IAAIsc,EAAYr0G,MAAQA,GAASy4G,EACnD9kG,EAAQ3T,GAASy4G,aAEd7lG,IACHjK,EAAcvD,EAAS2a,kBACXg4E,EAAM,IAAIA,EAAM,IAAIsc,EAAYr0G,MAAQA,GAASy4G,EAC7D9kG,EAAQ3T,GAASy4G,aAEd7lG,MACHe,EAAQ,GAAK8kG,EACb9kG,EAAQ,GAAK8kG,EA31BK,IA41BdpE,EAAYr0G,WACT41G,kBAAmB,EACxBxwG,EAAS01C,UAAU29D,QACd7C,kBAAmB,YAGnBA,kBAAmB,MAClBhhG,EAAaxV,EAAIgwB,IAAImyB,UAAUtL,gBACjC9iC,EAASqB,GACX2C,GAAmB/R,EAASknB,YAAa1X,GACzCuC,GAAmBshG,EAAQ7jG,IAEvB+kC,EAAiB1iC,QACnB0iC,EAAc,KACV4rB,EAAiBngE,EACpBI,QACAyB,UAAU0yC,EAAgB/kC,GAC7B2wD,EAAexF,UAAU5sD,GACzBA,EAASoyD,EACNt+D,UAAU2N,EAAY+kC,GACtBltB,YAELrnB,EAAS26D,UAAU5sD,QACdyiG,kBAAmB,GAO1BjtG,GAAWjO,KACRi+G,wBAAwBvzG,EAAUuD,QAGtC2vG,6BAA6BG,EAAQ56F,EAAUvC,IAQtDo5F,EAAA55G,UAAAmvD,gBAAe,SAAC7qD,YACJwtD,WAAWxtD,GAAG,OACf,MAEHw5G,EAAkBx5G,EAAImI,gBACvB+vG,sBAAsBl4G,EAAIo4B,MAAOp4B,EAAIgwB,IAAKwpF,QAC1C/C,cAAc/5G,OAAS,OACvBy5G,uBAAyB,SACxBgD,EAAa79G,KAAQy6G,kBACvBoD,EAAa,KACT3jG,EAAaxV,EAAIgwB,IAAImyB,UAAUtL,gBAC/B4iE,EAAc,GACdJ,EAASF,EAAc5yG,cAAcoa,iBACrC+4F,EAAepwG,GAAc,CAAE+vG,IAC/BM,EAAkBr+G,KAAQ86G,OAAOvoB,YAAY6rB,GAC7CE,EAAiB,GACvBD,EAAmBlvF,KAAKqqF,YACfn4G,EAAI,EAAGuB,EAAKy7G,EAAmBj9G,OAAQC,EAAIuB,IAAMvB,EAAC,KACnDk9G,EAAmBF,EAAmBh9G,GACtC4X,EAAUslG,EAAiBtlG,QAC7Bo5E,EAAMlrF,EAAOo3G,EAAiB7zG,UAC5B2yF,EAAQkhB,EAAiBlhB,SAC3BA,IACFhL,GAAG,IAAUgL,EAAMvvF,KAAI,MAEpBwwG,EAAkBjsB,KACrBisB,EAAkBjsB,GAAG,IAAQxwF,MAAM,IAInC08G,EAAiB7zG,SAASyV,YAAcjI,IA75Bf,IA85BzBqmG,EAAiBj5G,UAkBjB8T,GAAiBH,EAAQ,GAAI8kG,IAC5BO,EAAkBjsB,GAAK,OAQxBj5E,GAAiBH,EAAQ,GAAI8kG,IAC5BO,EAAkBjsB,GAAK,GAmBxBlrF,EAAO8R,KAAOjZ,KAAU06G,kBACvB4D,EAAkBjsB,GAAK,KACvBisB,EAAkBjsB,GAAK,IAACryF,KACpBu6G,uBAAuB71G,IAE5By5G,EAAe76G,KAAKi7G,YApBjBA,EAAiB7zG,SAASyV,YAAcjI,IACvCqmG,EAAiB7zG,SAASyV,YACxBjI,KACJomG,EAAkBjsB,GAAK,IACa,IAApCisB,EAAkBjsB,GAAK,GAAG/sF,MAAW,cAKlC61G,cAAc73G,KAAI,CAAEi7G,EAAkB,IAC3CD,EAAkBjsB,GAAK,GAAKksB,YArBvBpD,cAAc73G,KAAI,CAAEi7G,EAAkB,IAC3CD,EAAkBjsB,GAAK,GAAKksB,OAd1BnlG,GANoB0gG,GACpBoE,EACAK,EACArkG,GAGgC6jG,KAC/BO,EAAkBjsB,GAAK,UAEnB8oB,cAAc73G,KAAI,CAAEi7G,EAAkB,IAC3CD,EAAkBjsB,GAAK,GAAKksB,GA4C9BJ,EAAe/8G,QAAMpB,KAClB68G,oBAAoBn4G,EAAG,CAAGy5G,YAGxBnhG,EAAImhG,EAAe/8G,OAAS,EAAG4b,GAAK,IAAKA,EAAChd,KAC5Cw+G,cAAcL,EAAenhG,GAAI+gG,gBAG5BtD,gBAQhBT,EAAA55G,UAAAsvD,cAAa,SAAChrD,WACHrD,EAACrB,KAAQm7G,cAAc/5G,OAAS,EAAGC,GAAK,IAAKA,EAAC,KAC/Cs4G,EAAW35G,KAAQm7G,cAAc95G,GAAG,GACpCqJ,EAAWivG,EAAYjvG,YACzBA,EAASyV,YAAcjI,GAAmB,KAEtCjK,EAAcvD,EAASknB,YACvB2rF,EAAoB5D,EAAY8D,gBAAgB,GAChDD,EAA2B7D,EAAY8D,gBAAgB,GAC7DF,EAAkBtkG,QAAQ,GAAKhL,EAC/BsvG,EAAkBtkG,QAAQ,GAAKhL,EAC/BuvG,EAAyBvkG,QAAQ,GAAKhL,EACtCuvG,EAAyBvkG,QAAQ,GAAKhL,OACjC6sG,OAAOtoD,OAAO9iD,GAAazB,GAAcsvG,OAC1C1yC,EAAiBngE,EACfu0C,EAAiB1iC,QACnB0iC,EAAc,KACV/kC,EAAaxV,EAAIgwB,IAAImyB,UAAUtL,gBACrCsvB,EAAiBA,EACd//D,QACAyB,UAAU0yC,EAAgB/kC,GAC7B2wD,EAAiBj3C,GAAA8pF,WAAW7yC,GAAgBt+D,UAC1C2N,EACA+kC,QAGC67D,OAAOtoD,OACVqY,EAAez2D,YACfopG,aAGG1C,OAAOtoD,OAAOxkD,GAAe2rG,EAAY1gG,SAAU0gG,eAGnDkB,8BACFr2G,cAAa,IACZ60G,GACFD,GAAyBp5G,KACpB66G,uBACLn2G,SAGCm2G,uBAAyB,OAEzB,GAOTb,EAAA55G,UAAA4vC,mBAAkB,SAACtrC,QACZi2G,WAAaj2G,EAAIo4B,WACjB8/E,sBAAsBl4G,EAAIo4B,MAAOp4B,EAAIgwB,IAAKhwB,EAAImI,aASrDmtG,EAAA55G,UAAAw8G,sBAAqB,SAAC9/E,EAAOpI,EAAK+pF,OAU5BC,EAAOC,EAVb/6G,EAAA5D,KACQk+G,EAAkBO,GAAkB/pF,EAAImY,uBAAuB/P,GAC/D5iB,EAAawa,EAAImyB,UAAUtL,wBASxBygE,cAAa,KACdv9E,EACqB,iBADVz+B,KACHg8G,cAA0B,SACjChiF,UAAUA,IAAUp2B,EAAKo4G,oBAC1B92G,EACNwvB,EAAIsxB,sBACFlpB,GAAK,SACJ7Z,EAAS+W,EAAOtvB,OACfA,EAAWA,GAAYuY,EAAQhY,eAClBkV,YAAcjI,GAAkB,CAC3CymG,EAAmBj0G,MACbmC,EAAanC,EAAS2a,iBAC5Bq5F,EAAK,EAEDz7F,QAAOA,EACPvY,SAAQA,EACRuO,QAAO,CAAGpM,EAAYA,YAIrB,KAER4xB,YAAWA,QAGXigF,EAAK,KAMF9+B,EAAMjjE,GACVtO,GANiBuO,GACjBlN,GAAawuG,EAAiBhF,IAC9Bh/F,GAEawa,EAAImyB,UAAUlM,gBAAa36C,KAAU+6G,gBAEjB7B,IACjCh/F,GAEFwkG,EAAK1+G,KAAQ86G,OAAOvoB,YAAY3S,MAG9B8+B,GAASA,EAAMt9G,OAAS,EAAC,KACrBmiC,EAAOm7E,EAAMvvF,MA/CD,SAAaruB,EAAGC,UAEhC04G,GAAsCyE,EAAiBp9G,EAAGoZ,GAC1Du/F,GAAsCyE,EAAiBn9G,EAAGmZ,MA4CpB,GAClC0kG,EAAiBr7E,EAAKtqB,QACxB8kG,EAASjE,GAAqBoE,EAAiB36E,EAAMrpB,GACnD2kG,EAAcnqF,EAAIuyB,uBAAuB82D,GAC3Ce,EAAOhlG,GAAmBgjB,EAAO+hF,MACjCF,GAAoBG,GAAI9+G,KAAS+6G,gBAAe,CACZ,IAChCgE,EAAc,MACpBA,EAAe53G,EAAOy3G,KAAmB,OAE/BnC,sBACH3tD,OAAO,GAAKivD,EAAO,GAAKG,EAAgB,QACxCpvD,OAAO,GAAKivD,EAAO,GAAKG,EAAgB,IAG7C36E,EAAK74B,SAASyV,YAAcjI,IArmCH,IAsmCzBqrB,EAAKj+B,WAEA21G,kBAAmB,OACnB2C,6BACHG,EAAM,CACLx6E,EAAKtgB,UACLsgB,EAAK74B,oBAGFs0G,EAAStqF,EAAIuyB,uBAAuB23D,EAAe,IACnDK,EAASvqF,EAAIuyB,uBAAuB23D,EAAe,IACnDM,EAAevlG,GAA0BklG,EAAaG,GACtDG,EAAexlG,GAA0BklG,EAAaI,GAC5DH,EAAO3yG,KAAK4N,KAAK5N,KAAKgE,IAAI+uG,EAAcC,SACnClE,iBAAmB6D,GAAI9+G,KAAS+6G,qBAC5BE,mBACP8C,EACEmB,EAAeC,EACXP,EAAe,GACfA,EAAe,SAElBhB,6BACHG,EAAM,CACLx6E,EAAKtgB,UACLsgB,EAAK74B,eAEFkW,EAAU,GAChBA,EAAWzZ,EAAOo8B,EAAK74B,YAAa,UAC3BrJ,EAAI,EAAGuB,EAAK87G,EAAMt9G,OAAQC,EAAIuB,IAAMvB,EAAC,KACtC4X,EAAUylG,EAAMr9G,GAAG4X,aAEtBG,GAAiBwlG,EAAe,GAAI3lG,EAAQ,KAC3CG,GAAiBwlG,EAAe,GAAI3lG,EAAQ,KAC7CG,GAAiBwlG,EAAe,GAAI3lG,EAAQ,KAC3CG,GAAiBwlG,EAAe,GAAI3lG,EAAQ,eAExCmmG,EAAcj4G,EAAOu3G,EAAMr9G,GAAGqJ,UAC9B00G,KAAex+F,IACnBA,EAAWw+F,IAAe,EAC1BL,EAAe53G,EAAO8R,KAAY,qBAQrCyhG,gBAAkBqE,SAIlBtE,sBACFW,SAAS1+E,YAAY66D,cAAav3F,KAAMy6G,qBACxCA,eAAiB,OAS1BT,EAAA55G,UAAAo+G,cAAa,SAAC7E,EAAaoE,WAMrB9vG,EALEgL,EAAU0gG,EAAY1gG,QACtBgK,EAAU02F,EAAY12F,QACtBvY,EAAWivG,EAAYjvG,SACvB2yF,EAAQsc,EAAYtc,MACpB/3F,EAAQq0G,EAAYr0G,MAGnBy4G,EAAO38G,OAASsJ,EAASua,aAC9B84F,EAAOz6G,KAAK,UAGNoH,EAASyV,gBACVjI,QAIAA,IACHjK,EAAcvD,EAAS2a,kBACXg4E,EAAM,IAAI93F,OAAOD,EAAQ,EAAG,EAAGy4G,cAExC7lG,IACHjK,EAAcvD,EAAS2a,kBACXg4E,EAAM,IAAIA,EAAM,IAAI93F,OAAOD,EAAQ,EAAG,EAAGy4G,cAElD7lG,IACHjK,EAAcvD,EAAS2a,kBACX9f,OAAOD,EAAQ,EAAG,EAAGy4G,6BAMhCE,wBAAwBvzG,EAAUuD,OACjCoxG,EAAKr/G,KAAQ86G,OACnBuE,EAAM10E,OAAOgvE,QACR2F,sBAAsB50G,EAAUpF,EAAO+3F,EAAO,GAEzB,IACpBkiB,EAAc,CAClBtmG,QAAO,CAAGA,EAAQ,GAAI8kG,GACtB96F,QAASA,EACTvY,SAAUA,EACV2yF,MAAOA,EACP/3F,MAAOA,GAGT+5G,EAAM5hD,OAAOzvD,GAAeuxG,EAAetmG,SAAUsmG,QAChDpE,cAAc73G,KAAI,CAAEi8G,EAAgB,IAEf,IACpBC,EAAe,CACnBvmG,QAAO,CAAG8kG,EAAQ9kG,EAAQ,IAC1BgK,QAASA,EACTvY,SAAUA,EACV2yF,MAAOA,EACP/3F,MAAOA,EAAQ,GAGjB+5G,EAAM5hD,OAAOzvD,GAAewxG,EAAgBvmG,SAAUumG,QACjDrE,cAAc73G,KAAI,CAAEk8G,EAAiB,SACrC5E,wBAAyB,GAQhCZ,EAAA55G,UAAA09G,YAAW,mBAEFtB,mBAAiBx8G,KACjBw8G,kBAAkBz8G,MAAQgtC,GAAoBI,YAAW,KAExDzoC,EAAG1E,KAAQw8G,uBACZK,oBAAoBn4G,EAAG1E,KAAOm7G,mBAC7BhiB,EAAOn5F,KAAQy/G,4BAChBj7G,cAAa,IACZ60G,GACFD,GAAyBp5G,KACpB66G,uBACLn2G,SAGCm2G,uBAAyB,KACvB1hB,SAEF,GAQT6gB,EAAA55G,UAAAq/G,cAAa,eAIPC,EAAWzxG,EAAa+vG,EAAatzG,EAAUrJ,EAAGiE,EAAOghC,EACzDq5E,EAAUhwF,EAAOgqF,EAAatnB,EAJ5ButB,EAAY5/G,KAAQm7G,cACpB0E,EAAiB,GACnBC,GAAU,MAGTz+G,EAAIu+G,EAAax+G,OAAS,EAAGC,GAAK,IAAKA,EAG1CgxF,EAAMlrF,GADNwyG,GADAqE,EAAc4B,EAAav+G,IACD,IACD4hB,SACrB02F,EAAYtc,QAEdhL,GAAG,IAAUsnB,EAAYtc,MAAMvvF,KAAI,MAE/BukF,KAAOwtB,IACXA,EAAkBxtB,GAAG,IAEA,IAAnB2rB,EAAY,IACd6B,EAAkBxtB,GAAK1iE,MAAQgqF,EAC/BkG,EAAkBxtB,GAAK/sF,MAAQq0G,EAAYr0G,OAChB,GAAlB04G,EAAY,KACrB6B,EAAkBxtB,GAAK/rD,KAAOqzE,EAC9BkG,EAAkBxtB,GAAK/sF,MAAQq0G,EAAYr0G,MAAQ,OAGlD+sF,KAAOwtB,EAAiB,QAC3BlwF,EAAQkwF,EAAkBxtB,GAAK1iE,MAC/B2W,EAAOu5E,EAAkBxtB,GAAK/rD,MAE9Bq5E,GADAr6G,EAAQu6G,EAAkBxtB,GAAK/sF,OACZ,GAMJ,IACbq6G,EAAW,GAIbD,EADAzxG,GADAvD,GAPEivG,OADWz0G,IAATohC,EACYA,EAEA3W,GAKOjlB,UACA2a,iBAEvBy6F,GAAU,EACFp1G,EAASyV,gBACVjI,GACCjK,EAAY0rG,EAAYtc,MAAM,IAAIj8F,OAAS,IAC7C6M,EAAY0rG,EAAYtc,MAAM,IAAI93F,OAAOD,EAAO,GAChDw6G,GAAU,cAGT5nG,GACCjK,EAAY7M,OAAS,IACvB6M,EAAY1I,OAAOD,EAAO,GAC1Bw6G,GAAU,cAGT5nG,GACHwnG,EAAYA,EAAU/F,EAAYtc,MAAM,IACvB,KACdnlF,IACHwnG,EAAYA,EAAU/F,EAAYtc,MAAM,KAC1Bj8F,OAAS,IACjBkE,GAASo6G,EAAUt+G,OAAS,IAC9BkE,EAAQ,GAEVo6G,EAAUn6G,OAAOD,EAAO,GACxBw6G,GAAU,EACI,IAAVx6G,IAEFo6G,EAAU/3F,MACV+3F,EAAUp8G,KAAKo8G,EAAU,IACzBC,EAAWD,EAAUt+G,OAAS,OAQlC0+G,EAAO,MACJ7B,wBAAwBvzG,EAAUuD,OACjC6uG,EAAQ,WACD53G,IAATohC,SACGw0E,OAAOnwE,OAAOrE,GACnBw2E,EAASx5G,KAAKgjC,EAAKrtB,QAAQ,UAEf/T,IAAVyqB,SACGmrF,OAAOnwE,OAAOhb,GACnBmtF,EAASx5G,KAAKqsB,EAAM1W,QAAQ,UAEjB/T,IAATohC,QAAgCphC,IAAVyqB,EAAmB,CACjB,IACpB4vF,EAAc,CAClBliB,MAAOsc,EAAYtc,MACnBp6E,QAAS02F,EAAY12F,QACrBvY,SAAUivG,EAAYjvG,SACtBpF,MAAOq6G,EACP1mG,QAAS6jG,QAGNhC,OAAOr9C,OACVzvD,GAAeuxG,EAAetmG,SAC9BsmG,QAGCD,sBAAsB50G,EAAUpF,EAAOq0G,EAAYtc,OAAO,QACtDod,sBACFW,SAAS1+E,YAAY66D,cAAav3F,KAAMy6G,qBACxCA,eAAiB,MAExBmF,EAAax+G,OAAS,UAGnB0+G,GAQT9F,EAAA55G,UAAA69G,wBAAuB,SAACvzG,EAAUuD,QAC3BitG,kBAAmB,EACxBxwG,EAASib,eAAe1X,QACnBitG,kBAAmB,GAU1BlB,EAAA55G,UAAAk/G,sBAAqB,SAAC50G,EAAUpF,EAAO+3F,EAAOphD,QACvC6+D,OAAOpoB,gBACVhoF,EAAS0J,aAAS,SACRmqG,GAENA,EAAiB7zG,WAAaA,SACnBxF,IAAVm4F,QAC4Bn4F,IAA3Bq5G,EAAiBlhB,OACjBt7F,EAAOw8G,EAAiBlhB,MAAOA,KACjCkhB,EAAiBj5G,MAAQA,IAEzBi5G,EAAiBj5G,OAAS22C,OAKpC+9D,EAvxCA,CAAqBznD,GAAAxrD,urBC5KrBg5G,GAAA,SAAAt8G,GAOK,SACHu8G,EAAYlvG,EAAQ0H,EAAYoN,OAAhChiB,EACEH,EAAAI,KAAA7D,OAAAA,aACmBkF,IAAf0gB,QAA2C1gB,IAAfsT,EAC9B5U,EAAK8hB,mBAAmBE,EAAY9U,YAE9B2H,EAASD,GAA0B,EACzC5U,EAAKq8G,mBAAmBnvG,EAAQ2H,EAAQmN,mBAdzBs6F,GAAAF,EAAAv8G,GAuBnBu8G,EAAA5/G,UAAA0K,MAAK,eACG0mB,EAAM,IAAOwuF,EAAMhgH,KAClB4P,gBAAgBpB,aACrBtJ,EAASlF,KACJ6kB,eAEP2M,EAAO7oB,gBAAe3I,MACfwxB,GAUTwuF,EAAA5/G,UAAA6e,eAAc,SAACnS,EAAGC,EAAGmS,EAAcC,OAC3BvP,EAAe5P,KAAQ4P,gBACvBlB,EAAK5B,EAAI8C,EAAgB,GACzBjB,EAAK5B,EAAI6C,EAAgB,GACzBgX,EAAkBlY,EAAKA,EAAKC,EAAKA,KACnCiY,EAAkBzH,EAAkB,IACd,IAApByH,EAAqB,IAAA,IACdvlB,EAAI,EAAGA,EAACrB,KAAQ8P,SAAUzO,EACjC6d,EAAa7d,GAAKuO,EAAgBvO,YAG9B46C,EAAKj8C,KAAQ+xB,YAAc5lB,KAAK4N,KAAK6M,GAC3C1H,EAAa,GAAKtP,EAAgB,GAAKqsC,EAAQvtC,EAC/CwQ,EAAa,GAAKtP,EAAgB,GAAKqsC,EAAQttC,MACtCtN,EAAI,EAAGA,EAACrB,KAAQ8P,SAAUzO,EACjC6d,EAAa7d,GAAKuO,EAAgBvO,UAGtC6d,EAAa9d,OAAMpB,KAAQ8P,OACpB8W,SAEAzH,GASX6gG,EAAA5/G,UAAAgf,WAAU,SAACtS,EAAGC,OACN6C,EAAe5P,KAAQ4P,gBACvBlB,EAAK5B,EAAI8C,EAAgB,GACzBjB,EAAK5B,EAAI6C,EAAgB,UACxBlB,EAAKA,EAAKC,EAAKA,GAAE3O,KAASmgH,qBAQnCH,EAAA5/G,UAAAwxB,UAAS,uBACKhiB,gBAAgBpB,MAAM,EAACxO,KAAO8P,SAQ5CkwG,EAAA5/G,UAAAsf,cAAa,SAACxR,OACN0B,EAAe5P,KAAQ4P,gBACvB6I,EAAS7I,EAAe5P,KAAM8P,QAAUF,EAAgB,UACvDJ,GACLI,EAAgB,GAAK6I,EACrB7I,EAAgB,GAAK6I,EACrB7I,EAAgB,GAAK6I,EACrB7I,EAAgB,GAAK6I,EACrBvK,IASJ8xG,EAAA5/G,UAAA2xB,UAAS,kBACA5lB,KAAK4N,KAAI/Z,KAAMmgH,sBAOxBH,EAAA5/G,UAAA+/G,kBAAiB,eACTzxG,EAAE1O,KAAQ4P,gBAAe5P,KAAM8P,QAAM9P,KAAS4P,gBAAgB,GAC9DjB,EAAE3O,KAAQ4P,gBAAe5P,KAAM8P,OAAS,GAAC9P,KAAS4P,gBAAgB,UACjElB,EAAKA,EAAKC,EAAKA,GAQxBqxG,EAAA5/G,UAAA+f,QAAO,kBACEjI,IAST8nG,EAAA5/G,UAAAggB,iBAAgB,SAAClS,MAEXiE,GAAWjE,EADGlO,KAAQoU,aACS,KAC3BtD,EAAM9Q,KAAQ4xB,mBAEhB1jB,EAAO,IAAM4C,EAAO,IAAM5C,EAAO,IAAM4C,EAAO,KAG9C5C,EAAO,IAAM4C,EAAO,IAAM5C,EAAO,IAAM4C,EAAO,IAI3CT,GAAcnC,EAAMlO,KAAOyf,qBAAqB7Z,KAAI5F,eAEtD,GAQTggH,EAAA5/G,UAAAggD,UAAS,SAACtvC,OACFhB,EAAM9P,KAAQ8P,OACd2I,EAAMzY,KAAQ4P,gBAAgBE,GAAM9P,KAAS4P,gBAAgB,GAC7DA,EAAkBkB,EAAOtC,QAC/BoB,EAAgBE,GAAUF,EAAgB,GAAK6I,UACtCpX,EAAI,EAAGA,EAAIyO,IAAUzO,EAC5BuO,EAAgBE,EAASzO,GAAKyP,EAAOzP,QAElCqkB,mBAAkB1lB,KAAM6kB,OAAQjV,QAChCrJ,WAWPy5G,EAAA5/G,UAAA6/G,mBAAkB,SAACnvG,EAAQ2H,EAAQmN,QAC5BC,UAAUD,EAAY9U,EAAQ,QACzBlB,kBAAe5P,KAClB4P,gBAAe,IAEM,IACtBA,EAAe5P,KAAQ4P,gBACzBC,EAASkX,GAAkBnX,EAAiB,EAAGkB,EAAM9Q,KAAO8P,QAChEF,EAAgBC,KAAYD,EAAgB,GAAK6I,UACxCpX,EAAI,EAAGuB,EAAE5C,KAAQ8P,OAAQzO,EAAIuB,IAAMvB,EAC1CuO,EAAgBC,KAAYD,EAAgBvO,GAE9CuO,EAAgBxO,OAASyO,OACpBtJ,WAGPy5G,EAAA5/G,UAAAilB,eAAc,kBACL,MAGT26F,EAAA5/G,UAAAulB,eAAc,SAAC1X,EAAa2X,KAO5Bo6F,EAAA5/G,UAAAilE,UAAS,SAAC5sD,QACH7I,gBAAe5P,KAAM8P,QAAM9P,KAAS4P,gBAAgB,GAAK6I,OACzDlS,WAUPy5G,EAAA5/G,UAAAyf,OAAM,SAACxS,EAAO6P,OACNpM,EAAM9Q,KAAQ4xB,YACd9hB,EAAM9P,KAAQilB,iBACfm7B,UACHnjC,GAAOnM,EAAQ,EAAGA,EAAO1P,OAAQ0O,EAAQzC,EAAO6P,EAAQpM,SAErDvK,WAUPy5G,EAAA5/G,UAAAigB,UAAS,SAAChD,EAAQC,OACVxM,EAAM9Q,KAAQ4xB,YACd9hB,EAAM9P,KAAQilB,iBACfm7B,UACH5iC,GAAU1M,EAAQ,EAAGA,EAAO1P,OAAQ0O,EAAQuN,EAAQC,EAAQxM,SAEzDvK,WAETy5G,EAlPA,CAAqB1zF,GAAAvlB,SA0QrBg5G,GAAO3/G,UAAUmM,cACjB6zG,GAAeL,6dChKTM,GACC,QADDA,GAEO,aAFPA,GAGG,UAHHA,GAIE,SAMFC,GAMK,YANLA,GAYG,UAZHA,GAkBK,YAQXC,GAAA,SAAA98G,GAIK,SACH+8G,EAAYzgH,EAAMkjB,OAAlBrf,EACEH,EAAAI,KAAA7D,KAAMD,IAAIC,YAOV4D,EAAKqf,QAAUA,WAbYw9F,GAAAD,EAAA/8G,GAe/B+8G,EAfA,CAA+B3gH,YAk+Bf6gH,GAAqBjvF,EAAWC,mBAC7BzjB,EAAa0yG,EAAczmG,OACpCpJ,EAAS2L,GACiBxO,EAAa,GAC3CiM,GAEI1Y,EAAMib,GACoBxO,EAAaA,EAAY7M,OAAS,GAChE8Y,GAEIzB,EAAStM,KAAK4N,KAAKJ,GAA0B7I,EAAQtP,IACrDkJ,EAAWi2G,GAEb/sF,GAAA8pF,WAAU,IAAKkD,GAAA75G,QAAO+J,GAAS2gB,GAE/BpkB,EAAQqkB,MACPA,GAA2B,IAAdA,EAAe,KACzB5kB,EAAItL,EAAI,GAAKsP,EAAO,GACpB/D,EAAIvL,EAAI,GAAKsP,EAAO,GAC1BzD,EAAQlB,KAAK4M,MAAMhM,EAAGD,GAExB8mB,GAAAitF,YAAYn2G,EAAUoG,EAAQ2H,EAAQpL,OAEhC4xC,EAAiB1iC,YACnB0iC,GACFv0C,EAAS6B,UAAU2N,EAAY+kC,GAE1Bv0C,YAWKo2G,qBACG7yG,EAAa0yG,EAAczmG,OACpChM,EAASF,GACe,CAC1BC,EAAY,GACZA,EAAYA,EAAY7M,OAAS,IAChCszB,KAAG,SAAW7nB,UACR4P,GAAmB5P,EAAYqN,OAGpC6mG,EAAc,EAEhBvwG,GAActC,GACduC,GAAevC,GACfwC,GAAYxC,GACZyC,GAAWzC,GACXsC,GAActC,KAGdxD,EAAWi2G,EACXj2G,EACFA,EAASib,eAAeo7F,GAExBr2G,EAAQ,IAAOkpB,GAAA7sB,QAAQg6G,OAEnB9hE,EAAiB1iC,YACnB0iC,GACFv0C,EAAS6B,UAAU2N,EAAY+kC,GAE1Bv0C,OA4BXs2G,GAziCA,SAAAv9G,GAGK,SACHw9G,EAAYhuG,OAAZrP,EAAA5D,KACQg5D,EAAgE/lD,EACjE+lD,EAAerJ,WAClBqJ,EAAerJ,SAAWvtD,IAG5BwB,EAAAH,EAAAI,KAAA7D,KAAMg5D,IAAch5D,MAMfkhH,eAAgB,EAMrBt9G,EAAKu9G,QAAU,KAMfv9G,EAAKw9G,aAMLx9G,EAAKy9G,cAOLz9G,EAAK09G,aAML19G,EAAK29G,WAAY,EAOjB39G,EAAKq0G,QAAUhlG,EAAQnQ,OAASmQ,EAAQnQ,OAAS,KAOjDc,EAAKw4G,UAAYnpG,EAAQkQ,SAAWlQ,EAAQkQ,SAAW,KAOvDvf,EAAK49G,eAAiBvuG,EAAQwuG,cAAgBxuG,EAAQwuG,cAAgB,GAOtE79G,EAAK89G,MAAkEzuG,EAAQlT,KAO/E6D,EAAKo0D,MAo8BN,SACcj4D,UACPA,QACDmY,QACAA,UACImoG,QACJnoG,QACAA,UACImoG,QACJnoG,QACAA,UACImoG,QACJnoG,UACImoG,qBAEGp5G,MAAK,iBAAoBlH,IAn9BxB4hH,CAAQ/9G,EAAK89G,OAQ1B99G,EAAKg+G,aAAe3uG,EAAQ4uG,UAS5Bj+G,EAAKk+G,WAAa7uG,EAAQ8uG,UACtB9uG,EAAQ8uG,UACRn+G,EAAKo0D,QAAUqoD,GACf,EACA,EAQJz8G,EAAKo+G,WACHp+G,EAAKo0D,QAAUqoD,GACX,EACAptG,EAAQgvG,UACRhvG,EAAQgvG,UACR1yG,EAAAA,EAON3L,EAAKs+G,iBAAmBjvG,EAAQkvG,gBAC5BlvG,EAAQkvG,gBACRhgH,MA0zBAylE,EAxzBAw6C,EAAmBnvG,EAAQmvG,qBAC1BA,EAAgB,KA0BbC,EAzBAC,EAAO1+G,EAAKo0D,SACdsqD,IAASjC,GAOX+B,EAAgB,SAAan0G,EAAavD,EAAUwP,OAC5CsX,EAAS9mB,GACoB,IAC3Bk2G,GAAA75G,QAAM,CAAEyY,IAAKA,MACf1O,EAAS2L,GAAmBxO,EAAY,GAAIiM,GAC5CqoG,EAAgB5oG,GACpB7I,EACA2L,GAAmBxO,EAAYA,EAAY7M,OAAS,GAAI8Y,IAE1DsX,EAAOyuF,mBAAmBnvG,EAAQ3E,KAAK4N,KAAKwoG,QACtCtjE,EAAiB1iC,YACnB0iC,GACFztB,EAAOjlB,UAAU2N,EAAY+kC,GAExBztB,QAIL8wF,IAASjC,GACXgC,EAAcp0F,GAAAlnB,QACLu7G,IAASjC,GAClBgC,EAAcl1F,GAAApmB,QACLu7G,IAASjC,KAClBgC,EAAczuF,GAAA7sB,SAQhBq7G,EAAgB,SAAan0G,EAAavD,EAAUwP,UAC9CxP,EACE43G,IAASjC,GACPpyG,EAAY,GAAG7M,OAEjBsJ,EAASib,eAAc,CACrB1X,EAAY,GAAG2T,OAAM,CAAE3T,EAAY,GAAG,OAGxCvD,EAASib,eAAc,IAGzBjb,EAASib,eAAe1X,GAG1BvD,EAAQ,IAAO23G,EAAYp0G,GAEtBvD,UASb9G,EAAK8iE,kBAAoB07C,EAMzBx+G,EAAK4+G,sBACyBt9G,IAA5B+N,EAAQwvG,gBAAgCxvG,EAAQwvG,gBAAkB,IAQpE7+G,EAAK8+G,kBAAoB,KAOzB9+G,EAAK++G,eAAiB,KAOtB/+G,EAAKg/G,aAAe,KAOpBh/G,EAAKi/G,cAAgB,KAOrBj/G,EAAKk/G,YAAc,KAOnBl/G,EAAKm/G,kBAAoB,KASzBn/G,EAAKo/G,uBAAyB/vG,EAAQgwG,eAClChwG,EAAQgwG,eAAiBhwG,EAAQgwG,eACjC,GAOJr/G,EAAKw3G,SAAQ,IAAOC,GAAAt0G,QAAW,CAC7BjE,OAAM,IAAMw4G,GAAAv0G,QAAY,CACtBivF,iBAAiB,EACjB5C,QAAOngF,EAAQmgF,OAAQngF,EAAQmgF,QAEjCloF,MAAO+H,EAAQ/H,MAAQ+H,EAAQ/H,OA4qB7B08D,EAASD,cACE1kD,EAASlS,UACjB62D,EAAO3kD,EAAQhY,cAAckV,aA7qBlCioD,wBAAwB,IAQ1BxkE,EAAKsG,cAAgB+I,EAAQyiB,aAM7B9xB,EAAKsuD,WAAaj/C,EAAQg/C,UAAYh/C,EAAQg/C,UAAYf,GAM1DttD,EAAKs/G,mBACDjwG,EAAQkwG,SACVv/G,EAAKs/G,mBAAqBlyD,GAE1BptD,EAAKs/G,mBAAqBjwG,EAAQmwG,kBAC9BnwG,EAAQmwG,kBACRjyD,GAGNvtD,EAAKO,iBACHmG,EAAAC,mBAAmB6jD,IACnBxqD,EAAKy/G,uBA3SQ5C,GAAAQ,EAAAx9G,GAqTjBw9G,EAAA7gH,UAAAg8B,OAAM,SAAC1H,GACLjxB,EAAArD,UAAMg8B,OAAMv4B,KAAA7D,KAAC00B,QACR2uF,gBAQPpC,EAAA7gH,UAAAi9G,WAAU,uBACIjC,UASd6F,EAAA7gH,UAAA0E,YAAW,SAACL,GACNA,EAAM6nC,cAAcvsC,OAASyF,GAE/Bf,EAAM6nC,cAAcjsC,sBAEjBkhH,UAASvhH,KACPg4D,QAAUqoD,IAAUrgH,KAASkjH,mBAAmBz+G,OACnD6+G,EAAO7+G,EAAM1E,OAASgtC,GAAoBK,YAC1CmjB,GAAO,QAEHgxD,WAASvhH,KACVqhH,eACL58G,EAAM1E,OAASgtC,GAAoBI,cAEvBuO,KAAKC,MACV37C,KAAQqhH,eAAarhH,KAASwiH,uBAC9BrB,QAAU18G,EAAMq4B,WAChBokF,eAAalhH,KAASuhH,UAC3B+B,GAAO,QAEFjC,mBAAgBn8G,OAEdg8G,oBAAuCh8G,IAA1BlF,KAASohH,eAC7BhyE,aAAYpvC,KAAMohH,mBACbA,kBAAel8G,gBAIjBq8G,WACL98G,EAAM1E,OAASgtC,GAAoBI,aACX,OADsBntC,KACzC2iH,qBAEAY,cAAc9+G,EAAMoI,YACzB0jD,GAAO,QAEFgxD,WACL98G,EAAM1E,OAASgtC,GAAoBM,YAEnCkjB,GAAO,EACE+yD,GAAItjH,KAASgwD,kBAAoB,GAC1CO,EAAO9rD,EAAM1E,OAASgtC,GAAoBK,cAClCptC,KAASuhH,gBACVvxE,mBAAmBvrC,QACfy8G,eAEPz8G,EAAM6nC,cAAcjsC,mBAGS,UAA/BoE,EAAM6nC,cAAcilB,aACnB9sD,EAAM1E,OAASgtC,GAAoBI,kBACZjoC,IADuBlF,KACxCohH,eAA0BphH,KAE5BgwC,mBAAmBvrC,GAEjBA,EAAM1E,OAASgtC,GAAoBG,WAC5CqjB,GAAO,GAGF9sD,EAAArD,UAAM0E,YAAWjB,KAAA7D,KAACyE,IAAU8rD,GAQrC0wD,EAAA7gH,UAAAmvD,gBAAe,SAAC9qD,eACTy8G,eAAalhH,KAASuhH,eAElBA,gBACFJ,QAAU18G,EAAMq4B,WACX4lF,mBAAiB1iH,KACpBwjH,cAAc/+G,EAAMoI,aAEpB,QACOqlD,WAAWztD,SACpB48G,cAAgB3lE,KAAKC,WACrBylE,aAAe/xE,WAAU,gBAErBW,mBAAkB,IACjBb,GAAApoC,QACFgmC,GAAoBK,YACpB3oC,EAAMiwB,IACNjwB,EAAM6nC,eACN,EACA7nC,EAAMw4B,cAGVr3B,KAAI5F,MAAAA,KACDwiH,uBAEFrB,QAAU18G,EAAMq4B,OACd,SAEFukF,mBAAgBn8G,GACd,IASX+7G,EAAA7gH,UAAAsvD,cAAa,SAACjrD,OACR8rD,GAAO,KAEoB,SAAtBP,0BACEoxD,eACPhyE,aAAYpvC,KAAMohH,mBACbA,kBAAel8G,QAGjB8qC,mBAAmBvrC,QAEfy8G,cAAa,KACduC,GAAczjH,KAAS0iH,kBACzBe,GAAczjH,KACXwjH,cAAc/+G,EAAMoI,aAEtB42G,GAAczjH,KAASuhH,UAASvhH,KAC9B0jH,qBAECnC,WACJkC,GAAczjH,KAASg4D,QAAUqoD,UAE1BsD,UAAUl/G,EAAMq4B,YACdolF,iBAAiBz9G,IAAKzE,KACxB0jH,qBAGFH,cAAc9+G,EAAMoI,aAG7B0jD,GAAO,YACOgxD,WAASvhH,KAClB4jH,sBAIJrzD,GAAIvwD,KAAS4hH,YAChBn9G,EAAMpE,iBAEDkwD,GAQT0wD,EAAA7gH,UAAA4vC,mBAAkB,SAACvrC,WACZ68G,aAAe78G,EAAM6nC,cAAcilB,iBAEjC4vD,WAAOnhH,KACJuhH,WAASvhH,KAASkhH,eAAalhH,KAC/BuhH,YAASvhH,KAAUkhH,eAAa,KAElC2C,EAAM7jH,KAAQmhH,QACd2C,EAAUr/G,EAAMq4B,MAChBpuB,EAAKm1G,EAAO,GAAKC,EAAQ,GACzBn1G,EAAKk1G,EAAO,GAAKC,EAAQ,GACzBl9F,EAAkBlY,EAAKA,EAAKC,EAAKA,UAClCuyG,cAAalhH,KAAQuhH,UACtB36F,EAAe5mB,KAAQgjH,uBACvBp8F,GAAe5mB,KAASgjH,6BAClB9B,cAAa,YAKhBwB,kBAAiB1iH,KACnB+jH,eAAet/G,EAAMoI,iBAErBm3G,2BAA2Bv/G,IAUpCw8G,EAAA7gH,UAAAujH,UAAS,SAAC7mF,OACJmnF,GAAK,UACAtB,eAAc,KACjBuB,GAAkB,EAClBC,EAA4B,MAASzB,mBACnC0B,EAAIpkH,KAAQg4D,SACdosD,IAAS/D,GACX4D,GAAK,UACIG,IAAS/D,GAClB4D,EAAmC,IAAjCjkH,KAAQ6iH,cAAczhH,eACfgjH,IAAS/D,GAClB6D,EAAelkH,KAAQ6iH,cAAczhH,OAAMpB,KAAQ8hH,mBAC1CsC,IAAS/D,GAAY,KACxBgE,EAAYrkH,KAAsC6iH,cACxDqB,EAAkBG,EAAa,GAAGjjH,OAAMpB,KAAQ8hH,WAChDqC,EAA4B,CAC1BE,EAAa,GAAG,GAChBA,EAAa,GAAGA,EAAa,GAAGjjH,OAAS,OAGzC8iH,UACIxvF,EAAG10B,KAAQ2/B,SACRt+B,EAAI,EAAGuB,EAAKuhH,EAA6B/iH,OAAQC,EAAIuB,EAAIvB,IAAC,KAC3DijH,EAAmBH,EAA6B9iH,GAChDkjH,EAAc7vF,EAAIuyB,uBAAuBq9D,GACzC51G,EAAKouB,EAAM,GAAKynF,EAAY,GAC5B51G,EAAKmuB,EAAM,GAAKynF,EAAY,GAC5B9C,EAAazhH,KAAQuhH,UAAY,EAACvhH,KAAQwhH,kBAChDyC,EAAK93G,KAAK4N,KAAKrL,EAAKA,EAAKC,EAAKA,IAAO8yG,EAC/B,MACCiB,kBAAoB4B,iBAM1BL,GAOThD,EAAA7gH,UAAA4jH,2BAA0B,SAACv/G,OACnBwJ,EAAcxJ,EAAMoI,WAAW2B,aAC3Bo0G,aAIa5iH,KAAQ4iH,aAAa33G,cAC1B0a,eAAe1X,SAJ1B20G,aAAY,IAAO7sF,EAAAhvB,QAAO,IAAKknB,GAAAlnB,QAAMkH,SACrCu2G,0BAWTvD,EAAA7gH,UAAAqkH,gCAA+B,SAAC/5G,QACpBo4G,cAAW9iH,KACd8iH,YAAW,IAAO/sF,EAAAhvB,aAEnB29G,EAAOh6G,EAASomB,cAAc,GAChC6zF,EAAc3kH,KAAQ8iH,YAAY73G,cACjC05G,GAOHA,EAAej/F,mBACbg/F,EAAKl/F,YACLk/F,EAAK1/F,sBAEP2/F,EAAep+G,YAVfo+G,EAAc,IAAOx3F,GAAApmB,QACnB29G,EAAK1/F,qBACL0/F,EAAKl/F,kBAEFs9F,YAAYn4G,YAAYg6G,KAejC1D,EAAA7gH,UAAAojH,cAAa,SAACtqG,OACNgB,EAAUla,KAAQ2/B,SAASknB,UAAUtL,qBACtCmnE,kBAAoBxpG,OAChB8+C,QAAUqoD,GAAUrgH,KACtB6iH,cAAgB3pG,EAAM1K,aACbwpD,QAAUqoD,SACnBwC,cAAa,EAAK3pG,EAAM1K,QAAS0K,EAAM1K,eACvCu0G,kBAAiB/iH,KAAQ6iH,cAAc,SAEvCA,cAAa,CAAI3pG,EAAM1K,QAAS0K,EAAM1K,cAEpCu0G,oBAAiB/iH,KACnB8iH,YAAW,IAAO/sF,EAAAhvB,QAAO,IAAKomB,GAAApmB,QAAU/G,KAAM+iH,yBAE/Cr4G,EAAQ1K,KAAQ0mE,kBAAiB1mE,KAChC6iH,mBACL39G,EACAgV,QAEGyoG,eAAc,IAAO5sF,EAAAhvB,aACjBmD,eAAalK,KACf2iH,eAAe53G,gBAAe/K,KAAMkK,oBAEtCy4G,eAAeh4G,YAAYD,QAC3B85G,6BACAhgH,cAAa,IACZ+7G,GAAUD,GAAuBtgH,KAAO2iH,kBAShD1B,EAAA7gH,UAAA2jH,eAAc,SAACl3G,OAIToB,EAAayZ,EAHXgN,EAAG10B,KAAQ2/B,SACXj1B,EAAQ1K,KAAQ2iH,eAAe13G,cAC/BiP,EAAawa,EAAImyB,UAAUtL,sBAExByc,QAAUqoD,GACjB34F,EAAI1nB,KAAQ6iH,mBACE7qD,QAAUqoD,IAExB34F,GADAzZ,EAA0CjO,KAAO6iH,cAAe,IAC7C50G,EAAY7M,OAAS,QAC/BuiH,UAAUjvF,EAAIuyB,uBAAuBp6C,MAE5CA,EAAU7M,KAAQ0iH,kBAAkBl0G,UAItCkZ,GADAzZ,EAAWjO,KAAQ6iH,eACA50G,EAAY7M,OAAS,GAE1CsmB,EAAK,GAAK7a,EAAW,GACrB6a,EAAK,GAAK7a,EAAW,QAChB65D,kBAAiB1mE,KACgB6iH,cACpCn4G,EACAwP,QAEO0oG,eACc5iH,KAAQ4iH,aAAa33G,cAC1B0a,eAAe9Y,MAG/BnC,EAASyV,YAAcjI,IAAoBlY,KACtCg4D,QAAUqoD,GAAYrgH,KAEtBykH,gCAAwD/5G,gBAC/Cq4G,kBAAiB,CACX/iH,KAAQ8iH,YAAY73G,cACzB0a,eAAc3lB,KAAM+iH,wBAEhCyB,yBAQPvD,EAAA7gH,UAAAmjH,cAAa,SAAC12G,OAGRw4B,EACAp3B,EAHEvD,EAAQ1K,KAAQ2iH,eAAe13G,cAC/BiP,EAAUla,KAAQ2/B,SAASknB,UAAUtL,gBAGrC6oE,EAAIpkH,KAAQg4D,MACdosD,IAAS/D,IAAoB+D,IAAS/D,SACnCqC,kBAAoB71G,EAAW2B,SACpCP,EAAWjO,KAAsC6iH,eACjCzhH,QAAMpB,KAASgiH,kBACpBT,UACPtzG,EAAY0Z,MAEZ0d,GAAO,GAGXp3B,EAAY3K,KAAKuJ,EAAW2B,cACvBk4D,kBAAkBz4D,EAAavD,EAAUwP,IACrCkqG,IAAS/D,MAClBpyG,EAA0CjO,KAAO6iH,cAAe,IAChDzhH,QAAMpB,KAASgiH,kBACpBT,UACPtzG,EAAY0Z,MAEZ0d,GAAO,GAGXp3B,EAAY3K,KAAKuJ,EAAW2B,SACxB62B,IAAIrlC,KACD0iH,kBAAoBz0G,EAAY,SAElCy4D,kBAAiB1mE,KAAM6iH,cAAen4G,EAAUwP,SAElDsqG,wBACDn/E,GAAIrlC,KACD0jH,iBASTzC,EAAA7gH,UAAAwkH,gBAAe,mBACHjC,oBAKN10G,EAFEvD,EAAQ1K,KAAQ2iH,eAAe13G,cAC/BiP,EAAUla,KAAQ2/B,SAASknB,UAAUtL,gBAErC6oE,EAAIpkH,KAAQg4D,SACdosD,IAAS/D,IAAoB+D,IAAS/D,GAAW,KACnDpyG,EAAWjO,KAAsC6iH,eACrCt9G,QAAO,EAAI,GACnB0I,EAAY7M,QAAU,EAAC,MACpBshH,kBAAoBz0G,EAAYA,EAAY7M,OAAS,GAAGoN,YACvD81G,EAAgBtkH,KAAQ0iH,kBAAkBl0G,QAChDP,EAAYA,EAAY7M,OAAS,GAAKkjH,OACjC1B,aAAaj4G,YAAW,IAAKsjB,GAAAlnB,QAAMu9G,SAErC59C,kBAAkBz4D,EAAavD,EAAUwP,GAC1CxP,EAASyV,YAAcjI,IAAoBlY,KAAS8iH,aAAW9iH,KAC5DykH,gCAAwD/5G,WAEtD05G,IAAS/D,GAAY,EAC9BpyG,EAA0CjO,KAAO6iH,cAAe,IACpDt9G,QAAO,EAAI,OACjBo/G,EAAc3kH,KAAQ8iH,YAAY73G,iBACpCgD,EAAY7M,QAAU,EAAC,CACnBkjH,EAAmBr2G,EAAYA,EAAY7M,OAAS,GAAGoN,QAC7DP,EAAYA,EAAY7M,OAAS,GAAKkjH,OACjC1B,aAAaj4G,YAAW,IAAKsjB,GAAAlnB,QAAMu9G,IAE1CK,EAAeh/F,eAAe1X,QACzBy4D,kBAAiB1mE,KAAM6iH,cAAen4G,EAAUwP,GAG5B,IAAvBjM,EAAY7M,QAAYpB,KACrB4jH,oBAGFY,0BASPvD,EAAA7gH,UAAAsjH,cAAa,eACLmB,EAAa7kH,KAAQ8kH,mBACtBD,OAGD52G,EAAWjO,KAAQ6iH,cACjBn4G,EAAWm6G,EAAc55G,cACzBiP,EAAUla,KAAQ2/B,SAASknB,UAAUtL,qBAClCyc,QAAUqoD,IAEjBpyG,EAAY0Z,WACP++C,kBAAkBz4D,EAAavD,EAAUwP,SAChC89C,QAAUqoD,KAEMpyG,EAAa,GAAG0Z,WACzC++C,kBAAkBz4D,EAAavD,EAAUwP,GAC9CjM,EAAcvD,EAAS2a,uBAIhBq8F,QAAUxpG,GACjB2sG,EAAcl6G,YAAW,IACnB2oB,GAAAvsB,QAAU,CAAiCkH,UAEnCyzG,QAAUxpG,GACxB2sG,EAAcl6G,YAAW,IACnB2pB,GAAAvtB,QAAe,CAAgCkH,UAEvCyzG,QAAUxpG,IACxB2sG,EAAcl6G,YAAW,IACnB6pB,GAAAztB,QAAY,CAAgCkH,UAK/CzJ,cAAa,IAAK+7G,GAAUD,GAAuBuE,SAG/CzI,WAASp8G,KACXo8G,UAAU94G,KAAKuhH,QAEb5M,SAAOj4G,KACTi4G,QAAQthB,WAAWkuB,KAS5B5D,EAAA7gH,UAAA0kH,cAAa,gBACNpC,kBAAoB,SACnBmC,EAAa7kH,KAAQ2iH,2BACtBA,eAAiB,UACjBC,aAAe,UACfE,YAAc,UACd1H,SAAS1+E,YAAYtE,OAAM,GACzBysF,GAOT5D,EAAA7gH,UAAAwjH,aAAY,eACJiB,EAAa7kH,KAAQ8kH,gBACvBD,GAAa7kH,KACVwE,cAAa,IAAK+7G,GAAUD,GAAyBuE,KAa9D5D,EAAA7gH,UAAA2kH,kBAAiB,SAAC92G,OAOZo2G,EANED,EAAIpkH,KAAQg4D,MACZgtD,GAAUhlH,KAAS2iH,kBACrBqC,GAAUhlH,KACPwjH,cAAcv1G,EAAY,IAI7Bm2G,IAAS/D,IAAoB+D,IAAS/D,GACxCgE,EAAYrkH,KAAsC6iH,sBACzCuB,IAAS/D,UAClBgE,EAAYrkH,KACL6iH,eAAa7iH,KAAS6iH,cAAczhH,OACTpB,KAAO6iH,cAAe,GAAC,GAMvDmC,GACFX,EAAavhF,QAIfuhF,EAAa18F,cAGJtmB,EAAI,EAAGA,EAAI4M,EAAY7M,OAAQC,IAACrB,KAClCujH,cAAct1G,EAAY5M,QAG3B4jH,EAASh3G,EAAYA,EAAY7M,OAAS,QAE3CmiH,cAAc0B,QACdlB,eAAekB,IAetBhE,EAAA7gH,UAAAiqC,OAAM,SAACpnB,OAEC8I,EADW9I,EAAQhY,mBAEpB03G,eAAiB1/F,OACjB4/F,cAAgB92F,EAAW1G,qBAC1BqC,EAAI1nB,KAAQ6iH,cAAa7iH,KAAM6iH,cAAczhH,OAAS,QACvDshH,kBAAoBh7F,EAAKlZ,aACzBq0G,cAAcv/G,KAAKokB,EAAKlZ,cACxBo0G,aAAY,IAAO7sF,EAAAhvB,QAAO,IAAKknB,GAAAlnB,QAAM2gB,SACrC88F,6BACAhgH,cAAa,IACZ+7G,GAAUD,GAAuBtgH,KAAO2iH,kBAQhD1B,EAAA7gH,UAAAokH,sBAAqB,eACbU,EAAc,QACXvC,gBACPuC,EAAe5hH,KAAItD,KAAM2iH,qBAElBG,aACPoC,EAAe5hH,KAAItD,KAAM8iH,kBAElBF,cACPsC,EAAe5hH,KAAItD,KAAM4iH,kBAErBuC,EAAanlH,KAAQo7G,SAAS1+E,YACpCyoF,EAAc/sF,OAAM,GACpB+sF,EAAclwB,YAAYiwB,IAM5BjE,EAAA7gH,UAAAijH,aAAY,eACJ3uF,EAAG10B,KAAQ2/B,SACXgvB,EAAM3uD,KAAQgoD,YACftzB,GAAQi6B,GAAM3uD,KACZ4jH,oBAEFxI,SAASh/E,OAAOuyB,EAASj6B,EAAM,OAExCusF,EAj7BA,CAAmB1uD,GAAAxrD,ghBChIhB,SACMq+G,GAAoB1gH,UAEuCA,EAAKue,QAEEve,EAC7D,QAEiDA,EAAKmkC,QAGHnkC,EAAY,mBAKvE2gH,GAAW,GAknBjBC,GAzlBA,SAAA7hH,GAGK,SACH8hH,EAAY9iG,OAAZ7e,EAAA5D,KACQiT,EAAUwP,GAAyB,GAEnCu2C,EAAgE/lD,SAEjE+lD,EAAezJ,kBAClByJ,EAAezJ,gBAAkBptD,GAG9B62D,EAAerJ,WAClBqJ,EAAerJ,SAAWvtD,IAG5BwB,EAAAH,EAAAI,KAAA7D,KAAMg5D,IAAch5D,MAMfi4G,QAAUhlG,EAAQnQ,OAASmQ,EAAQnQ,OAAS,KAMjDc,EAAK4hH,aAA6BtgH,IAAnB+N,EAAQ8qG,QAAuB9qG,EAAQ8qG,OAMtDn6G,EAAK6hH,WAAyBvgH,IAAjB+N,EAAQuc,MAAqBvc,EAAQuc,KAMlD5rB,EAAKw4G,UAAYnpG,EAAQkQ,SAAWlQ,EAAQkQ,SAAW,KAMvDvf,EAAK8hH,sBAAqB,GAM1B9hH,EAAK+hH,2BAA0B,GAQ/B/hH,EAAKgiH,wBAAuB,GAS5BhiH,EAAKiiH,iBAAgB,GAMrBjiH,EAAKm3G,qBACwB71G,IAA3B+N,EAAQ+nG,eAA+B/nG,EAAQ+nG,eAAiB,GAOlEp3G,EAAKk3G,OAAM,IAAO/oB,GAOlBnuF,EAAK23G,iBAAgB,OACV33G,EAAK43G,oBAAoB51G,KAAKhC,cACzBA,EAAK63G,yBAAyB71G,KAAKhC,cACnCA,EAAK63G,yBAAyB71G,KAAKhC,WACtCA,EAAK83G,sBAAsB91G,KAAKhC,cAC7BA,EAAK+3G,yBAAyB/1G,KAAKhC,mBAC9BA,EAAKg4G,8BAA8Bh2G,KAAKhC,gBAC3CA,EAAKi4G,2BAA2Bj2G,KAAKhC,sBAC/BA,EAAKm4G,iCAAiCn2G,KAAKhC,UACvDA,EAAKk4G,qBAAqBl2G,KAAKhC,aApG5BkiH,GAAAP,EAAA9hH,GA+GjB8hH,EAAAnlH,UAAAu2F,WAAU,SAAC1zE,EAAS8iG,OACZ5Q,OAA0BjwG,IAAf6gH,GAA2BA,EACtCC,EAAc7+G,EAAO8b,GACrBvY,EAAWuY,EAAQhY,iBACrBP,EAAQ,KACJu7G,EAAajmH,KAAQu7G,iBAAiB7wG,EAASyV,WACjD8lG,SACGL,wBAAwBI,GAAet7G,EAAS0J,WlLlBnD7E,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,IkLqB/B02G,EAAchjG,EAASvY,IAIvByqG,IAAQn1G,KACL2lH,2BAA2BK,GAAevgH,EAC7Cwd,EACAzd,EAAgBxF,KACXg3F,qBAAoBh3F,QAU/BulH,EAAAnlH,UAAA8lH,mBAAkB,SAACjjG,QACZ0zE,WAAW1zE,IAOlBsiG,EAAAnlH,UAAA+lH,sBAAqB,SAACljG,QACfs0E,cAAct0E,IAOrBsiG,EAAAnlH,UAAAgmH,aAAY,eACNjjG,cACKi5F,UACPj5F,EAAQnjB,KAAQo8G,eACFnE,UACd90F,EAAQnjB,KAAQi4G,QAAQp7E,eAEnB1Z,GAOToiG,EAAAnlH,UAAA0E,YAAW,SAACJ,OACJi6B,EAAM3+B,KAAQqmH,OAAO3hH,EAAIo4B,MAAOp4B,EAAImI,WAAYnI,EAAIgwB,YACtDiK,EAAO2nF,UACT5hH,EAAImI,WAAa8xB,EAAOo/E,OAAOvvG,MAAM,EAAG,GACxC9J,EAAIo4B,MAAQ6B,EAAOkgF,aAEdp7G,EAAArD,UAAM0E,YAAWjB,KAAA7D,KAAC0E,IAO3B6gH,EAAAnlH,UAAAk8G,kBAAiB,SAAC53G,OACVue,EAAUmiG,GAAoB1gH,QAC/BiyF,WAAW1zE,IAOlBsiG,EAAAnlH,UAAAm8G,qBAAoB,SAAC73G,OACbue,EAAUmiG,GAAoB1gH,QAC/B6yF,cAAct0E,IAOrBsiG,EAAAnlH,UAAA42F,qBAAoB,SAACtyF,OACbue,EAA0Dve,EAAIvE,eAC3DyvD,uBAAsB,KACvByiC,EAAMlrF,EAAO8b,GACbovE,KAAGryF,KAAS6lH,mBAAgB7lH,KAC3B6lH,iBAAiBxzB,GAAOpvE,aAG1BsjG,eAAetjG,IASxBsiG,EAAAnlH,UAAAsvD,cAAa,SAAChrD,OACN8hH,EAAmBpjH,EAASpD,KAAM6lH,yBACpCW,EAAiBplH,SACnBolH,EAAiBrrG,QAAOnb,KAAMumH,eAAe3gH,KAAI5F,YAC5C6lH,iBAAgB,KAEhB,GAUTN,EAAAnlH,UAAAm3F,cAAa,SAACt0E,EAASwjG,OACfzR,OAA8B9vG,IAAjBuhH,GAA6BA,EAC1CT,EAAc7+G,EAAO8b,GACrB/U,EAAMlO,KAAQ4lH,wBAAwBI,MACxC93G,EAAM,KACFgvG,EAAKl9G,KAAQ86G,OACb4L,EAAa,GACnBxJ,EAAMxqB,gBAAgBxkF,GAAM,SAAYq1B,GAClCtgB,IAAYsgB,EAAKtgB,SACnByjG,EAAcpjH,KAAKigC,cAGdliC,EAAIqlH,EAActlH,OAAS,EAAGC,GAAK,IAAKA,EAC/C67G,EAAMvyE,OAAO+7E,EAAcrlH,IAI3B2zG,IACF/uG,EAAajG,KAAM2lH,2BAA2BK,gBAClCL,2BAA2BK,KAU3CT,EAAAnlH,UAAAg8B,OAAM,SAAC1H,OACCiyF,EAAU3mH,KAAQ2/B,SAClBt6B,EAAIrF,KAAQ0lH,sBACZviG,EAAQnjB,KAA+DomH,eAEzEO,IACFthH,EAAK8V,QAAQlV,GACbZ,EAAKjE,OAAS,EACd+hB,EAAShI,QAAOnb,KAAMmmH,sBAAsBvgH,KAAI5F,QAElDyD,EAAArD,UAAMg8B,OAAMv4B,KAAA7D,KAAC00B,GAETA,SACO0nF,UACP/2G,EAAK/B,KACHmC,EAAMzF,KACCo8G,UACL7yE,GAAuBvpC,KAClBs8G,kBAAiBt8G,MAGxByF,EAAMzF,KACCo8G,UACL7yE,GAA0BvpC,KACrBu8G,qBAAoBv8G,YAIfi4G,SACd5yG,EAAK/B,KACHmC,EAAMzF,KACCi4G,QACLvkB,GAA0B1zF,KACrBs8G,kBAAiBt8G,MAGxByF,EAAMzF,KACCi4G,QACLvkB,GAA6B1zF,KACxBu8G,qBAAoBv8G,OAK/BmjB,EAAShI,QAAOnb,KAAMkmH,mBAAmBtgH,KAAI5F,SAUjDulH,EAAAnlH,UAAAimH,OAAM,SAACvpF,EAAOohF,EAAiBxpF,OASvBkrD,EAAM5xE,GAAc,CARR0mB,EAAImY,uBAAsB,CAC1C/P,EAAM,GAAC98B,KAAS+6G,gBAChBj+E,EAAM,GAAC98B,KAAS+6G,kBAECrmF,EAAImY,uBAAsB,CAC3C/P,EAAM,GAAC98B,KAAS+6G,gBAChBj+E,EAAM,GAAC98B,KAAS+6G,oBAId+B,EAAQ98G,KAAQ86G,OAAOvoB,YAAY3S,QAG9B4lC,UAAOxlH,KAAUylH,QACxB3I,EAAWA,EAAS7/D,QAAM,SAAWhkC,UAC5BA,EAAQgK,QAAQhY,cAAckV,YAAcjI,WAInDouG,GAAU,EACVvI,EAAS,KACTc,EAAc,QAEM,IAApB/B,EAAS17G,OAAY,MAAA,CAErBklH,QAASA,EACTvI,OAAQA,EACRc,YAAaA,WAOb+H,EAHE1sG,EAAawa,EAAImyB,UAAUtL,gBAC3BsrE,EAAsBpqG,GAAmByhG,EAAiBhkG,GAG5DiF,EAAqB5P,EAAAA,EAChBlO,EAAI,EAAGA,EAAIy7G,EAAS17G,SAAUC,EAAC,KAChCs4G,EAAcmD,EAASz7G,GAC7BgkH,GAAY,GAAK5oG,GAAmBk9F,EAAY1gG,QAAQ,GAAIiB,GAC5DmrG,GAAY,GAAK5oG,GAAmBk9F,EAAY1gG,QAAQ,GAAIiB,OACtD+hC,EAAQjiC,GAAyB6sG,EAAqBxB,IACxDppE,EAAQ98B,IACVynG,EAAqBjN,EACrBx6F,EAAqB88B,OAGnB2iE,EAAiBgI,EAAmB3tG,gBAEjCusG,UAAOxlH,KAAUylH,MAAK,KACvBzG,EAAStqF,EAAIuyB,uBAAuB23D,EAAe,IACnDK,EAASvqF,EAAIuyB,uBAAuB23D,EAAe,IACnDM,EAAevlG,GAA0BmjB,EAAOkiF,GAChDG,EAAexlG,GAA0BmjB,EAAOmiF,GACzC9yG,KAAK4N,KAAK5N,KAAKgE,IAAI+uG,EAAcC,KACtCn/G,KAAS+6G,kBACfuL,GAAU,EACVvI,EACEmB,EAAeC,EAAeP,EAAe,GAAKA,EAAe,GACnEC,EAAcnqF,EAAIuyB,uBAAuB82D,iBAE7B0H,MAAK,KACbqB,EACJF,EAAmB3jG,QAAQhY,cAAckV,YACzCjI,MACE4uG,EAAQ,KACNj8C,EAAiB+7C,EAAmB3jG,QAAQhY,cAC1Cg0C,EAAiB1iC,KACnB0iC,IACF4rB,EAAiBA,EACd//D,QACAyB,UAAU0yC,EAAgB/kC,IAE/B6jG,EAASvhG,YzKhbe3P,EAAY2kB,OACpCxb,EAAIwb,EAAOO,YACXjhB,EAAS0gB,EAAOI,YAChBpgB,EAAKV,EAAO,GACZc,EAAKd,EAAO,GAIdpC,EAHO7B,EAAW,GAGR2E,EACR7C,EAHK9B,EAAW,GAGN+E,EACL,IAAPlD,GAAmB,IAAPC,IACdD,EAAK,OAEDjC,EAAIN,KAAK4N,KAAKrL,EAAKA,EAAKC,EAAKA,UAEzB6C,EAAMwE,EAAItH,EAAMjC,EAChBmF,EAAMoE,EAAIrH,EAAMlC,GyKialBs6G,CACEF,EACoDh8C,GAEtD3wD,QAGFmrG,GAAY,GAAK5oG,GAAmBmiG,EAAe,GAAI1kG,GACvDmrG,GAAY,GAAK5oG,GAAmBmiG,EAAe,GAAI1kG,GACvD6jG,EAASvhG,GACPxD,GAAiB6tG,EAAqBxB,IACtCnrG,MAKAJ,GAAmBgjB,EAFvB+hF,EAAcnqF,EAAIuyB,uBAAuB82D,KAEA/9G,KAAU+6G,kBACjDuL,GAAU,OACDd,UAAYsB,GAAQ,CACrB9H,EAAStqF,EAAIuyB,uBAAuB23D,EAAe,IACnDK,EAASvqF,EAAIuyB,uBAAuB23D,EAAe,IACnDM,EAAevlG,GAA0BklG,EAAaG,GACtDG,EAAexlG,GAA0BklG,EAAaI,GAC/C9yG,KAAK4N,KAAK5N,KAAKgE,IAAI+uG,EAAcC,KACtCn/G,KAAS+6G,kBACfgD,EACEmB,EAAeC,EACXP,EAAe,GACfA,EAAe,GACrBC,EAAcnqF,EAAIuyB,uBAAuB82D,YAM7CuI,IACFzH,EAAW,CAAI1yG,KAAKwX,MAAMk7F,EAAY,IAAK1yG,KAAKwX,MAAMk7F,EAAY,OAIlEyH,QAASA,EACTvI,OAAQA,EACRc,YAAaA,IAQjB0G,EAAAnlH,UAAAmmH,eAAc,SAACtjG,QACRs0E,cAAct0E,GAAS,QACvB0zE,WAAW1zE,GAAS,IAQ3BsiG,EAAAnlH,UAAA07G,qBAAoB,SAAC74F,EAASvY,OACtBwP,EAAUla,KAAQ2/B,SAASknB,UAAUtL,gBACvCsvB,EAAiBngE,EACfu0C,EAAiB1iC,KACnB0iC,IACF4rB,EAAqEA,EAClE//D,QACAyB,UAAU0yC,EAAgB/kC,QAEzBsW,EAAUoD,GAAA8pF,WAAW7yC,GACvB5rB,GACFzuB,EAAQjkB,UAAU2N,EAAY+kC,WAE1BhxC,EAAcuiB,EAAQnL,iBAAiB,GACpChkB,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAS,EAAGC,EAAIuB,IAAMvB,EAAC,KAChD4X,EAAUhL,EAAYO,MAAMnN,EAAGA,EAAI,GACnCs4G,EAAW,CACf12F,QAASA,EACThK,QAASA,QAEN6hG,OAAOr9C,OAAOzvD,GAAeiL,GAAU0gG,KAShD4L,EAAAnlH,UAAA27G,iCAAgC,SAAC94F,EAASvY,WAClCkW,EAAalW,EAAS+W,qBACnBpgB,EAAI,EAAGA,EAAIuf,EAAWxf,SAAUC,EAAC,KAClC4kH,EAAajmH,KAAQu7G,iBAAiB36F,EAAWvf,GAAG8e,WACtD8lG,GACFA,EAAchjG,EAASrC,EAAWvf,MAUxCkkH,EAAAnlH,UAAAq7G,yBAAwB,SAACx4F,EAASvY,WAC1BuD,EAAcvD,EAAS2a,iBACpBhkB,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAS,EAAGC,EAAIuB,IAAMvB,EAAC,KAChD4X,EAAUhL,EAAYO,MAAMnN,EAAGA,EAAI,GACnCs4G,EAAW,CACf12F,QAASA,EACThK,QAASA,QAEN6hG,OAAOr9C,OAAOzvD,GAAeiL,GAAU0gG,KAShD4L,EAAAnlH,UAAAw7G,8BAA6B,SAAC34F,EAASvY,WAC/BmzE,EAAQnzE,EAAS2a,iBACdrI,EAAI,EAAGoK,EAAKy2D,EAAMz8E,OAAQ4b,EAAIoK,IAAMpK,UACrC/O,EAAc4vE,EAAM7gE,GACjB3b,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAS,EAAGC,EAAIuB,IAAMvB,EAAC,KAChD4X,EAAUhL,EAAYO,MAAMnN,EAAGA,EAAI,GACnCs4G,EAAW,CACf12F,QAASA,EACThK,QAASA,QAEN6hG,OAAOr9C,OAAOzvD,GAAeiL,GAAU0gG,KAUlD4L,EAAAnlH,UAAAu7G,yBAAwB,SAAC14F,EAASvY,WAC1ByjB,EAASzjB,EAAS2a,iBACfhkB,EAAI,EAAGuB,EAAKurB,EAAO/sB,OAAQC,EAAIuB,IAAMvB,EAAC,KACvC4M,EAAckgB,EAAO9sB,GACrBs4G,EAAW,CACf12F,QAASA,EACThK,QAAO,CAAGhL,EAAaA,SAEpB6sG,OAAOr9C,OAAO/yD,EAAS0J,YAAaulG,KAS7C4L,EAAAnlH,UAAAy7G,2BAA0B,SAAC54F,EAASvY,WAC5B6nB,EAAW7nB,EAAS2a,iBACjB9H,EAAI,EAAGwyE,EAAKx9D,EAASnxB,OAAQmc,EAAIwyE,IAAMxyE,UACxC+/F,EAAQ/qF,EAAShV,GACdP,EAAI,EAAGoK,EAAKk2F,EAAMl8G,OAAQ4b,EAAIoK,IAAMpK,UACrC/O,EAAcqvG,EAAMtgG,GACjB3b,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAS,EAAGC,EAAIuB,IAAMvB,EAAC,KAChD4X,EAAUhL,EAAYO,MAAMnN,EAAGA,EAAI,GACnCs4G,EAAW,CACf12F,QAASA,EACThK,QAASA,QAEN6hG,OAAOr9C,OAAOzvD,GAAeiL,GAAU0gG,KAWpD4L,EAAAnlH,UAAAo7G,oBAAmB,SAACv4F,EAASvY,OACrBuD,EAAcvD,EAAS2a,iBACvBs0F,EAAW,CACf12F,QAASA,EACThK,QAAO,CAAGhL,EAAaA,SAEpB6sG,OAAOr9C,OAAO/yD,EAAS0J,YAAaulG,IAQ3C4L,EAAAnlH,UAAAs7G,sBAAqB,SAACz4F,EAASvY,WACvB4yG,EAAQ5yG,EAAS2a,iBACdrI,EAAI,EAAGoK,EAAKk2F,EAAMl8G,OAAQ4b,EAAIoK,IAAMpK,UACrC/O,EAAcqvG,EAAMtgG,GACjB3b,EAAI,EAAGuB,EAAKqL,EAAY7M,OAAS,EAAGC,EAAIuB,IAAMvB,EAAC,KAChD4X,EAAUhL,EAAYO,MAAMnN,EAAGA,EAAI,GACnCs4G,EAAW,CACf12F,QAASA,EACThK,QAASA,QAEN6hG,OAAOr9C,OAAOzvD,GAAeiL,GAAU0gG,KAIpD4L,EAvlBA,CAAmBhzD,GAAAxrD,eCjFbigH,GAAG,IAAOC,GAAAlgH,QAAG,CACjB5G,OAAM,MACN+qC,OAAM,GACNsX,KAAI,IAAMC,GAAA17C,QAAI,CACZ+J,OAAM,CAAG,EAAG,GACZ6qB,KAAM,MAIJurF,GAAM,IAAO5L,GAAAv0G,QACbogH,GAAK,IAAO9L,GAAAt0G,QAAW,CAC3BjE,OAAQokH,KAEVF,GAAIthE,SAASyhE,IAEbH,GAAIxhE,eAAc,IAAK4hE,GAAArgH,QAAW,CAChCjE,OAAQokH,GACRnP,mBAAkB,CAAGsP,EAAAtgH,YAGvBigH,GAAIxhE,eAAc,IAAK8hE,GAAAvgH,QAAM,CAC3BjE,OAAQokH,MAGVF,GAAIxhE,eAAc,IAAK+hE,GAAAxgH,QAAI,CACzBhH,KAAI,UACJ+C,OAAQokH,MAGVF,GAAIxhE,eAAc,IAAKgiE,GAAAzgH,QAAI,CACzBjE,OAAQokH,MAGIvwF,SAASurB,eAAc,SAC/B/9C,iBAAgB,SAAQ,WAC5B+iH,GAAO9uF,iBAEHqvF,GAAM,IAAOJ,EAAAtgH,QAAO,CAAE4b,kBAAiB,cACvC+kG,GAAW/wF,SAASurB,eAAc,YACxCglE,GAAOzgH,GAAE,UAAS,iBACV0c,EAAW+jG,GAAOrqF,cAClB8qF,EAAOF,GAAOvkG,cAAcC,GAClCukG,GAASE,KAAI,gCAAqCD,KAGpD9Q,GAAKmQ","sources":["node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Feature.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/format/GeoJSON.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/process/browser.js","node_modules/util/util.js","node_modules/util/support/types.js","node_modules/is-arguments/index.js","node_modules/call-bind/callBound.js","node_modules/get-intrinsic/index.js","node_modules/has-symbols/index.js","node_modules/has-symbols/shams.js","node_modules/function-bind/index.js","node_modules/function-bind/implementation.js","node_modules/has/src/index.js","node_modules/call-bind/index.js","node_modules/is-generator-function/index.js","node_modules/which-typed-array/index.js","node_modules/foreach/index.js","node_modules/available-typed-arrays/index.js","node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js","node_modules/is-typed-array/index.js","node_modules/util/support/isBufferBrowser.js","node_modules/inherits/inherits_browser.js","node_modules/hashed/lib/util.js","node_modules/hashed/lib/serializers.js","node_modules/hashed/lib/deserializers.js","node_modules/hashed/lib/field.js","node_modules/hashed/lib/schema.js","node_modules/hashed/lib/store.js","node_modules/hashed/lib/main.js","node_modules/ol-hashed/index.js","node_modules/hashed/lib/hash.js","node_modules/ol/src/interaction/DragAndDrop.js","node_modules/ol/src/interaction/Modify.js","node_modules/ol/src/geom/Circle.js","node_modules/ol/src/interaction/Draw.js","node_modules/ol/src/interaction/Snap.js","src/editor.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\nimport {toString} from '../transform.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nlet createTransformStringCanvas = null;\n\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return toString(transform);\n  } else {\n    if (!createTransformStringCanvas) {\n      createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n    }\n    createTransformStringCanvas.style.transform = toString(transform);\n    return createTransformStringCanvas.style.transform;\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const img = document.createElement('canvas');\n        img.width = imgSize[0];\n        img.height = imgSize[1];\n        const imgContext = img.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","'use strict';\n\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\nvar forEach = require('foreach');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasSymbols = require('has-symbols')();\nvar hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';\n\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof global[typedArray] === 'function') {\n\t\t\tvar arr = new global[typedArray]();\n\t\t\tif (!(Symbol.toStringTag in arr)) {\n\t\t\t\tthrow new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');\n\t\t\t}\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n","\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nmodule.exports = function forEach (obj, fn, ctx) {\n    if (toString.call(fn) !== '[object Function]') {\n        throw new TypeError('iterator must be a function');\n    }\n    var l = obj.length;\n    if (l === +l) {\n        for (var i = 0; i < l; i++) {\n            fn.call(ctx, obj[i], i, obj);\n        }\n    } else {\n        for (var k in obj) {\n            if (hasOwn.call(obj, k)) {\n                fn.call(ctx, obj[k], k, obj);\n            }\n        }\n    }\n};\n\n","'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof global[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%');\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar forEach = require('foreach');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasSymbols = require('has-symbols')();\nvar hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';\n\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new global[typedArray]();\n\t\tif (!(Symbol.toStringTag in arr)) {\n\t\t\tthrow new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');\n\t\t}\n\t\tvar proto = getPrototypeOf(arr);\n\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\tif (!descriptor) {\n\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t}\n\t\ttoStrTags[typedArray] = descriptor.get;\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","const util = require('util');\n\n/**\n * Get the type of a value.\n * @param {*} value The value.\n * @return {string} The type.\n */\nexports.typeOf = function typeOf(value) {\n  let type = typeof value;\n  if (type === 'object') {\n    if (value === null) {\n      type = 'null';\n    } else if (util.isArray(value)) {\n      type = 'array';\n    } else if (util.isDate(value)) {\n      type = 'date';\n    } else if (util.isRegExp(value)) {\n      type = 'regexp';\n    } else if (util.isError(value)) {\n      type = 'error';\n    }\n  }\n  return type;\n};\n\n/**\n * Copy properties from one object to another.\n * @param {Object} dest The destination object.\n * @param {Object} source The source object.\n * @return {Object} The destination object.\n */\nexports.extend = function(dest, source) {\n  for (const key in source) {\n    dest[key] = source[key];\n  }\n  return dest;\n};\n\n/**\n * Generate an array of alternating name, value from an object's properties.\n * @param {Object} object The object to zip.\n * @return {Array} The array of name, value [, name, value]*.\n */\nexports.zip = function(object) {\n  const zipped = [];\n  let count = 0;\n  for (const key in object) {\n    zipped[2 * count] = key;\n    zipped[2 * count + 1] = object[key];\n    ++count;\n  }\n  return zipped;\n};\n\n/**\n * Generate an object from an array of alternating name, value items.\n * @param {Array} array The array of name, value [, name, value]*.\n * @return {Object} The zipped up object.\n */\nexports.unzip = function(array) {\n  const object = {};\n  for (let i = 0, ii = array.length; i < ii; i += 2) {\n    object[array[i]] = array[i + 1];\n  }\n  return object;\n};\n","const util = require('util');\n\nconst enc = encodeURIComponent;\n\nconst serializers = {\n  string: function(str) {\n    if (typeof str !== 'string') {\n      throw new Error('Expected string to serialize: ' + str);\n    }\n    return enc(str);\n  },\n  number: function(num) {\n    if (typeof num !== 'number') {\n      throw new Error('Expected number to serialize: ' + num);\n    }\n    return enc(String(num));\n  },\n  boolean: function(bool) {\n    if (typeof bool !== 'boolean') {\n      throw new Error('Expected boolean to serialize: ' + bool);\n    }\n    return bool ? '1' : '0';\n  },\n  date: function(date) {\n    if (!util.isDate(date)) {\n      throw new Error('Expected date to serialize: ' + date);\n    }\n    return enc(date.toISOString());\n  },\n  array: function(array) {\n    if (!util.isArray(array)) {\n      throw new Error('Expected array to serialize: ' + array);\n    }\n    return enc(JSON.stringify(array));\n  },\n  object: function(obj) {\n    return enc(JSON.stringify(obj));\n  }\n};\n\n/**\n * Get a serializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(*): string} Function that serializes a value to a string.\n */\nexports.get = function(type) {\n  if (!(type in serializers)) {\n    throw new Error('Unable to serialize type: ' + type);\n  }\n  return serializers[type];\n};\n","const util = require('./util');\n\nconst dec = decodeURIComponent;\n\nconst noop = function() {};\n\nconst deserializers = {\n  string: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    return dec(str);\n  },\n  number: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const num = Number(dec(str));\n    if (isNaN(num)) {\n      throw new Error('Expected to deserialize a number: ' + str);\n    }\n    return num;\n  },\n  boolean: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let bool;\n    if (str === '1') {\n      bool = true;\n    } else if (str === '0') {\n      bool = false;\n    } else {\n      throw new Error('Expected \"1\" or \"0\" for boolean: ' + str);\n    }\n    return bool;\n  },\n  date: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const date = new Date(dec(str));\n    if (isNaN(date.getTime())) {\n      throw new Error('Expected to deserialize a date: ' + str);\n    }\n    return date;\n  },\n  array: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let array;\n    try {\n      array = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!array || util.typeOf(array) !== 'array') {\n      throw new Error('Expected to deserialize an array: ' + str);\n    }\n    return array;\n  },\n  object: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let obj;\n    try {\n      obj = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!obj || util.typeOf(obj) !== 'object') {\n      throw new Error('Expected to deserialize an object: ' + str);\n    }\n    return obj;\n  }\n};\n\n/**\n * Get a deserializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(string): *} Function that deserializes a string to a value.\n */\nexports.get = function(type) {\n  if (!(type in deserializers)) {\n    throw new Error('Unable to deserialize type: ' + type);\n  }\n  return deserializers[type];\n};\n","const util = require('./util');\n\nconst serializers = require('./serializers');\nconst deserializers = require('./deserializers');\n\n/**\n * Create a new field.  A field must have a default value (`default`) and is\n * capable of serializing and deserializing values.\n * @param {Object} config Field configuration.  Must have a `default` property\n *     with a default value.  May have optional `serialize` and `deserialize`\n *     functions.  As a shorthand for providing a config object with a `default`\n *     property, a default value may be provided directly.\n * @constructor\n */\nexports.Field = function(config) {\n  if (util.typeOf(config) !== 'object') {\n    this.default = config;\n  } else if (!('default' in config)) {\n    throw new Error('Missing default');\n  } else {\n    this.default = config.default;\n  }\n\n  const type = util.typeOf(this.default);\n  this.serialize = config.serialize || serializers.get(type);\n  this.deserialize = config.deserialize || deserializers.get(type);\n};\n","const Field = require('./field').Field;\nconst util = require('./util');\n\n/**\n * Create a new schema.  A schema is a collection of field definitions.\n * @param {Object} config Keys are field names, values are field configs.\n * @constructor\n */\nconst Schema = (exports.Schema = function(config) {\n  config = util.extend({}, config);\n  const fields = {};\n  let prefix;\n  if ('_' in config) {\n    prefix = config._;\n    delete config._;\n  }\n  for (const key in config) {\n    fields[key] = new Field(config[key]);\n  }\n  this._prefix = prefix;\n  this._fields = fields;\n});\n\n/**\n * Get the prefixed version of a key.\n * @param {string} key The key.\n * @return {string} The prefixed key.\n */\nSchema.prototype.getPrefixed = function(key) {\n  return this._prefix ? this._prefix + '.' + key : key;\n};\n\n/**\n * Call a callback for each field key.\n * @param {function(string, number)} callback Called with a local field key and\n *     a prefixed key.\n * @param {Object} thisArg This argument for the callback.\n */\nSchema.prototype.forEachKey = function(callback, thisArg) {\n  let more;\n  for (const key in this._fields) {\n    more = callback.call(thisArg, key, this.getPrefixed(key));\n    if (more === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Serialize a value.\n * @param {string} key The key or field name.\n * @param {*} value The value to serialize.\n * @param {Object} values Additional values for providers to use when serializing.\n * @return {string} The serialized value.\n */\nSchema.prototype.serialize = function(key, value, values) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].serialize(value, values);\n};\n\n/**\n * Deserialize a value.\n * @param {string} key The key or field name.\n * @param {string} str The serialized value.\n * @return {*} The deserialized value.\n */\nSchema.prototype.deserialize = function(key, str) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].deserialize(str);\n};\n\n/**\n * Get the default value for a particular field.\n * @param {string} key The key or field name.\n * @return {*} The default value.\n */\nSchema.prototype.getDefault = function(key) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].default;\n};\n\n/**\n * Determine if one schema conflicts with another.  Two schemas conflict if\n * any of their prefixed keys are the same.\n * @param {Schema} other The other schema.\n * @return {boolean|string} This schema conflicts with the other.  If the two\n *     schemas conflict, the return will be the first conflicting key (with\n *     any prefix).\n */\nSchema.prototype.conflicts = function(other) {\n  const thisPrefixedKeys = {};\n  for (const key in this._fields) {\n    thisPrefixedKeys[this.getPrefixed(key)] = true;\n  }\n\n  let conflicts = false;\n  other.forEachKey(function(_, prefixed) {\n    if (prefixed in thisPrefixedKeys) {\n      conflicts = prefixed;\n    }\n    return !conflicts;\n  });\n  return conflicts;\n};\n","const Schema = require('./schema').Schema;\nconst util = require('./util');\nconst serializers = require('./serializers');\n\n/**\n * An object backed store of string values.  Allows registering multiple state\n * providers.\n * @param {Object} values Initial serialized values.\n * @param {function(Object)} callback Called with an object of serialized\n *     values and defaults whenever a provider updates state.\n * @constructor\n */\nconst Store = (exports.Store = function(values, callback) {\n  this._values = values;\n  this._defaults = {};\n  this._providers = [];\n  this._callback = callback;\n  this._callbackTimer = null;\n});\n\nStore.prototype._scheduleCallback = function() {\n  if (this._callbackTimer) {\n    clearTimeout(this._callbackTimer);\n  }\n  this._callbackTimer = setTimeout(this._debouncedCallback.bind(this));\n};\n\nStore.prototype._debouncedCallback = function() {\n  this._callbackTimer = null;\n  this._callback(this._values, this._defaults);\n};\n\nStore.prototype.update = function(values) {\n  if (this._updateTimer) {\n    clearTimeout(this._updateTimer);\n  }\n  this._updateTimer = setTimeout(this._debouncedUpdate.bind(this, values));\n};\n\nStore.prototype._debouncedUpdate = function(newValues) {\n  this._updateTimer = null;\n  const values = this._values;\n  const providers = this._providers.slice(); // callbacks may unregister providers\n  for (let i = providers.length - 1; i >= 0; --i) {\n    const provider = providers[i];\n    const schema = provider.schema;\n    let changed = false;\n    const state = {};\n    schema.forEachKey(function(key, prefixed) {\n      let deserialized;\n      if (!(prefixed in newValues)) {\n        deserialized = schema.getDefault(key);\n        const serializedDefault = schema.serialize(key, deserialized);\n        if (values[prefixed] !== serializedDefault) {\n          changed = true;\n          values[prefixed] = serializedDefault;\n          state[key] = deserialized;\n        }\n      } else if (values[prefixed] !== newValues[prefixed]) {\n        try {\n          deserialized = schema.deserialize(key, newValues[prefixed]);\n          values[prefixed] = newValues[prefixed];\n          state[key] = deserialized;\n          changed = true;\n        } catch (err) {\n          // invalid value, pass\n        }\n      }\n    });\n    if (changed && this._providers.indexOf(provider) >= 0) {\n      provider.callback(state);\n    }\n  }\n};\n\n/**\n * Unregister a provider.  Deletes the provider's values from the underlying\n * store and calls the store's callback.\n * @param {Function} callback The provider's callback.\n */\nStore.prototype.unregister = function(callback) {\n  let removedProvider;\n  this._providers = this._providers.filter(function(provider) {\n    const remove = provider.callback === callback;\n    if (remove) {\n      removedProvider = provider;\n    }\n    return !remove;\n  });\n  if (!removedProvider) {\n    throw new Error('Unable to unregister hashed state provider');\n  }\n  const values = this._values;\n  const defaults = this._defaults;\n  removedProvider.schema.forEachKey(function(key, prefixed) {\n    delete values[prefixed];\n    delete defaults[prefixed];\n  });\n  this._scheduleCallback();\n};\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called by the store on state changes.\n * @return {function(Object)} Called by the provider on state changes.\n */\nStore.prototype.register = function(config, callback) {\n  const provider = {\n    schema: new Schema(config),\n    callback: callback\n  };\n\n  // ensure there are no conflicts with existing providers\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const conflicts = provider.schema.conflicts(this._providers[i].schema);\n    if (conflicts) {\n      throw new Error(\n        'Provider already registered using the same name: ' + conflicts\n      );\n    }\n    if (provider.callback === this._providers[i].callback) {\n      throw new Error('Provider already registered with the same callback');\n    }\n  }\n\n  this._providers.push(provider);\n  this._initializeProvider(provider);\n\n  return function update(state) {\n    if (this._providers.indexOf(provider) === -1) {\n      throw new Error('Unregistered provider attempting to update state');\n    }\n    const schema = provider.schema;\n    let changed = false;\n    const values = this._values;\n    schema.forEachKey(function(key, prefixed) {\n      if (key in state) {\n        const serializedValue = schema.serialize(key, state[key], state);\n        if (values[prefixed] !== serializedValue) {\n          changed = true;\n          values[prefixed] = serializedValue;\n        }\n      }\n    });\n    if (changed) {\n      this._scheduleCallback();\n    }\n  }.bind(this);\n};\n\n/**\n * Call provider with initial values.\n * @param {Object} provider Provider to be initialized.\n */\nStore.prototype._initializeProvider = function(provider) {\n  const state = {};\n  const defaults = {};\n  const values = this._values;\n  provider.schema.forEachKey(function(key, prefixed) {\n    let deserializedValue;\n    const deserializedDefault = provider.schema.getDefault(key);\n    const serializedDefault = provider.schema.serialize(\n      key,\n      deserializedDefault\n    );\n    if (prefixed in values) {\n      try {\n        deserializedValue = provider.schema.deserialize(key, values[prefixed]);\n      } catch (err) {\n        deserializedValue = deserializedDefault;\n      }\n    } else {\n      deserializedValue = deserializedDefault;\n    }\n    state[key] = deserializedValue;\n    defaults[prefixed] = serializedDefault;\n    values[prefixed] = provider.schema.serialize(key, deserializedValue);\n  });\n  for (const prefixed in defaults) {\n    this._defaults[prefixed] = defaults[prefixed];\n  }\n  provider.callback(state);\n};\n\n/**\n * Serialize values with provider serializers where available.\n * @param {Object} values Values to be serialized.\n * @return {Object} The serialized values.\n */\nStore.prototype.serialize = function(values) {\n  const serialized = {};\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const provider = this._providers[i];\n    provider.schema.forEachKey(function(key, prefixed) {\n      if (prefixed in values) {\n        serialized[prefixed] = provider.schema.serialize(\n          key,\n          values[prefixed],\n          values\n        );\n      }\n    });\n  }\n  for (const key in values) {\n    if (!(key in serialized)) {\n      const value = values[key];\n      const type = util.typeOf(value);\n      const serializer = serializers.get(type);\n      serialized[key] = serializer(value);\n    }\n  }\n  return serialized;\n};\n","const Store = require('./store').Store;\nconst hash = require('./hash');\n\nlet store;\n\nfunction reset() {\n  if (store) {\n    window.removeEventListener('popstate', update);\n  }\n  window.addEventListener('popstate', update);\n  store = new Store(hash.deserialize(location.hash), function(\n    values,\n    defaults\n  ) {\n    const nonDefaults = {};\n    for (const key in values) {\n      if (values[key] !== defaults[key]) {\n        nonDefaults[key] = values[key];\n      }\n    }\n    history.pushState(values, '', hash.serialize(nonDefaults));\n  });\n}\n\nfunction update() {\n  store.update(hash.deserialize(location.hash));\n}\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called immediately with initial state.\n * @return {function(Object)} Call this function with any updates to the state.\n */\nexports.register = function(config, callback) {\n  return store.register(config, callback);\n};\n\n/**\n * Unregister an existing state provider.\n * @param {function(Object)} callback Callback registered by the provider.\n */\nexports.unregister = function(callback) {\n  store.unregister(callback);\n};\n\n/**\n * Serialize values as they would be represented in the hash.\n * @param {Object} values An object with values to be serialized.\n * @return {string} The values as they would be represented in the hash.\n */\nexports.serialize = function(values) {\n  return hash.serialize(store.serialize(values));\n};\n\nexports.reset = reset;\n\nreset();\n","import hashed from 'hashed';\nimport {transform} from 'ol/proj';\n\nfunction toPrecision(value, precision) {\n  const factor = Math.pow(10, precision);\n  return (Math.round(value * factor) / factor).toString();\n}\n\nfunction synchronize(map, options) {\n  options = options || {};\n  let animate;\n  if ('animate' in options) {\n    animate = options.animate;\n  } else {\n    animate = {duration: 250};\n  }\n\n  const view = map.getView();\n  const projection = view.getProjection().getCode();\n\n  let zoom, center, rotation;\n  if (view.isDef()) {\n    zoom = view.getZoom();\n    center = view.getCenter();\n    rotation = view.getRotation();\n  } else {\n    const viewport = map.getViewport();\n    if (viewport) {\n      zoom = Math.LOG2E * Math.log(viewport.clientWidth / 256);\n    } else {\n      zoom = 0;\n    }\n    center = [0, 0];\n    rotation = 0;\n  }\n\n  const config = {\n    center: {\n      default: center,\n      serialize: function(coord, state) {\n        let precision;\n        if (state && 'zoom' in state) {\n          precision = Math.max(0, Math.ceil(Math.log(state.zoom) / Math.LN2));\n        } else {\n          precision = 3;\n        }\n        coord = transform(coord, projection, 'EPSG:4326');\n        return (\n          toPrecision(coord[0], precision) +\n          ',' +\n          toPrecision(coord[1], precision)\n        );\n      },\n      deserialize: function(str) {\n        const parts = str.split(',');\n        if (parts.length !== 2) {\n          throw new Error('Expected lon,lat but got ' + str);\n        }\n        const coord = [parseFloat(parts[0]), parseFloat(parts[1])];\n        return transform(coord, 'EPSG:4326', projection);\n      }\n    },\n    zoom: {\n      default: zoom,\n      serialize: function(value) {\n        return toPrecision(value, 1);\n      },\n      deserialize: Number\n    },\n    rotation: {\n      default: rotation,\n      serialize: function(value) {\n        return toPrecision(value, 2);\n      },\n      deserialize: Number\n    }\n  };\n\n  function hashHandler(state) {\n    if (view.isDef() && animate) {\n      view.animate(Object.assign({}, state, animate));\n      return;\n    }\n    if ('center' in state) {\n      view.setCenter(state.center);\n    }\n    if ('zoom' in state) {\n      view.setZoom(state.zoom);\n    }\n    if ('rotation' in state) {\n      view.setRotation(state.rotation);\n    }\n  }\n\n  const update = hashed.register(config, hashHandler);\n\n  function onMoveEnd() {\n    update({\n      center: view.getCenter(),\n      zoom: view.getZoom(),\n      rotation: view.getRotation()\n    });\n  }\n\n  map.on('moveend', onMoveEnd);\n\n  return function unregister() {\n    map.un('moveend', onMoveEnd);\n    hashed.unregister(hashHandler);\n  };\n}\n\nexport default synchronize;\n","const util = require('./util');\n\n/**\n * Get values from a hash string.\n * @param {string} hash The hash string (e.g. '#/foo/bar').\n * @return {Object} The string values (e.g. {foo: 'bar'}).\n */\nfunction deserialize(hash) {\n  let zipped;\n  if (hash.length > 2) {\n    const path = hash.substring(2);\n    zipped = path.split('/');\n  } else {\n    zipped = [];\n  }\n  return util.unzip(zipped);\n}\n\n/**\n * Serialize values for the hash.\n * @param {Object} values The values to serialize.\n * @return {string} The hash string.\n */\nfunction serialize(values) {\n  let path = '#';\n  const parts = util.zip(values);\n  if (parts.length > 0) {\n    path = '#/' + parts.join('/');\n  }\n  return path;\n}\n\nexports.deserialize = deserialize;\nexports.serialize = serialize;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport FormatType from '../format/FormatType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [opt_features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   */\n  constructor(type, file, opt_features, opt_projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n  }\n}\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied\n * combinnation of formats read both text string and ArrayBuffer sources. Older browsers such\n * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === FormatType.ARRAY_BUFFER;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      const view = map.getView();\n      projection = view.getProjection();\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== FormatType.ARRAY_BUFFER) {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<import(\"../extent.js\").Extent>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} MapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, features, MapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = MapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerane`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").FeatureLike>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && features.indexOf(feature) === -1) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYSTART,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (features.indexOf(feature) === -1) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (geometries.indexOf(geometry) === -1) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          // prevent dragging closed linestrings by the connecting node\n          if (\n            (segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n                GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, opt_coordinate) {\n    const pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    let nodes, hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          geometry = geometry || feature.getGeometry();\n          if (geometry.getType() === GeometryType.POINT) {\n            hitPointGeometry = geometry;\n            const coordinate = geometry.getCoordinates();\n            nodes = [\n              {\n                feature,\n                geometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === GeometryType.CIRCLE &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n          .clone()\n          .transform(userProjection, projection));\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === GeometryType.CIRCLE &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n        .clone()\n        .transform(userProjection, projection));\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number} [opt_radius] Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {always, noModifierKeys, shiftKeyOnly} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle',\n};\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/GeometryType.js\").default}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === Mode.POLYGON\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === Mode.CIRCLE\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === Mode.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([\n                  coordinates[0].concat([coordinates[0][0]]),\n                ]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    this.addEventListener(\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_\n    );\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ =\n      this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(\n        function () {\n          this.handlePointerMove_(\n            new MapBrowserEvent(\n              MapBrowserEventType.POINTERMOVE,\n              event.map,\n              event.originalEvent,\n              false,\n              event.frameState\n            )\n          );\n        }.bind(this),\n        this.dragVertexDelay_\n      );\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === Mode.POINT)\n        ) {\n          if (this.atFinish_(event.pixel)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event.coordinate);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        at = true;\n      } else if (mode === Mode.CIRCLE) {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  createOrUpdateSketchPoint_(event) {\n    const coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (\n      geometry.getType() === GeometryType.POLYGON &&\n      this.mode_ !== Mode.POLYGON\n    ) {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n        const finishCoordinate = this.finishCoordinate_.slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n        this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n      }\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      if (coordinates.length >= 2) {\n        const finishCoordinate = coordinates[coordinates.length - 2].slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n\n    if (coordinates.length === 1) {\n      this.abortDrawing();\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number} [opt_sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [opt_angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function (coordinates, opt_geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry\n      ? /** @type {Polygon} */ (opt_geometry)\n      : fromCircle(new Circle(center), opt_sides);\n\n    let angle = opt_angle;\n    if (!opt_angle && opt_angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan2(y, x);\n    }\n    makeRegular(geometry, center, radius, angle);\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, opt_geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    let geometry = opt_geometry;\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n      return Mode.POINT;\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n      return Mode.LINE_STRING;\n    case GeometryType.POLYGON:\n    case GeometryType.MULTI_POLYGON:\n      return Mode.POLYGON;\n    case GeometryType.CIRCLE:\n      return Mode.CIRCLE;\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {getValues} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped Snapped.\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  } else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\n  ) {\n    return /** @type {import(\"../Feature.js\").default} */ (\n      /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\n    );\n  }\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [opt_listen] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, opt_listen) {\n    const register = opt_listen !== undefined ? opt_listen : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        segmentWriter(feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [opt_unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, opt_unlisten) {\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const lowerLeft = map.getCoordinateFromPixel([\n      pixel[0] - this.pixelTolerance_,\n      pixel[1] + this.pixelTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      pixel[0] + this.pixelTolerance_,\n      pixel[1] - this.pixelTolerance_,\n    ]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    let segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function (segment) {\n        return segment.feature.getGeometry().getType() !== GeometryType.CIRCLE;\n      });\n    }\n\n    let snapped = false;\n    let vertex = null;\n    let vertexPixel = null;\n\n    if (segments.length === 0) {\n      return {\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel,\n      };\n    }\n\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    let closestSegmentData;\n    let minSquaredDistance = Infinity;\n    for (let i = 0; i < segments.length; ++i) {\n      const segmentData = segments[i];\n      tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n      tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n      const delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n      if (delta < minSquaredDistance) {\n        closestSegmentData = segmentData;\n        minSquaredDistance = delta;\n      }\n    }\n    const closestSegment = closestSegmentData.segment;\n\n    if (this.vertex_ && !this.edge_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      if (dist <= this.pixelTolerance_) {\n        snapped = true;\n        vertex =\n          squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      const isCircle =\n        closestSegmentData.feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n      if (isCircle) {\n        let circleGeometry = closestSegmentData.feature.getGeometry();\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n        }\n        vertex = toUserCoordinate(\n          closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          ),\n          projection\n        );\n      } else {\n        tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n        tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n        vertex = toUserCoordinate(\n          closestOnSegment(projectedCoordinate, tempSegment),\n          projection\n        );\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          if (dist <= this.pixelTolerance_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n\n    return {\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel,\n    };\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n        .clone()\n        .transform(userProjection, projection));\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment,\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter(feature, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment,\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment,\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = {\n        feature: feature,\n        segment: [coordinates, coordinates],\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = {\n            feature: feature,\n            segment: segment,\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = {\n      feature: feature,\n      segment: [coordinates, coordinates],\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment,\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n}\n\nexport default Snap;\n","import 'ol/ol.css';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Map from 'ol/Map';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport sync from 'ol-hashed';\n\nimport DragAndDrop from 'ol/interaction/DragAndDrop';\nimport Modify from 'ol/interaction/Modify';\nimport Draw from 'ol/interaction/Draw';\nimport Snap from 'ol/interaction/Snap';\n\n\nconst map = new Map({\n  target: 'map',\n  layers: [],\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nconst source = new VectorSource();\nconst layer = new VectorLayer({\n  source: source\n});\nmap.addLayer(layer);\n\nmap.addInteraction(new DragAndDrop({\n  source: source,\n  formatConstructors: [GeoJSON]\n}));\n\nmap.addInteraction(new Modify({\n  source: source\n}));\n\nmap.addInteraction(new Draw({\n  type: 'Polygon',\n  source: source\n}));\n\nmap.addInteraction(new Snap({\n  source: source\n}));\n\nconst clear = document.getElementById('clear');\nclear.addEventListener('click', function() {\n  source.clear();\n});\nconst format = new GeoJSON({featureProjection: 'EPSG:3857'});\nconst download = document.getElementById('download');\nsource.on('change', function() {\n  const features = source.getFeatures();\n  const json = format.writeFeatures(features);\n  download.href = 'data:text/json;charset=utf-8,' + json;\n});\n\nsync(map);"],"names":["$003acff01e79c0a73122c747343d2e59$export$9099ad97b570f7c","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$bfcfd5d9960b75cc9cb78b58301ad8a4$export$9099ad97b570f7c","$f7bbc97715b7cef936b659025f276afb$export$9099ad97b570f7c","Disposable","disposed","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$8eda8fbd1364c8a1","a","b","$7c21d7646a0313abf7b847efa68bfceb$export$45934da9231b7323","arr","direction","n","length","i","$7c21d7646a0313abf7b847efa68bfceb$export$1f4f991ce94838ce","begin","end","tmp","$7c21d7646a0313abf7b847efa68bfceb$export$46e35401bc090c62","data","extension","Array","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$bcc761834e33d339","arr1","arr2","len1","$8ff7925ef9afa7e69604ab9620edac22$export$ad8dd69aa6772cd0","$8ff7925ef9afa7e69604ab9620edac22$export$5c50afa32081505e","$8ff7925ef9afa7e69604ab9620edac22$export$3850addf0fb4e6a7","$e1ac967f910869e98e549bfd20a1853c$export$f3c88f5a058bec38","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$e1ac967f910869e98e549bfd20a1853c$export$97fff7491bd246bd","object","property","$e1ac967f910869e98e549bfd20a1853c$export$207c30846165e93a","values","push","$e1ac967f910869e98e549bfd20a1853c$export$988399e568471db1","$99fe3f3343ef18166bd431edc467d890$export$9099ad97b570f7c","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$99fe3f3343ef18166bd431edc467d890$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$c81aa09fb137106970dbc142b1e89ec3$export$9099ad97b570f7c","$7961378a294a4943979a10a4df4a3fcf$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$d2df825b2d8bc2ba","$7961378a294a4943979a10a4df4a3fcf$export$6dee5fd4fdf600ff","$02e80757fefec0a9636ae28d17c9fab2$export$21f63b82add5980c","$02e80757fefec0a9636ae28d17c9fab2$export$9099ad97b570f7c","Observable","revision_","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","changed","getRevision","on","len","once","ol_key","un","$99fe3f3343ef18166bd431edc467d890$exports","default","$cd365e7aabd14aaf6df378f6a61e84d7$export$18e1b4ff5b3c2297","Error","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$604e9536b9e0488a","obj","ol_uid","String","$cd365e7aabd14aaf6df378f6a61e84d7$export$f2eb173e8f6e4130","$a41f90da440d5a4a421775ee47a2c536$export$b902cfd711fa7f06","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$var$BaseObject","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$b958104f5d8e9527","set","opt_silent","applyProperties","unset","$02e80757fefec0a9636ae28d17c9fab2$exports","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$a41f90da440d5a4a421775ee47a2c536$export$9099ad97b570f7c","$fd652548d0f540d94aaff6aa830746d2$export$9099ad97b570f7c","AssertionError","code","message","split","name","$fd652548d0f540d94aaff6aa830746d2$var$__extends","$2ce41f61858dd350a0b2670bdab4e597$export$b8795f4f643ce74f","assertion","errorCode","$fd652548d0f540d94aaff6aa830746d2$exports","$fe05caf5f991aea82bd67c9bebabc467$export$7cf753b6a6534915","styles_1","getZIndex","$fe05caf5f991aea82bd67c9bebabc467$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","$a41f90da440d5a4a421775ee47a2c536$exports","getChangeEventType","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$fe05caf5f991aea82bd67c9bebabc467$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$df0b68b08946bf3d8de6eeca4fba3a5f$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$df0b68b08946bf3d8de6eeca4fba3a5f$export$af68584dedf5e52c","Math","PI","$df0b68b08946bf3d8de6eeca4fba3a5f$export$9099ad97b570f7c","$af95442a94d1862a138c401177ef0c4b$export$77f8d2fc923b14e3","transform","c","d","e","f","$af95442a94d1862a138c401177ef0c4b$export$6af9bbf310c9e4bf","coordinate","x","y","$af95442a94d1862a138c401177ef0c4b$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$af95442a94d1862a138c401177ef0c4b$export$6e6aac0f60e83c70","mat","det","$af95442a94d1862a138c401177ef0c4b$export$47bee913e0e80eb4","join","$8913dbc1b585601bf0ecb482246c0b4c$export$9099ad97b570f7c","$8ebfb36ef5532881c5652b708da2c120$export$a7ecbd362d65c1fe","coordinates","extent","$8ebfb36ef5532881c5652b708da2c120$export$dbb3d72606cdc11","$8ebfb36ef5532881c5652b708da2c120$export$2852acc8f8b94686","$8ebfb36ef5532881c5652b708da2c120$export$14e1765886db335a","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$d6a0542127b96c83","slice","$8ebfb36ef5532881c5652b708da2c120$export$c7d6a927f416dd39","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$c422a9fcb5f1ee5c","$8ebfb36ef5532881c5652b708da2c120$export$cc70e7e516e4370f","$8ebfb36ef5532881c5652b708da2c120$export$4f55e2d709659e7b","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$ea8082d0226d35a5","$8ebfb36ef5532881c5652b708da2c120$export$80741250c74fd4fa","$8ebfb36ef5532881c5652b708da2c120$export$b6ab620e694fb080","$8ebfb36ef5532881c5652b708da2c120$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$8ebfb36ef5532881c5652b708da2c120$export$4b116deb3079b147","$8ebfb36ef5532881c5652b708da2c120$export$bcc761834e33d339","$8ebfb36ef5532881c5652b708da2c120$export$bfc2e43ae5c3c00c","$8ebfb36ef5532881c5652b708da2c120$export$8696fee511ea7c7a","min","max","$8ebfb36ef5532881c5652b708da2c120$export$c26f7b9c5adc34b4","callback","val","$8ebfb36ef5532881c5652b708da2c120$export$3932426cd8118930","$8ebfb36ef5532881c5652b708da2c120$export$4e2fc25ce97f3583","$8ebfb36ef5532881c5652b708da2c120$export$35aedeaeee8be6cd","$8ebfb36ef5532881c5652b708da2c120$export$5100f0815ea32995","$8ebfb36ef5532881c5652b708da2c120$export$339e303bf205caae","$8ebfb36ef5532881c5652b708da2c120$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$e178c8044d3d0a05","$8ebfb36ef5532881c5652b708da2c120$export$c491031eb9adcc3a","intersection","$8ebfb36ef5532881c5652b708da2c120$export$c3bd2c3b798b0350","$8ebfb36ef5532881c5652b708da2c120$export$3dc3550566517965","$8ebfb36ef5532881c5652b708da2c120$export$988399e568471db1","$8ebfb36ef5532881c5652b708da2c120$export$76e02248c0889c3e","transformFn","opt_stops","width","height","xs","ys","l","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$1514cc7c23ad291d61b727f0ef5e4246$export$9099ad97b570f7c","Projection","options","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$916dab65013919ad0345478f9a9f4e0f$export$4b8705656de00c72","$916dab65013919ad0345478f9a9f4e0f$export$4a376e0f60d976ee","cosh","exp","log2","$916dab65013919ad0345478f9a9f4e0f$export$fd0b1e5ac4df516c","t","$916dab65013919ad0345478f9a9f4e0f$export$8b6706701cd75ea9","$916dab65013919ad0345478f9a9f4e0f$export$11468133b1231643","angleInRadians","$916dab65013919ad0345478f9a9f4e0f$export$4fc80c88d72f096","angleInDegrees","$916dab65013919ad0345478f9a9f4e0f$export$3334706ffb3dccb1","r","$916dab65013919ad0345478f9a9f4e0f$export$45ca8e7f50ccf2e0","$7d5079714e2786ec6bee07910f0d8a86$export$8c5f77743cd0e8b7","$7d5079714e2786ec6bee07910f0d8a86$export$bb1f4f75177e5528","$7d5079714e2786ec6bee07910f0d8a86$export$6fd015d56b8406c9","$7d5079714e2786ec6bee07910f0d8a86$export$64afaa717a0c4932","$7d5079714e2786ec6bee07910f0d8a86$export$2126dea64bc40b7b","log","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$850c9b527a5298aa","$7d5079714e2786ec6bee07910f0d8a86$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$f361696640082386","atan","$655738a66489cc3574c072262645bff6$export$6fd015d56b8406c9","$655738a66489cc3574c072262645bff6$export$af68584dedf5e52c","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$850c9b527a5298aa","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$568ed88074851180","destination","sourceCode","destinationCode","$29d4509fdec4b1b2fe8c71c42629ef39$export$9099ad97b570f7c","$525020a649871896a05d6fe288616b91$export$761de677acb0d085","$525020a649871896a05d6fe288616b91$export$80a87d59b6e09730","c1","distance","bearing","opt_radius","radius","lat1","lon1","dByR","lat","asin","atan2","$29884e9b826cd25109649ab0c360e769$export$1eeee98c239f0f5e","segment","start","along","$29884e9b826cd25109649ab0c360e769$export$bcc761834e33d339","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$d40e2456b1281660","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$8b6706701cd75ea9","coord1","coord2","$29884e9b826cd25109649ab0c360e769$export$d4cadb6bf5b49eb","sqrt","$29884e9b826cd25109649ab0c360e769$export$7cbaac00acb1d4fe","$29884e9b826cd25109649ab0c360e769$export$5a0d9577a24f3c5b","projection","worldWidth","worldsAway","$29884e9b826cd25109649ab0c360e769$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$524e9c84a4c58bd58490804da4c772c6$export$3fbbaef54e2e9d28","$524e9c84a4c58bd58490804da4c772c6$export$678028d364072132","$524e9c84a4c58bd58490804da4c772c6$export$6308908a0016f099","$0ba2913765cbb83278246e730dbcdcdf$export$568ed88074851180","$524e9c84a4c58bd58490804da4c772c6$export$7eb84799c931fe91","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$a42db349809b0c24","projections","forEach","$524e9c84a4c58bd58490804da4c772c6$export$fd4cd3535c7ea97f","$524e9c84a4c58bd58490804da4c772c6$export$f704437a72056fb8","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$c7a9310bdeddab53","projection1","projection2","equalUnits","$524e9c84a4c58bd58490804da4c772c6$export$747af4f49bde2f53","sourceProjection","destinationProjection","transformFunc","$6cb154572a1cc3d19ea74b1e9a3a7861$export$7eb84799c931fe91","$524e9c84a4c58bd58490804da4c772c6$export$9336879ef6599bf5","$524e9c84a4c58bd58490804da4c772c6$export$4b169b49e1a4823b","$524e9c84a4c58bd58490804da4c772c6$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$352fd07bdd93dc1e","$524e9c84a4c58bd58490804da4c772c6$export$4a182a4d53d7595c","$524e9c84a4c58bd58490804da4c772c6$export$b5d00774755783fc","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$a7d473ff80a6a3b","$524e9c84a4c58bd58490804da4c772c6$export$f87215506b474b9e","$3f4f29b0a4be88d8241f933ff6121a33$export$92106241c01aa541","opt_dest","dest","j","$3f4f29b0a4be88d8241f933ff6121a33$export$d40e2456b1281660","anchor","anchorX","anchorY","deltaX","deltaY","k","$3f4f29b0a4be88d8241f933ff6121a33$export$41b0d7466cde8385","$7d5079714e2786ec6bee07910f0d8a86$exports","PROJECTIONS","$655738a66489cc3574c072262645bff6$exports","fromEPSG4326","toEPSG4326","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$a17c336463d573a615343832f6e09aa8$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$8ebfb36ef5532881c5652b708da2c120$export$d1e01ccfd06bf8ee","rotate","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$8af1af76f23419d9d724a1b0182ffb00$var$cloneGeometries","geometries","clonedGeometries","$8af1af76f23419d9d724a1b0182ffb00$export$9099ad97b570f7c","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$8af1af76f23419d9d724a1b0182ffb00$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","isEmpty","$a17c336463d573a615343832f6e09aa8$exports","$508255911b6472d9d16e9a97599ab01e$export$9099ad97b570f7c","FeatureFormat","dataProjection","defaultFeatureProjection","getReadOptions","opt_options","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","$508255911b6472d9d16e9a97599ab01e$export$534b7b915a5ec453","write","transformed","decimals","power_1","pow","round","$e1f6506982452a68a8aaa230bb78068a$export$9099ad97b570f7c","$1a6c956f7a172f55a86db631d141a623$var$getObject","JSON","parse","$1a6c956f7a172f55a86db631d141a623$export$9099ad97b570f7c","JSONFeature","$1a6c956f7a172f55a86db631d141a623$var$__extends","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","$01b4ee2590431d23f431f1e9785f436f$export$9099ad97b570f7c","$57ce72c0539154dec2abdc81ffcff6df$export$2a65008b73824080","layout","$57ce72c0539154dec2abdc81ffcff6df$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$57ce72c0539154dec2abdc81ffcff6df$export$9099ad97b570f7c","SimpleGeometry","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","$3f4f29b0a4be88d8241f933ff6121a33$export$8f869025bba9609b","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$acf7548d1f0e8581","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$ba38095f6bb45df2","ends","$020a0553c73896bfe8e0cfb3e7ff136b$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$020a0553c73896bfe8e0cfb3e7ff136b$export$3dd3914e22f9012e","$e477329667689b6619ea04e4a51dbccc$export$a53e62528b652807","$e477329667689b6619ea04e4a51dbccc$export$e175f505890ac90f","$e477329667689b6619ea04e4a51dbccc$export$ab1a51db55485752","coordinatess","opt_ends","jj","$a357f0a07bdcadd773e93ca791a42f7b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$ade7859c9eb393ec","simplifiedEnds","$a357f0a07bdcadd773e93ca791a42f7b$export$383ea8a1f2974dfb","$a357f0a07bdcadd773e93ca791a42f7b$export$e29de4fdb2175738","$a357f0a07bdcadd773e93ca791a42f7b$export$1df19a1eb5514c2f","$419a691625de72e89acadcc033e1165f$export$40f3d9558cf6e846","ret","point1","point2","$c39683e7fcea5e9dae135d728d60cf52$export$92f32d891164b0ac","opt_coordinates","$c39683e7fcea5e9dae135d728d60cf52$export$d82a8a3167f968d","opt_coordinatess","$c39683e7fcea5e9dae135d728d60cf52$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$168654b72fccbd53f77518b62ff915e1$export$55be7a9e3fef4787","fraction","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$7c21d7646a0313abf7b847efa68bfceb$export$26b1c556c0e0f127","$168654b72fccbd53f77518b62ff915e1$export$1a804b04fa5a0253","m","extrapolate","lo","hi","m0","$7311a6a51d57e65f0d3a69bd7a380356$export$f7b55b637f92fd7","$7311a6a51d57e65f0d3a69bd7a380356$export$e2ed757909b25f63","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$51e46a3625992b91","$32ab876027ca0904f46063bee68b73aa$export$26f047a5bfac4b1a","coordinatesExtent","intersects","startRel","endRel","startX","startY","endX","endY","slope","$8ebfb36ef5532881c5652b708da2c120$export$525a75abb91115e3","$32ab876027ca0904f46063bee68b73aa$export$717c2c7c46a5bf3d","$32ab876027ca0904f46063bee68b73aa$export$f14bd9270666b480","$c028848ec55b72b61f5eaf0ec6396be2$export$7326ac1b36a49776","$f3208b74dbadea817236410092d4ed69$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","$f3208b74dbadea817236410092d4ed69$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","$57ce72c0539154dec2abdc81ffcff6df$exports","$9cc45ed4bf6c6f99d7b74c7015645e2b$export$9099ad97b570f7c","MultiLineString","ends_","lineStrings","$9cc45ed4bf6c6f99d7b74c7015645e2b$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$168654b72fccbd53f77518b62ff915e1$export$8958f67b085a89b1","getEnds","getLineString","$f3208b74dbadea817236410092d4ed69$exports","getLineStrings","getFlatMidpoints","midpoints","$32ab876027ca0904f46063bee68b73aa$export$414b603e1c51ecd4","$acd1b863667085614d305475fd6c1d27$export$9099ad97b570f7c","Point","$acd1b863667085614d305475fd6c1d27$var$__extends","$0c87ec0f12a2b62262bf5859757b8a2b$export$9099ad97b570f7c","MultiPoint","$0c87ec0f12a2b62262bf5859757b8a2b$var$__extends","appendPoint","multiPoint","getPoint","$acd1b863667085614d305475fd6c1d27$exports","getPoints","points","$7641779008ab07f3e708dabdbbb046eb$export$9bf2059fd656d5e9","twiceArea","$7641779008ab07f3e708dabdbbb046eb$export$99cb92d00fd73c87","area","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$9099ad97b570f7c","LinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","getArea","$67787df47ebd352536b767ba5aa6ea83$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","$221ffa684d4ba252080508824e602b78$export$c77fe031a1447f2e","$52f5ef13e882c7db8132623a2b51ee49$export$add61ad31d0a68b4","edge","$52f5ef13e882c7db8132623a2b51ee49$export$586adaf930d9fdb6","opt_right","right","isClockwise","$52f5ef13e882c7db8132623a2b51ee49$export$325e57738fd8b321","$52f5ef13e882c7db8132623a2b51ee49$export$4efd43868de93336","$bffbcd35af658c4477627697774de1c2$var$Polygon","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$bffbcd35af658c4477627697774de1c2$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$exports","getLinearRings","linearRings","$bffbcd35af658c4477627697774de1c2$export$9099ad97b570f7c","$bffbcd35af658c4477627697774de1c2$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$bffbcd35af658c4477627697774de1c2$export$b50d271c6e9656cd","$bffbcd35af658c4477627697774de1c2$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$bffbcd35af658c4477627697774de1c2$export$5d1798f0e1df079","getRadius","startAngle","$3f89ce735a32ce0bc16220a89ae67b2f$export$9099ad97b570f7c","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$3f89ce735a32ce0bc16220a89ae67b2f$var$__extends","appendPolygon","newEndss","multiPolygon","$020a0553c73896bfe8e0cfb3e7ff136b$export$7bbfd5f5d0d7544b","$020a0553c73896bfe8e0cfb3e7ff136b$export$6564f135364e210c","$7311a6a51d57e65f0d3a69bd7a380356$export$664b9cb38de51b70","$7641779008ab07f3e708dabdbbb046eb$export$3ed76a8ff8a671c","getEndss","getFlatInteriorPoints","$8080d3a1460a7f67662c4a8e92d86a37$export$3ed76a8ff8a671c","interiorPoints","$67787df47ebd352536b767ba5aa6ea83$export$2bd6b2f516920f59","getInteriorPoints","$0c87ec0f12a2b62262bf5859757b8a2b$exports","$52f5ef13e882c7db8132623a2b51ee49$export$9ae9bd8fe57776c1","simplifiedEndss","$a357f0a07bdcadd773e93ca791a42f7b$export$503109e33f5b8344","getPolygon","prevEnds","$bffbcd35af658c4477627697774de1c2$exports","getPolygons","$32ab876027ca0904f46063bee68b73aa$export$eae4874c99627698","$e477329667689b6619ea04e4a51dbccc$export$abe2fb3e7ce9556","lastEnds","$5d8566a0c1419db39058842324e9a300$var$readGeometry","$5d8566a0c1419db39058842324e9a300$var$readPointGeometry","$5d8566a0c1419db39058842324e9a300$var$readLineStringGeometry","$5d8566a0c1419db39058842324e9a300$var$readPolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$readMultiPointGeometry","$9cc45ed4bf6c6f99d7b74c7015645e2b$exports","$5d8566a0c1419db39058842324e9a300$var$readMultiLineStringGeometry","$3f89ce735a32ce0bc16220a89ae67b2f$exports","$5d8566a0c1419db39058842324e9a300$var$readMultiPolygonGeometry","map","$8af1af76f23419d9d724a1b0182ffb00$exports","$5d8566a0c1419db39058842324e9a300$var$readGeometryCollectionGeometry","$5d8566a0c1419db39058842324e9a300$var$writeGeometry","geoJSON","$5d8566a0c1419db39058842324e9a300$var$writePointGeometry","$5d8566a0c1419db39058842324e9a300$var$writeLineStringGeometry","rightHanded","$5d8566a0c1419db39058842324e9a300$var$writePolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiPointGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiLineStringGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiPolygonGeometry","geometry1","$5d8566a0c1419db39058842324e9a300$var$writeGeometryCollectionGeometry","$5d8566a0c1419db39058842324e9a300$export$9099ad97b570f7c","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","$5d8566a0c1419db39058842324e9a300$var$__extends","geoJSONFeature","$fe05caf5f991aea82bd67c9bebabc467$exports","geoJSONFeatures","crs","objects","$1a6c956f7a172f55a86db631d141a623$exports","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$9fe004474d6f7f65","color","$ddc7f5de3664aab559d1c545c366e59d$export$47bee913e0e80eb4","$ddc7f5de3664aab559d1c545c366e59d$var$fromNamed","el","document","createElement","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$21528ce64591bf2","s","g","exec","hasAlpha","parseInt","substr","$ddc7f5de3664aab559d1c545c366e59d$export$2e33abec8aecd572","Number","$ddc7f5de3664aab559d1c545c366e59d$var$fromStringInternal_","$ddc7f5de3664aab559d1c545c366e59d$export$7266a24c0caa2a8","$80553d92e1fbcb82d752b6de833f9cf3$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","setSize","maxCacheSize","$80553d92e1fbcb82d752b6de833f9cf3$export$601b9e2be44c7cb2","$6e657bb9f80dab756c945a825e2a2cee$export$9099ad97b570f7c","$3a8294651627eb74246351f5b596cf68$export$9099ad97b570f7c","BaseLayer","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$3a8294651627eb74246351f5b596cf68$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$939d3f0e5ddda81ef3d6b6e4c37a0795$export$9099ad97b570f7c","$88faaf1879d30d470a1b447dd4b5a77a$export$9099ad97b570f7c","$1935b85c22cfc539ea58e141ab0b37d6$export$16970faadcd3f29b","layerState","viewState","zoom","$1935b85c22cfc539ea58e141ab0b37d6$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$3a8294651627eb74246351f5b596cf68$exports","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$52488a0195cf0e38344877f5a3896831$export$9099ad97b570f7c","MapRenderer","map_","$52488a0195cf0e38344877f5a3896831$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","$1935b85c22cfc539ea58e141ab0b37d6$exports","inView","getWrapX","callback_1","order","i1","distanceSq","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$7ef0aa4943b3f1208e19af1336a3f8f6$export$4b206f1dd0085e9f","$7ef0aa4943b3f1208e19af1336a3f8f6$export$6cfb92f3ca39d412","$7ef0aa4943b3f1208e19af1336a3f8f6$export$a6463a3b3793c500","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$543c908bf17a24fb","$2016f251f21b02e27a5ca36c37510540$export$bccc8605349feea7","$2016f251f21b02e27a5ca36c37510540$export$f16ffc71033a7aaa","$2016f251f21b02e27a5ca36c37510540$export$1940d5d2b4cf824d","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$9544418e5c6fedfe","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$700ce540937d8c69","passive","defineProperty","window","error","$8b566ca8fd3b2d9c184057ba73cbf345$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$47503d53c08beb29","node","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$18c07a12203603b5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$55c06ab37ead2f5d","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ffc0c15ee0fd31b3","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6ad0413f8fea3c71","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4f3c27e569bdb39e","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$b679e5c5d4b15cf5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$d721e051424a5865","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6f57224ec3df03c9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$70c5a077e5d6beb9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$907cf5cff4a8acb1","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","measureElement","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$384c0f09c94ed6cc","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$a2bf16790cd8f004","metrics","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4b2ca35321179b27","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$c02f953f8e44cc0a","offsetX","offsetY","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$executeLabelInstructions","drawImage","restore","$2ae21f590be041e7827bf48426c0766a$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$7ef0aa4943b3f1208e19af1336a3f8f6$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2ae21f590be041e7827bf48426c0766a$var$__extends","event_1","$1a95b8d63eeb9d5cd5e2742791ea7ab2$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$439ebc2b0f0ec9f4","getDataAtPixel","$52488a0195cf0e38344877f5a3896831$exports","$994e322493abe750f187f7e3835dca5c$export$9099ad97b570f7c","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$export$9099ad97b570f7c","Collection","unique_","unique","array_","assertUnique_","updateLength_","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$e6a59fbd122f687b33c2f382a3c7634b$exports","setLayers","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$f8e1a00fe597e09d283a3697649a8ad5$export$9099ad97b570f7c","MapEvent","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","getEventPixel","getCoordinateFromPixel","$f8e1a00fe597e09d283a3697649a8ad5$exports","$7aa259efacd921e7e7d327d1aea40a76$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$abba75ad998e5558d931e97019b1ab4c$export$9099ad97b570f7c","$75ed2fc91ec6cb8478583ef358a9dd4d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","emulateClick_","pointerEvent","newEvent","$5185059e8a82c1ae03c4e1ba7159b318$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$841b38a534c9217d8aceb4320d3d91b5$export$9099ad97b570f7c","$71b981cc74aab5981a718ea8e06b800b$export$9099ad97b570f7c","$eeb9190850355aed8fc5d92349a26bc6$export$55b8074a560bbdf4","$eeb9190850355aed8fc5d92349a26bc6$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$070765ef09fbcd82a0016eb3aec41934$export$9099ad97b570f7c","$6bfe069e85349c527971d875462feeac$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$6bfe069e85349c527971d875462feeac$var$__extends","added","getTilesLoading","tile","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$6bfe069e85349c527971d875462feeac$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","$69bda6b48e87f8072533951cf5cd4b41$export$9099ad97b570f7c","$6fef8cd20559fa789cc7c5f681ed5561$export$9099ad97b570f7c","$61ba71c2b15c8b7e6577526180db0da5$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$61ba71c2b15c8b7e6577526180db0da5$export$eaafe0fae18e32b1","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$e97ec87d2336bd4e","$4c6a822b604dbfa9a10722399f7335d0$export$eaafe0fae18e32b1","$8717569d70d85bd7f28c8c1b2c37daee$export$673b9849e2bc032c","$8717569d70d85bd7f28c8c1b2c37daee$export$9fbc3b1d6b2da9ec","$8717569d70d85bd7f28c8c1b2c37daee$export$1b5c1277e30d397d","$8717569d70d85bd7f28c8c1b2c37daee$export$5523e35ab8ae283a","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","returnValue","$19fadbefe1b7e34cc76223b5c3e441cc$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$19fadbefe1b7e34cc76223b5c3e441cc$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$75cf935c4655e9fc21b1ade56ed27175$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$75cf935c4655e9fc21b1ade56ed27175$export$7690ad4e930f454b","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","rotX","rotY","$19fadbefe1b7e34cc76223b5c3e441cc$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","fromExtent","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$8556eff40cf4f1624cd78ff7ea054c5b$export$c563c2b7121f8771","$8556eff40cf4f1624cd78ff7ea054c5b$export$48d31d2725e4d98b","$b198bbb8a7fca092de94dd3a772c1343$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$d66bdf9af75d90254b022f9a4b768a43$exports","view","$19fadbefe1b7e34cc76223b5c3e441cc$exports","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$6bfe069e85349c527971d875462feeac$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","toString","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$75ed2fc91ec6cb8478583ef358a9dd4d$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","$8316c877d328ebfc4f4b917229eec057$export$9099ad97b570f7c","Control","target_","listenerKeys","$8316c877d328ebfc4f4b917229eec057$var$__extends","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8316c877d328ebfc4f4b917229eec057$exports","$aef56543978371a8090d728a4f107ac0$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$aef56543978371a8090d728a4f107ac0$var$__extends","resetNorth_","$9812beea87bdcda9027d52b89085c87c$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$9812beea87bdcda9027d52b89085c87c$var$__extends","zoomByDelta_","currentZoom","newZoom","$c147d956996cb96e879ea56bdc9c5d5d$export$9099ad97b570f7c","$1ad0cf5090e3852174414bfc8cc27b9e$export$63568b31cb17dd4d","$1ad0cf5090e3852174414bfc8cc27b9e$export$d2c07614bfd6a817","$1ad0cf5090e3852174414bfc8cc27b9e$export$9099ad97b570f7c","Interaction","setActive","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","active","$4eeedd039b7e6d5b8277b175715f9541$export$9099ad97b570f7c","DoubleClickZoom","delta_","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","stopEvent","shiftKey","$1ad0cf5090e3852174414bfc8cc27b9e$exports","zoomByDelta","$0714aed143b912743afff175db44c1dc$export$e61edea4dfe4ed9b","$0714aed143b912743afff175db44c1dc$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$0714aed143b912743afff175db44c1dc$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","$054715504eaffdc825d0a6ada99ec596$export$8dbdea330bbd6b3c","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$584a07df7b145c47","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$363947888fb85da6","$054715504eaffdc825d0a6ada99ec596$export$a8612972eacfc116","$054715504eaffdc825d0a6ada99ec596$export$9f5e19851eeaf2c1","$054715504eaffdc825d0a6ada99ec596$export$1734dfcac3c09b2f","$054715504eaffdc825d0a6ada99ec596$export$59c8376875f673f8","$054715504eaffdc825d0a6ada99ec596$export$5bbcce8021828272","tagName","$054715504eaffdc825d0a6ada99ec596$export$d31d3f3aa38542a8","pointerType","$054715504eaffdc825d0a6ada99ec596$export$45cd27c0322d6513","isPrimary","$959ec1b544453a9fa4f0e9221c3bb0b0$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","centroid","$0714aed143b912743afff175db44c1dc$exports","update","getDistance","getAngle","centerpx","$719e5208cd50905e41bacbcae2219883$export$9099ad97b570f7c","DragRotate","lastAngle_","$719e5208cd50905e41bacbcae2219883$var$__extends","$d0055a036577a61fd8306330947568c7$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$d0055a036577a61fd8306330947568c7$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$4d9b552836937ca2","DragBoxEvent","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$export$9099ad97b570f7c","DragBox","box_","$d0055a036577a61fd8306330947568c7$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$export$9099ad97b570f7c","DragZoom","out_","out","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","mapExtent","boxPixelExtent","$8ebfb36ef5532881c5652b708da2c120$export$9f54817615211741","$275b26378704892d776581791f32dc0e$exports","$8d5ac6bc9707ee873610cb367c0dab7f$export$9099ad97b570f7c","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$55ea853e77e2fe25fa1a8793cb31a3bf$export$9099ad97b570f7c","KeyboardZoom","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$f7a99b9e7b1a72242a3eb408b28d3563$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$601b81cfcc535d77832cc96f04e942a1$var$__extends","scaleDelta","$976448907138da16f7612e32ecc55ac7$export$9099ad97b570f7c","Map1","$9812beea87bdcda9027d52b89085c87c$exports","zoomOptions","$aef56543978371a8090d728a4f107ac0$exports","rotateOptions","attribution","$194d017bd833b991c2c712fa2ff5b0e5$exports","attributionOptions","$c10299a05f898a09c43f788b5b6dfdbd$export$b403fbac94228e09","altShiftDragRotate","$719e5208cd50905e41bacbcae2219883$exports","doubleClickZoom","$4eeedd039b7e6d5b8277b175715f9541$exports","zoomDelta","zoomDuration","dragPan","$959ec1b544453a9fa4f0e9221c3bb0b0$exports","pinchRotate","$74b3a0ab43d5d3c47ed1a15cedc99f6a$exports","pinchZoom","$601b81cfcc535d77832cc96f04e942a1$exports","keyboard","$bcd9d2d6fd38b8643ae7b7b6fd22a911$exports","$55ea853e77e2fe25fa1a8793cb31a3bf$exports","mouseWheelZoom","$f7a99b9e7b1a72242a3eb408b28d3563$exports","shiftDragZoom","$b5cd6c68e27395a36aa4c8d3c5395250$exports","$ad51cb5d42c2f2a2874b19907e742966$export$b403fbac94228e09","$976448907138da16f7612e32ecc55ac7$var$__extends","$2ae21f590be041e7827bf48426c0766a$exports","$b198bbb8a7fca092de94dd3a772c1343$exports","$a51010926fccd7fa7fa549e12811b655$exports","t1","t2","r1","e1","a1","h1","u","p","_maxEntries","_minEntries","n1","leaf","m2","c2","h2","o1","all","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$ddbf871807cbdb80f3672c8008047cee$export$9099ad97b570f7c","$96f7f946d494434256fc7391bfca3d81$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$7eb24b24c1bb92b5f48477cc7ed0ef45$export$55029509b82b2e2b","$9395bcf7fa5c622dff9d678b4abf4bba$export$9099ad97b570f7c","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","$9395bcf7fa5c622dff9d678b4abf4bba$var$__extends","getFill","getRadius2","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","$19d3c8bef588e205c4ab8014047de833$export$9099ad97b570f7c","CircleStyle","$19d3c8bef588e205c4ab8014047de833$var$__extends","setRadius","$9395bcf7fa5c622dff9d678b4abf4bba$exports","$e1f9f7b0a69ff9a9f4c2bbbdfef410b1$export$9099ad97b570f7c","Fill","color_","setColor","$4c58aec149e538982cbf4e874e866484$export$9099ad97b570f7c","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b550892c9c7d6707a4415bf7976deb12$var$Style","Style","geometryFunction_","$b550892c9c7d6707a4415bf7976deb12$var$defaultGeometryFunction","image_","image","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$b550892c9c7d6707a4415bf7976deb12$var$defaultStyles","$b550892c9c7d6707a4415bf7976deb12$export$33d0043adf82cc14","$19d3c8bef588e205c4ab8014047de833$exports","$b550892c9c7d6707a4415bf7976deb12$export$a612282e1e1ae7dc","styles","white","blue","$ceed79ad4f0d8f0ebaf810c3cca30983$var$Property","$ceed79ad4f0d8f0ebaf810c3cca30983$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$ceed79ad4f0d8f0ebaf810c3cca30983$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","styleFunction","$b550892c9c7d6707a4415bf7976deb12$export$4aaa4bacaec09e94","$75febe525c6e0d71892cea5e044a142c$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$75febe525c6e0d71892cea5e044a142c$export$c649c04369bd3370","$75febe525c6e0d71892cea5e044a142c$export$2513c58bc344fc5c","$75febe525c6e0d71892cea5e044a142c$export$84e3c67fd41b07f5","$75febe525c6e0d71892cea5e044a142c$export$6cd4b1e0c0e7240c","$75febe525c6e0d71892cea5e044a142c$export$9099ad97b570f7c","$98c4b84222a5e84ec508cd638c4e0b8c$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$ca67e4c506ae561bc3174e981b55d257$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$ca67e4c506ae561bc3174e981b55d257$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$072d5e6cee1f9ae87cd55eb588566cc6$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$072d5e6cee1f9ae87cd55eb588566cc6$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$ca67e4c506ae561bc3174e981b55d257$exports","$28ceeb2640c662153e0cc1bb27e7eea9$export$9099ad97b570f7c","CanvasLineStringBuilder","$28ceeb2640c662153e0cc1bb27e7eea9$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$f5fec2e7653cdbd2c7958b8312f0d7d6$export$9099ad97b570f7c","CanvasPolygonBuilder","$f5fec2e7653cdbd2c7958b8312f0d7d6$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$efe444a788e44e26b0fd0d03352a7cb8$export$9099ad97b570f7c","$f19e98a3c9584b88eb9c26a752a19276$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$7e7051822986fcb02ea0e43ac0707b32$export$3964e67694391753","$7e7051822986fcb02ea0e43ac0707b32$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$7e7051822986fcb02ea0e43ac0707b32$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$4f54cdaa0352e7689a6e30aa9d8207ec$var$BATCH_CONSTRUCTORS","$f5fec2e7653cdbd2c7958b8312f0d7d6$exports","$072d5e6cee1f9ae87cd55eb588566cc6$exports","$28ceeb2640c662153e0cc1bb27e7eea9$exports","$7e7051822986fcb02ea0e43ac0707b32$exports","$4f54cdaa0352e7689a6e30aa9d8207ec$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$ae15ed96a99c1303ea67938747c94fca$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$ae15ed96a99c1303ea67938747c94fca$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","imageState","$ac230d10056414a40eb774bd091234f1$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$ac230d10056414a40eb774bd091234f1$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","moveTo","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$ae15ed96a99c1303ea67938747c94fca$exports","$2a2c9e207ab3a32ae55e264c8b11e252$export$9099ad97b570f7c","$56c23dc34f9f14c7874ab5d8b63c5fb3$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$tmpExtent","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p1","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p2","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p3","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p4","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$rtlRegEx","fromCharCode","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6cf1557e9efeeb4d32c6b7acaeb9c268$export$9099ad97b570f7c","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$c6e46405591acfe99e5a94d22fbe8573$var$ORDER","$c6e46405591acfe99e5a94d22fbe8573$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$c6e46405591acfe99e5a94d22fbe8573$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$c6e46405591acfe99e5a94d22fbe8573$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$c6e46405591acfe99e5a94d22fbe8573$export$9099ad97b570f7c","$9f8df4495769241e9ec70201b90e0eaa$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9f8df4495769241e9ec70201b90e0eaa$var$__extends","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$250247a34cdb6d9c26d2c6d3640e511f$export$9099ad97b570f7c","$c921d54e03c98d7c23acffcfb75264d3$export$9099ad97b570f7c","$e65a38a3837120ad833711b5930f5912$export$9099ad97b570f7c","ImageBase","$e65a38a3837120ad833711b5930f5912$var$__extends","$2fc4e1887f4ffa14e16ea647fd21482c$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$e65a38a3837120ad833711b5930f5912$exports","$92a5ba3fab046f40ee35c464c4cf79b4$var$taintedTestContext","$92a5ba3fab046f40ee35c464c4cf79b4$var$IconImage","IconImage","imageState_","tainted_","$92a5ba3fab046f40ee35c464c4cf79b4$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$2fc4e1887f4ffa14e16ea647fd21482c$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$92a5ba3fab046f40ee35c464c4cf79b4$export$7eb84799c931fe91","$4de6336f82b6fd9bc7cf688bb41b8b96$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$92a5ba3fab046f40ee35c464c4cf79b4$exports","offset_","offsetOrigin_","offsetOrigin","$4de6336f82b6fd9bc7cf688bb41b8b96$var$__extends","setAnchor","iconImageSize","$9f8fd0aab32ac5c353b56f527e1d00a9$export$5d244421488756f8","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$65a5cfeed6fd0c33","feature1","feature2","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f0ea347488340e3d","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$522dfd100dd96ba1","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderGeometry","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderFeatureInternal","$c2243072b6513ba407326b2a30b1374a$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c2243072b6513ba407326b2a30b1374a$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$af95442a94d1862a138c401177ef0c4b$export$e7468c0ae08395df","clipped","transforms","imageSmoothingEnabled","$9f8df4495769241e9ec70201b90e0eaa$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","$4de6336f82b6fd9bc7cf688bb41b8b96$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$9f8fd0aab32ac5c353b56f527e1d00a9$export$9fd146a6491490e3","resultFeatures","$9f8fd0aab32ac5c353b56f527e1d00a9$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","gutter","loadExtent","$8ebfb36ef5532881c5652b708da2c120$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","loadFeatures","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f3b3f9822f340683","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$ac230d10056414a40eb774bd091234f1$exports","$2f5ed0ce65ecb2bfe439d05296b3d36a$export$9099ad97b570f7c","VectorLayer","$2f5ed0ce65ecb2bfe439d05296b3d36a$var$__extends","$c2243072b6513ba407326b2a30b1374a$exports","$ceed79ad4f0d8f0ebaf810c3cca30983$exports","$e311f93de68f58225dfc37d89d1dcffc$export$9099ad97b570f7c","opt_maxEntries","rbush_","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionLike","$6a9611a0560ac769e67fadc6cfef9a2c$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","getContextOptions","refresh","setAttributions","setState","$4b7d9e079415657c49d05e16783d2ed4$export$9099ad97b570f7c","$26b846260444bc742bddf88d96721338$export$8dbdea330bbd6b3c","$2ef5772bb5b0926a9ba82fc2a88f3163$var$withCredentials","$2ef5772bb5b0926a9ba82fc2a88f3163$export$52988233cf090939","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$2ef5772bb5b0926a9ba82fc2a88f3163$export$4355fa6d12274ca5","addFeatures","$76e99b295c09c7c5e340e251e89879b1$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$76e99b295c09c7c5e340e251e89879b1$var$__extends","$76e99b295c09c7c5e340e251e89879b1$export$9099ad97b570f7c","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$6a9611a0560ac769e67fadc6cfef9a2c$exports","$f13917a90d4db9b497c005419c2c20b9$var$cachedSetTimeout","$f13917a90d4db9b497c005419c2c20b9$var$cachedClearTimeout","$f13917a90d4db9b497c005419c2c20b9$var$process","$f13917a90d4db9b497c005419c2c20b9$exports","$f13917a90d4db9b497c005419c2c20b9$var$defaultSetTimout","$f13917a90d4db9b497c005419c2c20b9$var$defaultClearTimeout","$f13917a90d4db9b497c005419c2c20b9$var$runTimeout","fun","$f13917a90d4db9b497c005419c2c20b9$var$currentQueue","$f13917a90d4db9b497c005419c2c20b9$var$queue","$f13917a90d4db9b497c005419c2c20b9$var$draining","$f13917a90d4db9b497c005419c2c20b9$var$queueIndex","$f13917a90d4db9b497c005419c2c20b9$var$cleanUpNextTick","$f13917a90d4db9b497c005419c2c20b9$var$drainQueue","run","marker","$f13917a90d4db9b497c005419c2c20b9$var$runClearTimeout","$f13917a90d4db9b497c005419c2c20b9$var$Item","$f13917a90d4db9b497c005419c2c20b9$var$noop","nextTick","browser","env","argv","version","versions","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","$4877b11fc05196ccee8e726f079fcd40$var$getOwnPropertyDescriptors","getOwnPropertyDescriptors","descriptors","getOwnPropertyDescriptor","$4877b11fc05196ccee8e726f079fcd40$var$formatRegExp","$4877b11fc05196ccee8e726f079fcd40$exports","$4877b11fc05196ccee8e726f079fcd40$var$isString","$4877b11fc05196ccee8e726f079fcd40$var$inspect","str","_","$4877b11fc05196ccee8e726f079fcd40$var$isNull","$4877b11fc05196ccee8e726f079fcd40$var$isObject","deprecate","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","trace","$4877b11fc05196ccee8e726f079fcd40$var$debugs","$4877b11fc05196ccee8e726f079fcd40$var$debugEnvRegex","opts","seen","stylize","$4877b11fc05196ccee8e726f079fcd40$var$stylizeNoColor","depth","colors","$4877b11fc05196ccee8e726f079fcd40$var$isBoolean","showHidden","_extend","$4877b11fc05196ccee8e726f079fcd40$var$isUndefined","customInspect","$4877b11fc05196ccee8e726f079fcd40$var$stylizeWithColor","$4877b11fc05196ccee8e726f079fcd40$var$formatValue","styleType","recurseTimes","$4877b11fc05196ccee8e726f079fcd40$var$isFunction","inspect","constructor","primitive","simple","$4877b11fc05196ccee8e726f079fcd40$var$isNumber","$4877b11fc05196ccee8e726f079fcd40$var$formatPrimitive","visibleKeys","hash","$4877b11fc05196ccee8e726f079fcd40$var$arrayToHash","getOwnPropertyNames","$4877b11fc05196ccee8e726f079fcd40$var$isError","$4877b11fc05196ccee8e726f079fcd40$var$formatError","$4877b11fc05196ccee8e726f079fcd40$var$isRegExp","$4877b11fc05196ccee8e726f079fcd40$var$isDate","base","braces","$4877b11fc05196ccee8e726f079fcd40$var$isArray","toUTCString","$4877b11fc05196ccee8e726f079fcd40$var$hasOwnProperty","$4877b11fc05196ccee8e726f079fcd40$var$formatProperty","$4877b11fc05196ccee8e726f079fcd40$var$formatArray","numLinesEst","reduce","cur","$4877b11fc05196ccee8e726f079fcd40$var$reduceToSingleString","desc","line","ar","arg","re","$4877b11fc05196ccee8e726f079fcd40$var$objectToString","$4877b11fc05196ccee8e726f079fcd40$var$pad","debuglog","toUpperCase","pid","$27234c7bac5c0b767e0fdf9c95951232$var$uncurryThis","$27234c7bac5c0b767e0fdf9c95951232$var$BigIntSupported","BigInt","$27234c7bac5c0b767e0fdf9c95951232$var$SymbolSupported","Symbol","$27234c7bac5c0b767e0fdf9c95951232$var$ObjectToString","$27234c7bac5c0b767e0fdf9c95951232$var$numberValue","valueOf","$27234c7bac5c0b767e0fdf9c95951232$var$stringValue","$27234c7bac5c0b767e0fdf9c95951232$var$booleanValue","$27234c7bac5c0b767e0fdf9c95951232$var$bigIntValue","$27234c7bac5c0b767e0fdf9c95951232$var$symbolValue","$27234c7bac5c0b767e0fdf9c95951232$var$checkBoxedPrimitive","prototypeValueOf","$27234c7bac5c0b767e0fdf9c95951232$var$isMapToString","$27234c7bac5c0b767e0fdf9c95951232$var$isSetToString","$27234c7bac5c0b767e0fdf9c95951232$var$isWeakMapToString","$27234c7bac5c0b767e0fdf9c95951232$var$isWeakSetToString","$27234c7bac5c0b767e0fdf9c95951232$var$isArrayBufferToString","$27234c7bac5c0b767e0fdf9c95951232$var$isArrayBuffer","ArrayBuffer","working","$27234c7bac5c0b767e0fdf9c95951232$var$isDataViewToString","$27234c7bac5c0b767e0fdf9c95951232$var$isDataView","DataView","module","exports","isArgumentsObject","$2fjQn","isGeneratorFunction","$5gdE8","isTypedArray","$UWFp8","isPromise","isArrayBufferView","isView","isUint8Array","$5WFk8","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isFloat32Array","isFloat64Array","isBigInt64Array","isBigUint64Array","Map","isMap","Set","isSet","WeakMap","isWeakMap","WeakSet","isWeakSet","isArrayBuffer","isDataView","$27234c7bac5c0b767e0fdf9c95951232$var$SharedArrayBufferCopy","SharedArrayBuffer","$27234c7bac5c0b767e0fdf9c95951232$var$isSharedArrayBufferToString","$27234c7bac5c0b767e0fdf9c95951232$var$isSharedArrayBuffer","$27234c7bac5c0b767e0fdf9c95951232$var$isNumberObject","$27234c7bac5c0b767e0fdf9c95951232$var$isStringObject","$27234c7bac5c0b767e0fdf9c95951232$var$isBooleanObject","$27234c7bac5c0b767e0fdf9c95951232$var$isBigIntObject","$27234c7bac5c0b767e0fdf9c95951232$var$isSymbolObject","isSharedArrayBuffer","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isBoxedPrimitive","isAnyArrayBuffer","method","enumerable","$49d523bc7ff8596b8307ddf2f9b21aa6$var$hasToStringTag","toStringTag","$49d523bc7ff8596b8307ddf2f9b21aa6$var$$toString","$fQB5Q","$49d523bc7ff8596b8307ddf2f9b21aa6$var$isStandardArguments","$49d523bc7ff8596b8307ddf2f9b21aa6$var$isLegacyArguments","callee","$49d523bc7ff8596b8307ddf2f9b21aa6$var$supportsStandardArguments","isLegacyArguments","$08661983e8f1c7def522bb16dbe69a91$var$$indexOf","$3EXX5","$5sE9x","allowMissing","intrinsic","$b37750ce4082e8b1650c82b7b1bebfc3$var$undefined","$b37750ce4082e8b1650c82b7b1bebfc3$var$$SyntaxError","SyntaxError","$b37750ce4082e8b1650c82b7b1bebfc3$var$$Function","Function","$b37750ce4082e8b1650c82b7b1bebfc3$var$$TypeError","$b37750ce4082e8b1650c82b7b1bebfc3$var$getEvalledConstructor","expressionSyntax","$b37750ce4082e8b1650c82b7b1bebfc3$var$$gOPD","$b37750ce4082e8b1650c82b7b1bebfc3$var$throwTypeError","$b37750ce4082e8b1650c82b7b1bebfc3$var$ThrowTypeError","calleeThrows","gOPDthrows","$b37750ce4082e8b1650c82b7b1bebfc3$var$hasSymbols","parcelRequire","$b37750ce4082e8b1650c82b7b1bebfc3$var$getProto","getPrototypeOf","__proto__","$b37750ce4082e8b1650c82b7b1bebfc3$var$needsEval","$b37750ce4082e8b1650c82b7b1bebfc3$var$TypedArray","$b37750ce4082e8b1650c82b7b1bebfc3$var$INTRINSICS","AggregateError","iterator","Atomics","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","eval","EvalError","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","isFinite","Proxy","RangeError","ReferenceError","Reflect","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakRef","$b37750ce4082e8b1650c82b7b1bebfc3$var$doEval","doEval","gen","$b37750ce4082e8b1650c82b7b1bebfc3$var$LEGACY_ALIASES","$b37750ce4082e8b1650c82b7b1bebfc3$var$$concat","$6MwEN","$b37750ce4082e8b1650c82b7b1bebfc3$var$$spliceApply","$b37750ce4082e8b1650c82b7b1bebfc3$var$$replace","$b37750ce4082e8b1650c82b7b1bebfc3$var$$strSlice","$b37750ce4082e8b1650c82b7b1bebfc3$var$rePropName","$b37750ce4082e8b1650c82b7b1bebfc3$var$reEscapeChar","$b37750ce4082e8b1650c82b7b1bebfc3$var$stringToPath","string","number","quote","subString","$b37750ce4082e8b1650c82b7b1bebfc3$var$getBaseIntrinsic","alias","intrinsicName","$A728t","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","$d279b66616085e55c5767bf9cfbfcc49$var$origSymbol","$2i7Ex","getOwnPropertySymbols","sym","symObj","syms","propertyIsEnumerable","descriptor","$6BCeX","$0380507843655c6aaf4a88a9b4ff2500$var$ERROR_MESSAGE","$0380507843655c6aaf4a88a9b4ff2500$var$slice","$0380507843655c6aaf4a88a9b4ff2500$var$toStr","$0380507843655c6aaf4a88a9b4ff2500$var$funcType","that","bound","binder","boundLength","boundArgs","Empty","$7847ef024df25e0e63ef55d6dc9c9f18$var$$apply","$7847ef024df25e0e63ef55d6dc9c9f18$var$$call","$7847ef024df25e0e63ef55d6dc9c9f18$var$$reflectApply","$7847ef024df25e0e63ef55d6dc9c9f18$var$$gOPD","$7847ef024df25e0e63ef55d6dc9c9f18$var$$defineProperty","$7847ef024df25e0e63ef55d6dc9c9f18$var$$max","originalFunction","configurable","$7847ef024df25e0e63ef55d6dc9c9f18$var$applyBind","$ace14f695ff84c75902383371fceb396$var$GeneratorFunction","$ace14f695ff84c75902383371fceb396$var$toStr","$ace14f695ff84c75902383371fceb396$var$fnToStr","$ace14f695ff84c75902383371fceb396$var$isFnRegex","$ace14f695ff84c75902383371fceb396$var$hasToStringTag","$ace14f695ff84c75902383371fceb396$var$getProto","generatorFunc","$ace14f695ff84c75902383371fceb396$var$getGeneratorFunc","$c35fe3581226801a16491cf0e90c6a74$var$$toString","$c35fe3581226801a16491cf0e90c6a74$var$hasToStringTag","$c35fe3581226801a16491cf0e90c6a74$var$typedArrays","$sfPT1","$c35fe3581226801a16491cf0e90c6a74$var$$slice","$c35fe3581226801a16491cf0e90c6a74$var$toStrTags","$c35fe3581226801a16491cf0e90c6a74$var$getPrototypeOf","$70lcT","$DxZXf","typedArray","$parcel$global","proto","superProto","foundName","getter","$c35fe3581226801a16491cf0e90c6a74$var$tryTypedArrays","$14f568fe6172d7044e472a123f682682$var$hasOwn","$14f568fe6172d7044e472a123f682682$var$toString","$0ef95495ace2ee239c2da37758886e2e$var$possibleNames","$e62de46e4eb43b944bd4a942ca9658a7$var$$gOPD","$1e2dba8479bbb4adcfcad666c4c4fa1a$var$$toString","$1e2dba8479bbb4adcfcad666c4c4fa1a$var$hasToStringTag","$1e2dba8479bbb4adcfcad666c4c4fa1a$var$typedArrays","$1e2dba8479bbb4adcfcad666c4c4fa1a$var$$indexOf","$1e2dba8479bbb4adcfcad666c4c4fa1a$var$$slice","$1e2dba8479bbb4adcfcad666c4c4fa1a$var$toStrTags","$1e2dba8479bbb4adcfcad666c4c4fa1a$var$getPrototypeOf","tag","anyTrue","$1e2dba8479bbb4adcfcad666c4c4fa1a$var$tryTypedArrays","types","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","isObject","isDate","isError","isNativeError","isFunction","isPrimitive","copy","readUInt8","isBuffer","$4877b11fc05196ccee8e726f079fcd40$var$months","$4877b11fc05196ccee8e726f079fcd40$var$timestamp","getHours","getMinutes","getSeconds","getDate","getMonth","prop","create","ctor","superCtor","super_","TempCtor","inherits","$4877b11fc05196ccee8e726f079fcd40$var$kCustomPromisifiedSymbol","$4877b11fc05196ccee8e726f079fcd40$var$callbackifyOnRejected","reason","cb","newReason","promisify","original","promiseResolve","promiseReject","reject","setPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","rej","$16afe7e7ad40d3af9b2017d90da1cf65$export$c9ada32f20c3c37b","$16afe7e7ad40d3af9b2017d90da1cf65$export$46e35401bc090c62","$16afe7e7ad40d3af9b2017d90da1cf65$export$969de9d6b09f6847","zipped","$16afe7e7ad40d3af9b2017d90da1cf65$export$1c4da3575e598097","$bd25ec853fd9664df757c2bf4b4ad9dd$var$enc","$bd25ec853fd9664df757c2bf4b4ad9dd$var$serializers","num","boolean","bool","date","toISOString","$bd25ec853fd9664df757c2bf4b4ad9dd$export$7eb84799c931fe91","$8ae761b179d8f7ebd042d570135959ae$var$dec","$8ae761b179d8f7ebd042d570135959ae$var$deserializers","getTime","$8ae761b179d8f7ebd042d570135959ae$export$7eb84799c931fe91","config","serialize","deserialize","$86cedaf1621492e21c5e2f43d0dd9b03$var$Schema","$86cedaf1621492e21c5e2f43d0dd9b03$export$292766477ad9ab99","fields","prefix","$86cedaf1621492e21c5e2f43d0dd9b03$require$Field","_prefix","_fields","getPrefixed","forEachKey","getDefault","conflicts","other","thisPrefixedKeys","prefixed","$a7288e5431c3d1035f1ffd7c16e2ccca$var$Store","$a7288e5431c3d1035f1ffd7c16e2ccca$export$69c4525ba9274d0a","_values","_defaults","_providers","_callback","_callbackTimer","_scheduleCallback","_debouncedCallback","_updateTimer","_debouncedUpdate","newValues","providers","provider","schema","deserialized","serializedDefault","unregister","removedProvider","defaults","register","$a7288e5431c3d1035f1ffd7c16e2ccca$require$Schema","_initializeProvider","serializedValue","deserializedValue","deserializedDefault","serialized","serializer","$c601f8f6dd43491e19a3d9fa76adfc1e$var$store","$c601f8f6dd43491e19a3d9fa76adfc1e$var$reset","$c601f8f6dd43491e19a3d9fa76adfc1e$var$update","$c601f8f6dd43491e19a3d9fa76adfc1e$require$Store","$d2015a0a0f4c10b6412a540278cc6da8$export$e4ab0279f1988ab8","location","nonDefaults","history","pushState","$d2015a0a0f4c10b6412a540278cc6da8$export$2e67c97dae900dc9","$37fa29c80053cc9087e18cbed6077639$var$toPrecision","precision","factor","path","$c601f8f6dd43491e19a3d9fa76adfc1e$export$357eb1b4f03c1402","$c601f8f6dd43491e19a3d9fa76adfc1e$export$bca097ad32b98905","$c601f8f6dd43491e19a3d9fa76adfc1e$export$2e67c97dae900dc9","$c601f8f6dd43491e19a3d9fa76adfc1e$export$6cfa4eec14fd8155","$37fa29c80053cc9087e18cbed6077639$export$9099ad97b570f7c","viewport","LOG2E","clientWidth","LN2","hashHandler","$c601f8f6dd43491e19a3d9fa76adfc1e$exports","onMoveEnd","$ed8430984f18172d389ef76dde0c3bff$var$DragAndDropEventType","$ed8430984f18172d389ef76dde0c3bff$export$d35fc0a94a459ce7","DragAndDropEvent","file","opt_projection","$ed8430984f18172d389ef76dde0c3bff$var$__extends","$ed8430984f18172d389ef76dde0c3bff$export$9099ad97b570f7c","DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","source_","handleResult_","formats","TextDecoder","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","$7811ff4b7d25d8dab776bb3069a43b0e$var$tempExtent","$7811ff4b7d25d8dab776bb3069a43b0e$var$tempSegment","$7811ff4b7d25d8dab776bb3069a43b0e$var$ModifyEventType","$7811ff4b7d25d8dab776bb3069a43b0e$export$1c3416f41f743de9","ModifyEvent","$7811ff4b7d25d8dab776bb3069a43b0e$var$__extends","$7811ff4b7d25d8dab776bb3069a43b0e$var$compareIndexes","$7811ff4b7d25d8dab776bb3069a43b0e$var$projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","$7811ff4b7d25d8dab776bb3069a43b0e$var$closestOnSegmentData","$7811ff4b7d25d8dab776bb3069a43b0e$export$9099ad97b570f7c","Modify","boundHandleFeatureChange_","defaultDeleteCondition_","$054715504eaffdc825d0a6ada99ec596$export$11fdee478fd2b7c3","$054715504eaffdc825d0a6ada99ec596$export$35cb7456cf3a2310","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","overlay_","$2f5ed0ce65ecb2bfe439d05296b3d36a$exports","$76e99b295c09c7c5e340e251e89879b1$exports","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","features_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","segments","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","getOverlay","rings","centerSegmentData","circumferenceSegmentData","featureSegments","fromCircle","geometry_1","createOrUpdateVertexFeature_","vertexFeature","removePoint","vertex","dragSegment","setGeometryCoordinates_","pixelCoordinate","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","opt_coordinate","nodes","hitPointGeometry","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","$e77c4e5b410850de947101abf2038f54$var$Circle","Circle","setCenterAndRadius","$e77c4e5b410850de947101abf2038f54$var$__extends","getRadiusSquared_","$e77c4e5b410850de947101abf2038f54$export$9099ad97b570f7c","$3956bcefc4b1abdecaad9000c62943bf$var$Mode","$3956bcefc4b1abdecaad9000c62943bf$var$DrawEventType","$3956bcefc4b1abdecaad9000c62943bf$export$d033e6c8dad0c17","DrawEvent","$3956bcefc4b1abdecaad9000c62943bf$var$__extends","$3956bcefc4b1abdecaad9000c62943bf$export$d9c7a3c9cb1c3b30","opt_geometry","$e77c4e5b410850de947101abf2038f54$exports","makeRegular","$3956bcefc4b1abdecaad9000c62943bf$export$148b89109fc76eea","boxCoordinates","$3956bcefc4b1abdecaad9000c62943bf$export$9099ad97b570f7c","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","snapTolerance_","snapTolerance","type_","$3956bcefc4b1abdecaad9000c62943bf$var$getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","Constructor_1","mode_1","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","freehandCondition_","freehand","freehandCondition","updateState_","move","addToDrawing_","startDrawing_","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","mode","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","ring","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","appendCoordinates","newDrawing","ending","sketchFeatures","overlaySource","$8f33baecd57b382b5a264ea0b8421ef2$var$getFeatureFromEvent","$8f33baecd57b382b5a264ea0b8421ef2$var$tempSegment","$8f33baecd57b382b5a264ea0b8421ef2$export$9099ad97b570f7c","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","$8f33baecd57b382b5a264ea0b8421ef2$var$__extends","opt_listen","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","nodesToRemove_1","currentMap","closestSegmentData","projectedCoordinate","isCircle","$29884e9b826cd25109649ab0c360e769$export$26bb11ed0ebe0b45","$fdf1544b254a9a4b29b42cdf9df4b299$var$map","$976448907138da16f7612e32ecc55ac7$exports","$fdf1544b254a9a4b29b42cdf9df4b299$var$source","$fdf1544b254a9a4b29b42cdf9df4b299$var$layer","$ed8430984f18172d389ef76dde0c3bff$exports","$5d8566a0c1419db39058842324e9a300$exports","$7811ff4b7d25d8dab776bb3069a43b0e$exports","$3956bcefc4b1abdecaad9000c62943bf$exports","$8f33baecd57b382b5a264ea0b8421ef2$exports","$fdf1544b254a9a4b29b42cdf9df4b299$var$format","$fdf1544b254a9a4b29b42cdf9df4b299$var$download","json","href"],"version":3,"file":"editor.75cd7599.js.map"}