{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-e81e5323f3d90491057c5943739ec6f3.js","node_modules/@parcel/runtime-js/lib/bundle-manifest.js","src/bike-track.js","node_modules/ol/src/index.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/util.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/ol/src/Collection.js","node_modules/ol/src/Object.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Observable.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/functions.js","node_modules/ol/src/array.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Feature.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Geolocation.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/proj.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/string.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/layer/Graticule.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/size.js","node_modules/ol/src/color.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/dom.js","node_modules/ol/src/has.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/css.js","node_modules/ol/src/style/Text.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/source/State.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/render.js","node_modules/ol/src/geom/flat/geodesic.js","node_modules/ol/src/ImageCanvas.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/TileState.js","node_modules/ol/src/easing.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/Map.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/View.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/control/FullScreen.js","node_modules/ol/src/control/MousePosition.js","node_modules/ol/src/control/OverviewMap.js","node_modules/ol/src/Overlay.js","node_modules/ol/src/OverlayPositioning.js","node_modules/ol/src/control/ScaleLine.js","node_modules/ol/src/control/ZoomSlider.js","node_modules/ol/src/control/ZoomToExtent.js","node_modules/ol/src/interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/interaction/DragAndDrop.js","node_modules/ol/src/interaction/DragRotateAndZoom.js","node_modules/ol/src/interaction/Draw.js","node_modules/ol/src/geom/Circle.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/interaction/Extent.js","node_modules/ol/src/interaction/Modify.js","node_modules/ol/src/interaction/Select.js","node_modules/ol/src/interaction/Snap.js","node_modules/ol/src/interaction/Translate.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/VectorRenderTile.js","node_modules/ol/src/VectorTile.js","node_modules/ol/src/format/GPX.js","node_modules/ol/src/format/XMLFeature.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/xml.js","node_modules/ol/src/format/xsd.js","node_modules/ol/src/geom.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/reproj.js","node_modules/ol/src/source/common.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tileurlfunction.js","node_modules/@parcel/runtime-js/lib/runtime-26cf026c4a5e9a9469e110fe17fe7f73.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js"],"sourcesContent":["require('./bundle-manifest').register(JSON.parse(\"{\\\"1FvZZ\\\":\\\"bike-track.c2d9b7d9.js\\\",\\\"3aKvM\\\":\\\"backhendl.61d43617.gpx\\\",\\\"0acRd\\\":\\\"basemap.7620afdc.css\\\"}\"));","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import 'ol/ol.css';\nimport { Map, View } from 'ol';\nimport { Zoom } from 'ol/control';\nimport GPX from 'ol/format/GPX';\nimport { GeometryCollection, Point } from 'ol/geom';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport { fromLonLat } from 'ol/proj';\nimport OSM from 'ol/source/OSM';\nimport VectorSource from 'ol/source/Vector';\nimport { Circle, Fill, Stroke, Style } from 'ol/style';\nimport backhendl from 'url:./data/backhendl.gpx';\nimport { getVectorContext } from 'ol/render';\n\nvar raster = new TileLayer({\n  source: new OSM()\n});\n\nvar style = new Style({\n  image: new Circle({\n    fill: new Fill({\n      color: 'rgb(255,240,0)'\n    }),\n    stroke: new Stroke({\n      color: 'rgb(255,170,0)',\n      width: 1.5\n    }),\n    radius: 11\n  }),\n  stroke: new Stroke({\n    color: 'rgb(50,200,50)',\n    width: 2\n  })\n});\n\nvar source = new VectorSource({\n  url: backhendl,\n  format: new GPX()\n});\n\nvar maxRotation = Math.PI / 200;\n\nvar past = [];\nvar vector = new VectorLayer({\n  source: source,\n  style: function(feature, resolution) {\n    var deltaTime;\n    if (playing) {\n      deltaTime = 30 * ((Date.now() / 1000) - originM);\n    } else if (stopM) {\n      deltaTime = 30 * (stopM - originM);\n    } else {\n      deltaTime = 0;\n    }\n    var line = feature.getGeometry().getLineString(0);\n    var time = stats.minTime + deltaTime;\n    if (time > stats.maxTime) {\n      time = stats.maxTime;\n      reset();\n    }\n    var coord = line.getCoordinateAtM(time, true);\n    var next = line.getCoordinateAtM(time + 30, true);\n    var nextRotation = Math.atan2(next[1] - coord[1], next[0] - coord[0]) - Math.PI / 2\n    var rotation = view.getRotation();\n    var deltaRotation = nextRotation - rotation;\n    if (deltaRotation > maxRotation) {\n      view.setRotation(rotation + maxRotation);\n    } else if (deltaRotation < -maxRotation) {\n      view.setRotation(rotation - maxRotation);\n    } else {\n      view.setRotation(nextRotation);\n    }\n    view.setCenter(coord);\n\n    var point = new Point(coord, 'XYZM');\n    past.unshift(point);\n    style.setGeometry(new GeometryCollection([line, point]));\n    return [style];\n  }\n});\n\nvar view = new View({\n  center: fromLonLat([15.4370540, 47.1427290]),\n  zoom: 10,\n  constrainRotation: false\n});\n\nvar map = new Map({\n  target: document.getElementById('map'),\n  layers: [raster, vector],\n  controls: [new Zoom()],\n  view: view\n});\n\nvar timeRange = null;\n\nvar stats = {\n  minTime: Infinity,\n  maxTime: -Infinity,\n  minZ: Infinity,\n  maxZ: -Infinity,\n  lengths: [],\n  coordinates: []\n};\n\nfunction distance(from, to) {\n  var dx = to[0] - from[0];\n  var dy = to[1] - from[1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nsource.on('addfeature', function(event) {\n  var line = event.feature.getGeometry().getLineString(0);\n  var coords = line.getCoordinates();\n  var first = coords[0];\n  var num = coords.length;\n  var last = coords[num - 1];\n  stats.minTime = first[3];\n  stats.maxTime = last[3];\n  for (var i = 0; i < num; ++i) {\n    var z = coords[i][2];\n    if (z < stats.minZ) {\n      stats.minZ = z;\n    }\n    if (z > stats.maxZ) {\n      stats.maxZ = z;\n    }\n    if (i === 0) {\n      stats.lengths.push(0);\n    } else {\n      stats.lengths.push(\n          distance(coords[i - 1], coords[i]) + stats.lengths[i - 1]);\n    }\n  }\n  stats.coordinates = coords;\n  view.animate({\n    center: first,\n    zoom: 17\n  });\n});\n\nvar playing = false;\nvar originM;\nfunction start() {\n  originM = Date.now() / 1000;\n  playing = true;\n  stopM = null;\n  source.changed();\n}\n\nvar stopM;\nfunction stop() {\n  stopM = Date.now() / 1000;\n  playing = false;\n}\n\nfunction resume() {\n  originM += (Date.now() / 1000) - stopM;\n  playing = true;\n  source.changed();\n}\n\nfunction reset() {\n  stop();\n  stopM = null;\n}\n\nmap.on('singleclick', function() {\n  if (playing) {\n    stop();\n  } else if (stopM) {\n    resume();\n  } else {\n    start();\n  }\n})\n\nvar maxHistory = 30;\n\nvector.on('postrender', function(event) {\n  if (playing) {\n    var vectorContext = getVectorContext(event);\n    var len = Math.min(maxHistory, past.length);\n    for (var i = 0; i < len; i += 6) {\n      vectorContext.setImageStyle(new Circle({\n        fill: new Fill({\n          color: 'rgba(255,240,0, ' + (1 - i / len) + ')'\n        }),\n        radius: 9\n      }));\n      vectorContext.drawPoint(past[i]);\n    }\n    past.length = len;\n    plot(event.context);\n    setTimeout(function() {\n      source.changed();\n    }, 100);\n  } else {\n    past.length = 0;\n  }\n});\n\nfunction plot(context) {\n  var canvas = context.canvas;\n  var width = canvas.width;\n  var bottom = canvas.height;\n  var height = bottom / 5;\n\n  var rangeZ = stats.maxZ - stats.minZ;\n  var rangeX = stats.lengths[stats.lengths.length - 1];\n\n  // full plot\n  context.beginPath();\n  context.moveTo(0, bottom);\n  for (var i = 0, ii = stats.coordinates.length; i < ii; i += 2) {\n    var coord = stats.coordinates[i];\n    var deltaZ = coord[2] - stats.minZ;\n    var x = width * stats.lengths[i] / rangeX;\n    var y = bottom - height * deltaZ / rangeZ;\n    context.lineTo(x, y);\n  }\n  context.lineTo(width, bottom);\n  context.closePath();\n  context.fillStyle = 'rgba(0,0,0,0.6)';\n  context.fill();\n\n  // current progress\n  if (past.length < 1) {\n    return;\n  }\n  var now = past[0].getCoordinates()[3];\n  context.beginPath();\n  context.moveTo(0, bottom);\n  for (var i = 0, ii = stats.coordinates.length; i < ii; i += 2) {\n    var coord = stats.coordinates[i];\n    if (coord[3] > now) {\n      break;\n    }\n    var deltaZ = coord[2] - stats.minZ;\n    var x = width * stats.lengths[i] / rangeX;\n    var y = bottom - height * deltaZ / rangeZ;\n    context.lineTo(x, y);\n  }\n  context.lineTo(x, bottom);\n  context.closePath();\n  context.fillStyle = 'rgba(50,170,50,0.5)';\n  context.fill();\n}\n","/**\n * @module ol\n */\n\nexport {default as AssertionError} from './AssertionError.js';\nexport {default as Collection} from './Collection.js';\nexport {default as Disposable} from './Disposable.js';\nexport {default as Feature} from './Feature.js';\nexport {default as Geolocation} from './Geolocation.js';\nexport {default as Graticule} from './layer/Graticule.js';\nexport {default as Image} from './Image.js';\nexport {default as ImageBase} from './ImageBase.js';\nexport {default as ImageCanvas} from './ImageCanvas.js';\nexport {default as ImageTile} from './ImageTile.js';\nexport {default as Kinetic} from './Kinetic.js';\nexport {default as Map} from './Map.js';\nexport {default as MapBrowserEvent} from './MapBrowserEvent.js';\nexport {default as MapBrowserEventHandler} from './MapBrowserEventHandler.js';\nexport {default as MapEvent} from './MapEvent.js';\nexport {default as Object} from './Object.js';\nexport {default as Observable} from './Observable.js';\nexport {default as Overlay} from './Overlay.js';\nexport {default as PluggableMap} from './PluggableMap.js';\nexport {default as Tile} from './Tile.js';\nexport {default as TileCache} from './TileCache.js';\nexport {default as TileQueue} from './TileQueue.js';\nexport {default as TileRange} from './TileRange.js';\nexport {default as VectorRenderTile} from './VectorRenderTile.js';\nexport {default as VectorTile} from './VectorTile.js';\nexport {default as View} from './View.js';\n\nexport {getUid, VERSION} from './util.js';\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","exports.interopDefault = function(a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function(source, dest) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    // Skip duplicate re-exports when they have the same value.\n    if (key in dest && dest[key] === source[key]) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function(dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nclass GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {number}\n     */\n    this.code = error.code;\n\n    /**\n     * @type {string}\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addEventListener(\n      getChangeEventType(Property.PROJECTION),\n      this.handleProjectionChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(Property.TRACKING),\n      this.handleTrackingChanged_\n    );\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition);\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(\n      Property.ACCURACY_GEOMETRY\n    ) || null);\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (this.get(\n      Property.ALTITUDE_ACCURACY\n    ));\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      Property.POSITION\n    ));\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(\n      Property.PROJECTION\n    ));\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (this.get(\n      Property.TRACKING_OPTIONS\n    ));\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  0.5,\n  0.2,\n  0.1,\n  0.05,\n  0.01,\n  0.005,\n  0.002,\n  0.001,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = function (feature) {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      }.bind(this);\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = function (feature) {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      }.bind(this);\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (this.renderedExtent_ && equals(this.renderedExtent_, renderExtent)) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const width = getWidth(extent);\n      const height = getHeight(extent);\n      const cr = Math.abs(Math.cos(rotation));\n      const sr = Math.abs(Math.sin(rotation));\n      const unrotatedWidth = (sr * height - cr * width) / (sr * sr - cr * cr);\n      const unrotatedHeight = (sr * width - cr * height) / (sr * sr - cr * cr);\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n    } else {\n      lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (\n        coordinates,\n        opt_output,\n        opt_dimension\n      ) {\n        const dimension = opt_dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          opt_output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\nimport {toString} from '../transform.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nlet createTransformStringCanvas = null;\n\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return toString(transform);\n  } else {\n    if (!createTransformStringCanvas) {\n      createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n    }\n    createTransformStringCanvas.style.transform = toString(transform);\n    return createTransformStringCanvas.style.transform;\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const img = document.createElement('canvas');\n        img.width = imgSize[0];\n        img.height = imgSize[1];\n        const imgContext = img.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [opt_options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  const canvas = context.canvas;\n  const options = opt_options ? opt_options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    frameState.pixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n  return new CanvasImmediateRenderer(\n    event.context,\n    frameState.pixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  const result = pixel.slice(0);\n  applyTransform(event.inversePixelTransform.slice(), result);\n  return result;\n}\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat)\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [opt_loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, opt_loader) {\n    const state =\n      opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      this.cssClassName_ +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      ' ' +\n      (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? document.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n      this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n      this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    const activeClassName = this.activeClassName_;\n    const inactiveClassName = this.inactiveClassName_;\n    const nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(...activeClassName);\n    element.classList.remove(...inactiveClassName);\n    element.classList.add(...nextClassName);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        this.listenerKeys.push(\n          listen(document, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n    }\n  }\n}\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  const body = document.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body['msRequestFullscreen'] && document['msFullscreenEnabled']) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document['webkitIsFullScreen'] ||\n    document['msFullscreenElement'] ||\n    document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['msRequestFullscreen']) {\n    element['msRequestFullscreen']();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document['msExitFullscreen']) {\n    document['msExitFullscreen']();\n  } else if (document['webkitExitFullscreen']) {\n    document['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [opt_options] Mouse position options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    this.addEventListener(\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_\n    );\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ =\n      options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(\n      COORDINATE_FORMAT\n    ));\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(\n      PROJECTION\n    ));\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport CompositeMapRenderer from '../renderer/Composite.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport PluggableMap from '../PluggableMap.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\nclass ControlledMap extends PluggableMap {\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [opt_options] OverviewMap options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u00BB';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    /**\n     * @type {ControlledMap}\n     * @private\n     */\n    this.ovmap_ = new ControlledMap({\n      view: options.view,\n    });\n    const ovmap = this.ovmap_;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.CENTER_CENTER,\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addEventListener(\n      getChangeEventType(ViewProperty.ROTATION),\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeEventListener(\n      getChangeEventType(ViewProperty.ROTATION),\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addEventListener(\n      getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.MAP),\n      this.handleMapChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.POSITION),\n      this.handlePositionChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged\n    );\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (options.positioning)\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(\n      Property.MAP\n    ));\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      Property.POSITION\n    ));\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (this.get(\n      Property.POSITIONING\n    ));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map\n          .getView()\n          .getCenterInternal());\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\nimport {getChangeEventType} from '../Object.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us',\n};\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [opt_options] Scale line options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addEventListener(\n      getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_\n    );\n\n    this.setUnits(options.units || Units.METRIC);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {import(\"./ScaleLine.js\").Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits =\n      units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == Units.DEGREES) {\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= minWidth) {\n        break;\n      }\n      ++i;\n    }\n    let html;\n    if (this.scaleBar_) {\n      html = this.createScaleBar(width, count, suffix);\n    } else {\n      html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n    }\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const mapScale =\n      '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n    const scaleSteps = [];\n    const stepWidth = width / this.scaleBarSteps_;\n    let backgroundColor = '#ffffff';\n    for (let i = 0; i < this.scaleBarSteps_; i++) {\n      if (i === 0) {\n        // create the first marker at position 0\n        scaleSteps.push(this.createMarker('absolute', i));\n      }\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          'class=\"ol-scale-singlebar\" ' +\n          'style=' +\n          '\"width: ' +\n          stepWidth +\n          'px;' +\n          'background-color: ' +\n          backgroundColor +\n          ';\"' +\n          '>' +\n          '</div>' +\n          this.createMarker('relative', i) +\n          /*render text every second step, except when only 2 steps */\n          (i % 2 === 0 || this.scaleBarSteps_ === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n      if (i === this.scaleBarSteps_ - 1) {\n        {\n          /*render text at the end */\n        }\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n      }\n      // switch colors of steps between black and white\n      if (backgroundColor === '#ffffff') {\n        backgroundColor = '#000000';\n      } else {\n        backgroundColor = '#ffffff';\n      }\n    }\n\n    let scaleBarText;\n    if (this.scaleBarText_) {\n      scaleBarText =\n        '<div ' +\n        'class=\"ol-scale-text\" ' +\n        'style=\"width: ' +\n        width +\n        'px;\">' +\n        mapScale +\n        '</div>';\n    } else {\n      scaleBarText = '';\n    }\n    const container =\n      '<div ' +\n      'style=\"display: flex;\">' +\n      scaleBarText +\n      scaleSteps.join('') +\n      '</div>';\n    return container;\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {string} position The position, absolute or relative\n   * @param {number} i The iterator\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position, i) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      'style=\"position: ' +\n      position +\n      ';' +\n      'top: ' +\n      top +\n      'px;\"' +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      'margin-left: ' +\n      margin +\n      'px;' +\n      'text-align: ' +\n      (i === 0 ? 'left' : 'center') +\n      '; ' +\n      'min-width: ' +\n      minWidth +\n      'px;' +\n      'left: ' +\n      (isLast ? width + 'px' : 'unset') +\n      ';\"' +\n      '>' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const mpu = this.viewState_.projection.getMetersPerUnit();\n    const inchesPerMeter = 1000 / 25.4;\n    return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom slider options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (this.element\n        .firstElementChild);\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(\n        relativePosition\n      );\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport FormatType from '../format/FormatType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [opt_features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   */\n  constructor(type, file, opt_features, opt_projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n  }\n}\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied\n * combinnation of formats read both text string and ArrayBuffer sources. Older browsers such\n * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === FormatType.ARRAY_BUFFER;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      const view = map.getView();\n      projection = view.getProjection();\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== FormatType.ARRAY_BUFFER) {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {always, noModifierKeys, shiftKeyOnly} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle',\n};\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/GeometryType.js\").default}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === Mode.POLYGON\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === Mode.CIRCLE\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === Mode.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([\n                  coordinates[0].concat([coordinates[0][0]]),\n                ]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    this.addEventListener(\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_\n    );\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ =\n      this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(\n        function () {\n          this.handlePointerMove_(\n            new MapBrowserEvent(\n              MapBrowserEventType.POINTERMOVE,\n              event.map,\n              event.originalEvent,\n              false,\n              event.frameState\n            )\n          );\n        }.bind(this),\n        this.dragVertexDelay_\n      );\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === Mode.POINT)\n        ) {\n          if (this.atFinish_(event.pixel)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event.coordinate);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        at = true;\n      } else if (mode === Mode.CIRCLE) {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  createOrUpdateSketchPoint_(event) {\n    const coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (\n      geometry.getType() === GeometryType.POLYGON &&\n      this.mode_ !== Mode.POLYGON\n    ) {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n        const finishCoordinate = this.finishCoordinate_.slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n        this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n      }\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      if (coordinates.length >= 2) {\n        const finishCoordinate = coordinates[coordinates.length - 2].slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n\n    if (coordinates.length === 1) {\n      this.abortDrawing();\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number} [opt_sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [opt_angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function (coordinates, opt_geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry\n      ? /** @type {Polygon} */ (opt_geometry)\n      : fromCircle(new Circle(center), opt_sides);\n\n    let angle = opt_angle;\n    if (!opt_angle && opt_angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan2(y, x);\n    }\n    makeRegular(geometry, center, radius, angle);\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, opt_geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    let geometry = opt_geometry;\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n      return Mode.POINT;\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n      return Mode.LINE_STRING;\n    case GeometryType.POLYGON:\n    case GeometryType.MULTI_POLYGON:\n      return Mode.POLYGON;\n    case GeometryType.CIRCLE:\n      return Mode.CIRCLE;\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number} [opt_radius] Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX,\n      }),\n      style: opt_options.boxStyle\n        ? opt_options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX,\n      }),\n      style: opt_options.pointerStyle\n        ? opt_options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection()\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<import(\"../extent.js\").Extent>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} MapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, features, MapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = MapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerane`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").FeatureLike>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && features.indexOf(feature) === -1) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYSTART,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (features.indexOf(feature) === -1) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (geometries.indexOf(geometry) === -1) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          // prevent dragging closed linestrings by the connecting node\n          if (\n            (segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n                GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, opt_coordinate) {\n    const pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    let nodes, hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          geometry = geometry || feature.getGeometry();\n          if (geometry.getType() === GeometryType.POINT) {\n            hitPointGeometry = geometry;\n            const coordinate = geometry.getCoordinates();\n            nodes = [\n              {\n                feature,\n                geometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === GeometryType.CIRCLE &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n          .clone()\n          .transform(userProjection, projection));\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === GeometryType.CIRCLE &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n        .clone()\n        .transform(userProjection, projection));\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend, includes} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (this\n      .featureLayerAssociation_[getUid(feature)]);\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n    const deselected = [];\n    const selected = [];\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if (\n              (remove || toggle) &&\n              includes(features.getArray(), feature)\n            ) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(\n    styles[GeometryType.GEOMETRY_COLLECTION],\n    styles[GeometryType.LINE_STRING]\n  );\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {getValues} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped Snapped.\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  } else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\n  ) {\n    return /** @type {import(\"../Feature.js\").default} */ (\n      /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\n    );\n  }\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [opt_listen] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, opt_listen) {\n    const register = opt_listen !== undefined ? opt_listen : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        segmentWriter(feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [opt_unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, opt_unlisten) {\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const lowerLeft = map.getCoordinateFromPixel([\n      pixel[0] - this.pixelTolerance_,\n      pixel[1] + this.pixelTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      pixel[0] + this.pixelTolerance_,\n      pixel[1] - this.pixelTolerance_,\n    ]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    let segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function (segment) {\n        return segment.feature.getGeometry().getType() !== GeometryType.CIRCLE;\n      });\n    }\n\n    let snapped = false;\n    let vertex = null;\n    let vertexPixel = null;\n\n    if (segments.length === 0) {\n      return {\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel,\n      };\n    }\n\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    let closestSegmentData;\n    let minSquaredDistance = Infinity;\n    for (let i = 0; i < segments.length; ++i) {\n      const segmentData = segments[i];\n      tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n      tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n      const delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n      if (delta < minSquaredDistance) {\n        closestSegmentData = segmentData;\n        minSquaredDistance = delta;\n      }\n    }\n    const closestSegment = closestSegmentData.segment;\n\n    if (this.vertex_ && !this.edge_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      if (dist <= this.pixelTolerance_) {\n        snapped = true;\n        vertex =\n          squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      const isCircle =\n        closestSegmentData.feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n      if (isCircle) {\n        let circleGeometry = closestSegmentData.feature.getGeometry();\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n        }\n        vertex = toUserCoordinate(\n          closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          ),\n          projection\n        );\n      } else {\n        tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n        tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n        vertex = toUserCoordinate(\n          closestOnSegment(projectedCoordinate, tempSegment),\n          projection\n        );\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          if (dist <= this.pixelTolerance_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n\n    return {\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel,\n    };\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n        .clone()\n        .transform(userProjection, projection));\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment,\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter(feature, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment,\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment,\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = {\n        feature: feature,\n        segment: [coordinates, coordinates],\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = {\n            feature: feature,\n            segment: segment,\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = {\n      feature: feature,\n      segment: [coordinates, coordinates],\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment,\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {getChangeEventType} from '../Object.js';\nimport {includes} from '../array.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addEventListener(\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      function (feature, layer) {\n        if (this.filter_(feature, layer)) {\n          if (!this.features_ || includes(this.features_.getArray(), feature)) {\n            return feature;\n          }\n        }\n      }.bind(this),\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      }\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedZ RenderedZ.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * Tile keys of error source tiles. Read/written by the source.\n     * @type {Object<string, boolean>}\n     */\n    this.errorSourceTileKeys = {};\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = null;\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * z of the source tiles of the last getSourceTiles call.\n     * @type {number}\n     */\n    this.sourceZ = -1;\n\n    /**\n     * True when all tiles for this tile's nominal resolution are available.\n     * @type {boolean}\n     */\n    this.hifi = false;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedZ: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      canvasPool.push(this.context_[key].canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {includes} from '../array.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readNonNegativeInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [opt_options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readNonNegativeInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readNonNegativeInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readNonNegativeInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/GeometryLayout.js\").default} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const flatCoordinates = /** @type {Array<number>} */ (rteValues[\n      'flatCoordinates'\n    ]);\n    const layoutOptions = /** @type {LayoutOptions} */ (rteValues[\n      'layoutOptions'\n    ]);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const flatCoordinates = /** @type {Array<number>} */ (trkValues[\n      'flatCoordinates'\n    ]);\n    const layoutOptions = /** @type {LayoutOptions} */ (trkValues[\n      'layoutOptions'\n    ]);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.LINE_STRING) {\n    const lineString = /** @type {LineString} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n    const multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.POINT) {\n    const point = /** @type {Point} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.XML;\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeatureFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, opt_options) {\n    const features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, opt_options) {\n    const node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    const node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, opt_options) {\n    const node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, opt_options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (objectStack[\n        objectStack.length - 1\n      ]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/geom\n */\n\nexport {default as Circle} from './geom/Circle.js';\nexport {default as Geometry} from './geom/Geometry.js';\nexport {default as GeometryCollection} from './geom/GeometryCollection.js';\nexport {default as LinearRing} from './geom/LinearRing.js';\nexport {default as LineString} from './geom/LineString.js';\nexport {default as MultiLineString} from './geom/MultiLineString.js';\nexport {default as MultiPoint} from './geom/MultiPoint.js';\nexport {default as MultiPolygon} from './geom/MultiPolygon.js';\nexport {default as Point} from './geom/Point.js';\nexport {default as Polygon} from './geom/Polygon.js';\nexport {default as SimpleGeometry} from './geom/SimpleGeometry.js';\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {createTransformString} from '../../render/canvas.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(\n          projection\n        );\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(\n            tileCoordKey\n          ));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} [opt_direction] If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"1FvZZ\", \"3aKvM\")","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;"],"names":["require","register","JSON","parse","mapping","module","exports","pairs","keys","Object","i","length","resolve","id","resolved","Error","raster","_tileDefault","default","source","_osmDefault","style","_style","Style","image","Circle","fill","Fill","color","stroke","Stroke","width","radius","_vectorDefault1","url","_backhendlGpxDefault","format","_gpxDefault","maxRotation","Math","PI","past","vector","_vectorDefault","feature","resolution","deltaTime","playing","Date","now","originM","stopM","line","getGeometry","getLineString","time","stats","minTime","maxTime","stop","coord","getCoordinateAtM","next","nextRotation","atan2","rotation","view","getRotation","deltaRotation","setRotation","setCenter","point","_geom","Point","unshift","setGeometry","GeometryCollection","_ol","View","center","_proj","fromLonLat","zoom","constrainRotation","map","Map","target","document","getElementById","layers","controls","Infinity","minZ","maxZ","lengths","coordinates","on","event","from","to","dx","dy","coords","getCoordinates","first","num","last","z","push","sqrt","animate","changed","vectorContext","_render","getVectorContext","len","min","setImageStyle","drawPoint","context","canvas","bottom","height","rangeZ","rangeX","beginPath","moveTo","ii","deltaZ","x","y","lineTo","closePath","fillStyle","plot","setTimeout","parcelHelpers","export","_assertionErrorJsDefault","_utilJs","AssertionError1","_super","AssertionError2","code","_this","this","message","VERSION","split","call","name","__extends","abstract","getUid","uidCounter_","obj","ol_uid","String","interopDefault","a","__esModule","defineInteropFlag","defineProperty","value","exportAll","dest","forEach","key","enumerable","get","destName","_assertionErrorJs","Property","CollectionEvent1","CollectionEvent2","type","opt_element","opt_index","element","index","Collection1","Collection2","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","prototype","clear","getLength","pop","extend","arr","f","array","getArray","item","insertAt","elem","splice","dispatchEvent","_collectionEventTypeJsDefault","ADD","removeAt","n","remove","prev","REMOVE","setAt","j","undefined","set","opt_except","getChangeEventType","_eventJs","ObjectEvent1","ObjectEvent2","oldValue","BaseObject1","BaseObject2","opt_values","values_","setProperties","hasOwnProperty","getKeys","getProperties","_objJs","assign","hasProperties","notify","eventType","_objectEventTypeJsDefault","PROPERTYCHANGE","opt_silent","values","applyProperties","unset","changeEventTypeCache","stopPropagation","preventDefault","BaseEvent","BaseEvent1","propagationStopped","defaultPrevented","evt","unByKey","_targetJs","Observable1","Observable2","revision_","_eventTypeJsDefault","CHANGE","getRevision","listener","Array","isArray","_eventsJs","listen","once","listenOnce","ol_key","un","removeEventListener","unlistenByKey","_disposableJs","Target1","Target2","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listeners","listenersForType","indexOf","_eventJsDefault","propagate","dispatching","pendingRemovals","handleEvent","pr","_functionsJs","VOID","disposeInternal","getListeners","hasListener","opt_type","Disposable","Disposable1","disposed","dispose","TRUE","FALSE","memoizeOne","_arrayJs","fn","lastResult","lastArgs","lastThis","called","nextArgs","slice","arguments","equals","apply","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","b","includes","linearFindNearest","direction","reverseSubArray","begin","end","tmp","data","extension","find","func","arr1","arr2","len1","stableSort","compareFnc","sort","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","getValues","isEmpty","var_sources","TypeError","output","object","property","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","opt_this","opt_once","bind","originalListener_1","eventsKey","createStyleFunction","_objectJs","Feature1","Feature2","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","properties","clone","setGeometryName","getGeometryName","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","styles_1","getZIndex","assert","assertion","errorCode","GeolocationError1","GeolocationError2","error","Geolocation1","Geolocation2","position_","transform_","_projJs","identityTransform","watchId_","handleProjectionChanged_","handleTrackingChanged_","projection","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getProjection","getTransformFromProjections","navigator","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","accuracy","altitude","altitudeAccuracy","heading","_mathJs","toRadians","longitude","latitude","projectedPosition","speed","_polygonJs","circular","applyTransform","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","fromExtent","fromCircle","makeRegular","_geometryLayoutJs","Polygon1","Polygon2","opt_layout","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","maxDelta_","maxDeltaRevision_","orientedRevision_","orientedFlatCoordinates_","setFlatCoordinates","setCoordinates","appendLinearRing","linearRing","flatCoordinates","getFlatCoordinates","polygon","layout","closestPointXY","closestPoint","minSquaredDistance","_extentJs","closestSquaredDistanceXY","getExtent","_closestJs","arrayMaxSquaredDelta","stride","containsXY","getOrientedFlatCoordinates","getArea","opt_right","getEnds","getFlatInteriorPoint","flatCenter","getCenter","_interiorpointJs","getInteriorPointOfArray","getInteriorPoint","_geometryLayoutJsDefault","XYM","getLinearRingCount","getLinearRing","getLinearRings","ends","linearRings","offset","_linearRingJsDefault","_orientJs","orientLinearRings","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","_simplifyJs","quantizeArray","XY","getType","POLYGON","intersectsExtent","extent","setLayout","_deflateJs","deflateCoordinatesArray","opt_n","opt_sphereRadius","_sphereJs","minX","minY","maxX","maxY","circle","opt_sides","opt_angle","sides","getStride","getLayout","arrayLength","getRadius","startAngle","angle","modulo","cos","sin","XYZ","XYZM","POINT","LINE_STRING","LINEAR_RING","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","LinearRing1","LinearRing2","maxSquaredDelta","douglasPeucker","deflateCoordinates","getStrideForLayout","transformGeom2D","_geometryJs","SimpleGeometry1","SimpleGeometry2","computeExtent","getFirstCoordinate","getLastCoordinate","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","nesting","getLayoutForStride","transformFn","rotate","anchor","scale","sx","opt_sy","opt_anchor","sy","translate","deltaX","deltaY","simpleGeometry","transform","opt_dest","tmpTransform","_transformJs","create","Geometry1","Geometry2","extent_","createEmpty","extentRevision_","simplifyTransformedInternal","revision","opt_transform","simplifyTransformed","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","coordinate","opt_extent","isNaN","createOrUpdateEmpty","simplify","tolerance","destination","sourceProj","getUnits","_unitsJsDefault","TILE_PIXELS","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","getHeight","METERS_PER_UNIT","Units","DEGREES","FEET","METERS","PIXELS","USFEET","reset","multiply","setFromArray","makeScale","compose","composeCssTransform","invert","makeInverse","determinant","toString","_assertsJs","tmp_","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","dx1","dy1","dx2","dy2","det","mat","join","boundingExtent","buffer","containsCoordinate","containsExtent","coordinateRelationship","createOrUpdate","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","approximatelyEquals","extendCoordinate","extendCoordinates","extendFlatCoordinates","extendRings","extendXY","forEachCorner","getBottomLeft","getBottomRight","getCorner","getEnlargedArea","getForViewAndSize","getIntersectionArea","getIntersection","getMargin","getSize","getTopLeft","getTopRight","getWidth","intersects","returnOrUpdate","scaleFromCenter","intersectsSegment","wrapX","_cornerJs","extent1","extent2","relationship","_relationshipJsDefault","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","rings","abs","max","callback","val","area","corner","_cornerJsDefault","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","start","intersects1","startRel","endRel","startX","startY","endX","endY","slope","opt_stops","xs","ys","l","_boundingExtentXYs","projectionExtent","canWrapX","worldWidth","floor","_unitsJs","cloneTransform","addProjection","addProjections","getPointResolution","addEquivalentProjections","addEquivalentTransforms","clearAllProjections","createProjection","createTransformFromCoordinateTransform","addCoordinateTransforms","toLonLat","equivalent","getTransform","transformExtent","transformWithProjections","setUserProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","toUserExtent","fromUserExtent","createSafeCoordinateTransform","addCommon","_projectionJs","input","opt_output","opt_dimension","getCode","projections","projectionLike","_projectionsJs","opt_units","pointResolution","getter","getPointResolutionFunc","metersPerUnit","getMetersPerUnit","units","toEPSG4326_1","vertices","getDistance","_transformsJs","add","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","defaultCode","coordTransform","dimension","forward","inverse","destProj","opt_projection","lonLat","lon","equalUnits","sourceProjection","destinationProjection","sourceCode","destinationCode","transformFunc","userProjection","destProjection","transformed","worldsAway","sourceX","sourceY","sourceExtent","sourceExtentWidth","_coordinateJs","getWorldsAway","clamp","_epsg3857Js","PROJECTIONS","_epsg4326Js","fromEPSG4326","toEPSG4326","Projection","Projection1","code_","units_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection1","EPSG3857Projection2","cosh","atan","exp","log2","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","lerp","LOG2E","t","maxRow","maxEl","r","absValue","coef","k","m","angleInRadians","angleInDegrees","EPSG4326Projection1","EPSG4326Projection2","opt_axisOrientation","cache","replace","transforms","DEFAULT_RADIUS","_geometryTypeJs","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","getLengthInternal","_geometryTypeJsDefault","jj","geometries","getGeometries","getAreaInternal","distance","bearing","lon1","dByR","lat","asin","closestOnCircle","closestOnSegment","createStringXY","degreesToStringHDMS","squaredDistanceToSegment","toStringHDMS","toStringXY","delta","segment","along","opt_fractionDigits","hemispheres","degrees","normalizedDegrees","dflPrecision","precision","pow","deg","sec","ceil","_stringJs","padNumber","charAt","template","toFixed","coordinate1","coordinate2","equals1","cosAngle","sinAngle","scale1","coord1","coord2","opt_sourceExtentWidth","number","opt_precision","numberString","decimal","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","transform2D","anchorX","anchorY","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","squaredDelta","endss","maxDelta","isRing","opt_tmpPoint","tmpPoint","deflateCoordinate","coordinatess","deflateMultiCoordinatesArray","coordinatesss","opt_endss","simplifyLineString","douglasPeuckerArray","douglasPeuckerMultiArray","radialDistance","snap","quantize","quantizeMultiArray","highQuality","opt_simplifiedFlatCoordinates","simplifiedOffset","markers","stack","maxSquaredDistance","squaredDistance_1","simplifiedEndss","round","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","twiceArea","linearRingss","Point1","Point2","getInteriorPointsOfMultiArray","_containsJs","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","interiorPoints","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","wn","intersectsLineString","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","coordinatesExtent","point1","point2","ret","linearRingIsClockwise","linearRingsAreOriented","linearRingssAreOriented","orientLinearRingsArray","_reverseJs","edge","right","isClockwise","_collectionJs","DEFAULT_STROKE_STYLE","_strokeJsDefault","INTERVALS","Graticule1","Graticule2","baseOptions","updateWhileAnimating","updateWhileInteracting","renderBuffer","maxLines","strokeStyle","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","projection_","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","_styleJsDefault","text","_textJsDefault","font","textBaseline","_fillJsDefault","lonLabelStyle_","label","getText","setText","latLabelStyleBase_","textAlign","latLabelStyle_","POSTRENDER","drawLabels_","intervals_","setSource","_vectorJsDefault1","loader","loaderFunction","strategy","strategyFunction","features","_collectionJsDefault","overlaps","useSpatialIndex","featurePool_","lineStyle_","loadedExtent_","renderedExtent_","setRenderOrder","realWorldExtent","getSource","getWrapX","removeLoadedExtent","layerExtent","renderExtent","updateProjectionInfo_","createGraticule_","featureCount","_featureJsDefault","featuresColl","getFeaturesCollection","poolIndex","addMeridian_","minLat","maxLat","lineString","getMeridian_","geom","_pointJsDefault","addParallel_","minLon","maxLon","getParallel_","frameState","viewState","rotationCenter","rotationExtent","cr","sr","unrotatedWidth","unrotatedHeight","startWorld","endWorld","labelsAtStart","_renderJs","world","textPoint","getMeridianPoint_","drawFeature","getParallelPoint_","interval","getInterval_","validCenterP","centerLonLat","cnt","centerLon","centerLat","validExtentP","validExtent","p1","p2","clampedLat","_geodesicJs","meridian","_lineStringJsDefault","top","clampedBottom","clampedTop","getMeridians","parallel","left","clampedLeft","clampedRight","getParallels","epsg4326Projection","toLonLatTransform","split_1","lonLatCoordinates","worldExtentP","PRERENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","Fill1","color_","getColor","setColor","LineString1","LineString2","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","opt_extrapolate","extrapolate","getCoordinateAt","fraction","getFlatMidpoint","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","o","length_1","cumulativeLengths","lo","hi","m0","interpolate","lineStringLength","linearRingLength","perimeter","Stroke1","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","toFunction","createDefaultStyle","createEditingStyle","_circleJs","Style1","geometry_","geometryFunction_","defaultGeometryFunction","fill_","image_","renderer_","renderer","stroke_","text_","zIndex_","zIndex","getFill","getImage","getRenderer","getStroke","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setZIndex","styleFunction","defaultStyles","_circleJsDefault","styles","white","blue","concat","CircleStyle1","CircleStyle2","points","rotateWithView","displacement","getScale","getRotateWithView","getDisplacement","setOpacity","getOpacity","setRadius","radius_","render","RegularShape1","RegularShape2","opacity","canvas_","hitDetectionCanvas_","origin_","points_","radius1","radius2_","radius2","angle_","anchor_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","getAngle","getAnchor","getHitDetectionImage","renderOptions","createRenderOptions","createHitDetectionCanvas_","pixelRatio","_domJs","createCanvasContext2D","draw_","getPixelRatio","getImageSize","getHitDetectionImageSize","getImageState","LOADED","getOrigin","listenImageChange","load","unlistenImageChange","_canvasJs","defaultLineCap","defaultLineJoin","strokeWidth","defaultStrokeStyle","_colorlikeJs","asColorLike","defaultLineWidth","defaultMiterLimit","imageSize","angle0","radiusC","setTransform","arc","defaultFillStyle","lineWidth","_colorJs","asArray","drawHitDetectionCanvas_","IDLE","LOADING","EMPTY","ImageStyle","ImageStyle1","opacity_","rotateWithView_","rotation_","scale_","scaleArray_","_sizeJs","toSize","displacement_","getScaleArray","setRotateWithView","setScale","opt_size","hasArea","ratio","asString","fromString","normalize","isStringColor","HEX_COLOR_RE_","NAMED_COLOR_RE_","fromNamed","createElement","body","appendChild","rgb","getComputedStyle","removeChild","cacheSize","s","g","exec","hasAlpha","substr","Number","fromStringInternal_","test","outerWidth","outerHeight","replaceNode","removeNode","removeChildren","replaceChildren","opt_width","opt_height","opt_canvasPool","shift","_hasJs","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","getContext","offsetWidth","marginLeft","marginRight","offsetHeight","marginTop","marginBottom","newNode","oldNode","parent","parentNode","replaceChild","node","lastChild","children","oldChildren","childNodes","oldChild","newChild","insertBefore","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","ua","userAgent","toLowerCase","devicePixelRatio","WorkerGlobalScope","self","Image","decode","passive","window","defaultFont","defaultLineDash","defaultLineDashOffset","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","labelCache","textHeights","registerFont","measureTextHeight","measureTextWidth","measureAndCacheTextWidth","measureTextWidths","rotateAtOffset","drawImageOrLabel","createTransformString","_objectJsDefault","_targetJsDefault","setSize","console","warn","measureFont","measureElement","measureContext","referenceWidth","referenceFonts","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","check","done","fonts","clearInterval","fontSpec","_cssJs","getFontParameters","families","family","weight","setInterval","metrics","measureText","lineHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","display","lines","widths","numLines","currentWidth","offsetX","offsetY","labelOrImage","originX","originY","w","h","save","globalAlpha","contextInstructions","executeLabelInstructions","drawImage","restore","createTransformStringCanvas","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","match","variant","_fillJs","Text1","Text2","font_","textAlign_","textBaseline_","maxAngle_","maxAngle","placement_","placement","_textPlacementJsDefault","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","LINE","_baseVectorJs","VectorLayer1","VectorLayer2","createRenderer","_layerJs","BaseVectorLayer1","BaseVectorLayer2","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","pixel","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","declutterTree","_rbushDefault","renderOrder","_styleJs","inView","_baseJs","Layer1","Layer2","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","setMap","_propertyJsDefault","SOURCE","handleSourcePropertyChange_","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSourceState","getState","_stateJsDefault","UNDEFINED","handleSourceChange_","Promise","layerRenderer","prepareFrame","renderFrame","_eventTypeJsDefault1","layerStatesArray","layerState","some","arrayLayerState","layer","hasRenderer","visible","minResolution","maxResolution","minZoom","maxZoom","BaseLayer1","BaseLayer2","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","className","state_","getClassName","opt_managed","state","managed","sourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","zindex","READY","t1","t2","r1","h1","u","p","i1","_maxEntries","_minEntries","leaf","m2","h2","o1","all","_all","search","toBBox","o2","collides","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","l1","_condense","compareMinX","compareMinY","toJSON","fromJSON","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","l2","u3","v","M","_allDistMargin","define","amd","RBush","_builderGroupJs","CanvasVectorLayerRenderer1","CanvasVectorLayerRenderer2","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","useContainer","renderWorlds","executorGroup","opt_declutterTree","vectorSource","getLayer","viewHints","snapToPixel","_viewHintJsDefault","ANIMATING","INTERACTING","multiWorld","getRenderTransform","execute","layerIndex","pixelTransform","inversePixelTransform","canvasTransform","replayGroup","containerReused","container","clearRect","preRender","clipped","clipUnrotated","postRender","parseFloat","_hitdetectJs","HIT_DETECT_RESOLUTION","createHitDetectionImageData","hitDetect","forEachFeatureAtCoordinate","hitTolerance","matches","result","featureCallback","distanceSq","lastIndexOf","executorGroups","handleFontsChanged","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","_vectorJs","defaultOrder","loadExtents","gutter","loadExtent","declutterBuilderGroup","_builderGroupJsDefault","getTolerance","userTransform","loadFeatures","getSquaredTolerance","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","finish","_executorGroupJsDefault","getOverlaps","builderGroup","opt_declutterBuilderGroup","loading","_builderJs","BATCH_CONSTRUCTORS","_polygonBuilderJsDefault","_builderJsDefault","_imageBuilderJsDefault","_lineStringBuilderJsDefault","_textBuilderJsDefault","BuilderGroup","BuilderGroup1","maxExtent","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","_instructionJs","CanvasBuilder1","CanvasBuilder2","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","drawCustom","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","CUSTOM","_inflateJs","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","reverse","instruction","_instructionJsDefault","END_GEOMETRY","setFillStrokeStyle","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","Instruction","BEGIN_PATH","CLOSE_PATH","DRAW_CHARS","DRAW_IMAGE","FILL","MOVE_TO_LINE_TO","STROKE","VectorContext","VectorContext1","drawGeometry","drawCircle","circleGeometry","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","pointGeometry","drawPolygon","polygonGeometry","drawText","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","CanvasImageBuilder1","CanvasImageBuilder2","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","opt_sharedData","hitDetectionImage","origin","CanvasLineStringBuilder1","CanvasLineStringBuilder2","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder1","CanvasPolygonBuilder2","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","TEXT_ALIGN","CanvasTextBuilder1","CanvasTextBuilder2","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoints","getFlatInteriorPoints","beg_1","filter","keep","saveTextStates_","p0","p3","pixelRatio_1","flatOffset","flatEnd","oo","range","_straightchunkJs","matchingChunk","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","CanvasLayerRenderer1","CanvasLayerRenderer2","renderedResolution","tempTransform","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","dispatchRenderEvent_","event_1","getDataAtPixel","renderPixel","renderCoordinate","pixelToCoordinateTransform","newCanvas","newContext","getImageData","err","Uint8Array","_eventTypeJs","LayerRenderer1","LayerRenderer2","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","_imageStateJsDefault","loadImage","imageState","RenderEvent1","RenderEvent2","opt_inversePixelTransform","opt_frameState","opt_context","getPixelIndexArray","_builderTypeJs","ORDER","IMAGE","TEXT","DEFAULT","ExecutorGroup","ExecutorGroup1","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","_executorJsDefault","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","imageData","i_1","_builderTypeJsDefault","result_1","executor","zs","executeHitDetection","contextScale","viewRotation","opt_builderTypes","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","Executor","Executor1","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p11","p21","p31","p41","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","_textBuilderJs","execute_","opt_featureCallback","opt_hitExtent","pixelCoordinates","_transformJs1","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","args","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","_lengthJs","textLength","startM","parts","_textpathJs","drawTextOnPath","drawChars","cc","chars","part","ii_1","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","substring","_immediateJs","imageSmoothingEnabled","_immediateJsDefault","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","img","imgContext","alpha","fillRect","Icon","anchorXUnits","_iconAnchorUnitsJsDefault","anchorYUnits","byGeometryType","zIndexKeys","geomAndStyle","kk","resultFeatures","CanvasImmediateRenderer1","CanvasImmediateRenderer2","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","_simpleGeometryJs","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","FRACTION","Icon1","Icon2","normalizedAnchor_","anchorOrigin_","anchorOrigin","_iconOriginJsDefault","anchorXUnits_","anchorYUnits_","crossOrigin_","crossOrigin","src","iconImage_","_iconImageJs","offset_","offsetOrigin_","offsetOrigin","getSrc","setAnchor","iconImageSize","taintedTestContext","IconImage1","IconImage2","unlisten_","imageState_","src_","tainted_","isTainted_","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","_imageJs","listenImage","ctx","globalCompositeOperation","imgData","putImageData","iconImage","_iconImageCacheJs","shared","IconImageCache","IconImageCache1","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","getKey","maxCacheSize","ImageWrapper1","ImageWrapper2","imageLoadFunction","imageLoadFunction_","loadHandler","errorHandler","promise","listening_1","then","catch","listenerKeys","ImageBase1","ImageBase2","getResolution","GEOMETRY_RENDERERS","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","feature1","feature2","renderGeometry","renderFeatureInternal","VectorSourceEvent1","VectorSourceEvent2","opt_feature","opt_features","VectorSource1","VectorSource2","attributions","loader_","format_","url_","_featureloaderJs","xhr","strategy_","_loadingstrategyJs","collection","featuresRtree_","_rbushJsDefault","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","_vectorEventTypeJsDefault","ADDFEATURE","handleFeatureChange_","valid","addFeatures","extents","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","REMOVEFEATURE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachInExtent","forEachFeatureIntersectingExtent","getAll","getFeaturesAtCoordinate","getInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","uid","getFormat","getUrl","update","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","refresh","removed","setLoader","setUrl","_rbush","RBush1","opt_maxEntries","rbush_","items_","items","bbox","forEach_","rbush","Source1","Source2","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","getAttributions","getAttributionsCollapsible","getResolutions","getContextOptions","setAttributions","setState","attributionLike","getZForResolution","getTileRangeForExtentAndZ","getTileCoordExtent","loadFeaturesXhr","setWithCredentials","_formatTypeJs","withCredentials","success","failure","XMLHttpRequest","open","_formatTypeJsDefault","ARRAY_BUFFER","responseType","onload","status","responseText","XML","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","xhrWithCredentials","toContext","getRenderPixel","greatCircleArc","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","lon2","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","frac","D","cosD","sinD","theta","_imageBaseJs","ImageCanvas1","ImageCanvas2","opt_loader","error_","getError","handleLoad_","_tileJs","ImageTile1","ImageTile2","tileLoadFunction","tileLoadFunction_","_tileStateJsDefault","naturalWidth","naturalHeight","Tile1","Tile2","interimTile","hifi","transition_","transition","transitionStarts_","release","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","easeIn","easeOut","inAndOut","linear","upAndDown","Kinetic","Kinetic1","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","duration","_compositeJs","Map1","Map2","_controlJs","defaults","interactions","_interactionJs","onFocusOnly","_mapJs","CompositeMapRenderer1","CompositeMapRenderer2","fontChangeListenerKey_","redrawText","element_","getViewport","firstChild","children_","renderedVisible_","dispatchRenderEvent","getMap","calculateMatrices2D","declutterLayers","previousElement","scheduleExpireIconCache","forEachLayerAtPixel","layerFilter","layerStates","MapRenderer1","MapRenderer2","map_","checkWrapped","thisArg","thisArg2","translatedCoordinate","offsets","numLayers","callback_1","order","hasFeatureAtCoordinate","postRenderFunctions","expireIconCache","PluggableMap1","PluggableMap2","optionsInternal","keyboardEventTarget","overlays","layerGroup","getLayers","_groupJsDefault","_mapPropertyJsDefault","LAYERGROUP","TARGET","VIEW","_viewJsDefault","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","moveTolerance_","moveTolerance","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","_tileQueueJsDefault","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","SIZE","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getCoordinateFromPixel","getEventPixel","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","clientX","clientY","getTarget","getTargetElement","getView","getOverlayById","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","getOwnerDocument","targetElement","ownerDocument","tileSourceKey","tileCenter","tileResolution","browserEvent","mapBrowserEvent","_mapBrowserEventJsDefault","handleMapBrowserEvent","originalEvent","POINTERDOWN","doc","rootNode","getRootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","maxTotalLoading","maxNewLoads","hints","lowOnFrameBudget","getTilesLoading","reprioritize","loadMoreTiles","_eventTypeJsDefault2","getAnimating","resolveConstraints","_mapBrowserEventHandlerJsDefault","_mapBrowserEventTypeJsDefault","updateSize","clearTimeout","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","usedTiles","wantedTiles","_mapEventJsDefault","_mapEventTypeJsDefault","MOVESTART","MOVEEND","setLayerGroup","setView","computedStyle","setViewportSize","LayerGroup1","LayerGroup2","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","_mapEventJs","MapBrowserEvent1","MapBrowserEvent2","opt_dragging","pixel_","coordinate_","dragging","MapEvent1","MapEvent2","MapBrowserEventHandler1","MapBrowserEventHandler2","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","POINTERMOVE","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","newEvent1","SINGLECLICK","updateActivePointers_","POINTERUP","POINTERCANCEL","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","handlePointerMove_","isMoving_","POINTERDRAG","cancelable","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","TileQueue1","TileQueue2","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","enqueue","added","tileKey","newLoads","getCount","dequeue","_priorityQueueJs","PriorityQueue","PriorityQueue1","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","createCenterConstraint","createResolutionConstraint","createRotationConstraint","isNoopAnimation","View1","View2","hints_","animations_","updateAnimationKey_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","minZoom_","centerConstraint","resolutionConstraint","constraint","rotationConstraint","constraints_","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","var_args","animateInternal","animationCount","animationCallback","series","animation","complete","easing","_easingJs","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","setHint","updateAnimations_","getInteracting","cancelAnimations","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","currentCenter","currentResolution","opt_rotation","_viewPropertyJsDefault","CENTER","getConstraints","getConstrainResolution","constrainResolution","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","RESOLUTION","getResolutionForExtent","getResolutionForExtentInternal","xResolution","yResolution","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","ROTATION","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","fitInternal","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smooth","smoothExtentConstraint","constrainOnlyCenter","smoothResolutionConstraint","showFullExtent","projExtent","_resolutionconstraintJs","createSnapToResolutions","createMinMaxResolution","defaultMaxResolution","_commonJs","DEFAULT_TILE_SIZE","defaultMinResolution","defaultMaxZoom","createSnapToPower","enableRotation","_rotationconstraintJs","createSnapToZero","none","createSnapToN","DEFAULT_MAX_ZOOM","createExtent","onlyCenter","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","getViewportClampedResolution","viewportSize","getSmoothClampedResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","disable","opt_tolerance","_attributionJs","_zoomJsDefault","zoomOptions","_rotateJsDefault","rotateOptions","attribution","_attributionJsDefault","attributionOptions","Attribution1","Attribution2","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","mapEvent","Control1","Control2","target_","Rotate1","Rotate2","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","Zoom1","Zoom2","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","events","FullScreenEventType","FullScreen1","FullScreen2","cssClassName_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","isFullScreen","isFullScreenSupported","keys_","source_","handleFullScreen_","exitFullscreen","requestFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","fullscreen","nextClassName","_a","_b","_c","requestFullscreen","fullscreenEnabled","fullscreenElement","PROJECTION","COORDINATE_FORMAT","MousePosition1","MousePosition2","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","viewport","html","MAX_RATIO","MIN_RATIO","ControlledMap1","ControlledMap2","OverviewMap1","OverviewMap2","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","view_","ovmap_","ovmap","boxSizing","boxOverlay_","_overlayJsDefault","positioning","_overlayPositioningJsDefault","CENTER_CENTER","scope","overlayBox","getElement","move","mousePosition","setPosition","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","mapSize","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","LN2","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","Overlay1","Overlay2","insertFirst","stopEvent","autoPan","autoPanAnimation","margin","autoPanMargin","rendered","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","getOffset","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","updateRenderedPosition","posX","posY","CENTER_RIGHT","BOTTOM_CENTER","TOP_CENTER","CENTER_LEFT","msTransform","getOptions","UNITS_PROP","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","DEFAULT_DPI","ScaleLine1","ScaleLine2","bar","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","dpi","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","createScaleBar","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","Direction","ZoomSlider1","ZoomSlider2","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","ZoomToExtent1","ZoomToExtent2","handleZoomToExtent","kinetic","_kineticJsDefault","altShiftDragRotate","_dragRotateJsDefault","doubleClickZoom","_doubleClickZoomJsDefault","zoomDelta","zoomDuration","dragPan","_dragPanJsDefault","pinchRotate","_pinchRotateJsDefault","pinchZoom","_pinchZoomJsDefault","keyboard","_keyboardPanJsDefault","_keyboardZoomJsDefault","mouseWheelZoom","_mouseWheelZoomJsDefault","shiftDragZoom","_dragZoomJsDefault","DoubleClickZoom1","DoubleClickZoom2","delta_","shiftKey","pan","zoomByDelta","Interaction1","Interaction2","setActive","ACTIVE","active","_pointerJs","DragPan1","DragPan2","stopDown","kinetic_","lastCentroid","lastPointersCount_","panning_","condition","_conditionJs","noModifierKeys","primaryAction","condition_","focusWithTabindex","noKinetic_","handleDragEvent","targetPointers","centroid","handleUpEvent","centerpx","handleDownEvent","PointerInteraction1","PointerInteraction2","handleMoveEvent","handlingDownUpSequence","trackedPointers_","getPointerCount","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","altKeyOnly","altShiftKeysOnly","focus","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","mouseOnly","touchOnly","penOnly","_mapBrowserEventTypeJs","conditions","pass","altKey","metaKey","ctrlKey","activeElement","hasAttribute","tagName","pointerType","pointerEvt","isPrimary","DragRotate1","DragRotate2","lastAngle_","_dragBoxJs","DragZoom1","DragZoom2","minArea","out_","out","onBoxEnd","mapExtent","boxPixelExtent","factor","DragBoxEventType","DragBoxEvent1","DragBoxEvent2","DragBox1","DragBox2","box_","_boxJsDefault","minArea_","startPixel_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","startPixel","endPixel","setPixels","completeBox","RenderBox1","RenderBox2","endPixel_","render_","px","createOrUpdateGeometry","_polygonJsDefault","KeyboardPan1","KeyboardPan2","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","_keyCodeJsDefault","DOWN","UP","mapUnitsDelta","KeyboardZoom1","KeyboardZoom2","charCode","charCodeAt","Mode","TRACKPAD","MouseWheelZoom1","MouseWheelZoom2","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate1","PinchRotate2","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom1","PinchZoom2","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDropEventType","DragAndDropEvent1","DragAndDropEvent2","file","DragAndDrop1","DragAndDrop2","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","handleResult_","formats","TextDecoder","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","DragRotateAndZoom1","DragRotateAndZoom2","lastMagnitude_","magnitude","angleDelta","createRegularPolygon","createBox","DrawEventType","DrawEvent1","DrawEvent2","Draw1","Draw2","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","Constructor_1","mode_1","squaredLength","setCenterAndRadius","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","_vectorJsDefault","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","addToDrawing_","startDrawing_","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","mode","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","ring","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","_multiPointJsDefault","_multiLineStringJsDefault","_multiPolygonJsDefault","appendCoordinates","newDrawing","ending","sketchFeatures","overlaySource","opt_geometry","boxCoordinates","Circle1","Circle2","getRadiusSquared_","circleExtent","MultiLineString1","MultiLineString2","lineStrings","appendLineString","multiLineString","opt_interpolate","getLineStrings","midpoints","midpoint","_interpolateJs","MultiPoint1","MultiPoint2","appendPoint","multiPoint","getPoint","MultiPolygon1","MultiPolygon2","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiPolygon","_centerJs","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","ExtentEventType","ExtentEvent1","ExtentEvent2","Extent1","Extent2","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","pixelCoordinate","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2","tempExtent","tempSegment","ModifyEventType","ModifyEvent1","ModifyEvent2","MapBrowserEvent","Modify1","Modify2","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","segmentData","depth","centerSegmentData","circumferenceSegmentData","featureSegments","geometry_1","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestVertex","closestOnSegmentData","insertVertex_","opt_coordinate","nodes","hitPointGeometry","viewExtent","projectedDistanceToSegmentDataSquared","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","pointCoordinates","distanceToCenterSquared","distanceToCircumference","SelectEventType","SelectEvent1","SelectEvent2","selected","deselected","originalFeatureStyles","Select1","Select2","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layers_1","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","_collectionEventTypeJs","getFeatureFromEvent","Snap1","Snap2","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","opt_listen","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","currentMap","lowerLeft","upperRight","closestSegmentData","projectedCoordinate","isCircle","TranslateEventType","TranslateEvent1","TranslateEvent2","startCoordinate","Translate1","Translate2","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","deltaX_1","deltaY_1","_lrucacheJs","TileCache1","TileCache2","expireCache","peekLast","pruneExceptNewestZ","peekFirstKey","_tilecoordJs","fromKey","LRUCache","LRUCache1","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLastKey","opt_tileCoord","getKeyZXY","hash","withinExtentAndZ","getFullTileRange","TileRange","TileRange1","containsTileRange","canvasPool","VectorRenderTile1","VectorRenderTile2","urlTileCoord","getSourceTiles","declutterExecutorGroups","loadingSourceTiles","errorSourceTileKeys","hitDetectionImageData","replayState_","sourceTiles","wantedResolution","sourceZ","wrappedTileCoord","hasContext","getReplayState","renderedRenderOrder","renderedRevision","renderedTileResolution","renderedTileRevision","renderedZ","renderedTileZ","VectorTile1","VectorTile2","onLoad","setFeatures","onError","_featureJs","NAMESPACE_URIS","FEATURE_READER","readRte","readTrk","readWpt","GPX_PARSERS","_xmlJs","makeStructureNS","makeArrayPusher","LINK_PARSERS","makeObjectPropertySetter","_xsdJs","readString","GPX_SERIALIZERS","makeChildAppender","objectStack","_featureJs1","transformGeometryWithOptions","orderedKeys","RTE_SEQUENCE","namespaceURI","makeSequence","RTE_SERIALIZERS","OBJECT_PROPERTY_NODE_FACTORY","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX1","GPX2","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","readFeatureFromNode","featureReader","localName","getReadOptions","readFeaturesFromNode","pushParseAndPop","writeFeaturesNode","adaptOptions","gpx","createElementNS","setAttributeNS","XML_SCHEMA_INSTANCE_URI","GPX_NODE_FACTORY","RTE_PARSERS","parseLink","readNonNegativeInteger","parseExtensions","RTEPT_PARSERS","rteValues","layoutOptions","readDecimal","readDateTime","TRK_PARSERS","TRKSEG_PARSERS","TRKPT_PARSERS","trkValues","WPT_PARSERS","LINK_SEQUENCE","LINK_SERIALIZERS","writeStringTextNode","writeLink","writeNonNegativeIntegerTextNode","makeArraySerializer","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","makeSimpleNodeFactory","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","writeDecimalTextNode","writeDateTimeTextNode","GEOMETRY_TYPE_TO_NODENAME","opt_nodeName","nodeName","getAttribute","hasZ","hasM","applyLayoutOptions","href","link","XMLFeature1","XMLFeature2","xmlSerializer_","getXMLSerializer","readFeature","readFeatureFromDocument","readFeaturesFromDocument","nextSibling","nodeType","Node","ELEMENT_NODE","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeature","writeFeatureNode","serializeToString","writeFeatures","writeGeometry","writeGeometryNode","transformExtentWithOptions","FeatureFormat","FeatureFormat1","defaultFeatureProjection","write","decimals","power_1","getAllTextContent","getAllTextContent_","isDocument","getAttributeNS","makeArrayExtender","makeReplacer","makeObjectPropertyPusher","parseNode","serialize","pushSerializeAndPop","registerXMLSerializer","registerDocument","getDocument","qualifiedName","normalizeWhitespace","accumulator","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","xml","valueReader","opt_property","nodeWriter","serializersNS","nodeFactory","serializers","opt_namespaceURI","fixedNodeName","opt_nodeName1","sequence","namespaceURIs","structure","opt_structureNS","structureNS","parsersNS","nextElementSibling","parsers","parser","opt_keys","xmlSerializer","XMLSerializer","document_","implementation","createDocument","readBoolean","readBooleanString","readDecimalString","readNonNegativeIntegerString","writeBooleanTextNode","writeCDATASection","string","dateTime","trim","bool","createCDATASection","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","toPrecision","nonNegativeInteger","GeometryCollection1","GeometryCollection2","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","_baseTileJs","TileLayer1","TileLayer2","BaseTileLayer1","BaseTileLayer2","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","_tilePropertyJsDefault","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","CanvasTileLayerRenderer1","CanvasTileLayerRenderer2","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpTileRange_","_tileRangeJsDefault","isDrawableTile","tileState","getTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","postRenderFunction","tileSource1","frameState1","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","ATTRIBUTION","OSM1","OSM2","imageSmoothing","opaque","reprojectionErrorThreshold","XYZ1","XYZ2","_tilegridJs","createXYZ","extentFromProjection","tileSize","tileUrlFunction","urls","TileImage1","TileImage2","defaultTileLoadFunction","tileClass","_imageTileJsDefault","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","contextOptions_","_commonJs1","IMAGE_SMOOTHING_DISABLED","renderReprojectionEdges_","tileCache","usedTileCache","getTileCacheForProjection","getGutter","stringify","thisProj","projKey","getForProjection","_tileCacheJsDefault","createTile_","getTileCoordForTileUrlFunction","tileUrl","tileOptions","sourceTileGrid","targetTileGrid","newTile","_tileJsDefault","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","ReprojTile1","ReprojTile2","targetProj","getTileFunction","opt_errorThreshold","opt_renderEdges","opt_contextOptions","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","targetExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","_reprojJs","calculateSourceExtentResolution","isFinite","errorThresholdInPixels","ERROR_THRESHOLD","triangulation_","_triangulationJsDefault","getTriangles","calculateSourceExtent","sourceRange","srcX","srcY","reproject_","sources","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","ENABLE_RASTER_REPROJECTION","Triangulation","Triangulation1","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceResolution","brokenDiagonalRendering_","drawTestTriangle","verifyBrokenDiagonalRendering","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","triangulation","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","ud","vd","step","DEFAULT_WMS_VERSION","msImageSmoothingEnabled","_tileEventTypeJs","UrlTile1","UrlTile2","generateTileUrlFunction_","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","_tileEventTypeJsDefault","TILELOADSTART","TILELOADERROR","TILELOADEND","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","setKey","_tileurlfunctionJs","expandUrl","createFromTemplates","TileSource1","TileSource2","opaque_","tilePixelRatio_","tmpSize","loaded","getTileGrid","TileSourceEvent1","TileSourceEvent2","createForExtent","createForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","xyzOptions","gridOptions","opt_maxResolution","half","_tileRangeJs","tmpTileCoord","TileGrid","TileGrid1","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","fullTileRanges","createFromTemplate","createFromTileUrlFunctions","nullTileUrlFunction","zRegEx","xRegEx","yRegEx","dashYRegEx","templates","tileUrlFunctions","startCharCode","stopCharCode","stop_1","getBundleURL","bundleURL","getBaseURL","dirname","_filePath","filePath","slashIndex","relative","fromParts","divergeIndex","toParts","fromId","toId","_dirname","_relative"],"version":3,"file":"bike-track.c2d9b7d9.js.map"}