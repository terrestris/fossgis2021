{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-2f3a11f9bfb651afac3d2c157d7f8452.js","node_modules/ol/src/format/GPX.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","node_modules/@parcel/runtime-js/lib/runtime-16d2dfb7f907fe6a1af8faa8e93126a0.js","src/bike-track.js","node_modules/ol/src/render.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"6dNpu\\\":\\\"bike-track.0bbb8003.js\\\",\\\"54TNJ\\\":\\\"backhendl.fad54c65.gpx\\\",\\\"0acRd\\\":\\\"extent-constrained.7620afdc.css\\\",\\\"3s7cU\\\":\\\"extent-constrained.55f9f859.js\\\",\\\"4VSVK\\\":\\\"extent-constrained.4d5b3e95.js\\\",\\\"39l4W\\\":\\\"mixed-renderers.88cf3e0b.js\\\"}\"));","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {includes} from '../array.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readNonNegativeInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [opt_options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readNonNegativeInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readNonNegativeInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readNonNegativeInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/GeometryLayout.js\").default} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const flatCoordinates = /** @type {Array<number>} */ (rteValues[\n      'flatCoordinates'\n    ]);\n    const layoutOptions = /** @type {LayoutOptions} */ (rteValues[\n      'layoutOptions'\n    ]);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const flatCoordinates = /** @type {Array<number>} */ (trkValues[\n      'flatCoordinates'\n    ]);\n    const layoutOptions = /** @type {LayoutOptions} */ (trkValues[\n      'layoutOptions'\n    ]);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.LINE_STRING) {\n    const lineString = /** @type {LineString} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n    const multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.POINT) {\n    const point = /** @type {Point} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"6dNpu\", \"54TNJ\")","import 'ol/ol.css';\nimport { Map, View } from 'ol';\nimport { Zoom } from 'ol/control';\nimport GPX from 'ol/format/GPX';\nimport { GeometryCollection, Point } from 'ol/geom';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport { fromLonLat } from 'ol/proj';\nimport OSM from 'ol/source/OSM';\nimport VectorSource from 'ol/source/Vector';\nimport { Circle, Fill, Stroke, Style } from 'ol/style';\nimport backhendl from 'url:./data/backhendl.gpx';\nimport { getVectorContext } from 'ol/render';\n\nvar raster = new TileLayer({\n  source: new OSM()\n});\n\nvar style = new Style({\n  image: new Circle({\n    fill: new Fill({\n      color: 'rgb(255,240,0)'\n    }),\n    stroke: new Stroke({\n      color: 'rgb(255,170,0)',\n      width: 1.5\n    }),\n    radius: 11\n  }),\n  stroke: new Stroke({\n    color: 'rgb(50,200,50)',\n    width: 2\n  })\n});\n\nvar source = new VectorSource({\n  url: backhendl,\n  format: new GPX()\n});\n\nvar maxRotation = Math.PI / 200;\n\nvar past = [];\nvar vector = new VectorLayer({\n  source: source,\n  style: function(feature, resolution) {\n    var deltaTime;\n    if (playing) {\n      deltaTime = 30 * ((Date.now() / 1000) - originM);\n    } else if (stopM) {\n      deltaTime = 30 * (stopM - originM);\n    } else {\n      deltaTime = 0;\n    }\n    var line = feature.getGeometry().getLineString(0);\n    var time = stats.minTime + deltaTime;\n    if (time > stats.maxTime) {\n      time = stats.maxTime;\n      reset();\n    }\n    var coord = line.getCoordinateAtM(time, true);\n    var next = line.getCoordinateAtM(time + 30, true);\n    var nextRotation = Math.atan2(next[1] - coord[1], next[0] - coord[0]) - Math.PI / 2\n    var rotation = view.getRotation();\n    var deltaRotation = nextRotation - rotation;\n    if (deltaRotation > maxRotation) {\n      view.setRotation(rotation + maxRotation);\n    } else if (deltaRotation < -maxRotation) {\n      view.setRotation(rotation - maxRotation);\n    } else {\n      view.setRotation(nextRotation);\n    }\n    view.setCenter(coord);\n\n    var point = new Point(coord, 'XYZM');\n    past.unshift(point);\n    style.setGeometry(new GeometryCollection([line, point]));\n    return [style];\n  }\n});\n\nvar view = new View({\n  center: fromLonLat([15.4409210, 47.1530110]),\n  zoom: 10,\n  constrainRotation: false\n});\n\nvar map = new Map({\n  target: document.getElementById('map'),\n  layers: [raster, vector],\n  controls: [new Zoom()],\n  view: view\n});\n\nvar timeRange = null;\n\nvar stats = {\n  minTime: Infinity,\n  maxTime: -Infinity,\n  minZ: Infinity,\n  maxZ: -Infinity,\n  lengths: [],\n  coordinates: []\n};\n\nfunction distance(from, to) {\n  var dx = to[0] - from[0];\n  var dy = to[1] - from[1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nsource.on('addfeature', function(event) {\n  var line = event.feature.getGeometry().getLineString(0);\n  var coords = line.getCoordinates();\n  var first = coords[0];\n  var num = coords.length;\n  var last = coords[num - 1];\n  stats.minTime = first[3];\n  stats.maxTime = last[3];\n  for (var i = 0; i < num; ++i) {\n    var z = coords[i][2];\n    if (z < stats.minZ) {\n      stats.minZ = z;\n    }\n    if (z > stats.maxZ) {\n      stats.maxZ = z;\n    }\n    if (i === 0) {\n      stats.lengths.push(0);\n    } else {\n      stats.lengths.push(\n          distance(coords[i - 1], coords[i]) + stats.lengths[i - 1]);\n    }\n  }\n  stats.coordinates = coords;\n  view.animate({\n    center: first,\n    zoom: 17\n  });\n});\n\nvar playing = false;\nvar originM;\nfunction start() {\n  originM = Date.now() / 1000;\n  playing = true;\n  stopM = null;\n  source.changed();\n}\n\nvar stopM;\nfunction stop() {\n  stopM = Date.now() / 1000;\n  playing = false;\n}\n\nfunction resume() {\n  originM += (Date.now() / 1000) - stopM;\n  playing = true;\n  source.changed();\n}\n\nfunction reset() {\n  stop();\n  stopM = null;\n}\n\nmap.on('singleclick', function() {\n  if (playing) {\n    stop();\n  } else if (stopM) {\n    resume();\n  } else {\n    start();\n  }\n})\n\nvar maxHistory = 30;\n\nvector.on('postrender', function(event) {\n  if (playing) {\n    var vectorContext = getVectorContext(event);\n    var len = Math.min(maxHistory, past.length);\n    for (var i = 0; i < len; i += 6) {\n      vectorContext.setImageStyle(new Circle({\n        fill: new Fill({\n          color: 'rgba(255,240,0, ' + (1 - i / len) + ')'\n        }),\n        radius: 9\n      }));\n      vectorContext.drawPoint(past[i]);\n    }\n    past.length = len;\n    plot(event.context);\n    setTimeout(function() {\n      source.changed();\n    }, 100);\n  } else {\n    past.length = 0;\n  }\n});\n\nfunction plot(context) {\n  var canvas = context.canvas;\n  var width = canvas.width;\n  var bottom = canvas.height;\n  var height = bottom / 5;\n\n  var rangeZ = stats.maxZ - stats.minZ;\n  var rangeX = stats.lengths[stats.lengths.length - 1];\n\n  // full plot\n  context.beginPath();\n  context.moveTo(0, bottom);\n  for (var i = 0, ii = stats.coordinates.length; i < ii; i += 2) {\n    var coord = stats.coordinates[i];\n    var deltaZ = coord[2] - stats.minZ;\n    var x = width * stats.lengths[i] / rangeX;\n    var y = bottom - height * deltaZ / rangeZ;\n    context.lineTo(x, y);\n  }\n  context.lineTo(width, bottom);\n  context.closePath();\n  context.fillStyle = 'rgba(0,0,0,0.6)';\n  context.fill();\n\n  // current progress\n  if (past.length < 1) {\n    return;\n  }\n  var now = past[0].getCoordinates()[3];\n  context.beginPath();\n  context.moveTo(0, bottom);\n  for (var i = 0, ii = stats.coordinates.length; i < ii; i += 2) {\n    var coord = stats.coordinates[i];\n    if (coord[3] > now) {\n      break;\n    }\n    var deltaZ = coord[2] - stats.minZ;\n    var x = width * stats.lengths[i] / rangeX;\n    var y = bottom - height * deltaZ / rangeZ;\n    context.lineTo(x, y);\n  }\n  context.lineTo(x, bottom);\n  context.closePath();\n  context.fillStyle = 'rgba(50,170,50,0.5)';\n  context.fill();\n}\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [opt_options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  const canvas = context.canvas;\n  const options = opt_options ? opt_options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    frameState.pixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n  return new CanvasImmediateRenderer(\n    event.context,\n    frameState.pixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  const result = pixel.slice(0);\n  applyTransform(event.inversePixelTransform.slice(), result);\n  return result;\n}\n"],"names":["$7d806a7a603c235ec027b73d847f4d95$var$mapping","$7d806a7a603c235ec027b73d847f4d95$export$357eb1b4f03c1402","pairs","keys","Object","i","length","$7d806a7a603c235ec027b73d847f4d95$export$40339995e8a21591","id","resolved","Error","parcelRequire","register","JSON","parse","$b33e8a0ea0c493ce5741084af120ccb7$var$NAMESPACE_URIS","$b33e8a0ea0c493ce5741084af120ccb7$var$FEATURE_READER","$b33e8a0ea0c493ce5741084af120ccb7$var$readRte","$b33e8a0ea0c493ce5741084af120ccb7$var$readTrk","$b33e8a0ea0c493ce5741084af120ccb7$var$readWpt","$b33e8a0ea0c493ce5741084af120ccb7$var$GPX_PARSERS","$6u7wO","makeStructureNS","makeArrayPusher","$b33e8a0ea0c493ce5741084af120ccb7$var$LINK_PARSERS","makeObjectPropertySetter","$4pjCM","readString","$b33e8a0ea0c493ce5741084af120ccb7$var$GPX_SERIALIZERS","makeChildAppender","node","feature","objectStack","options","properties","getProperties","context","geometry","getGeometry","getType","$1gVIf","default","LINE_STRING","lineString","$2rUWQ","transformGeometryWithOptions","getLayout","getCoordinates","parentNode","orderedKeys","$b33e8a0ea0c493ce5741084af120ccb7$var$RTE_SEQUENCE","namespaceURI","values","makeSequence","pushSerializeAndPop","$b33e8a0ea0c493ce5741084af120ccb7$var$RTE_SERIALIZERS","OBJECT_PROPERTY_NODE_FACTORY","MULTI_LINE_STRING","multiLineString","getLineStrings","$b33e8a0ea0c493ce5741084af120ccb7$var$TRK_SEQUENCE","$b33e8a0ea0c493ce5741084af120ccb7$var$TRK_SERIALIZERS","POINT","point","$b33e8a0ea0c493ce5741084af120ccb7$var$writeWptType","$b33e8a0ea0c493ce5741084af120ccb7$var$GPX","_super","GPX","opt_options","_this","call","this","dataProjection","$2vjin","get","readExtensions_","readExtensions","$b33e8a0ea0c493ce5741084af120ccb7$var$__extends","prototype","handleReadExtensions_","features","ii","extensionsNode","set","undefined","readFeatureFromNode","$3MevS","includes","featureReader","localName","getReadOptions","readFeaturesFromNode","pushParseAndPop","writeFeaturesNode","adaptOptions","gpx","createElementNS","setAttributeNS","XML_SCHEMA_INSTANCE_URI","setAttribute","$b33e8a0ea0c493ce5741084af120ccb7$var$GPX_NODE_FACTORY","$6MnPI","$b33e8a0ea0c493ce5741084af120ccb7$var$RTE_PARSERS","$b33e8a0ea0c493ce5741084af120ccb7$var$parseLink","readNonNegativeInteger","$b33e8a0ea0c493ce5741084af120ccb7$var$parseExtensions","$b33e8a0ea0c493ce5741084af120ccb7$var$RTEPT_PARSERS","rteValues","flatCoordinates","layoutOptions","$b33e8a0ea0c493ce5741084af120ccb7$var$appendCoordinate","readDecimal","readDateTime","$b33e8a0ea0c493ce5741084af120ccb7$var$TRK_PARSERS","parseNode","$b33e8a0ea0c493ce5741084af120ccb7$var$TRKSEG_PARSERS","push","$b33e8a0ea0c493ce5741084af120ccb7$var$TRKPT_PARSERS","trkValues","$b33e8a0ea0c493ce5741084af120ccb7$var$WPT_PARSERS","$b33e8a0ea0c493ce5741084af120ccb7$var$LINK_SEQUENCE","$b33e8a0ea0c493ce5741084af120ccb7$var$LINK_SERIALIZERS","writeStringTextNode","$b33e8a0ea0c493ce5741084af120ccb7$var$writeLink","writeNonNegativeIntegerTextNode","makeArraySerializer","$b33e8a0ea0c493ce5741084af120ccb7$var$RTEPT_TYPE_SEQUENCE","$b33e8a0ea0c493ce5741084af120ccb7$var$TRKSEG_SERIALIZERS","$b33e8a0ea0c493ce5741084af120ccb7$var$TRKSEG_NODE_FACTORY","makeSimpleNodeFactory","$b33e8a0ea0c493ce5741084af120ccb7$var$WPT_TYPE_SEQUENCE","$b33e8a0ea0c493ce5741084af120ccb7$var$WPT_TYPE_SERIALIZERS","writeDecimalTextNode","writeDateTimeTextNode","$b33e8a0ea0c493ce5741084af120ccb7$var$GEOMETRY_TYPE_TO_NODENAME","value","opt_nodeName","nodeName","parseFloat","getAttribute","hasZ","hasM","$b33e8a0ea0c493ce5741084af120ccb7$var$applyLayoutOptions","ends","layout","$3dG11","XY","stride","XYZM","XYZ","XYM","href","$7oM0w","$7JkHi","setProperties","$4LOxL","coordinates","$5g6wp","link","coordinate","String","$b33e8a0ea0c493ce5741084af120ccb7$export$9099ad97b570f7c","$634f916bc30b7d6650877f3f4b6a8b3a$var$bundleURL","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBaseURL","url","replace","$634f916bc30b7d6650877f3f4b6a8b3a$export$da289beea9c5b10d","err","matches","stack","match","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURL","resolve","$824bc590bf0a3702ac7bd27152cb0639$var$dirname","_filePath","filePath","slice","slashIndex","lastIndexOf","$824bc590bf0a3702ac7bd27152cb0639$var$relative","from","to","fromParts","split","shift","divergeIndex","toParts","parts","apply","join","module","exports","fromId","toId","$824bc590bf0a3702ac7bd27152cb0639$require$resolve","_dirname","_relative","$d3d5a0af21676091111686ce080c045c$exports","getBundleURL","$660ddfae62ab927110b85f404e392196$var$raster","$3SnxS","source","$7M8xZ","$660ddfae62ab927110b85f404e392196$var$style","$1z20P","Style","image","Circle","fill","Fill","color","stroke","Stroke","width","radius","$660ddfae62ab927110b85f404e392196$var$source","$3CnQS","$parcel$interopDefault","format","$b33e8a0ea0c493ce5741084af120ccb7$exports","$660ddfae62ab927110b85f404e392196$var$maxRotation","Math","PI","$660ddfae62ab927110b85f404e392196$var$past","$660ddfae62ab927110b85f404e392196$var$vector","$1rnY9","style","resolution","deltaTime","$660ddfae62ab927110b85f404e392196$var$playing","Date","now","$660ddfae62ab927110b85f404e392196$var$originM","$660ddfae62ab927110b85f404e392196$var$stopM","line","getLineString","time","$660ddfae62ab927110b85f404e392196$var$stats","minTime","maxTime","$660ddfae62ab927110b85f404e392196$var$stop","coord","getCoordinateAtM","next","nextRotation","atan2","rotation","$660ddfae62ab927110b85f404e392196$var$view","getRotation","deltaRotation","setRotation","setCenter","unshift","setGeometry","$4eboh","$52PBC","View","center","fromLonLat","zoom","constrainRotation","$660ddfae62ab927110b85f404e392196$var$map","Map","target","document","getElementById","layers","controls","$5ScHR","Zoom","view","Infinity","minZ","maxZ","lengths","on","event","dx","dy","coords","first","num","last","z","sqrt","animate","changed","vectorContext","userTransform","frameState","transform","$5ljS4","multiply","inversePixelTransform","coordinateToPixelTransform","squaredTolerance","$25giy","getSquaredTolerance","viewState","pixelRatio","userProjection","getUserProjection","getTransformFromProjections","projection","$4R4Ev","extent","$ef5a32aa029d77fee7a3a3bd54627b3c$export$ce92cfb882ff66f4","len","min","setImageStyle","drawPoint","canvas","bottom","height","rangeZ","rangeX","beginPath","moveTo","deltaZ","x","y","lineTo","closePath","fillStyle","$660ddfae62ab927110b85f404e392196$var$plot","setTimeout"],"version":3,"file":"bike-track.0bbb8003.js.map"}