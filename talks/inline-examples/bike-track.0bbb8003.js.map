{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-19a72f85e35c87b8c15d48840bb25e9b.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/string.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/xml.js","node_modules/ol/src/format/XMLFeature.js","node_modules/ol/src/format/xsd.js","node_modules/ol/src/format/GPX.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","node_modules/@parcel/runtime-js/lib/runtime-16d2dfb7f907fe6a1af8faa8e93126a0.js","src/bike-track.js","node_modules/ol/src/render.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"6dNpu\\\":\\\"bike-track.0bbb8003.js\\\",\\\"54TNJ\\\":\\\"backhendl.fad54c65.gpx\\\",\\\"43PvP\\\":\\\"basemap.fe5b33cb.css\\\"}\"));","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext(\n    '2d',\n    opt_Context2DSettings\n  ));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (objectStack[\n        objectStack.length - 1\n      ]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.XML;\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeatureFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, opt_options) {\n    const features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, opt_options) {\n    const node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    const node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, opt_options) {\n    const node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, opt_options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {includes} from '../array.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readNonNegativeInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [opt_options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readNonNegativeInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readNonNegativeInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readNonNegativeInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/GeometryLayout.js\").default} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const flatCoordinates = /** @type {Array<number>} */ (rteValues[\n      'flatCoordinates'\n    ]);\n    const layoutOptions = /** @type {LayoutOptions} */ (rteValues[\n      'layoutOptions'\n    ]);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const flatCoordinates = /** @type {Array<number>} */ (trkValues[\n      'flatCoordinates'\n    ]);\n    const layoutOptions = /** @type {LayoutOptions} */ (trkValues[\n      'layoutOptions'\n    ]);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.LINE_STRING) {\n    const lineString = /** @type {LineString} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n    const multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.POINT) {\n    const point = /** @type {Point} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} [opt_direction] If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(\n            tileCoordKey\n          ));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(\n          projection\n        );\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"6dNpu\", \"54TNJ\")","import 'ol/ol.css';\nimport { Map, View } from 'ol';\nimport { Zoom } from 'ol/control';\nimport GPX from 'ol/format/GPX';\nimport { GeometryCollection, Point } from 'ol/geom';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport { fromLonLat } from 'ol/proj';\nimport OSM from 'ol/source/OSM';\nimport VectorSource from 'ol/source/Vector';\nimport { Circle, Fill, Stroke, Style } from 'ol/style';\nimport backhendl from 'url:./data/backhendl.gpx';\nimport { getVectorContext } from 'ol/render';\n\nvar raster = new TileLayer({\n  source: new OSM()\n});\n\nvar style = new Style({\n  image: new Circle({\n    fill: new Fill({\n      color: 'rgb(255,240,0)'\n    }),\n    stroke: new Stroke({\n      color: 'rgb(255,170,0)',\n      width: 1.5\n    }),\n    radius: 11\n  }),\n  stroke: new Stroke({\n    color: 'rgb(50,200,50)',\n    width: 2\n  })\n});\n\nvar source = new VectorSource({\n  url: backhendl,\n  format: new GPX()\n});\n\nvar maxRotation = Math.PI / 200;\n\nvar past = [];\nvar vector = new VectorLayer({\n  source: source,\n  style: function(feature, resolution) {\n    var deltaTime;\n    if (playing) {\n      deltaTime = 30 * ((Date.now() / 1000) - originM);\n    } else if (stopM) {\n      deltaTime = 30 * (stopM - originM);\n    } else {\n      deltaTime = 0;\n    }\n    var line = feature.getGeometry().getLineString(0);\n    var time = stats.minTime + deltaTime;\n    if (time > stats.maxTime) {\n      time = stats.maxTime;\n      reset();\n    }\n    var coord = line.getCoordinateAtM(time, true);\n    var next = line.getCoordinateAtM(time + 30, true);\n    var nextRotation = Math.atan2(next[1] - coord[1], next[0] - coord[0]) - Math.PI / 2\n    var rotation = view.getRotation();\n    var deltaRotation = nextRotation - rotation;\n    if (deltaRotation > maxRotation) {\n      view.setRotation(rotation + maxRotation);\n    } else if (deltaRotation < -maxRotation) {\n      view.setRotation(rotation - maxRotation);\n    } else {\n      view.setRotation(nextRotation);\n    }\n    view.setCenter(coord);\n\n    var point = new Point(coord, 'XYZM');\n    past.unshift(point);\n    style.setGeometry(new GeometryCollection([line, point]));\n    return [style];\n  }\n});\n\nvar view = new View({\n  center: fromLonLat([15.4370540, 47.1427290]),\n  zoom: 10,\n  constrainRotation: false\n});\n\nvar map = new Map({\n  target: document.getElementById('map'),\n  layers: [raster, vector],\n  controls: [new Zoom()],\n  view: view\n});\n\nvar timeRange = null;\n\nvar stats = {\n  minTime: Infinity,\n  maxTime: -Infinity,\n  minZ: Infinity,\n  maxZ: -Infinity,\n  lengths: [],\n  coordinates: []\n};\n\nfunction distance(from, to) {\n  var dx = to[0] - from[0];\n  var dy = to[1] - from[1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nsource.on('addfeature', function(event) {\n  var line = event.feature.getGeometry().getLineString(0);\n  var coords = line.getCoordinates();\n  var first = coords[0];\n  var num = coords.length;\n  var last = coords[num - 1];\n  stats.minTime = first[3];\n  stats.maxTime = last[3];\n  for (var i = 0; i < num; ++i) {\n    var z = coords[i][2];\n    if (z < stats.minZ) {\n      stats.minZ = z;\n    }\n    if (z > stats.maxZ) {\n      stats.maxZ = z;\n    }\n    if (i === 0) {\n      stats.lengths.push(0);\n    } else {\n      stats.lengths.push(\n          distance(coords[i - 1], coords[i]) + stats.lengths[i - 1]);\n    }\n  }\n  stats.coordinates = coords;\n  view.animate({\n    center: first,\n    zoom: 17\n  });\n});\n\nvar playing = false;\nvar originM;\nfunction start() {\n  originM = Date.now() / 1000;\n  playing = true;\n  stopM = null;\n  source.changed();\n}\n\nvar stopM;\nfunction stop() {\n  stopM = Date.now() / 1000;\n  playing = false;\n}\n\nfunction resume() {\n  originM += (Date.now() / 1000) - stopM;\n  playing = true;\n  source.changed();\n}\n\nfunction reset() {\n  stop();\n  stopM = null;\n}\n\nmap.on('singleclick', function() {\n  if (playing) {\n    stop();\n  } else if (stopM) {\n    resume();\n  } else {\n    start();\n  }\n})\n\nvar maxHistory = 30;\n\nvector.on('postrender', function(event) {\n  if (playing) {\n    var vectorContext = getVectorContext(event);\n    var len = Math.min(maxHistory, past.length);\n    for (var i = 0; i < len; i += 6) {\n      vectorContext.setImageStyle(new Circle({\n        fill: new Fill({\n          color: 'rgba(255,240,0, ' + (1 - i / len) + ')'\n        }),\n        radius: 9\n      }));\n      vectorContext.drawPoint(past[i]);\n    }\n    past.length = len;\n    plot(event.context);\n    setTimeout(function() {\n      source.changed();\n    }, 100);\n  } else {\n    past.length = 0;\n  }\n});\n\nfunction plot(context) {\n  var canvas = context.canvas;\n  var width = canvas.width;\n  var bottom = canvas.height;\n  var height = bottom / 5;\n\n  var rangeZ = stats.maxZ - stats.minZ;\n  var rangeX = stats.lengths[stats.lengths.length - 1];\n\n  // full plot\n  context.beginPath();\n  context.moveTo(0, bottom);\n  for (var i = 0, ii = stats.coordinates.length; i < ii; i += 2) {\n    var coord = stats.coordinates[i];\n    var deltaZ = coord[2] - stats.minZ;\n    var x = width * stats.lengths[i] / rangeX;\n    var y = bottom - height * deltaZ / rangeZ;\n    context.lineTo(x, y);\n  }\n  context.lineTo(width, bottom);\n  context.closePath();\n  context.fillStyle = 'rgba(0,0,0,0.6)';\n  context.fill();\n\n  // current progress\n  if (past.length < 1) {\n    return;\n  }\n  var now = past[0].getCoordinates()[3];\n  context.beginPath();\n  context.moveTo(0, bottom);\n  for (var i = 0, ii = stats.coordinates.length; i < ii; i += 2) {\n    var coord = stats.coordinates[i];\n    if (coord[3] > now) {\n      break;\n    }\n    var deltaZ = coord[2] - stats.minZ;\n    var x = width * stats.lengths[i] / rangeX;\n    var y = bottom - height * deltaZ / rangeZ;\n    context.lineTo(x, y);\n  }\n  context.lineTo(x, bottom);\n  context.closePath();\n  context.fillStyle = 'rgba(50,170,50,0.5)';\n  context.fill();\n}\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [opt_options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  const canvas = context.canvas;\n  const options = opt_options ? opt_options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    frameState.pixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n  return new CanvasImmediateRenderer(\n    event.context,\n    frameState.pixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  const result = pixel.slice(0);\n  applyTransform(event.inversePixelTransform.slice(), result);\n  return result;\n}\n"],"names":["$7d806a7a603c235ec027b73d847f4d95$var$mapping","$7d806a7a603c235ec027b73d847f4d95$export$357eb1b4f03c1402","pairs","keys","Object","i","length","$7d806a7a603c235ec027b73d847f4d95$export$40339995e8a21591","id","resolved","Error","parcelRequire","register","JSON","parse","$f7bbc97715b7cef936b659025f276afb$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$8eda8fbd1364c8a1","a","b","$7c21d7646a0313abf7b847efa68bfceb$export$627ad4a8fadf1912","arr","obj","indexOf","$7c21d7646a0313abf7b847efa68bfceb$export$45934da9231b7323","target","direction","n","$7c21d7646a0313abf7b847efa68bfceb$export$1f4f991ce94838ce","begin","end","tmp","$7c21d7646a0313abf7b847efa68bfceb$export$46e35401bc090c62","data","extension","Array","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$bcc761834e33d339","arr1","arr2","len1","$8ff7925ef9afa7e69604ab9620edac22$export$ad8dd69aa6772cd0","$8ff7925ef9afa7e69604ab9620edac22$export$5c50afa32081505e","$8ff7925ef9afa7e69604ab9620edac22$export$3850addf0fb4e6a7","$cd365e7aabd14aaf6df378f6a61e84d7$export$18e1b4ff5b3c2297","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$604e9536b9e0488a","ol_uid","String","$cd365e7aabd14aaf6df378f6a61e84d7$export$f2eb173e8f6e4130","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$543c908bf17a24fb","$2016f251f21b02e27a5ca36c37510540$export$bccc8605349feea7","$2016f251f21b02e27a5ca36c37510540$export$f16ffc71033a7aaa","$2016f251f21b02e27a5ca36c37510540$export$1940d5d2b4cf824d","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$9544418e5c6fedfe","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$700ce540937d8c69","passive","options","defineProperty","get","window","addEventListener","removeEventListener","error","$fd652548d0f540d94aaff6aa830746d2$export$9099ad97b570f7c","_super","AssertionError","code","_this","message","split","call","name","$fd652548d0f540d94aaff6aa830746d2$var$__extends","$2ce41f61858dd350a0b2670bdab4e597$export$b8795f4f643ce74f","assertion","errorCode","$fd652548d0f540d94aaff6aa830746d2$exports","default","$af95442a94d1862a138c401177ef0c4b$var$transformStringDiv","$af95442a94d1862a138c401177ef0c4b$export$4739cf887d3ac19b","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","$af95442a94d1862a138c401177ef0c4b$export$77f8d2fc923b14e3","transform","c","d","e","f","$af95442a94d1862a138c401177ef0c4b$export$6af9bbf310c9e4bf","coordinate","x","y","$af95442a94d1862a138c401177ef0c4b$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$af95442a94d1862a138c401177ef0c4b$export$6e6aac0f60e83c70","source","mat","det","$af95442a94d1862a138c401177ef0c4b$export$47bee913e0e80eb4","transformString","join","node","document","createElement","style","$8fe041eefe2f7aaeb97e4d98623d5d5e$export$9099ad97b570f7c","$8913dbc1b585601bf0ecb482246c0b4c$export$9099ad97b570f7c","$8ebfb36ef5532881c5652b708da2c120$export$a7ecbd362d65c1fe","coordinates","extent","$8ebfb36ef5532881c5652b708da2c120$export$dbb3d72606cdc11","ii","$8ebfb36ef5532881c5652b708da2c120$export$2852acc8f8b94686","$8ebfb36ef5532881c5652b708da2c120$export$14e1765886db335a","value","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$d6a0542127b96c83","slice","$8ebfb36ef5532881c5652b708da2c120$export$c7d6a927f416dd39","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$c422a9fcb5f1ee5c","$8ebfb36ef5532881c5652b708da2c120$export$cc70e7e516e4370f","$8ebfb36ef5532881c5652b708da2c120$export$4f55e2d709659e7b","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$ea8082d0226d35a5","$8ebfb36ef5532881c5652b708da2c120$export$80741250c74fd4fa","$8ebfb36ef5532881c5652b708da2c120$export$bcc761834e33d339","$8ebfb36ef5532881c5652b708da2c120$export$46e35401bc090c62","$8ebfb36ef5532881c5652b708da2c120$export$bfc2e43ae5c3c00c","$8ebfb36ef5532881c5652b708da2c120$export$4b116deb3079b147","flatCoordinates","offset","stride","$8ebfb36ef5532881c5652b708da2c120$export$8696fee511ea7c7a","min","max","$8ebfb36ef5532881c5652b708da2c120$export$c26f7b9c5adc34b4","callback","val","$8ebfb36ef5532881c5652b708da2c120$export$3932426cd8118930","$8ebfb36ef5532881c5652b708da2c120$export$4e2fc25ce97f3583","$8ebfb36ef5532881c5652b708da2c120$export$35aedeaeee8be6cd","$8ebfb36ef5532881c5652b708da2c120$export$5100f0815ea32995","$8ebfb36ef5532881c5652b708da2c120$export$ab4e37d31d15614d","area","$8ebfb36ef5532881c5652b708da2c120$export$988399e568471db1","$8ebfb36ef5532881c5652b708da2c120$export$3dc3550566517965","$8ebfb36ef5532881c5652b708da2c120$export$e178c8044d3d0a05","$8ebfb36ef5532881c5652b708da2c120$export$339e303bf205caae","$8ebfb36ef5532881c5652b708da2c120$export$38622892ed79bdc7","corner","$8ebfb36ef5532881c5652b708da2c120$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$c491031eb9adcc3a","intersection","$8ebfb36ef5532881c5652b708da2c120$export$c3bd2c3b798b0350","$8ebfb36ef5532881c5652b708da2c120$export$76e02248c0889c3e","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$916dab65013919ad0345478f9a9f4e0f$export$4b8705656de00c72","$916dab65013919ad0345478f9a9f4e0f$export$4a376e0f60d976ee","cosh","exp","$916dab65013919ad0345478f9a9f4e0f$export$e08236045caaa3e1","log2","log","LOG2E","$916dab65013919ad0345478f9a9f4e0f$export$fd0b1e5ac4df516c","t","$916dab65013919ad0345478f9a9f4e0f$export$8b6706701cd75ea9","$916dab65013919ad0345478f9a9f4e0f$export$11468133b1231643","angleInRadians","PI","$916dab65013919ad0345478f9a9f4e0f$export$4fc80c88d72f096","angleInDegrees","$916dab65013919ad0345478f9a9f4e0f$export$3334706ffb3dccb1","r","$916dab65013919ad0345478f9a9f4e0f$export$45ca8e7f50ccf2e0","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$9fe004474d6f7f65","color","$ddc7f5de3664aab559d1c545c366e59d$export$47bee913e0e80eb4","$ddc7f5de3664aab559d1c545c366e59d$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$21528ce64591bf2","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","$ddc7f5de3664aab559d1c545c366e59d$export$2e33abec8aecd572","map","Number","$ddc7f5de3664aab559d1c545c366e59d$var$fromStringInternal_","$ddc7f5de3664aab559d1c545c366e59d$export$7266a24c0caa2a8","undefined","$80553d92e1fbcb82d752b6de833f9cf3$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","set","setSize","maxCacheSize","$80553d92e1fbcb82d752b6de833f9cf3$export$601b9e2be44c7cb2","$003acff01e79c0a73122c747343d2e59$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$bfcfd5d9960b75cc9cb78b58301ad8a4$export$9099ad97b570f7c","$e1ac967f910869e98e549bfd20a1853c$export$f3c88f5a058bec38","assign","var_sources","TypeError","output","arguments","$e1ac967f910869e98e549bfd20a1853c$export$97fff7491bd246bd","object","property","$e1ac967f910869e98e549bfd20a1853c$export$207c30846165e93a","values","$e1ac967f910869e98e549bfd20a1853c$export$988399e568471db1","$99fe3f3343ef18166bd431edc467d890$export$9099ad97b570f7c","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$99fe3f3343ef18166bd431edc467d890$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","index","splice","$c81aa09fb137106970dbc142b1e89ec3$export$9099ad97b570f7c","$7961378a294a4943979a10a4df4a3fcf$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$d2df825b2d8bc2ba","$7961378a294a4943979a10a4df4a3fcf$export$6dee5fd4fdf600ff","$02e80757fefec0a9636ae28d17c9fab2$export$21f63b82add5980c","$02e80757fefec0a9636ae28d17c9fab2$export$9099ad97b570f7c","Observable","revision_","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","changed","getRevision","on","len","once","ol_key","un","$99fe3f3343ef18166bd431edc467d890$exports","$a41f90da440d5a4a421775ee47a2c536$export$b902cfd711fa7f06","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$var$BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$b958104f5d8e9527","opt_silent","applyProperties","unset","$02e80757fefec0a9636ae28d17c9fab2$exports","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$a41f90da440d5a4a421775ee47a2c536$export$9099ad97b570f7c","$6e657bb9f80dab756c945a825e2a2cee$export$9099ad97b570f7c","$3a8294651627eb74246351f5b596cf68$export$9099ad97b570f7c","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$3a8294651627eb74246351f5b596cf68$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$a41f90da440d5a4a421775ee47a2c536$exports","$939d3f0e5ddda81ef3d6b6e4c37a0795$export$9099ad97b570f7c","$88faaf1879d30d470a1b447dd4b5a77a$export$9099ad97b570f7c","$1935b85c22cfc539ea58e141ab0b37d6$export$16970faadcd3f29b","layerState","viewState","zoom","$1935b85c22cfc539ea58e141ab0b37d6$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","getChangeEventType","handleSourcePropertyChange_","setSource","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$3a8294651627eb74246351f5b596cf68$exports","$9d44b4ae0ee335a0d47ee14b2c70e04c$export$ce10beeb24f5e243","number","opt_precision","numberString","toFixed","decimal","$29884e9b826cd25109649ab0c360e769$export$bcc761834e33d339","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$d40e2456b1281660","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$5a0d9577a24f3c5b","projection","canWrapX","worldWidth","worldsAway","$29884e9b826cd25109649ab0c360e769$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$52488a0195cf0e38344877f5a3896831$export$9099ad97b570f7c","MapRenderer","map_","$52488a0195cf0e38344877f5a3896831$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","$1935b85c22cfc539ea58e141ab0b37d6$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$7ef0aa4943b3f1208e19af1336a3f8f6$export$4b206f1dd0085e9f","$7ef0aa4943b3f1208e19af1336a3f8f6$export$6cfb92f3ca39d412","$7ef0aa4943b3f1208e19af1336a3f8f6$export$a6463a3b3793c500","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$8b566ca8fd3b2d9c184057ba73cbf345$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$47503d53c08beb29","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$18c07a12203603b5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$55c06ab37ead2f5d","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ffc0c15ee0fd31b3","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6ad0413f8fea3c71","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4f3c27e569bdb39e","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$b679e5c5d4b15cf5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$d721e051424a5865","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6f57224ec3df03c9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$70c5a077e5d6beb9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$907cf5cff4a8acb1","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","measureElement","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$384c0f09c94ed6cc","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$a2bf16790cd8f004","metrics","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4b2ca35321179b27","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$c02f953f8e44cc0a","offsetX","offsetY","translate","rotate","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","label","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$executeLabelInstructions","drawImage","restore","$2ae21f590be041e7827bf48426c0766a$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$7ef0aa4943b3f1208e19af1336a3f8f6$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2ae21f590be041e7827bf48426c0766a$var$__extends","event_1","$1a95b8d63eeb9d5cd5e2742791ea7ab2$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$439ebc2b0f0ec9f4","getDataAtPixel","$52488a0195cf0e38344877f5a3896831$exports","$994e322493abe750f187f7e3835dca5c$export$9099ad97b570f7c","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$export$9099ad97b570f7c","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$e6a59fbd122f687b33c2f382a3c7634b$exports","setLayers","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$f8e1a00fe597e09d283a3697649a8ad5$export$9099ad97b570f7c","MapEvent","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","getEventPixel","getCoordinateFromPixel","$f8e1a00fe597e09d283a3697649a8ad5$exports","$7aa259efacd921e7e7d327d1aea40a76$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$abba75ad998e5558d931e97019b1ab4c$export$9099ad97b570f7c","$75ed2fc91ec6cb8478583ef358a9dd4d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","emulateClick_","pointerEvent","newEvent","$5185059e8a82c1ae03c4e1ba7159b318$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$841b38a534c9217d8aceb4320d3d91b5$export$9099ad97b570f7c","$71b981cc74aab5981a718ea8e06b800b$export$9099ad97b570f7c","$eeb9190850355aed8fc5d92349a26bc6$export$55b8074a560bbdf4","$eeb9190850355aed8fc5d92349a26bc6$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$070765ef09fbcd82a0016eb3aec41934$export$9099ad97b570f7c","$6bfe069e85349c527971d875462feeac$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$6bfe069e85349c527971d875462feeac$var$__extends","added","getTilesLoading","tile","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$6bfe069e85349c527971d875462feeac$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$29d4509fdec4b1b2fe8c71c42629ef39$export$9099ad97b570f7c","$df0b68b08946bf3d8de6eeca4fba3a5f$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$df0b68b08946bf3d8de6eeca4fba3a5f$export$af68584dedf5e52c","$df0b68b08946bf3d8de6eeca4fba3a5f$export$9099ad97b570f7c","$69bda6b48e87f8072533951cf5cd4b41$export$9099ad97b570f7c","$6fef8cd20559fa789cc7c5f681ed5561$export$9099ad97b570f7c","$1514cc7c23ad291d61b727f0ef5e4246$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$7d5079714e2786ec6bee07910f0d8a86$export$8c5f77743cd0e8b7","$7d5079714e2786ec6bee07910f0d8a86$export$bb1f4f75177e5528","$7d5079714e2786ec6bee07910f0d8a86$export$6fd015d56b8406c9","$7d5079714e2786ec6bee07910f0d8a86$export$64afaa717a0c4932","$7d5079714e2786ec6bee07910f0d8a86$export$2126dea64bc40b7b","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$850c9b527a5298aa","$7d5079714e2786ec6bee07910f0d8a86$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$f361696640082386","atan","$655738a66489cc3574c072262645bff6$export$6fd015d56b8406c9","$655738a66489cc3574c072262645bff6$export$af68584dedf5e52c","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$850c9b527a5298aa","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$568ed88074851180","destination","sourceCode","destinationCode","$525020a649871896a05d6fe288616b91$export$761de677acb0d085","$525020a649871896a05d6fe288616b91$export$aec7b6756585c081","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$525020a649871896a05d6fe288616b91$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$524e9c84a4c58bd58490804da4c772c6$export$3fbbaef54e2e9d28","$524e9c84a4c58bd58490804da4c772c6$export$678028d364072132","$524e9c84a4c58bd58490804da4c772c6$export$6308908a0016f099","$0ba2913765cbb83278246e730dbcdcdf$export$568ed88074851180","$524e9c84a4c58bd58490804da4c772c6$export$7eb84799c931fe91","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$524e9c84a4c58bd58490804da4c772c6$export$747af4f49bde2f53","vertices","$524e9c84a4c58bd58490804da4c772c6$export$a42db349809b0c24","projections","$524e9c84a4c58bd58490804da4c772c6$export$fd4cd3535c7ea97f","$524e9c84a4c58bd58490804da4c772c6$export$f704437a72056fb8","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$6cb154572a1cc3d19ea74b1e9a3a7861$export$7eb84799c931fe91","$524e9c84a4c58bd58490804da4c772c6$export$9336879ef6599bf5","$524e9c84a4c58bd58490804da4c772c6$export$4b169b49e1a4823b","$524e9c84a4c58bd58490804da4c772c6$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$352fd07bdd93dc1e","$524e9c84a4c58bd58490804da4c772c6$export$4a182a4d53d7595c","$524e9c84a4c58bd58490804da4c772c6$export$b5d00774755783fc","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$a7d473ff80a6a3b","$524e9c84a4c58bd58490804da4c772c6$export$f87215506b474b9e","$61ba71c2b15c8b7e6577526180db0da5$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$61ba71c2b15c8b7e6577526180db0da5$export$eaafe0fae18e32b1","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$e97ec87d2336bd4e","$4c6a822b604dbfa9a10722399f7335d0$export$eaafe0fae18e32b1","$8717569d70d85bd7f28c8c1b2c37daee$export$9fbc3b1d6b2da9ec","pow","$8717569d70d85bd7f28c8c1b2c37daee$export$673b9849e2bc032c","$8717569d70d85bd7f28c8c1b2c37daee$export$1b5c1277e30d397d","$8717569d70d85bd7f28c8c1b2c37daee$export$5523e35ab8ae283a","$7d5079714e2786ec6bee07910f0d8a86$exports","PROJECTIONS","$655738a66489cc3574c072262645bff6$exports","fromEPSG4326","toEPSG4326","$01b4ee2590431d23f431f1e9785f436f$export$9099ad97b570f7c","$3f4f29b0a4be88d8241f933ff6121a33$export$92106241c01aa541","opt_dest","dest","$3f4f29b0a4be88d8241f933ff6121a33$export$d40e2456b1281660","anchor","anchorX","anchorY","k","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$a17c336463d573a615343832f6e09aa8$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$8ebfb36ef5532881c5652b708da2c120$export$d1e01ccfd06bf8ee","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$57ce72c0539154dec2abdc81ffcff6df$export$2a65008b73824080","layout","$57ce72c0539154dec2abdc81ffcff6df$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$57ce72c0539154dec2abdc81ffcff6df$export$9099ad97b570f7c","SimpleGeometry","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","$3f4f29b0a4be88d8241f933ff6121a33$export$8f869025bba9609b","$3f4f29b0a4be88d8241f933ff6121a33$export$41b0d7466cde8385","$a17c336463d573a615343832f6e09aa8$exports","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$acf7548d1f0e8581","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$ba38095f6bb45df2","ends","$020a0553c73896bfe8e0cfb3e7ff136b$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$020a0553c73896bfe8e0cfb3e7ff136b$export$3dd3914e22f9012e","$e477329667689b6619ea04e4a51dbccc$export$e175f505890ac90f","$e477329667689b6619ea04e4a51dbccc$export$ab1a51db55485752","coordinatess","opt_ends","jj","$a357f0a07bdcadd773e93ca791a42f7b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$ade7859c9eb393ec","simplifiedEnds","$a357f0a07bdcadd773e93ca791a42f7b$export$383ea8a1f2974dfb","$a357f0a07bdcadd773e93ca791a42f7b$export$e29de4fdb2175738","$a357f0a07bdcadd773e93ca791a42f7b$export$1df19a1eb5514c2f","$c39683e7fcea5e9dae135d728d60cf52$export$92f32d891164b0ac","opt_coordinates","$c39683e7fcea5e9dae135d728d60cf52$export$d82a8a3167f968d","opt_coordinatess","$c39683e7fcea5e9dae135d728d60cf52$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$7641779008ab07f3e708dabdbbb046eb$export$9bf2059fd656d5e9","twiceArea","$7641779008ab07f3e708dabdbbb046eb$export$99cb92d00fd73c87","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","getArea","$57ce72c0539154dec2abdc81ffcff6df$exports","$acd1b863667085614d305475fd6c1d27$export$9099ad97b570f7c","Point","$acd1b863667085614d305475fd6c1d27$var$__extends","$e477329667689b6619ea04e4a51dbccc$export$a53e62528b652807","$7311a6a51d57e65f0d3a69bd7a380356$export$f7b55b637f92fd7","$7311a6a51d57e65f0d3a69bd7a380356$export$e2ed757909b25f63","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$51e46a3625992b91","$67787df47ebd352536b767ba5aa6ea83$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$419a691625de72e89acadcc033e1165f$export$40f3d9558cf6e846","ret","point1","point2","$32ab876027ca0904f46063bee68b73aa$export$26f047a5bfac4b1a","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$8ebfb36ef5532881c5652b708da2c120$export$525a75abb91115e3","$32ab876027ca0904f46063bee68b73aa$export$717c2c7c46a5bf3d","$32ab876027ca0904f46063bee68b73aa$export$f14bd9270666b480","$221ffa684d4ba252080508824e602b78$export$c77fe031a1447f2e","$52f5ef13e882c7db8132623a2b51ee49$export$add61ad31d0a68b4","edge","$52f5ef13e882c7db8132623a2b51ee49$export$586adaf930d9fdb6","opt_right","right","isClockwise","$52f5ef13e882c7db8132623a2b51ee49$export$325e57738fd8b321","$bffbcd35af658c4477627697774de1c2$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$bffbcd35af658c4477627697774de1c2$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$acd1b863667085614d305475fd6c1d27$exports","getLinearRingCount","getLinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$exports","getLinearRings","linearRings","$bffbcd35af658c4477627697774de1c2$export$9099ad97b570f7c","$bffbcd35af658c4477627697774de1c2$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$bffbcd35af658c4477627697774de1c2$export$b50d271c6e9656cd","$bffbcd35af658c4477627697774de1c2$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$bffbcd35af658c4477627697774de1c2$export$5d1798f0e1df079","getRadius","startAngle","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","returnValue","$19fadbefe1b7e34cc76223b5c3e441cc$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$19fadbefe1b7e34cc76223b5c3e441cc$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$75cf935c4655e9fc21b1ade56ed27175$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$75cf935c4655e9fc21b1ade56ed27175$export$7690ad4e930f454b","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","rotX","rotY","$19fadbefe1b7e34cc76223b5c3e441cc$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","$bffbcd35af658c4477627697774de1c2$exports","fromExtent","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$8556eff40cf4f1624cd78ff7ea054c5b$export$c563c2b7121f8771","$8556eff40cf4f1624cd78ff7ea054c5b$export$48d31d2725e4d98b","$b198bbb8a7fca092de94dd3a772c1343$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$d66bdf9af75d90254b022f9a4b768a43$exports","view","$19fadbefe1b7e34cc76223b5c3e441cc$exports","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$6bfe069e85349c527971d875462feeac$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","toString","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$75ed2fc91ec6cb8478583ef358a9dd4d$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","$8316c877d328ebfc4f4b917229eec057$export$9099ad97b570f7c","Control","target_","listenerKeys","$8316c877d328ebfc4f4b917229eec057$var$__extends","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8316c877d328ebfc4f4b917229eec057$exports","$aef56543978371a8090d728a4f107ac0$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$aef56543978371a8090d728a4f107ac0$var$__extends","resetNorth_","$9812beea87bdcda9027d52b89085c87c$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$9812beea87bdcda9027d52b89085c87c$var$__extends","zoomByDelta_","currentZoom","newZoom","$c147d956996cb96e879ea56bdc9c5d5d$export$9099ad97b570f7c","$1ad0cf5090e3852174414bfc8cc27b9e$export$63568b31cb17dd4d","$1ad0cf5090e3852174414bfc8cc27b9e$export$d2c07614bfd6a817","$1ad0cf5090e3852174414bfc8cc27b9e$export$9099ad97b570f7c","Interaction","setActive","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","active","$4eeedd039b7e6d5b8277b175715f9541$export$9099ad97b570f7c","DoubleClickZoom","delta_","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","stopEvent","shiftKey","$1ad0cf5090e3852174414bfc8cc27b9e$exports","zoomByDelta","$0714aed143b912743afff175db44c1dc$export$e61edea4dfe4ed9b","$0714aed143b912743afff175db44c1dc$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$0714aed143b912743afff175db44c1dc$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","$054715504eaffdc825d0a6ada99ec596$export$8dbdea330bbd6b3c","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$584a07df7b145c47","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$363947888fb85da6","$054715504eaffdc825d0a6ada99ec596$export$a8612972eacfc116","$054715504eaffdc825d0a6ada99ec596$export$9f5e19851eeaf2c1","$054715504eaffdc825d0a6ada99ec596$export$1734dfcac3c09b2f","$054715504eaffdc825d0a6ada99ec596$export$59c8376875f673f8","$054715504eaffdc825d0a6ada99ec596$export$5bbcce8021828272","tagName","$054715504eaffdc825d0a6ada99ec596$export$d31d3f3aa38542a8","pointerType","$054715504eaffdc825d0a6ada99ec596$export$45cd27c0322d6513","isPrimary","$959ec1b544453a9fa4f0e9221c3bb0b0$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","centroid","$0714aed143b912743afff175db44c1dc$exports","update","getDistance","getAngle","centerpx","$719e5208cd50905e41bacbcae2219883$export$9099ad97b570f7c","DragRotate","lastAngle_","$719e5208cd50905e41bacbcae2219883$var$__extends","$d0055a036577a61fd8306330947568c7$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$d0055a036577a61fd8306330947568c7$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$4d9b552836937ca2","DragBoxEvent","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$export$9099ad97b570f7c","DragBox","box_","$d0055a036577a61fd8306330947568c7$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$export$9099ad97b570f7c","DragZoom","out_","out","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","mapExtent","boxPixelExtent","$8ebfb36ef5532881c5652b708da2c120$export$9f54817615211741","$275b26378704892d776581791f32dc0e$exports","$8d5ac6bc9707ee873610cb367c0dab7f$export$9099ad97b570f7c","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$55ea853e77e2fe25fa1a8793cb31a3bf$export$9099ad97b570f7c","KeyboardZoom","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$f7a99b9e7b1a72242a3eb408b28d3563$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$601b81cfcc535d77832cc96f04e942a1$var$__extends","scaleDelta","$976448907138da16f7612e32ecc55ac7$export$9099ad97b570f7c","Map1","$9812beea87bdcda9027d52b89085c87c$exports","zoomOptions","$aef56543978371a8090d728a4f107ac0$exports","rotateOptions","attribution","$194d017bd833b991c2c712fa2ff5b0e5$exports","attributionOptions","$c10299a05f898a09c43f788b5b6dfdbd$export$b403fbac94228e09","altShiftDragRotate","$719e5208cd50905e41bacbcae2219883$exports","doubleClickZoom","$4eeedd039b7e6d5b8277b175715f9541$exports","zoomDelta","zoomDuration","dragPan","$959ec1b544453a9fa4f0e9221c3bb0b0$exports","pinchRotate","$74b3a0ab43d5d3c47ed1a15cedc99f6a$exports","pinchZoom","$601b81cfcc535d77832cc96f04e942a1$exports","keyboard","$bcd9d2d6fd38b8643ae7b7b6fd22a911$exports","$55ea853e77e2fe25fa1a8793cb31a3bf$exports","mouseWheelZoom","$f7a99b9e7b1a72242a3eb408b28d3563$exports","shiftDragZoom","$b5cd6c68e27395a36aa4c8d3c5395250$exports","$ad51cb5d42c2f2a2874b19907e742966$export$b403fbac94228e09","$976448907138da16f7612e32ecc55ac7$var$__extends","$2ae21f590be041e7827bf48426c0766a$exports","$b198bbb8a7fca092de94dd3a772c1343$exports","$fe05caf5f991aea82bd67c9bebabc467$export$7cf753b6a6534915","styles_1","$fe05caf5f991aea82bd67c9bebabc467$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","$fe05caf5f991aea82bd67c9bebabc467$var$__extends","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","opt_style","setId","$168654b72fccbd53f77518b62ff915e1$export$55be7a9e3fef4787","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$7c21d7646a0313abf7b847efa68bfceb$export$26b1c556c0e0f127","$168654b72fccbd53f77518b62ff915e1$export$1a804b04fa5a0253","extrapolate","lo","hi","m0","$c028848ec55b72b61f5eaf0ec6396be2$export$7326ac1b36a49776","$f3208b74dbadea817236410092d4ed69$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","$f3208b74dbadea817236410092d4ed69$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","$9cc45ed4bf6c6f99d7b74c7015645e2b$export$9099ad97b570f7c","MultiLineString","lineStrings","$9cc45ed4bf6c6f99d7b74c7015645e2b$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$168654b72fccbd53f77518b62ff915e1$export$8958f67b085a89b1","getLineString","$f3208b74dbadea817236410092d4ed69$exports","getLineStrings","getFlatMidpoints","midpoints","$32ab876027ca0904f46063bee68b73aa$export$414b603e1c51ecd4","$508255911b6472d9d16e9a97599ab01e$export$9099ad97b570f7c","FeatureFormat","dataProjection","defaultFeatureProjection","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","$508255911b6472d9d16e9a97599ab01e$export$534b7b915a5ec453","write","transformed","decimals","power_1","$e1f6506982452a68a8aaa230bb78068a$export$9099ad97b570f7c","$d51a9db7ffbc5351b0298bfe2864dc58$export$f6c9fc7378d5d6a6","$d51a9db7ffbc5351b0298bfe2864dc58$export$a5039740b67a9c","namespaceURI","qualifiedName","$d51a9db7ffbc5351b0298bfe2864dc58$export$46d2d1e7bcdd99a3","createElementNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$4131dc4da57aa0c8","normalizeWhitespace","$d51a9db7ffbc5351b0298bfe2864dc58$export$970c25ea2962a3d2","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","$d51a9db7ffbc5351b0298bfe2864dc58$export$77e37c6e8311f1ce","$d51a9db7ffbc5351b0298bfe2864dc58$export$a43e9d683f52ab7c","xml","DOMParser","parseFromString","$d51a9db7ffbc5351b0298bfe2864dc58$export$5a6c4415b7f496d8","valueReader","objectStack","$d51a9db7ffbc5351b0298bfe2864dc58$export$73d853215f0c71e8","opt_property","localName","$d51a9db7ffbc5351b0298bfe2864dc58$export$2deb56b7ae029e3","nodeWriter","$d51a9db7ffbc5351b0298bfe2864dc58$export$3a8407fea04ebe5f","serializersNS","nodeFactory","serializers","$d51a9db7ffbc5351b0298bfe2864dc58$export$8ebe38e76aa85d36","$d51a9db7ffbc5351b0298bfe2864dc58$export$2e67c97dae900dc9","opt_nodeName","opt_namespaceURI","fixedNodeName","opt_nodeName1","nodeName","$d51a9db7ffbc5351b0298bfe2864dc58$export$81a68ea3ed99d298","$d51a9db7ffbc5351b0298bfe2864dc58$export$56f187f00ba8a12b","orderedKeys","sequence","$d51a9db7ffbc5351b0298bfe2864dc58$export$7567597de432f7e7","namespaceURIs","structure","opt_structureNS","structureNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$d2d9da5f39026f12","parsersNS","firstElementChild","nextElementSibling","parsers","parser","$d51a9db7ffbc5351b0298bfe2864dc58$export$606fcd4c4e16fe20","opt_keys","$d51a9db7ffbc5351b0298bfe2864dc58$export$cfa8ff2fe3336fdf","$d51a9db7ffbc5351b0298bfe2864dc58$var$xmlSerializer_","$d51a9db7ffbc5351b0298bfe2864dc58$var$document_","implementation","createDocument","$dec84ce654dad439cc55f11914ce0714$export$9099ad97b570f7c","XMLFeature","xmlSerializer_","XMLSerializer","$dec84ce654dad439cc55f11914ce0714$var$__extends","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","$90d80a364a39de433c7f5cd490d4f896$export$e677ee4949375ba1","dateTime","$90d80a364a39de433c7f5cd490d4f896$export$39fa0db44f151f9d","$90d80a364a39de433c7f5cd490d4f896$export$1840c252c524643f","$90d80a364a39de433c7f5cd490d4f896$export$286b7b22a1a791c7","trim","$90d80a364a39de433c7f5cd490d4f896$export$3ff1a647d173b6de","string","toPrecision","$90d80a364a39de433c7f5cd490d4f896$export$ba7d4076978bd372","nonNegativeInteger","$90d80a364a39de433c7f5cd490d4f896$export$8546427d900bb9d0","$b33e8a0ea0c493ce5741084af120ccb7$var$NAMESPACE_URIS","$b33e8a0ea0c493ce5741084af120ccb7$var$FEATURE_READER","$b33e8a0ea0c493ce5741084af120ccb7$var$readRte","$b33e8a0ea0c493ce5741084af120ccb7$var$readTrk","$b33e8a0ea0c493ce5741084af120ccb7$var$readWpt","$b33e8a0ea0c493ce5741084af120ccb7$var$GPX_PARSERS","$b33e8a0ea0c493ce5741084af120ccb7$var$LINK_PARSERS","$b33e8a0ea0c493ce5741084af120ccb7$var$GPX_SERIALIZERS","$b33e8a0ea0c493ce5741084af120ccb7$var$RTE_SEQUENCE","$b33e8a0ea0c493ce5741084af120ccb7$var$RTE_SERIALIZERS","$b33e8a0ea0c493ce5741084af120ccb7$var$TRK_SEQUENCE","$b33e8a0ea0c493ce5741084af120ccb7$var$TRK_SERIALIZERS","$b33e8a0ea0c493ce5741084af120ccb7$var$writeWptType","$b33e8a0ea0c493ce5741084af120ccb7$var$GPX","GPX","readExtensions_","readExtensions","$b33e8a0ea0c493ce5741084af120ccb7$var$__extends","handleReadExtensions_","extensionsNode","featureReader","gpx","setAttributeNS","$b33e8a0ea0c493ce5741084af120ccb7$var$GPX_NODE_FACTORY","$dec84ce654dad439cc55f11914ce0714$exports","$b33e8a0ea0c493ce5741084af120ccb7$var$RTE_PARSERS","$b33e8a0ea0c493ce5741084af120ccb7$var$parseLink","$b33e8a0ea0c493ce5741084af120ccb7$var$parseExtensions","$b33e8a0ea0c493ce5741084af120ccb7$var$RTEPT_PARSERS","rteValues","layoutOptions","$b33e8a0ea0c493ce5741084af120ccb7$var$appendCoordinate","$b33e8a0ea0c493ce5741084af120ccb7$var$TRK_PARSERS","$b33e8a0ea0c493ce5741084af120ccb7$var$TRKSEG_PARSERS","$b33e8a0ea0c493ce5741084af120ccb7$var$TRKPT_PARSERS","trkValues","$b33e8a0ea0c493ce5741084af120ccb7$var$WPT_PARSERS","$b33e8a0ea0c493ce5741084af120ccb7$var$LINK_SEQUENCE","$b33e8a0ea0c493ce5741084af120ccb7$var$LINK_SERIALIZERS","$b33e8a0ea0c493ce5741084af120ccb7$var$writeLink","$b33e8a0ea0c493ce5741084af120ccb7$var$RTEPT_TYPE_SEQUENCE","$b33e8a0ea0c493ce5741084af120ccb7$var$TRKSEG_SERIALIZERS","$b33e8a0ea0c493ce5741084af120ccb7$var$TRKSEG_NODE_FACTORY","$b33e8a0ea0c493ce5741084af120ccb7$var$WPT_TYPE_SEQUENCE","$b33e8a0ea0c493ce5741084af120ccb7$var$WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","$b33e8a0ea0c493ce5741084af120ccb7$var$GEOMETRY_TYPE_TO_NODENAME","getAttribute","hasZ","hasM","$b33e8a0ea0c493ce5741084af120ccb7$var$applyLayoutOptions","href","$fe05caf5f991aea82bd67c9bebabc467$exports","$9cc45ed4bf6c6f99d7b74c7015645e2b$exports","link","$b33e8a0ea0c493ce5741084af120ccb7$export$9099ad97b570f7c","$8af1af76f23419d9d724a1b0182ffb00$var$cloneGeometries","geometries","clonedGeometries","$8af1af76f23419d9d724a1b0182ffb00$export$9099ad97b570f7c","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$8af1af76f23419d9d724a1b0182ffb00$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","$013ee184ddda363412ada1e10e95871e$export$9099ad97b570f7c","$ab70eb0a0a56b112261264db1ea7acab$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$ab70eb0a0a56b112261264db1ea7acab$var$__extends","getPreload","getUseInterimTilesOnError","$ddbf871807cbdb80f3672c8008047cee$export$9099ad97b570f7c","$ae15ed96a99c1303ea67938747c94fca$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$ae15ed96a99c1303ea67938747c94fca$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$ac230d10056414a40eb774bd091234f1$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$ac230d10056414a40eb774bd091234f1$var$__extends","useContainer","layerClassName","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$ae15ed96a99c1303ea67938747c94fca$exports","$6a958d3d10a45fbc13d601def6cb4731$var$TileRange","TileRange","containsTileRange","getHeight","getWidth","$6a958d3d10a45fbc13d601def6cb4731$export$ea8082d0226d35a5","$6a958d3d10a45fbc13d601def6cb4731$export$9099ad97b570f7c","$21101e8f6691f861098a74ca233ba3e1$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$21101e8f6691f861098a74ca233ba3e1$var$__extends","isDrawableTile","tileState","getTile","setState","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getContextOptions","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","gutter","getTileImage","tileAlpha","alpha","alphaChanged","endTransition","getImage","postRenderFunction","tileSource1","frameState1","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$ac230d10056414a40eb774bd091234f1$exports","$21101e8f6691f861098a74ca233ba3e1$export$9099ad97b570f7c","$7f639b92eb9591e7aded56644548f656$export$9099ad97b570f7c","TileLayer","$7f639b92eb9591e7aded56644548f656$var$__extends","$21101e8f6691f861098a74ca233ba3e1$exports","$ab70eb0a0a56b112261264db1ea7acab$exports","$a51010926fccd7fa7fa549e12811b655$exports","t1","t2","r1","h1","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","all","_all","search","toBBox","o2","collides","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","_condense","compareMinX","compareMinY","toJSON","fromJSON","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","v","M","_allDistMargin","define","amd","RBush","$96f7f946d494434256fc7391bfca3d81$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$7eb24b24c1bb92b5f48477cc7ed0ef45$export$55029509b82b2e2b","$9395bcf7fa5c622dff9d678b4abf4bba$export$9099ad97b570f7c","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","$9395bcf7fa5c622dff9d678b4abf4bba$var$__extends","getFill","getPoints","getRadius2","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","arc","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","$19d3c8bef588e205c4ab8014047de833$export$9099ad97b570f7c","CircleStyle","$19d3c8bef588e205c4ab8014047de833$var$__extends","setRadius","$9395bcf7fa5c622dff9d678b4abf4bba$exports","$e1f9f7b0a69ff9a9f4c2bbbdfef410b1$export$9099ad97b570f7c","Fill","color_","setColor","$4c58aec149e538982cbf4e874e866484$export$9099ad97b570f7c","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b550892c9c7d6707a4415bf7976deb12$var$Style","Style","geometryFunction_","$b550892c9c7d6707a4415bf7976deb12$var$defaultGeometryFunction","image_","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$b550892c9c7d6707a4415bf7976deb12$var$defaultStyles","$b550892c9c7d6707a4415bf7976deb12$export$33d0043adf82cc14","$19d3c8bef588e205c4ab8014047de833$exports","$b550892c9c7d6707a4415bf7976deb12$export$9099ad97b570f7c","$ceed79ad4f0d8f0ebaf810c3cca30983$var$Property","$ceed79ad4f0d8f0ebaf810c3cca30983$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$ceed79ad4f0d8f0ebaf810c3cca30983$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","styleFunction","$b550892c9c7d6707a4415bf7976deb12$export$4aaa4bacaec09e94","$75febe525c6e0d71892cea5e044a142c$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$75febe525c6e0d71892cea5e044a142c$export$c649c04369bd3370","$75febe525c6e0d71892cea5e044a142c$export$2513c58bc344fc5c","$75febe525c6e0d71892cea5e044a142c$export$84e3c67fd41b07f5","$75febe525c6e0d71892cea5e044a142c$export$6cd4b1e0c0e7240c","$75febe525c6e0d71892cea5e044a142c$export$9099ad97b570f7c","$98c4b84222a5e84ec508cd638c4e0b8c$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$ca67e4c506ae561bc3174e981b55d257$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$ca67e4c506ae561bc3174e981b55d257$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$072d5e6cee1f9ae87cd55eb588566cc6$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$072d5e6cee1f9ae87cd55eb588566cc6$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$ca67e4c506ae561bc3174e981b55d257$exports","$28ceeb2640c662153e0cc1bb27e7eea9$export$9099ad97b570f7c","CanvasLineStringBuilder","$28ceeb2640c662153e0cc1bb27e7eea9$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$f5fec2e7653cdbd2c7958b8312f0d7d6$export$9099ad97b570f7c","CanvasPolygonBuilder","$f5fec2e7653cdbd2c7958b8312f0d7d6$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$efe444a788e44e26b0fd0d03352a7cb8$export$9099ad97b570f7c","$f19e98a3c9584b88eb9c26a752a19276$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$7e7051822986fcb02ea0e43ac0707b32$export$3964e67694391753","$7e7051822986fcb02ea0e43ac0707b32$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$7e7051822986fcb02ea0e43ac0707b32$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","interiorPoints","getFlatInteriorPoints","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$4f54cdaa0352e7689a6e30aa9d8207ec$var$BATCH_CONSTRUCTORS","$f5fec2e7653cdbd2c7958b8312f0d7d6$exports","$072d5e6cee1f9ae87cd55eb588566cc6$exports","$28ceeb2640c662153e0cc1bb27e7eea9$exports","$7e7051822986fcb02ea0e43ac0707b32$exports","$4f54cdaa0352e7689a6e30aa9d8207ec$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$2a2c9e207ab3a32ae55e264c8b11e252$export$9099ad97b570f7c","$56c23dc34f9f14c7874ab5d8b63c5fb3$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$tmpExtent","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p1","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p2","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p3","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p4","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$rtlRegEx","fromCharCode","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6cf1557e9efeeb4d32c6b7acaeb9c268$export$9099ad97b570f7c","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$c6e46405591acfe99e5a94d22fbe8573$var$ORDER","$c6e46405591acfe99e5a94d22fbe8573$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$c6e46405591acfe99e5a94d22fbe8573$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$c6e46405591acfe99e5a94d22fbe8573$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","opt_builderTypes","builderTypes","$c6e46405591acfe99e5a94d22fbe8573$export$9099ad97b570f7c","$9f8df4495769241e9ec70201b90e0eaa$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9f8df4495769241e9ec70201b90e0eaa$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$250247a34cdb6d9c26d2c6d3640e511f$export$9099ad97b570f7c","$c921d54e03c98d7c23acffcfb75264d3$export$9099ad97b570f7c","$e65a38a3837120ad833711b5930f5912$export$9099ad97b570f7c","ImageBase","$e65a38a3837120ad833711b5930f5912$var$__extends","$2fc4e1887f4ffa14e16ea647fd21482c$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$e65a38a3837120ad833711b5930f5912$exports","$92a5ba3fab046f40ee35c464c4cf79b4$var$taintedTestContext","$92a5ba3fab046f40ee35c464c4cf79b4$var$IconImage","IconImage","imageState_","tainted_","$92a5ba3fab046f40ee35c464c4cf79b4$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$2fc4e1887f4ffa14e16ea647fd21482c$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$92a5ba3fab046f40ee35c464c4cf79b4$export$7eb84799c931fe91","$4de6336f82b6fd9bc7cf688bb41b8b96$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$92a5ba3fab046f40ee35c464c4cf79b4$exports","offset_","offsetOrigin_","offsetOrigin","$4de6336f82b6fd9bc7cf688bb41b8b96$var$__extends","setAnchor","iconImageSize","$9f8fd0aab32ac5c353b56f527e1d00a9$export$5d244421488756f8","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$65a5cfeed6fd0c33","feature1","feature2","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f3b3f9822f340683","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f0ea347488340e3d","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$522dfd100dd96ba1","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderGeometry","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderFeatureInternal","$c2243072b6513ba407326b2a30b1374a$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c2243072b6513ba407326b2a30b1374a$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$af95442a94d1862a138c401177ef0c4b$export$e7468c0ae08395df","clipped","transforms","imageSmoothingEnabled","$9f8df4495769241e9ec70201b90e0eaa$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$4de6336f82b6fd9bc7cf688bb41b8b96$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$9f8fd0aab32ac5c353b56f527e1d00a9$export$9fd146a6491490e3","resultFeatures","$9f8fd0aab32ac5c353b56f527e1d00a9$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","$8ebfb36ef5532881c5652b708da2c120$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","loadFeatures","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$2f5ed0ce65ecb2bfe439d05296b3d36a$export$9099ad97b570f7c","VectorLayer","$2f5ed0ce65ecb2bfe439d05296b3d36a$var$__extends","$c2243072b6513ba407326b2a30b1374a$exports","$ceed79ad4f0d8f0ebaf810c3cca30983$exports","$6ea2e09c0ee686e4fcf344e90f929221$export$9099ad97b570f7c","Tile","interimTile","transition_","transitionStarts_","$6ea2e09c0ee686e4fcf344e90f929221$var$__extends","release","refreshInterimChain","getTileCoord","$69031f3b45b1bb2d223c45e6bbe47b36$export$9099ad97b570f7c","ImageTile","tileLoadFunction","tileLoadFunction_","$69031f3b45b1bb2d223c45e6bbe47b36$var$__extends","naturalWidth","naturalHeight","$6ea2e09c0ee686e4fcf344e90f929221$exports","$7e4c33869bbc09ad771e58efcd7791e2$var$brokenDiagonalRendering_","$3a0ea260bd0161734cb5e603b9086c9d$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$dffde8f1acde674bc74a24601c2788a7$export$5f986e3acaff8610","msImageSmoothingEnabled","$7e4c33869bbc09ad771e58efcd7791e2$var$drawTestTriangle","v1","v2","$7e4c33869bbc09ad771e58efcd7791e2$var$verifyBrokenDiagonalRendering","$7e4c33869bbc09ad771e58efcd7791e2$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$7e4c33869bbc09ad771e58efcd7791e2$export$792a797b69be0d58","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$916dab65013919ad0345478f9a9f4e0f$export$27dc5719ceda6735","$7e4c33869bbc09ad771e58efcd7791e2$var$isBrokenDiagonalRendering","ud","vd","step","steps","$97e37be8733b1927a1ed959b854a8d18$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$7e4c33869bbc09ad771e58efcd7791e2$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$97e37be8733b1927a1ed959b854a8d18$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$101ae72fedfe330e8897d118e958a8b6$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$c98d704946f2a3a0e1335bd43bccb465$export$ea8082d0226d35a5","opt_tileCoord","$c98d704946f2a3a0e1335bd43bccb465$export$1039fb0288fd71e3","$c98d704946f2a3a0e1335bd43bccb465$export$a0f0ccbe5bbc0789","$8328c42c04c9adada69111ec662476d9$export$9099ad97b570f7c","TileCache","$8328c42c04c9adada69111ec662476d9$var$__extends","pruneExceptNewestZ","$c98d704946f2a3a0e1335bd43bccb465$export$5208a752d34424e5","$6fb7cf65abcfc8d879372ec2dca0d0b8$export$9099ad97b570f7c","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionLike","$6a9611a0560ac769e67fadc6cfef9a2c$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","refresh","setAttributions","$0f9feaa19e1db86e91525f400c1bbfa1$var$tmpTileCoord","$0f9feaa19e1db86e91525f400c1bbfa1$export$9099ad97b570f7c","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$0b7f50deff6bfc90c8b239d5ceca7010$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$0b7f50deff6bfc90c8b239d5ceca7010$var$resolutionsFromExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$57c49ef1657592d4","$0b7f50deff6bfc90c8b239d5ceca7010$export$9666e825b22d806d","$0b7f50deff6bfc90c8b239d5ceca7010$export$6dfef52f91d4f582","opt_maxResolution","half","$cde35ab3df9629f8ffd26ea2f187b41e$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$8328c42c04c9adada69111ec662476d9$exports","tmpSize","tileOptions","$cde35ab3df9629f8ffd26ea2f187b41e$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","$0b7f50deff6bfc90c8b239d5ceca7010$export$5a0d9577a24f3c5b","$c98d704946f2a3a0e1335bd43bccb465$export$b46b80619528d4e5","$6a9611a0560ac769e67fadc6cfef9a2c$exports","$cde35ab3df9629f8ffd26ea2f187b41e$export$8434c8db61edbf9d","TileSourceEvent","$cde35ab3df9629f8ffd26ea2f187b41e$export$9099ad97b570f7c","$f3b33fdefe65058178a4b532c7b3f14b$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$f3b33fdefe65058178a4b532c7b3f14b$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$c98d704946f2a3a0e1335bd43bccb465$export$4639c7f2947f4458","$f3b33fdefe65058178a4b532c7b3f14b$export$c6a04e0c49b28953","$671acdd0ca89710db49a7e8e41335e8e$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$671acdd0ca89710db49a7e8e41335e8e$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$cde35ab3df9629f8ffd26ea2f187b41e$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","$f3b33fdefe65058178a4b532c7b3f14b$export$47abe479fba0e55d","$f1c529d0542d6a8d6fa77a64fa516101$var$defaultTileLoadFunction","imageTile","$f1c529d0542d6a8d6fa77a64fa516101$export$9099ad97b570f7c","TileImage","tileClass","$69031f3b45b1bb2d223c45e6bbe47b36$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$f1c529d0542d6a8d6fa77a64fa516101$var$__extends","usedTileCache","getGutter","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$97e37be8733b1927a1ed959b854a8d18$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$671acdd0ca89710db49a7e8e41335e8e$exports","$fd3ab3577c0c67d5f04f77f7494fe563$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$0b7f50deff6bfc90c8b239d5ceca7010$export$5731532c605ee56","$fd3ab3577c0c67d5f04f77f7494fe563$var$__extends","$f1c529d0542d6a8d6fa77a64fa516101$exports","$ff8235042efbfb69f46b35131190fa2b$export$bd9c1867755cf54e","$ff8235042efbfb69f46b35131190fa2b$export$9099ad97b570f7c","OSM","$ff8235042efbfb69f46b35131190fa2b$var$__extends","$fd3ab3577c0c67d5f04f77f7494fe563$exports","$e311f93de68f58225dfc37d89d1dcffc$export$9099ad97b570f7c","opt_maxEntries","rbush_","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$4b7d9e079415657c49d05e16783d2ed4$export$9099ad97b570f7c","$26b846260444bc742bddf88d96721338$export$8dbdea330bbd6b3c","$2ef5772bb5b0926a9ba82fc2a88f3163$var$withCredentials","$2ef5772bb5b0926a9ba82fc2a88f3163$export$52988233cf090939","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","response","onerror","send","$2ef5772bb5b0926a9ba82fc2a88f3163$export$4355fa6d12274ca5","addFeatures","$76e99b295c09c7c5e340e251e89879b1$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$76e99b295c09c7c5e340e251e89879b1$var$__extends","$76e99b295c09c7c5e340e251e89879b1$export$9099ad97b570f7c","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","$634f916bc30b7d6650877f3f4b6a8b3a$var$bundleURL","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBaseURL","$634f916bc30b7d6650877f3f4b6a8b3a$export$da289beea9c5b10d","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURL","$824bc590bf0a3702ac7bd27152cb0639$var$dirname","_filePath","filePath","slashIndex","$824bc590bf0a3702ac7bd27152cb0639$var$relative","from","to","fromParts","divergeIndex","toParts","module","exports","fromId","toId","$824bc590bf0a3702ac7bd27152cb0639$require$resolve","_dirname","_relative","$d3d5a0af21676091111686ce080c045c$exports","getBundleURL","$660ddfae62ab927110b85f404e392196$var$raster","$7f639b92eb9591e7aded56644548f656$exports","$ff8235042efbfb69f46b35131190fa2b$exports","$660ddfae62ab927110b85f404e392196$var$style","$660ddfae62ab927110b85f404e392196$var$source","$76e99b295c09c7c5e340e251e89879b1$exports","$b33e8a0ea0c493ce5741084af120ccb7$exports","$660ddfae62ab927110b85f404e392196$var$maxRotation","$660ddfae62ab927110b85f404e392196$var$past","$660ddfae62ab927110b85f404e392196$var$vector","$2f5ed0ce65ecb2bfe439d05296b3d36a$exports","deltaTime","$660ddfae62ab927110b85f404e392196$var$playing","$660ddfae62ab927110b85f404e392196$var$originM","$660ddfae62ab927110b85f404e392196$var$stopM","line","$660ddfae62ab927110b85f404e392196$var$stats","minTime","maxTime","$660ddfae62ab927110b85f404e392196$var$stop","next","nextRotation","$660ddfae62ab927110b85f404e392196$var$view","deltaRotation","$8af1af76f23419d9d724a1b0182ffb00$exports","$660ddfae62ab927110b85f404e392196$var$map","$976448907138da16f7612e32ecc55ac7$exports","minZ","maxZ","lengths","num","vectorContext","$ef5a32aa029d77fee7a3a3bd54627b3c$export$ce92cfb882ff66f4","bottom","rangeZ","rangeX","deltaZ","$660ddfae62ab927110b85f404e392196$var$plot"],"version":3,"file":"bike-track.0bbb8003.js.map"}