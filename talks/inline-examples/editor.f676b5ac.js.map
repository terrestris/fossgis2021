{"mappings":"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","sources":["src/editor.js","node_modules/ol/src/format/GeoJSON.js","node_modules/ol/src/Feature.js","node_modules/ol/src/Object.js","node_modules/ol/src/events/Event.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Observable.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/functions.js","node_modules/ol/src/array.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/util.js","node_modules/ol/src/asserts.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/proj.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/string.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/Map.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/color.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/Collection.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/View.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/size.js","node_modules/ol/src/control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/control/FullScreen.js","node_modules/ol/src/control/MousePosition.js","node_modules/ol/src/control/OverviewMap.js","node_modules/ol/src/Overlay.js","node_modules/ol/src/OverlayPositioning.js","node_modules/ol/src/control/ScaleLine.js","node_modules/ol/src/control/ZoomSlider.js","node_modules/ol/src/control/ZoomToExtent.js","node_modules/ol/src/interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/interaction/DragAndDrop.js","node_modules/ol/src/interaction/DragRotateAndZoom.js","node_modules/ol/src/interaction/Draw.js","node_modules/ol/src/geom/Circle.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/layer/BaseVector.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/style/Text.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/interaction/Extent.js","node_modules/ol/src/interaction/Modify.js","node_modules/ol/src/interaction/Select.js","node_modules/ol/src/interaction/Snap.js","node_modules/ol/src/interaction/Translate.js","node_modules/ol-hashed/index.js","node_modules/hashed/lib/main.js","node_modules/hashed/lib/store.js","node_modules/hashed/lib/schema.js","node_modules/hashed/lib/field.js","node_modules/hashed/lib/util.js","node_modules/util/util.js","node_modules/process/browser.js","node_modules/util/support/types.js","node_modules/is-arguments/index.js","node_modules/call-bind/callBound.js","node_modules/get-intrinsic/index.js","node_modules/has-symbols/index.js","node_modules/has-symbols/shams.js","node_modules/function-bind/index.js","node_modules/function-bind/implementation.js","node_modules/has/src/index.js","node_modules/call-bind/index.js","node_modules/is-generator-function/index.js","node_modules/which-typed-array/index.js","node_modules/foreach/index.js","node_modules/available-typed-arrays/index.js","node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js","node_modules/is-typed-array/index.js","node_modules/util/support/isBufferBrowser.js","node_modules/inherits/inherits_browser.js","node_modules/hashed/lib/serializers.js","node_modules/hashed/lib/deserializers.js","node_modules/hashed/lib/hash.js"],"sourcesContent":["import 'ol/ol.css';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Map from 'ol/Map';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport sync from 'ol-hashed';\n\nimport DragAndDrop from 'ol/interaction/DragAndDrop';\nimport Modify from 'ol/interaction/Modify';\nimport Draw from 'ol/interaction/Draw';\nimport Snap from 'ol/interaction/Snap';\n\n\nconst map = new Map({\n  target: 'map',\n  layers: [],\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nconst source = new VectorSource();\nconst layer = new VectorLayer({\n  source: source\n});\nmap.addLayer(layer);\n\nmap.addInteraction(new DragAndDrop({\n  source: source,\n  formatConstructors: [GeoJSON]\n}));\n\nmap.addInteraction(new Modify({\n  source: source\n}));\n\nmap.addInteraction(new Draw({\n  type: 'Polygon',\n  source: source\n}));\n\nmap.addInteraction(new Snap({\n  source: source\n}));\n\nconst clear = document.getElementById('clear');\nclear.addEventListener('click', function() {\n  source.clear();\n});\nconst format = new GeoJSON({featureProjection: 'EPSG:3857'});\nconst download = document.getElementById('download');\nsource.on('change', function() {\n  const features = source.getFeatures();\n  const json = format.writeFeatures(features);\n  download.href = 'data:text/json;charset=utf-8,' + json;\n});\n\nsync(map);","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","exports.interopDefault = function(a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function(source, dest) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    // Skip duplicate re-exports when they have the same value.\n    if (key in dest && dest[key] === source[key]) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function(dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\nimport {toString} from '../transform.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nlet createTransformStringCanvas = null;\n\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return toString(transform);\n  } else {\n    if (!createTransformStringCanvas) {\n      createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n    }\n    createTransformStringCanvas.style.transform = toString(transform);\n    return createTransformStringCanvas.style.transform;\n  }\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      this.cssClassName_ +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      ' ' +\n      (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? document.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n      this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n      this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    const activeClassName = this.activeClassName_;\n    const inactiveClassName = this.inactiveClassName_;\n    const nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(...activeClassName);\n    element.classList.remove(...inactiveClassName);\n    element.classList.add(...nextClassName);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        this.listenerKeys.push(\n          listen(document, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n    }\n  }\n}\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  const body = document.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body['msRequestFullscreen'] && document['msFullscreenEnabled']) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document['webkitIsFullScreen'] ||\n    document['msFullscreenElement'] ||\n    document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['msRequestFullscreen']) {\n    element['msRequestFullscreen']();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document['msExitFullscreen']) {\n    document['msExitFullscreen']();\n  } else if (document['webkitExitFullscreen']) {\n    document['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [opt_options] Mouse position options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    this.addEventListener(\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_\n    );\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ =\n      options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(\n      COORDINATE_FORMAT\n    ));\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(\n      PROJECTION\n    ));\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport CompositeMapRenderer from '../renderer/Composite.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport PluggableMap from '../PluggableMap.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\nclass ControlledMap extends PluggableMap {\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [opt_options] OverviewMap options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u00BB';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    /**\n     * @type {ControlledMap}\n     * @private\n     */\n    this.ovmap_ = new ControlledMap({\n      view: options.view,\n    });\n    const ovmap = this.ovmap_;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.CENTER_CENTER,\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addEventListener(\n      getChangeEventType(ViewProperty.ROTATION),\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeEventListener(\n      getChangeEventType(ViewProperty.ROTATION),\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addEventListener(\n      getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.MAP),\n      this.handleMapChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.POSITION),\n      this.handlePositionChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged\n    );\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (options.positioning)\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(\n      Property.MAP\n    ));\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      Property.POSITION\n    ));\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (this.get(\n      Property.POSITIONING\n    ));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map\n          .getView()\n          .getCenterInternal());\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\nimport {getChangeEventType} from '../Object.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us',\n};\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [opt_options] Scale line options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addEventListener(\n      getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_\n    );\n\n    this.setUnits(options.units || Units.METRIC);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {import(\"./ScaleLine.js\").Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits =\n      units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == Units.DEGREES) {\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= minWidth) {\n        break;\n      }\n      ++i;\n    }\n    let html;\n    if (this.scaleBar_) {\n      html = this.createScaleBar(width, count, suffix);\n    } else {\n      html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n    }\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const mapScale =\n      '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n    const scaleSteps = [];\n    const stepWidth = width / this.scaleBarSteps_;\n    let backgroundColor = '#ffffff';\n    for (let i = 0; i < this.scaleBarSteps_; i++) {\n      if (i === 0) {\n        // create the first marker at position 0\n        scaleSteps.push(this.createMarker('absolute', i));\n      }\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          'class=\"ol-scale-singlebar\" ' +\n          'style=' +\n          '\"width: ' +\n          stepWidth +\n          'px;' +\n          'background-color: ' +\n          backgroundColor +\n          ';\"' +\n          '>' +\n          '</div>' +\n          this.createMarker('relative', i) +\n          /*render text every second step, except when only 2 steps */\n          (i % 2 === 0 || this.scaleBarSteps_ === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n      if (i === this.scaleBarSteps_ - 1) {\n        {\n          /*render text at the end */\n        }\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n      }\n      // switch colors of steps between black and white\n      if (backgroundColor === '#ffffff') {\n        backgroundColor = '#000000';\n      } else {\n        backgroundColor = '#ffffff';\n      }\n    }\n\n    let scaleBarText;\n    if (this.scaleBarText_) {\n      scaleBarText =\n        '<div ' +\n        'class=\"ol-scale-text\" ' +\n        'style=\"width: ' +\n        width +\n        'px;\">' +\n        mapScale +\n        '</div>';\n    } else {\n      scaleBarText = '';\n    }\n    const container =\n      '<div ' +\n      'style=\"display: flex;\">' +\n      scaleBarText +\n      scaleSteps.join('') +\n      '</div>';\n    return container;\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {string} position The position, absolute or relative\n   * @param {number} i The iterator\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position, i) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      'style=\"position: ' +\n      position +\n      ';' +\n      'top: ' +\n      top +\n      'px;\"' +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      'margin-left: ' +\n      margin +\n      'px;' +\n      'text-align: ' +\n      (i === 0 ? 'left' : 'center') +\n      '; ' +\n      'min-width: ' +\n      minWidth +\n      'px;' +\n      'left: ' +\n      (isLast ? width + 'px' : 'unset') +\n      ';\"' +\n      '>' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const mpu = this.viewState_.projection.getMetersPerUnit();\n    const inchesPerMeter = 1000 / 25.4;\n    return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom slider options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (this.element\n        .firstElementChild);\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(\n        relativePosition\n      );\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport FormatType from '../format/FormatType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [opt_features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   */\n  constructor(type, file, opt_features, opt_projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n  }\n}\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied\n * combinnation of formats read both text string and ArrayBuffer sources. Older browsers such\n * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === FormatType.ARRAY_BUFFER;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      const view = map.getView();\n      projection = view.getProjection();\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== FormatType.ARRAY_BUFFER) {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {always, noModifierKeys, shiftKeyOnly} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle',\n};\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/GeometryType.js\").default}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === Mode.POLYGON\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === Mode.CIRCLE\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === Mode.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([\n                  coordinates[0].concat([coordinates[0][0]]),\n                ]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    this.addEventListener(\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_\n    );\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ =\n      this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(\n        function () {\n          this.handlePointerMove_(\n            new MapBrowserEvent(\n              MapBrowserEventType.POINTERMOVE,\n              event.map,\n              event.originalEvent,\n              false,\n              event.frameState\n            )\n          );\n        }.bind(this),\n        this.dragVertexDelay_\n      );\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === Mode.POINT)\n        ) {\n          if (this.atFinish_(event.pixel)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event.coordinate);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        at = true;\n      } else if (mode === Mode.CIRCLE) {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  createOrUpdateSketchPoint_(event) {\n    const coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (\n      geometry.getType() === GeometryType.POLYGON &&\n      this.mode_ !== Mode.POLYGON\n    ) {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n        const finishCoordinate = this.finishCoordinate_.slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n        this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n      }\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      if (coordinates.length >= 2) {\n        const finishCoordinate = coordinates[coordinates.length - 2].slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n\n    if (coordinates.length === 1) {\n      this.abortDrawing();\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number} [opt_sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [opt_angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function (coordinates, opt_geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry\n      ? /** @type {Polygon} */ (opt_geometry)\n      : fromCircle(new Circle(center), opt_sides);\n\n    let angle = opt_angle;\n    if (!opt_angle && opt_angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan2(y, x);\n    }\n    makeRegular(geometry, center, radius, angle);\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, opt_geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    let geometry = opt_geometry;\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n      return Mode.POINT;\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n      return Mode.LINE_STRING;\n    case GeometryType.POLYGON:\n    case GeometryType.MULTI_POLYGON:\n      return Mode.POLYGON;\n    case GeometryType.CIRCLE:\n      return Mode.CIRCLE;\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number} [opt_radius] Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const img = document.createElement('canvas');\n        img.width = imgSize[0];\n        img.height = imgSize[1];\n        const imgContext = img.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX,\n      }),\n      style: opt_options.boxStyle\n        ? opt_options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX,\n      }),\n      style: opt_options.pointerStyle\n        ? opt_options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection()\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<import(\"../extent.js\").Extent>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} MapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, features, MapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = MapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerane`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").FeatureLike>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && features.indexOf(feature) === -1) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYSTART,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (features.indexOf(feature) === -1) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (geometries.indexOf(geometry) === -1) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          // prevent dragging closed linestrings by the connecting node\n          if (\n            (segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n                GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, opt_coordinate) {\n    const pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    let nodes, hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          geometry = geometry || feature.getGeometry();\n          if (geometry.getType() === GeometryType.POINT) {\n            hitPointGeometry = geometry;\n            const coordinate = geometry.getCoordinates();\n            nodes = [\n              {\n                feature,\n                geometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === GeometryType.CIRCLE &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n          .clone()\n          .transform(userProjection, projection));\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === GeometryType.CIRCLE &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n        .clone()\n        .transform(userProjection, projection));\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend, includes} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (this\n      .featureLayerAssociation_[getUid(feature)]);\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n    const deselected = [];\n    const selected = [];\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if (\n              (remove || toggle) &&\n              includes(features.getArray(), feature)\n            ) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(\n    styles[GeometryType.GEOMETRY_COLLECTION],\n    styles[GeometryType.LINE_STRING]\n  );\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {getValues} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped Snapped.\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  } else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\n  ) {\n    return /** @type {import(\"../Feature.js\").default} */ (\n      /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\n    );\n  }\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [opt_listen] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, opt_listen) {\n    const register = opt_listen !== undefined ? opt_listen : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        segmentWriter(feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [opt_unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, opt_unlisten) {\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const lowerLeft = map.getCoordinateFromPixel([\n      pixel[0] - this.pixelTolerance_,\n      pixel[1] + this.pixelTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      pixel[0] + this.pixelTolerance_,\n      pixel[1] - this.pixelTolerance_,\n    ]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    let segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function (segment) {\n        return segment.feature.getGeometry().getType() !== GeometryType.CIRCLE;\n      });\n    }\n\n    let snapped = false;\n    let vertex = null;\n    let vertexPixel = null;\n\n    if (segments.length === 0) {\n      return {\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel,\n      };\n    }\n\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    let closestSegmentData;\n    let minSquaredDistance = Infinity;\n    for (let i = 0; i < segments.length; ++i) {\n      const segmentData = segments[i];\n      tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n      tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n      const delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n      if (delta < minSquaredDistance) {\n        closestSegmentData = segmentData;\n        minSquaredDistance = delta;\n      }\n    }\n    const closestSegment = closestSegmentData.segment;\n\n    if (this.vertex_ && !this.edge_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      if (dist <= this.pixelTolerance_) {\n        snapped = true;\n        vertex =\n          squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      const isCircle =\n        closestSegmentData.feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n      if (isCircle) {\n        let circleGeometry = closestSegmentData.feature.getGeometry();\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n        }\n        vertex = toUserCoordinate(\n          closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          ),\n          projection\n        );\n      } else {\n        tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n        tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n        vertex = toUserCoordinate(\n          closestOnSegment(projectedCoordinate, tempSegment),\n          projection\n        );\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          if (dist <= this.pixelTolerance_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n\n    return {\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel,\n    };\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n        .clone()\n        .transform(userProjection, projection));\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment,\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter(feature, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment,\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment,\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = {\n        feature: feature,\n        segment: [coordinates, coordinates],\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = {\n            feature: feature,\n            segment: segment,\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = {\n      feature: feature,\n      segment: [coordinates, coordinates],\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment,\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {getChangeEventType} from '../Object.js';\nimport {includes} from '../array.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addEventListener(\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      function (feature, layer) {\n        if (this.filter_(feature, layer)) {\n          if (!this.features_ || includes(this.features_.getArray(), feature)) {\n            return feature;\n          }\n        }\n      }.bind(this),\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      }\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","import hashed from 'hashed';\nimport {transform} from 'ol/proj';\n\nfunction toPrecision(value, precision) {\n  const factor = Math.pow(10, precision);\n  return (Math.round(value * factor) / factor).toString();\n}\n\nfunction synchronize(map, options) {\n  options = options || {};\n  let animate;\n  if ('animate' in options) {\n    animate = options.animate;\n  } else {\n    animate = {duration: 250};\n  }\n\n  const view = map.getView();\n  const projection = view.getProjection().getCode();\n\n  let zoom, center, rotation;\n  if (view.isDef()) {\n    zoom = view.getZoom();\n    center = view.getCenter();\n    rotation = view.getRotation();\n  } else {\n    const viewport = map.getViewport();\n    if (viewport) {\n      zoom = Math.LOG2E * Math.log(viewport.clientWidth / 256);\n    } else {\n      zoom = 0;\n    }\n    center = [0, 0];\n    rotation = 0;\n  }\n\n  const config = {\n    center: {\n      default: center,\n      serialize: function(coord, state) {\n        let precision;\n        if (state && 'zoom' in state) {\n          precision = Math.max(0, Math.ceil(Math.log(state.zoom) / Math.LN2));\n        } else {\n          precision = 3;\n        }\n        coord = transform(coord, projection, 'EPSG:4326');\n        return (\n          toPrecision(coord[0], precision) +\n          ',' +\n          toPrecision(coord[1], precision)\n        );\n      },\n      deserialize: function(str) {\n        const parts = str.split(',');\n        if (parts.length !== 2) {\n          throw new Error('Expected lon,lat but got ' + str);\n        }\n        const coord = [parseFloat(parts[0]), parseFloat(parts[1])];\n        return transform(coord, 'EPSG:4326', projection);\n      }\n    },\n    zoom: {\n      default: zoom,\n      serialize: function(value) {\n        return toPrecision(value, 1);\n      },\n      deserialize: Number\n    },\n    rotation: {\n      default: rotation,\n      serialize: function(value) {\n        return toPrecision(value, 2);\n      },\n      deserialize: Number\n    }\n  };\n\n  function hashHandler(state) {\n    if (view.isDef() && animate) {\n      view.animate(Object.assign({}, state, animate));\n      return;\n    }\n    if ('center' in state) {\n      view.setCenter(state.center);\n    }\n    if ('zoom' in state) {\n      view.setZoom(state.zoom);\n    }\n    if ('rotation' in state) {\n      view.setRotation(state.rotation);\n    }\n  }\n\n  const update = hashed.register(config, hashHandler);\n\n  function onMoveEnd() {\n    update({\n      center: view.getCenter(),\n      zoom: view.getZoom(),\n      rotation: view.getRotation()\n    });\n  }\n\n  map.on('moveend', onMoveEnd);\n\n  return function unregister() {\n    map.un('moveend', onMoveEnd);\n    hashed.unregister(hashHandler);\n  };\n}\n\nexport default synchronize;\n","const Store = require('./store').Store;\nconst hash = require('./hash');\n\nlet store;\n\nfunction reset() {\n  if (store) {\n    window.removeEventListener('popstate', update);\n  }\n  window.addEventListener('popstate', update);\n  store = new Store(hash.deserialize(location.hash), function(\n    values,\n    defaults\n  ) {\n    const nonDefaults = {};\n    for (const key in values) {\n      if (values[key] !== defaults[key]) {\n        nonDefaults[key] = values[key];\n      }\n    }\n    history.pushState(values, '', hash.serialize(nonDefaults));\n  });\n}\n\nfunction update() {\n  store.update(hash.deserialize(location.hash));\n}\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called immediately with initial state.\n * @return {function(Object)} Call this function with any updates to the state.\n */\nexports.register = function(config, callback) {\n  return store.register(config, callback);\n};\n\n/**\n * Unregister an existing state provider.\n * @param {function(Object)} callback Callback registered by the provider.\n */\nexports.unregister = function(callback) {\n  store.unregister(callback);\n};\n\n/**\n * Serialize values as they would be represented in the hash.\n * @param {Object} values An object with values to be serialized.\n * @return {string} The values as they would be represented in the hash.\n */\nexports.serialize = function(values) {\n  return hash.serialize(store.serialize(values));\n};\n\nexports.reset = reset;\n\nreset();\n","const Schema = require('./schema').Schema;\nconst util = require('./util');\nconst serializers = require('./serializers');\n\n/**\n * An object backed store of string values.  Allows registering multiple state\n * providers.\n * @param {Object} values Initial serialized values.\n * @param {function(Object)} callback Called with an object of serialized\n *     values and defaults whenever a provider updates state.\n * @constructor\n */\nconst Store = (exports.Store = function(values, callback) {\n  this._values = values;\n  this._defaults = {};\n  this._providers = [];\n  this._callback = callback;\n  this._callbackTimer = null;\n});\n\nStore.prototype._scheduleCallback = function() {\n  if (this._callbackTimer) {\n    clearTimeout(this._callbackTimer);\n  }\n  this._callbackTimer = setTimeout(this._debouncedCallback.bind(this));\n};\n\nStore.prototype._debouncedCallback = function() {\n  this._callbackTimer = null;\n  this._callback(this._values, this._defaults);\n};\n\nStore.prototype.update = function(values) {\n  if (this._updateTimer) {\n    clearTimeout(this._updateTimer);\n  }\n  this._updateTimer = setTimeout(this._debouncedUpdate.bind(this, values));\n};\n\nStore.prototype._debouncedUpdate = function(newValues) {\n  this._updateTimer = null;\n  const values = this._values;\n  const providers = this._providers.slice(); // callbacks may unregister providers\n  for (let i = providers.length - 1; i >= 0; --i) {\n    const provider = providers[i];\n    const schema = provider.schema;\n    let changed = false;\n    const state = {};\n    schema.forEachKey(function(key, prefixed) {\n      let deserialized;\n      if (!(prefixed in newValues)) {\n        deserialized = schema.getDefault(key);\n        const serializedDefault = schema.serialize(key, deserialized);\n        if (values[prefixed] !== serializedDefault) {\n          changed = true;\n          values[prefixed] = serializedDefault;\n          state[key] = deserialized;\n        }\n      } else if (values[prefixed] !== newValues[prefixed]) {\n        try {\n          deserialized = schema.deserialize(key, newValues[prefixed]);\n          values[prefixed] = newValues[prefixed];\n          state[key] = deserialized;\n          changed = true;\n        } catch (err) {\n          // invalid value, pass\n        }\n      }\n    });\n    if (changed && this._providers.indexOf(provider) >= 0) {\n      provider.callback(state);\n    }\n  }\n};\n\n/**\n * Unregister a provider.  Deletes the provider's values from the underlying\n * store and calls the store's callback.\n * @param {Function} callback The provider's callback.\n */\nStore.prototype.unregister = function(callback) {\n  let removedProvider;\n  this._providers = this._providers.filter(function(provider) {\n    const remove = provider.callback === callback;\n    if (remove) {\n      removedProvider = provider;\n    }\n    return !remove;\n  });\n  if (!removedProvider) {\n    throw new Error('Unable to unregister hashed state provider');\n  }\n  const values = this._values;\n  const defaults = this._defaults;\n  removedProvider.schema.forEachKey(function(key, prefixed) {\n    delete values[prefixed];\n    delete defaults[prefixed];\n  });\n  this._scheduleCallback();\n};\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called by the store on state changes.\n * @return {function(Object)} Called by the provider on state changes.\n */\nStore.prototype.register = function(config, callback) {\n  const provider = {\n    schema: new Schema(config),\n    callback: callback\n  };\n\n  // ensure there are no conflicts with existing providers\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const conflicts = provider.schema.conflicts(this._providers[i].schema);\n    if (conflicts) {\n      throw new Error(\n        'Provider already registered using the same name: ' + conflicts\n      );\n    }\n    if (provider.callback === this._providers[i].callback) {\n      throw new Error('Provider already registered with the same callback');\n    }\n  }\n\n  this._providers.push(provider);\n  this._initializeProvider(provider);\n\n  return function update(state) {\n    if (this._providers.indexOf(provider) === -1) {\n      throw new Error('Unregistered provider attempting to update state');\n    }\n    const schema = provider.schema;\n    let changed = false;\n    const values = this._values;\n    schema.forEachKey(function(key, prefixed) {\n      if (key in state) {\n        const serializedValue = schema.serialize(key, state[key], state);\n        if (values[prefixed] !== serializedValue) {\n          changed = true;\n          values[prefixed] = serializedValue;\n        }\n      }\n    });\n    if (changed) {\n      this._scheduleCallback();\n    }\n  }.bind(this);\n};\n\n/**\n * Call provider with initial values.\n * @param {Object} provider Provider to be initialized.\n */\nStore.prototype._initializeProvider = function(provider) {\n  const state = {};\n  const defaults = {};\n  const values = this._values;\n  provider.schema.forEachKey(function(key, prefixed) {\n    let deserializedValue;\n    const deserializedDefault = provider.schema.getDefault(key);\n    const serializedDefault = provider.schema.serialize(\n      key,\n      deserializedDefault\n    );\n    if (prefixed in values) {\n      try {\n        deserializedValue = provider.schema.deserialize(key, values[prefixed]);\n      } catch (err) {\n        deserializedValue = deserializedDefault;\n      }\n    } else {\n      deserializedValue = deserializedDefault;\n    }\n    state[key] = deserializedValue;\n    defaults[prefixed] = serializedDefault;\n    values[prefixed] = provider.schema.serialize(key, deserializedValue);\n  });\n  for (const prefixed in defaults) {\n    this._defaults[prefixed] = defaults[prefixed];\n  }\n  provider.callback(state);\n};\n\n/**\n * Serialize values with provider serializers where available.\n * @param {Object} values Values to be serialized.\n * @return {Object} The serialized values.\n */\nStore.prototype.serialize = function(values) {\n  const serialized = {};\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const provider = this._providers[i];\n    provider.schema.forEachKey(function(key, prefixed) {\n      if (prefixed in values) {\n        serialized[prefixed] = provider.schema.serialize(\n          key,\n          values[prefixed],\n          values\n        );\n      }\n    });\n  }\n  for (const key in values) {\n    if (!(key in serialized)) {\n      const value = values[key];\n      const type = util.typeOf(value);\n      const serializer = serializers.get(type);\n      serialized[key] = serializer(value);\n    }\n  }\n  return serialized;\n};\n","const Field = require('./field').Field;\nconst util = require('./util');\n\n/**\n * Create a new schema.  A schema is a collection of field definitions.\n * @param {Object} config Keys are field names, values are field configs.\n * @constructor\n */\nconst Schema = (exports.Schema = function(config) {\n  config = util.extend({}, config);\n  const fields = {};\n  let prefix;\n  if ('_' in config) {\n    prefix = config._;\n    delete config._;\n  }\n  for (const key in config) {\n    fields[key] = new Field(config[key]);\n  }\n  this._prefix = prefix;\n  this._fields = fields;\n});\n\n/**\n * Get the prefixed version of a key.\n * @param {string} key The key.\n * @return {string} The prefixed key.\n */\nSchema.prototype.getPrefixed = function(key) {\n  return this._prefix ? this._prefix + '.' + key : key;\n};\n\n/**\n * Call a callback for each field key.\n * @param {function(string, number)} callback Called with a local field key and\n *     a prefixed key.\n * @param {Object} thisArg This argument for the callback.\n */\nSchema.prototype.forEachKey = function(callback, thisArg) {\n  let more;\n  for (const key in this._fields) {\n    more = callback.call(thisArg, key, this.getPrefixed(key));\n    if (more === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Serialize a value.\n * @param {string} key The key or field name.\n * @param {*} value The value to serialize.\n * @param {Object} values Additional values for providers to use when serializing.\n * @return {string} The serialized value.\n */\nSchema.prototype.serialize = function(key, value, values) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].serialize(value, values);\n};\n\n/**\n * Deserialize a value.\n * @param {string} key The key or field name.\n * @param {string} str The serialized value.\n * @return {*} The deserialized value.\n */\nSchema.prototype.deserialize = function(key, str) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].deserialize(str);\n};\n\n/**\n * Get the default value for a particular field.\n * @param {string} key The key or field name.\n * @return {*} The default value.\n */\nSchema.prototype.getDefault = function(key) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].default;\n};\n\n/**\n * Determine if one schema conflicts with another.  Two schemas conflict if\n * any of their prefixed keys are the same.\n * @param {Schema} other The other schema.\n * @return {boolean|string} This schema conflicts with the other.  If the two\n *     schemas conflict, the return will be the first conflicting key (with\n *     any prefix).\n */\nSchema.prototype.conflicts = function(other) {\n  const thisPrefixedKeys = {};\n  for (const key in this._fields) {\n    thisPrefixedKeys[this.getPrefixed(key)] = true;\n  }\n\n  let conflicts = false;\n  other.forEachKey(function(_, prefixed) {\n    if (prefixed in thisPrefixedKeys) {\n      conflicts = prefixed;\n    }\n    return !conflicts;\n  });\n  return conflicts;\n};\n","const util = require('./util');\n\nconst serializers = require('./serializers');\nconst deserializers = require('./deserializers');\n\n/**\n * Create a new field.  A field must have a default value (`default`) and is\n * capable of serializing and deserializing values.\n * @param {Object} config Field configuration.  Must have a `default` property\n *     with a default value.  May have optional `serialize` and `deserialize`\n *     functions.  As a shorthand for providing a config object with a `default`\n *     property, a default value may be provided directly.\n * @constructor\n */\nexports.Field = function(config) {\n  if (util.typeOf(config) !== 'object') {\n    this.default = config;\n  } else if (!('default' in config)) {\n    throw new Error('Missing default');\n  } else {\n    this.default = config.default;\n  }\n\n  const type = util.typeOf(this.default);\n  this.serialize = config.serialize || serializers.get(type);\n  this.deserialize = config.deserialize || deserializers.get(type);\n};\n","const util = require('util');\n\n/**\n * Get the type of a value.\n * @param {*} value The value.\n * @return {string} The type.\n */\nexports.typeOf = function typeOf(value) {\n  let type = typeof value;\n  if (type === 'object') {\n    if (value === null) {\n      type = 'null';\n    } else if (util.isArray(value)) {\n      type = 'array';\n    } else if (util.isDate(value)) {\n      type = 'date';\n    } else if (util.isRegExp(value)) {\n      type = 'regexp';\n    } else if (util.isError(value)) {\n      type = 'error';\n    }\n  }\n  return type;\n};\n\n/**\n * Copy properties from one object to another.\n * @param {Object} dest The destination object.\n * @param {Object} source The source object.\n * @return {Object} The destination object.\n */\nexports.extend = function(dest, source) {\n  for (const key in source) {\n    dest[key] = source[key];\n  }\n  return dest;\n};\n\n/**\n * Generate an array of alternating name, value from an object's properties.\n * @param {Object} object The object to zip.\n * @return {Array} The array of name, value [, name, value]*.\n */\nexports.zip = function(object) {\n  const zipped = [];\n  let count = 0;\n  for (const key in object) {\n    zipped[2 * count] = key;\n    zipped[2 * count + 1] = object[key];\n    ++count;\n  }\n  return zipped;\n};\n\n/**\n * Generate an object from an array of alternating name, value items.\n * @param {Array} array The array of name, value [, name, value]*.\n * @return {Object} The zipped up object.\n */\nexports.unzip = function(array) {\n  const object = {};\n  for (let i = 0, ii = array.length; i < ii; i += 2) {\n    object[array[i]] = array[i + 1];\n  }\n  return object;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","'use strict';\n\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\nvar forEach = require('foreach');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasSymbols = require('has-symbols')();\nvar hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';\n\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof global[typedArray] === 'function') {\n\t\t\tvar arr = new global[typedArray]();\n\t\t\tif (!(Symbol.toStringTag in arr)) {\n\t\t\t\tthrow new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');\n\t\t\t}\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n","\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nmodule.exports = function forEach (obj, fn, ctx) {\n    if (toString.call(fn) !== '[object Function]') {\n        throw new TypeError('iterator must be a function');\n    }\n    var l = obj.length;\n    if (l === +l) {\n        for (var i = 0; i < l; i++) {\n            fn.call(ctx, obj[i], i, obj);\n        }\n    } else {\n        for (var k in obj) {\n            if (hasOwn.call(obj, k)) {\n                fn.call(ctx, obj[k], k, obj);\n            }\n        }\n    }\n};\n\n","'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof global[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%');\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar forEach = require('foreach');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasSymbols = require('has-symbols')();\nvar hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';\n\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new global[typedArray]();\n\t\tif (!(Symbol.toStringTag in arr)) {\n\t\t\tthrow new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');\n\t\t}\n\t\tvar proto = getPrototypeOf(arr);\n\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\tif (!descriptor) {\n\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t}\n\t\ttoStrTags[typedArray] = descriptor.get;\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","const util = require('util');\n\nconst enc = encodeURIComponent;\n\nconst serializers = {\n  string: function(str) {\n    if (typeof str !== 'string') {\n      throw new Error('Expected string to serialize: ' + str);\n    }\n    return enc(str);\n  },\n  number: function(num) {\n    if (typeof num !== 'number') {\n      throw new Error('Expected number to serialize: ' + num);\n    }\n    return enc(String(num));\n  },\n  boolean: function(bool) {\n    if (typeof bool !== 'boolean') {\n      throw new Error('Expected boolean to serialize: ' + bool);\n    }\n    return bool ? '1' : '0';\n  },\n  date: function(date) {\n    if (!util.isDate(date)) {\n      throw new Error('Expected date to serialize: ' + date);\n    }\n    return enc(date.toISOString());\n  },\n  array: function(array) {\n    if (!util.isArray(array)) {\n      throw new Error('Expected array to serialize: ' + array);\n    }\n    return enc(JSON.stringify(array));\n  },\n  object: function(obj) {\n    return enc(JSON.stringify(obj));\n  }\n};\n\n/**\n * Get a serializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(*): string} Function that serializes a value to a string.\n */\nexports.get = function(type) {\n  if (!(type in serializers)) {\n    throw new Error('Unable to serialize type: ' + type);\n  }\n  return serializers[type];\n};\n","const util = require('./util');\n\nconst dec = decodeURIComponent;\n\nconst noop = function() {};\n\nconst deserializers = {\n  string: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    return dec(str);\n  },\n  number: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const num = Number(dec(str));\n    if (isNaN(num)) {\n      throw new Error('Expected to deserialize a number: ' + str);\n    }\n    return num;\n  },\n  boolean: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let bool;\n    if (str === '1') {\n      bool = true;\n    } else if (str === '0') {\n      bool = false;\n    } else {\n      throw new Error('Expected \"1\" or \"0\" for boolean: ' + str);\n    }\n    return bool;\n  },\n  date: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const date = new Date(dec(str));\n    if (isNaN(date.getTime())) {\n      throw new Error('Expected to deserialize a date: ' + str);\n    }\n    return date;\n  },\n  array: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let array;\n    try {\n      array = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!array || util.typeOf(array) !== 'array') {\n      throw new Error('Expected to deserialize an array: ' + str);\n    }\n    return array;\n  },\n  object: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let obj;\n    try {\n      obj = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!obj || util.typeOf(obj) !== 'object') {\n      throw new Error('Expected to deserialize an object: ' + str);\n    }\n    return obj;\n  }\n};\n\n/**\n * Get a deserializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(string): *} Function that deserializes a string to a value.\n */\nexports.get = function(type) {\n  if (!(type in deserializers)) {\n    throw new Error('Unable to deserialize type: ' + type);\n  }\n  return deserializers[type];\n};\n","const util = require('./util');\n\n/**\n * Get values from a hash string.\n * @param {string} hash The hash string (e.g. '#/foo/bar').\n * @return {Object} The string values (e.g. {foo: 'bar'}).\n */\nfunction deserialize(hash) {\n  let zipped;\n  if (hash.length > 2) {\n    const path = hash.substring(2);\n    zipped = path.split('/');\n  } else {\n    zipped = [];\n  }\n  return util.unzip(zipped);\n}\n\n/**\n * Serialize values for the hash.\n * @param {Object} values The values to serialize.\n * @return {string} The hash string.\n */\nfunction serialize(values) {\n  let path = '#';\n  const parts = util.zip(values);\n  if (parts.length > 0) {\n    path = '#/' + parts.join('/');\n  }\n  return path;\n}\n\nexports.deserialize = deserialize;\nexports.serialize = serialize;\n"],"names":["map","_mapDefault","default","target","layers","view","_viewDefault","center","zoom","source","_vectorDefault1","layer","_vectorDefault","addLayer","addInteraction","_dragAndDropDefault","formatConstructors","_geoJSONDefault","_modifyDefault","_drawDefault","type","_snapDefault","document","getElementById","addEventListener","clear","format","featureProjection","download","on","features","getFeatures","json","writeFeatures","href","GeoJSON1","_super","GeoJSON2","opt_options","_this","this","options","call","dataProjection","_projJs","get","defaultFeatureProjection","geometryName_","geometryName","extractGeometryName_","extractGeometryName","__extends","prototype","readFeatureFromObject","object","geoJSONFeature","geometry","readGeometry","feature","_featureJsDefault","setGeometryName","setGeometry","setId","setProperties","readFeaturesFromObject","geoJSONFeatures","i","ii","length","push","readGeometryFromObject","readProjectionFromObject","projection","crs","writeFeatureObject","adaptOptions","properties","id","getId","undefined","hasProperties","getProperties","getGeometry","writeGeometry","getGeometryName","writeFeaturesObject","objects","writeGeometryObject","POINT","readPointGeometry","LINE_STRING","readLineStringGeometry","POLYGON","readPolygonGeometry","MULTI_POINT","readMultiPointGeometry","MULTI_LINE_STRING","readMultiLineStringGeometry","MULTI_POLYGON","readMultiPolygonGeometry","GEOMETRY_COLLECTION","geometries","readGeometryCollectionGeometry","Error","geoJSON","_featureJs1","transformGeometryWithOptions","getType","coordinates","getCoordinates","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","getGeometriesArray","geometry1","_objJs","assign","writeGeometryCollectionGeometry","CIRCLE","parcelHelpers","export","exports","createStyleFunction","_objectJs","require","Feature1","Feature2","opt_geometryOrProperties","id_","style_","styleFunction_","geometryChangeKey_","getChangeEventType","handleGeometryChanged_","getSimplifiedGeometry","clone","style","getStyle","setStyle","getStyleFunction","handleGeometryChange_","changed","_eventsJs","listen","_eventTypeJsDefault","CHANGE","set","opt_style","name","removeEventListener","obj","Array","isArray","styles_1","getZIndex","_eventJs","ObjectEvent1","ObjectEvent2","key","oldValue","BaseObject1","BaseObject2","opt_values","values_","value","hasOwnProperty","getKeys","Object","keys","notify","eventType","dispatchEvent","_objectEventTypeJsDefault","PROPERTYCHANGE","opt_silent","values","applyProperties","unset","changeEventTypeCache","stopPropagation","preventDefault","BaseEvent","BaseEvent1","propagationStopped","defaultPrevented","evt","interopDefault","a","__esModule","defineInteropFlag","defineProperty","exportAll","dest","forEach","enumerable","destName","unByKey","_targetJs","Observable1","Observable2","revision_","getRevision","listener","len","once","listenOnce","ol_key","un","unlistenByKey","_disposableJs","Target1","Target2","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","indexOf","event","_eventJsDefault","propagate","dispatching","pendingRemovals","handleEvent","pr","_functionsJs","VOID","disposeInternal","getListeners","hasListener","opt_type","index","splice","Disposable","Disposable1","disposed","dispose","TRUE","FALSE","memoizeOne","_arrayJs","fn","lastResult","lastArgs","lastThis","called","nextArgs","slice","arguments","equals","apply","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","b","includes","arr","linearFindNearest","direction","n","reverseSubArray","begin","end","tmp","extend","data","extension","remove","find","func","arr1","arr2","len1","stableSort","compareFnc","sort","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","getValues","isEmpty","var_sources","TypeError","output","property","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","opt_this","opt_once","bind","originalListener_1","eventsKey","abstract","getUid","VERSION","uidCounter_","ol_uid","String","assert","_assertionErrorJs","assertion","errorCode","_assertionErrorJsDefault","_utilJs","AssertionError1","AssertionError2","code","message","split","_eventTypeJs","GeometryCollection1","GeometryCollection2","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","closestPointXY","x","y","closestPoint","minSquaredDistance","_extentJs","closestSquaredDistanceXY","getExtent","containsXY","computeExtent","extent","getGeometries","cloneGeometries","getGeometriesArrayRecursive","geometriesArray","concat","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","intersectsExtent","rotate","angle","anchor","scale","sx","opt_sy","opt_anchor","getCenter","applyTransform","transformFn","translate","deltaX","deltaY","clonedGeometries","tmpTransform","_transformJs","create","Geometry1","Geometry2","extent_","createEmpty","extentRevision_","simplifyTransformedInternal","revision","opt_transform","simplifyTransformed","coord","getClosestPoint","point","opt_closestPoint","NaN","Infinity","intersectsCoordinate","coordinate","opt_extent","isNaN","createOrUpdateEmpty","simplify","tolerance","transform","destination","sourceProj","getUnits","_unitsJsDefault","TILE_PIXELS","inCoordinates","outCoordinates","stride","pixelExtent","projectedExtent","getWorldExtent","getHeight","METERS_PER_UNIT","Units","DEGREES","FEET","METERS","PIXELS","USFEET","Math","PI","reset","multiply","setFromArray","makeScale","compose","composeCssTransform","invert","makeInverse","determinant","toString","_assertsJs","tmp_","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","f","cos","sin","dx","dy","dx1","dy1","sy","dx2","dy2","det","mat","join","boundingExtent","buffer","containsCoordinate","containsExtent","coordinateRelationship","createOrUpdate","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","approximatelyEquals","extendCoordinate","extendCoordinates","extendFlatCoordinates","extendRings","extendXY","forEachCorner","getArea","getBottomLeft","getBottomRight","getCorner","getEnlargedArea","getForViewAndSize","getIntersectionArea","getIntersection","getMargin","getSize","getTopLeft","getTopRight","getWidth","intersects","returnOrUpdate","scaleFromCenter","intersectsSegment","wrapX","_cornerJs","extent1","extent2","minX","minY","maxX","maxY","relationship","_relationshipJsDefault","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","flatCoordinates","offset","rings","abs","min","max","callback","val","area","corner","_cornerJsDefault","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","start","intersects1","startRel","endRel","startX","startY","endX","endY","slope","opt_stops","width","height","xs","ys","l","_boundingExtentXYs","projectionExtent","canWrapX","worldWidth","floor","_unitsJs","cloneTransform","identityTransform","addProjection","addProjections","getPointResolution","addEquivalentProjections","addEquivalentTransforms","clearAllProjections","createProjection","createTransformFromCoordinateTransform","addCoordinateTransforms","fromLonLat","toLonLat","equivalent","getTransformFromProjections","getTransform","transformExtent","transformWithProjections","setUserProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","toUserExtent","fromUserExtent","createSafeCoordinateTransform","addCommon","_projectionJs","input","opt_output","opt_dimension","getCode","projections","projectionLike","_projectionsJs","opt_units","pointResolution","getter","getPointResolutionFunc","metersPerUnit","getMetersPerUnit","units","toEPSG4326_1","vertices","_sphereJs","getDistance","_transformsJs","add","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","defaultCode","coordTransform","dimension","j","forward","inverse","destProj","opt_projection","lonLat","lon","_mathJs","modulo","equalUnits","sourceProjection","destinationProjection","sourceCode","destinationCode","transformFunc","userProjection","destProjection","transformed","worldsAway","sourceX","sourceY","sourceExtent","sourceExtentWidth","_coordinateJs","getWorldsAway","clamp","_epsg3857Js","PROJECTIONS","_epsg4326Js","fromEPSG4326","toEPSG4326","Projection","Projection1","code_","units_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection1","EPSG3857Projection2","cosh","atan","exp","log2","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","lerp","LOG2E","t","maxRow","maxEl","r","absValue","coef","k","m","angleInRadians","angleInDegrees","EPSG4326Projection1","EPSG4326Projection2","opt_axisOrientation","cache","replace","transforms","DEFAULT_RADIUS","getLength","_geometryTypeJs","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","getLengthInternal","_geometryTypeJsDefault","coords","jj","LINEAR_RING","getAreaInternal","distance","bearing","lon1","dByR","lat","asin","closestOnCircle","closestOnSegment","createStringXY","degreesToStringHDMS","squaredDistanceToSegment","toStringHDMS","toStringXY","delta","circle","getRadius","segment","along","opt_fractionDigits","hemispheres","degrees","normalizedDegrees","dflPrecision","precision","pow","deg","sec","ceil","_stringJs","padNumber","charAt","template","toFixed","coordinate1","coordinate2","equals1","cosAngle","sinAngle","scale1","coord1","coord2","opt_sourceExtentWidth","number","opt_precision","numberString","decimal","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","transform2D","opt_dest","anchorX","anchorY","_featureJs","JSONFeature1","JSONFeature2","JSON","readFeature","getObject","getReadOptions","readFeatures","readProjection","writeFeature","stringify","parse","transformExtentWithOptions","FeatureFormat","FeatureFormat1","write","decimals","power_1","round","ARRAY_BUFFER","TEXT","XML","_geometryLayoutJs","LineString1","LineString2","opt_layout","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","appendCoordinate","lineString","layout","_closestJs","maxSquaredDelta","forEachSegment","getCoordinateAtM","opt_extrapolate","_geometryLayoutJsDefault","XYM","XYZM","extrapolate","getCoordinateAt","fraction","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","_simplifyJs","douglasPeucker","XY","setLayout","_deflateJs","deflateCoordinates","XYZ","getStrideForLayout","transformGeom2D","_geometryJs","SimpleGeometry1","SimpleGeometry2","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getStride","nesting","getLayoutForStride","simpleGeometry","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","squaredDelta","ends","endss","maxDelta","isRing","opt_tmpPoint","tmpPoint","deflateCoordinate","deflateCoordinatesArray","coordinatess","opt_ends","deflateMultiCoordinatesArray","coordinatesss","opt_endss","simplifyLineString","douglasPeuckerArray","douglasPeuckerMultiArray","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","highQuality","opt_simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","simplifiedEnds","simplifiedEndss","ret","point1","point2","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","o","length_1","cumulativeLengths","lo","hi","m0","interpolate","intersectsLineString","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","coordinatesExtent","_containsJs","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","wn","lineStringLength","linearRingLength","perimeter","MultiLineString1","MultiLineString2","ends_","lineStrings","appendLineString","multiLineString","opt_interpolate","getEnds","getLineString","getLineStrings","_lineStringJsDefault","getFlatMidpoints","midpoints","midpoint","_interpolateJs","MultiPoint1","MultiPoint2","appendPoint","multiPoint","getPoint","getPoints","points","_pointJsDefault","Point1","Point2","MultiPolygon1","MultiPolygon2","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","polygons","polygon","appendPolygon","newEndss","multiPolygon","getOrientedFlatCoordinates","opt_right","getEndss","getFlatInteriorPoints","flatCenters","_centerJs","linearRingss","_interiorpointJs","getInteriorPointsOfMultiArray","getInteriorPoints","_orientJs","orientLinearRingsArray","getPolygon","prevEnds","getPolygons","_polygonJsDefault","lastEnds","circular","fromExtent","fromCircle","makeRegular","Polygon1","Polygon2","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","getFlatInteriorPoint","flatCenter","getInteriorPointOfArray","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","_linearRingJsDefault","orientLinearRings","opt_n","opt_sphereRadius","opt_sides","opt_angle","sides","arrayLength","startAngle","LinearRing1","LinearRing2","twiceArea","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","interiorPoints","linearRingIsClockwise","linearRingsAreOriented","linearRingssAreOriented","_reverseJs","edge","isClockwise","_compositeJs","Map1","Map2","controls","_controlJs","defaults","interactions","_interactionJs","onFocusOnly","createRenderer","_mapJs","CompositeMapRenderer1","CompositeMapRenderer2","fontChangeListenerKey_","_canvasJs","checkedFonts","redrawText","element_","createElement","position","zIndex","className","_cssJs","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","dispatchRenderEvent","frameState","getMap","event_1","parentNode","removeChild","renderFrame","calculateMatrices2D","PRECOMPOSE","layerStatesArray","viewState","declutterLayers","previousElement","layerState","layerIndex","sourceState","_stateJsDefault","READY","UNDEFINED","element","render","renderDeclutter","POSTCOMPOSE","display","scheduleExpireIconCache","forEachLayerAtPixel","pixel","hitTolerance","layerFilter","layerStates","hasRenderer","_layerJs","inView","getRenderer","getDataAtPixel","result","MapRenderer1","MapRenderer2","map_","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","checkWrapped","thisArg","thisArg2","managed","translatedCoordinate","offsets","numLayers","matches","tmpCoord","layerRenderer","getSource","getWrapX","callback_1","order","i1","distanceSq","some","hasFeatureAtCoordinate","canExpireCache","postRenderFunctions","expireIconCache","expire","shared","_colorJs","IconImageCache","IconImageCache1","cache_","cacheSize_","maxCacheSize_","iconImage","src","crossOrigin","color","getKey","setSize","maxCacheSize","asString","fromString","asArray","normalize","isStringColor","HEX_COLOR_RE_","NAMED_COLOR_RE_","fromNamed","body","appendChild","rgb","getComputedStyle","cacheSize","s","g","exec","hasAlpha","substr","Number","fromStringInternal_","test","_baseJs","Layer1","Layer2","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","setMap","_propertyJsDefault","SOURCE","handleSourcePropertyChange_","setSource","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","getLayerState","getSourceState","getState","handleSourceChange_","Promise","resolve","prepareFrame","_eventTypeJsDefault1","arrayLayerState","visible","minResolution","maxResolution","minZoom","maxZoom","BaseLayer1","BaseLayer2","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getClassName","opt_managed","state","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","PRERENDER","POSTRENDER","RENDERCOMPLETE","LOADING","RenderEvent1","RenderEvent2","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontParameters","fontRegEx","RegExp","fontRegExMatchIndex","fontSpec","match","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","textHeights","registerFont","measureTextHeight","measureTextWidth","measureAndCacheTextWidth","measureTextWidths","rotateAtOffset","drawImageOrLabel","createTransformString","_objectJsDefault","_targetJsDefault","console","warn","measureFont","measureElement","measureContext","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","check","done","fonts","font","clearInterval","setInterval","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","left","offsetHeight","_domJs","createCanvasContext2D","lines","widths","numLines","currentWidth","offsetX","offsetY","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","drawImage","restore","createTransformStringCanvas","canvas","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","ua","navigator","userAgent","toLowerCase","devicePixelRatio","WorkerGlobalScope","OffscreenCanvas","self","Image","decode","passive","window","error","outerWidth","outerHeight","replaceNode","removeNode","removeChildren","replaceChildren","opt_width","opt_height","opt_canvasPool","shift","_hasJs","getContext","offsetWidth","marginLeft","marginRight","marginTop","marginBottom","newNode","oldNode","parent","replaceChild","node","lastChild","children","oldChildren","childNodes","oldChild","newChild","PluggableMap1","PluggableMap2","optionsInternal","keyboardEventTarget","overlays","layerGroup","getLayers","_groupJsDefault","_mapPropertyJsDefault","LAYERGROUP","TARGET","VIEW","_viewJsDefault","_collectionJsDefault","getArray","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","Date","now","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","moveTolerance_","moveTolerance","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","_tileQueueJsDefault","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","SIZE","handleSizeChanged_","handleTargetChanged_","control","_collectionEventTypeJsDefault","ADD","REMOVE","interaction","addOverlayInternal_","addControl","getControls","getInteractions","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getCoordinateFromPixel","getEventPixel","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","clientX","clientY","top","getTarget","getTargetElement","getView","getProjection","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","getOwnerDocument","targetElement","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","browserEvent","mapBrowserEvent","_mapBrowserEventJsDefault","handleMapBrowserEvent","originalEvent","POINTERDOWN","doc","rootNode","getRootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","maxTotalLoading","maxNewLoads","hints","viewHints","_viewHintJsDefault","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","_eventTypeJsDefault2","animate","getAnimating","resolveConstraints","_mapBrowserEventHandlerJsDefault","_mapBrowserEventTypeJsDefault","updateSize","clearTimeout","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","_sizeJs","hasArea","isDef","getHints","declutterTree","usedTiles","wantedTiles","_mapEventJsDefault","_mapEventTypeJsDefault","MOVESTART","MOVEEND","setTimeout","setLayerGroup","setView","computedStyle","parseFloat","setViewportSize","Property","CollectionEvent1","CollectionEvent2","opt_element","opt_index","Collection1","Collection2","unique_","unique","array_","assertUnique_","updateLength_","item","insertAt","elem","removeAt","prev","setAt","opt_except","LayerGroup1","LayerGroup2","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","_mapEventJs","MapBrowserEvent1","MapBrowserEvent2","opt_dragging","pixel_","coordinate_","dragging","MapEvent1","MapEvent2","MapBrowserEventHandler1","MapBrowserEventHandler2","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","POINTERMOVE","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","newEvent1","SINGLECLICK","updateActivePointers_","POINTERUP","POINTERCANCEL","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","handlePointerMove_","isMoving_","POINTERDRAG","cancelable","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","TileQueue1","TileQueue2","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","enqueue","added","hifi","_tileStateJsDefault","LOADED","EMPTY","tileKey","newLoads","getCount","dequeue","IDLE","load","_priorityQueueJs","PriorityQueue","PriorityQueue1","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","createCenterConstraint","createResolutionConstraint","createRotationConstraint","isNoopAnimation","View1","View2","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","resolutionConstraint","constraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","var_args","args","animateInternal","animationCount","animationCallback","series","animation","complete","duration","easing","_easingJs","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","setHint","updateAnimations_","getInteracting","cancelAnimations","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","currentCenter","currentResolution","opt_rotation","opt_size","_viewPropertyJsDefault","CENTER","getConstraints","getConstrainResolution","constrainResolution","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","RESOLUTION","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","xResolution","yResolution","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","ROTATION","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","_polygonJs","fitInternal","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","ratio","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","easeOut","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smooth","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","showFullExtent","projExtent","_resolutionconstraintJs","createSnapToResolutions","createMinMaxResolution","defaultMaxResolution","_commonJs","DEFAULT_TILE_SIZE","defaultMinResolution","defaultMaxZoom","createSnapToPower","enableRotation","constrainRotation","_rotationconstraintJs","createSnapToZero","none","createSnapToN","DEFAULT_MAX_ZOOM","createExtent","onlyCenter","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","getViewportClampedResolution","maxExtent","viewportSize","getSmoothClampedResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","z","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","disable","theta","opt_tolerance","easeIn","linear","upAndDown","num","toSize","_attributionJs","_zoomJsDefault","zoomOptions","_rotateJsDefault","rotateOptions","attribution","_attributionJsDefault","attributionOptions","Attribution1","Attribution2","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","mapEvent","Control1","Control2","target_","listenerKeys","Rotate1","Rotate2","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","Zoom1","Zoom2","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","events","FullScreenEventType","FullScreen1","FullScreen2","cssClassName_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","isFullScreen","isFullScreenSupported","keys_","source_","handleFullScreen_","exitFullscreen","requestFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","fullscreen","nextClassName","_a","_b","_c","requestFullscreen","fullscreenEnabled","fullscreenElement","PROJECTION","COORDINATE_FORMAT","MousePosition1","MousePosition2","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","mapProjection_","transform_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","viewport","html","MAX_RATIO","MIN_RATIO","ControlledMap1","ControlledMap2","OverviewMap1","OverviewMap2","boundHandleRotationChanged_","handleRotationChanged_","rotateWithView_","rotateWithView","viewExtent_","ovmapDiv_","view_","ovmap_","ovmap","box","boxSizing","boxOverlay_","_overlayJsDefault","positioning","_overlayPositioningJsDefault","CENTER_CENTER","scope","overlayBox","getElement","move","mousePosition","setPosition","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","mapSize","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","LN2","updateBox_","ovresolution","ovmapPostrenderKey_","getRotateWithView","setRotateWithView","getOverviewMap","Overlay1","Overlay2","insertFirst","stopEvent","autoPan","autoPanAnimation","margin","autoPanMargin","rendered","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","updateRenderedPosition","posX","posY","CENTER_RIGHT","BOTTOM_CENTER","TOP_CENTER","CENTER_LEFT","msTransform","getOptions","UNITS_PROP","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","DEFAULT_DPI","ScaleLine1","ScaleLine2","bar","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","dpi","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","createScaleBar","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","Direction","ZoomSlider1","ZoomSlider2","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","firstElementChild","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","ZoomToExtent1","ZoomToExtent2","handleZoomToExtent","_collectionJs","kinetic","_kineticJsDefault","altShiftDragRotate","_dragRotateJsDefault","doubleClickZoom","_doubleClickZoomJsDefault","zoomDelta","zoomDuration","dragPan","_dragPanJsDefault","pinchRotate","_pinchRotateJsDefault","pinchZoom","_pinchZoomJsDefault","keyboard","_keyboardPanJsDefault","_keyboardZoomJsDefault","mouseWheelZoom","_mouseWheelZoomJsDefault","shiftDragZoom","_dragZoomJsDefault","DoubleClickZoom1","DoubleClickZoom2","delta_","shiftKey","pan","zoomByDelta","Interaction1","Interaction2","setActive","ACTIVE","active","_pointerJs","DragPan1","DragPan2","stopDown","kinetic_","lastCentroid","lastPointersCount_","panning_","condition","_conditionJs","all","noModifierKeys","primaryAction","condition_","focusWithTabindex","noKinetic_","handleDragEvent","targetPointers","centroid","update","handleUpEvent","getAngle","centerpx","handleDownEvent","PointerInteraction1","PointerInteraction2","handleMoveEvent","handlingDownUpSequence","trackedPointers_","getPointerCount","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","altKeyOnly","altShiftKeysOnly","focus","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","mouseOnly","touchOnly","penOnly","_mapBrowserEventTypeJs","conditions","pass","altKey","metaKey","ctrlKey","activeElement","hasAttribute","tagName","pointerType","pointerEvt","isPrimary","DragRotate1","DragRotate2","lastAngle_","_dragBoxJs","DragZoom1","DragZoom2","minArea","out_","out","onBoxEnd","mapExtent","boxPixelExtent","factor","DragBoxEventType","DragBoxEvent1","DragBoxEvent2","DragBox1","DragBox2","box_","_boxJsDefault","minArea_","startPixel_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","startPixel","endPixel","setPixels","completeBox","RenderBox1","RenderBox2","geometry_","endPixel_","render_","px","createOrUpdateGeometry","KeyboardPan1","KeyboardPan2","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","_keyCodeJsDefault","DOWN","UP","mapUnitsDelta","KeyboardZoom1","KeyboardZoom2","charCode","charCodeAt","Kinetic","Kinetic1","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","Mode","TRACKPAD","MouseWheelZoom1","MouseWheelZoom2","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate1","PinchRotate2","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom1","PinchZoom2","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDropEventType","DragAndDropEvent1","DragAndDropEvent2","file","opt_features","DragAndDrop1","DragAndDrop2","readAsBuffer_","formats_","_formatTypeJsDefault","dropListenKeys_","handleResult_","formats","TextDecoder","tryReadFeatures_","addFeatures","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","DragRotateAndZoom1","DragRotateAndZoom2","lastMagnitude_","magnitude","angleDelta","createRegularPolygon","createBox","_circleJs","DrawEventType","DrawEvent1","DrawEvent2","Draw1","Draw2","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","styles","geometryFunction","Constructor_1","mode_1","_circleJsDefault","squaredLength","setCenterAndRadius","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","_vectorJsDefault","_vectorJsDefault1","useSpatialIndex","_styleJs","createEditingStyle","updateWhileInteracting","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","addToDrawing_","startDrawing_","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","mode","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","ring","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","_multiPointJsDefault","_multiLineStringJsDefault","_multiPolygonJsDefault","addFeature","appendCoordinates","newDrawing","ending","sketchFeatures","overlaySource","opt_geometry","boxCoordinates","Circle1","Circle2","getRadiusSquared_","circleExtent","setRadius","_baseVectorJs","VectorLayer1","VectorLayer2","BaseVectorLayer1","BaseVectorLayer2","renderBuffer","updateWhileAnimating","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","_rbushDefault","setRenderOrder","renderOrder","createDefaultStyle","toFunction","t1","t2","r1","h1","u","p","_maxEntries","_minEntries","leaf","m2","h2","o1","_all","search","toBBox","o2","collides","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","l1","_condense","compareMinX","compareMinY","toJSON","fromJSON","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","l2","u3","p1","v","M","_allDistMargin","module","define","amd","RBush","Style","Style1","defaultGeometryFunction","fill_","fill","image_","image","renderer","stroke_","stroke","text_","zIndex_","getFill","getImage","getStroke","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","styleFunction","defaultStyles","_fillJsDefault","_strokeJsDefault","white","blue","CircleStyle1","CircleStyle2","displacement","getScale","getDisplacement","radius_","RegularShape1","RegularShape2","canvas_","hitDetectionCanvas_","origin_","radius1","radius2_","radius2","size_","imageSize_","hitDetectionImageSize_","getRadius2","getAnchor","getHitDetectionImage","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","getPixelRatio","getImageSize","getHitDetectionImageSize","getImageState","getOrigin","listenImageChange","unlistenImageChange","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","_colorlikeJs","asColorLike","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","ImageStyle","ImageStyle1","opacity_","scale_","scaleArray_","displacement_","getScaleArray","setScale","Fill","Fill1","color_","setColor","Stroke","Stroke1","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","_builderGroupJs","CanvasVectorLayerRenderer1","CanvasVectorLayerRenderer2","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","useContainer","renderWorlds","executorGroup","opt_declutterTree","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","pixelTransform","canvasTransform","replayGroup","containerReused","clearRect","preRender","clipped","layerExtent","clipUnrotated","postRender","_hitdetectJs","HIT_DETECT_RESOLUTION","createHitDetectionImageData","hitDetect","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","_vectorJs","defaultOrder","loadExtents","gutter","loadExtent","declutterBuilderGroup","_builderGroupJsDefault","getTolerance","userTransform","loadFeatures","getSquaredTolerance","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","finish","_executorGroupJsDefault","getOverlaps","builderGroup","opt_declutterBuilderGroup","_builderJs","BATCH_CONSTRUCTORS","_polygonBuilderJsDefault","_builderJsDefault","_imageBuilderJsDefault","_lineStringBuilderJsDefault","_textBuilderJsDefault","BuilderGroup","BuilderGroup1","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","_instructionJs","CanvasBuilder1","CanvasBuilder2","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","drawCustom","beginGeometry","builderEndss","builderBegin","myEnds","CUSTOM","_inflateJs","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","reverse","instruction","_instructionJsDefault","END_GEOMETRY","setFillStrokeStyle","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","Instruction","BEGIN_PATH","CLOSE_PATH","DRAW_CHARS","DRAW_IMAGE","FILL","MOVE_TO_LINE_TO","STROKE","VectorContext","VectorContext1","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","CanvasImageBuilder1","CanvasImageBuilder2","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","opt_sharedData","hitDetectionImage","origin","CanvasLineStringBuilder1","CanvasLineStringBuilder2","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder1","CanvasPolygonBuilder2","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","TEXT_ALIGN","CanvasTextBuilder1","CanvasTextBuilder2","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","_textPlacementJsDefault","LINE","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","_straightchunkJs","matchingChunk","maxAngle","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","CanvasLayerRenderer1","CanvasLayerRenderer2","renderedResolution","tempTransform","layerClassName","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","moveTo","inverted","dispatchRenderEvent_","renderPixel","renderCoordinate","newCanvas","newContext","getImageData","err","Uint8Array","LayerRenderer1","LayerRenderer2","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","_imageStateJsDefault","loadImage","imageState","getPixelIndexArray","_builderTypeJs","ORDER","IMAGE","DEFAULT","ExecutorGroup","ExecutorGroup1","overlaps","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","_executorJsDefault","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","imageData","i_1","_builderTypeJsDefault","result_1","executor","zs","executeHitDetection","contextScale","viewRotation","opt_builderTypes","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","Executor","Executor1","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p11","p21","p31","p41","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","imageOrLabel","dimensions","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","_textBuilderJs","execute_","opt_featureCallback","opt_hitExtent","pixelCoordinates","_transformJs1","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","_lengthJs","textLength","startM","parts","_textpathJs","drawTextOnPath","drawChars","cc","chars","part","ii_1","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","substring","_immediateJs","imageSmoothingEnabled","_immediateJsDefault","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","img","imgContext","alpha","fillRect","Icon","anchorXUnits","_iconAnchorUnitsJsDefault","anchorYUnits","byGeometryType","zIndexKeys","geomAndStyle","kk","resultFeatures","CanvasImmediateRenderer1","CanvasImmediateRenderer2","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","_simpleGeometryJs","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","FRACTION","Icon1","Icon2","normalizedAnchor_","anchorOrigin_","anchorOrigin","_iconOriginJsDefault","anchorXUnits_","anchorYUnits_","crossOrigin_","iconImage_","_iconImageJs","offset_","offsetOrigin_","offsetOrigin","getSrc","setAnchor","iconImageSize","taintedTestContext","IconImage1","IconImage2","unlisten_","imageState_","src_","tainted_","isTainted_","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","_imageJs","listenImage","ctx","globalCompositeOperation","imgData","putImageData","_iconImageCacheJs","ImageWrapper1","ImageWrapper2","imageLoadFunction","imageLoadFunction_","loadHandler","errorHandler","promise","listening_1","then","catch","ImageBase1","ImageBase2","_fillJs","Text1","Text2","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","GEOMETRY_RENDERERS","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","feature1","feature2","renderGeometry","renderFeatureInternal","VectorSourceEvent1","VectorSourceEvent2","opt_feature","VectorSource1","VectorSource2","loader_","format_","url_","url","loader","_featureloaderJs","xhr","strategy_","strategy","_loadingstrategyJs","collection","featuresRtree_","_rbushJsDefault","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","_vectorEventTypeJsDefault","ADDFEATURE","handleFeatureChange_","valid","extents","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","REMOVEFEATURE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getAll","getFeaturesAtCoordinate","getInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","uid","getFormat","getUrl","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","refresh","removeLoadedExtent","removed","setLoader","setUrl","_rbush","RBush1","opt_maxEntries","rbush_","items_","items","bbox","forEach_","rbush","Source1","Source2","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","getContextOptions","setAttributions","setState","attributionLike","getZForResolution","getTileRangeForExtentAndZ","getTileCoordExtent","loadFeaturesXhr","setWithCredentials","_formatTypeJs","withCredentials","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","xhrWithCredentials","ExtentEventType","ExtentEvent1","ExtentEvent2","Extent1","Extent2","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","pixelCoordinate","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2","tempExtent","tempSegment","ModifyEventType","ModifyEvent1","ModifyEvent2","MapBrowserEvent","Modify1","Modify2","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","segmentData","depth","centerSegmentData","circumferenceSegmentData","featureSegments","geometry_1","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestVertex","closestOnSegmentData","insertVertex_","opt_coordinate","nodes","hitPointGeometry","viewExtent","projectedDistanceToSegmentDataSquared","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","pointCoordinates","distanceToCenterSquared","distanceToCircumference","SelectEventType","SelectEvent1","SelectEvent2","selected","deselected","originalFeatureStyles","Select1","Select2","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layers_1","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","_collectionEventTypeJs","getFeatureFromEvent","Snap1","Snap2","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","currentMap","lowerLeft","upperRight","closestSegmentData","projectedCoordinate","isCircle","TranslateEventType","TranslateEvent1","TranslateEvent2","startCoordinate","Translate1","Translate2","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","deltaX_1","deltaY_1","geom","toPrecision","clientWidth","config","serialize","_proj","deserialize","str","hashHandler","_hashedDefault","onMoveEnd","Store","hash","store","location","nonDefaults","history","pushState","Schema","util","serializers","_values","_defaults","_providers","_callback","_callbackTimer","_scheduleCallback","_debouncedCallback","_updateTimer","_debouncedUpdate","newValues","providers","provider","schema","forEachKey","prefixed","deserialized","getDefault","serializedDefault","removedProvider","conflicts","_initializeProvider","serializedValue","deserializedValue","deserializedDefault","serialized","typeOf","serializer","Field","fields","prefix","_","_prefix","_fields","getPrefixed","other","thisPrefixedKeys","deserializers","isDate","isRegExp","isError","zip","zipped","unzip","getOwnPropertyDescriptors","descriptors","getOwnPropertyDescriptor","formatRegExp","isString","inspect","isNull","isObject","deprecate","msg","process","noDeprecation","warned","throwDeprecation","traceDeprecation","trace","debugs","debugEnvRegex","opts","seen","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","recurseTimes","isFunction","constructor","primitive","simple","isNumber","formatPrimitive","visibleKeys","arrayToHash","getOwnPropertyNames","formatError","base","braces","toUTCString","formatProperty","formatArray","numLinesEst","reduce","cur","reduceToSingleString","desc","line","ar","arg","re","objectToString","pad","debuglog","toUpperCase","pid","types","isNullOrUndefined","isSymbol","isNativeError","isPrimitive","isBuffer","months","timestamp","getHours","getMinutes","getSeconds","getDate","getMonth","prop","inherits","kCustomPromisifiedSymbol","Symbol","callbackifyOnRejected","reason","cb","newReason","promisify","original","configurable","promiseResolve","promiseReject","reject","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","nextTick","rej","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","noop","browser","env","argv","version","versions","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","isArgumentsObject","isGeneratorFunction","whichTypedArray","isTypedArray","uncurryThis","BigIntSupported","BigInt","SymbolSupported","ObjectToString","numberValue","valueOf","stringValue","booleanValue","bigIntValue","symbolValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","isArrayBuffer","ArrayBuffer","working","isDataViewToString","isDataView","DataView","isPromise","isArrayBufferView","isView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isFloat32Array","isFloat64Array","isBigInt64Array","isBigUint64Array","Map","isMap","Set","isSet","WeakMap","isWeakMap","WeakSet","isWeakSet","SharedArrayBufferCopy","SharedArrayBuffer","isSharedArrayBufferToString","isSharedArrayBuffer","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","isBoxedPrimitive","isAnyArrayBuffer","method","hasToStringTag","toStringTag","$toString","callBound","isStandardArguments","isLegacyArguments","callee","supportsStandardArguments","GetIntrinsic","callBind","$indexOf","allowMissing","intrinsic","$SyntaxError","SyntaxError","$Function","Function","$TypeError","getEvalledConstructor","expressionSyntax","$gOPD","throwTypeError","ThrowTypeError","calleeThrows","gOPDthrows","hasSymbols","getProto","__proto__","needsEval","TypedArray","INTRINSICS","AggregateError","iterator","Atomics","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","eval","EvalError","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","isFinite","Proxy","RangeError","ReferenceError","Reflect","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakRef","doEval","doEval1","gen","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","$replace","$strSlice","rePropName","reEscapeChar","stringToPath","string","quote","subString","getBaseIntrinsic","alias","intrinsicName","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","origSymbol","hasSymbolSham","getOwnPropertySymbols","sym","symObj","syms","propertyIsEnumerable","descriptor","implementation","ERROR_MESSAGE","toStr","funcType","that","bound","binder","boundLength","boundArgs","Empty","$apply","$call","$reflectApply","$defineProperty","$max","originalFunction","applyBind","GeneratorFunction","fnToStr","isFnRegex","generatorFunc","getGeneratorFunc","availableTypedArrays","typedArrays","$slice","toStrTags","gOPD","typedArray","proto","superProto","tryTypedArrays","foundName","possibleNames","anyTrue","tag","copy","readUInt8","ctor","superCtor","super_","TempCtor","enc","boolean","bool","date","toISOString","dec","getTime","path"],"version":3,"file":"editor.f676b5ac.js.map"}