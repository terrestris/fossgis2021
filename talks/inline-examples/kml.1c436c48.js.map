{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-b8f37ebddcf2871be1a5dbc86e6dcb1a.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Feature.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/size.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/color.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/css.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/style/Text.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/xml.js","node_modules/ol/src/format/XMLFeature.js","node_modules/ol/src/format/xsd.js","node_modules/ol/src/format/KML.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/webgl.js","node_modules/ol/src/webgl/Buffer.js","node_modules/ol/src/webgl/ContextEventType.js","node_modules/ol/src/webgl/PostProcessingPass.js","node_modules/ol/src/vec/mat4.js","node_modules/ol/src/webgl/Helper.js","node_modules/ol/src/renderer/webgl/Layer.js","node_modules/ol/src/webgl/RenderTarget.js","node_modules/ol/src/worker/webgl.js","node_modules/ol/src/renderer/webgl/PointsLayer.js","node_modules/ol/src/layer/Heatmap.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","node_modules/@parcel/runtime-js/lib/runtime-9b3c56133049118c4ff94bc66c93a360.js","src/kml.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"5Yomh\\\":\\\"kml.1c436c48.js\\\",\\\"1SqcQ\\\":\\\"2012-02-10.0c749803.kml\\\",\\\"43PvP\\\":\\\"basemap.fe5b33cb.css\\\"}\"));","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\nimport {toString} from '../transform.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nlet createTransformStringCanvas = null;\n\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return toString(transform);\n  } else {\n    if (!createTransformStringCanvas) {\n      createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n    }\n    createTransformStringCanvas.style.transform = toString(transform);\n    return createTransformStringCanvas.style.transform;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (objectStack[\n        objectStack.length - 1\n      ]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.XML;\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeatureFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, opt_options) {\n    const features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, opt_options) {\n    const node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    const node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, opt_options) {\n    const node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, opt_options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend, includes} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} yunits Units of Y.\n * @property {import(\"../style/IconOrigin.js\").default} origin Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [opt_options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    let imageSize = imageStyle.getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = (imageScale[0] * imageSize[0]) / 2;\n      textOffset[1] = (-imageScale[1] * imageSize[1]) / 2;\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return (\n                  type === GeometryType.POINT ||\n                  type === GeometryType.MULTI_POINT\n                );\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            drawName =\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && name.search(/&[^&]+;/) > -1) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(flatCoordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    ('fillStyle' in styleObject\n      ? styleObject['fillStyle']\n      : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    ('textStyle' in styleObject\n      ? styleObject['textStyle']\n      : DEFAULT_TEXT_STYLE);\n  const strokeStyle =\n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n      ? styleObject['strokeStyle']\n      : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type !== GeometryType.POLYGON &&\n                    type !== GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type !== GeometryType.POLYGON &&\n            type !== GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POLYGON ||\n                    type === GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type === GeometryType.POLYGON ||\n            type === GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: IconAnchorUnits.PIXELS,\n          y: size[1] - anchor[1],\n          yunits: IconAnchorUnits.PIXELS,\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === GeometryType.GEOMETRY_COLLECTION) {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === GeometryType.MULTI_POINT) {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === GeometryType.MULTI_LINE_STRING) {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === GeometryType.MULTI_POLYGON) {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === GeometryType.POINT ||\n          type === GeometryType.LINE_STRING ||\n          type === GeometryType.POLYGON\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POINT) {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_LINE_STRING) {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POLYGON) {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === GeometryType.GEOMETRY_COLLECTION) {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POINT ||\n                    type === GeometryType.MULTI_POINT\n                  );\n                }).length;\n            }\n            return (\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT\n            );\n          }\n        });\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.LINE_STRING ||\n                      type === GeometryType.MULTI_LINE_STRING\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.LINE_STRING ||\n                type === GeometryType.MULTI_LINE_STRING\n              );\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.POLYGON ||\n                      type === GeometryType.MULTI_POLYGON\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.POLYGON ||\n                type === GeometryType.MULTI_POLYGON\n              );\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} [opt_direction] If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(\n            tileCoordKey\n          ));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(\n          projection\n        );\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const img = document.createElement('canvas');\n        img.width = imgSize[0];\n        img.height = imgSize[1];\n        const imgContext = img.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/webgl\n */\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [opt_attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER} from '../webgl.js';\nimport {DYNAMIC_DRAW, STATIC_DRAW, STREAM_DRAW} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [opt_usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, opt_usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {Array<number>} array Numerical array\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord);\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach(\n        function (name) {\n          this.uniforms_.push({\n            value: options.uniforms[name],\n            location: gl.getUniformLocation(this.renderTargetProgram_, name),\n          });\n        }.bind(this)\n      );\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @api\n   */\n  apply(frameState, nextPass) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    // render the frame buffer to the canvas\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    this.applyUniforms(frameState);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n  getSupportedExtensions,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\nimport {includes} from '../array.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray_} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n    const options = opt_options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ = this.handleWebGLContextRestored.bind(\n      this\n    );\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = document.createElement('canvas');\n    this.canvas_.style.position = 'absolute';\n    this.canvas_.style.left = '0';\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n    const gl = this.getGL();\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    assert(includes(getSupportedExtensions(), 'OES_element_index_uint'), 63);\n    gl.getExtension('OES_element_index_uint');\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n    this.uniformLocations_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.attribLocations_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      for (const name in options.uniforms) {\n        this.uniforms_.push({\n          name: name,\n          value: options.uniforms[name],\n        });\n      }\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(function (options) {\n          return new WebGLPostProcessingPass({\n            webGlContext: gl,\n            scaleRatio: options.scaleRatio,\n            vertexShader: options.vertexShader,\n            fragmentShader: options.fragmentShader,\n            uniforms: options.uniforms,\n          });\n        })\n      : [new WebGLPostProcessingPass({webGlContext: gl})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  bindBuffer(buffer) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  flushBufferData(buffer) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  prepareDraw(frameState) {\n    const gl = this.getGL();\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n\n    gl.useProgram(this.currentProgram_);\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, opt_disableAlphaBlend) {\n    const gl = this.getGL();\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(\n      gl.ONE,\n      opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA\n    );\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   * @api\n   */\n  drawElements(start, end) {\n    const gl = this.getGL();\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  finalizeDraw(frameState) {\n    // apply post processes using the next one as target\n    for (let i = 0; i < this.postProcessPasses_.length; i++) {\n      this.postProcessPasses_[i].apply(\n        frameState,\n        this.postProcessPasses_[i + 1] || null\n      );\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   * @api\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach(\n      function (uniform) {\n        value =\n          typeof uniform.value === 'function'\n            ? uniform.value(frameState)\n            : uniform.value;\n\n        // apply value based on type\n        if (\n          value instanceof HTMLCanvasElement ||\n          value instanceof HTMLImageElement ||\n          value instanceof ImageData\n        ) {\n          // create a texture & put data\n          if (!uniform.texture) {\n            uniform.prevValue = undefined;\n            uniform.texture = gl.createTexture();\n          }\n          gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n          gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n          const imageReady =\n            !(value instanceof HTMLImageElement) ||\n            /** @type {HTMLImageElement} */ (value).complete;\n          if (imageReady && uniform.prevValue !== value) {\n            uniform.prevValue = value;\n            gl.texImage2D(\n              gl.TEXTURE_2D,\n              0,\n              gl.RGBA,\n              gl.RGBA,\n              gl.UNSIGNED_BYTE,\n              value\n            );\n          }\n\n          // fill texture slots by increasing index\n          gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n        } else if (Array.isArray(value) && value.length === 6) {\n          this.setUniformMatrixValue(\n            uniform.name,\n            fromTransform(this.tmpMat4_, value)\n          );\n        } else if (Array.isArray(value) && value.length <= 4) {\n          switch (value.length) {\n            case 2:\n              gl.uniform2f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1]\n              );\n              return;\n            case 3:\n              gl.uniform3f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2]\n              );\n              return;\n            case 4:\n              gl.uniform4f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2],\n                value[3]\n              );\n              return;\n            default:\n              return;\n          }\n        } else if (typeof value === 'number') {\n          gl.uniform1f(this.getUniformLocation(uniform.name), value);\n        }\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  useProgram(program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      const gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      this.uniformLocations_ = {};\n      this.attribLocations_ = {};\n      return true;\n    }\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.getGL();\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   * @api\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.getGL();\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compliation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   * @api\n   */\n  getUniformLocation(name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.uniformLocations_[name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   * @api\n   */\n  getAttributeLocation(name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.attribLocations_[name];\n  }\n\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   * @api\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n\n    resetTransform(transform);\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   * @api\n   */\n  setUniformFloatValue(uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   * @api\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.getGL().uniformMatrix4fv(\n      this.getUniformLocation(uniform),\n      false,\n      value\n    );\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(\n      location,\n      size,\n      type,\n      false,\n      stride,\n      offset\n    );\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   * @api\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   * @api\n   */\n  createTexture(size, opt_data, opt_texture) {\n    const gl = this.getGL();\n    const texture = opt_texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (opt_data) {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        format,\n        type,\n        opt_data\n      );\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_BUFFERS: 'GENERATE_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Render instructions raw binary buffer.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {number} [customAttributesCount] Amount of custom attributes count in the render instructions.\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(layer, opt_options) {\n    super(layer);\n\n    const options = opt_options || {};\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper = new WebGLHelper({\n      postProcesses: options.postProcesses,\n      uniforms: options.uniforms,\n    });\n\n    if (options.className !== undefined) {\n      this.helper.getCanvas().className = options.className;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.helper.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      // RenderEvent does not get a context or an inversePixelTransform, because WebGL allows much less direct editing than Canvas2d does.\n      const event = new RenderEvent(type, null, frameState, null);\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, frameState);\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, frameState);\n  }\n}\n\nconst tmpArray_ = [];\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesCount,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesCount;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [opt_array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, opt_array) {\n  const array = opt_array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [opt_size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, opt_size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = opt_size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","\n        const source = \"var e=\\\"function\\\"==typeof Object.assign?Object.assign:function(e,n){if(null==e)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var t=Object(e),r=1,o=arguments.length;r<o;++r){var i=arguments[r];if(null!=i)for(var f in i)i.hasOwnProperty(f)&&(t[f]=i[f])}return t},n=\\\"GENERATE_BUFFERS\\\",t=[],r={vertexPosition:0,indexPosition:0};function o(e,n,t,r,o){e[n+0]=t,e[n+1]=r,e[n+2]=o}function i(e,n,i,f,s,u){var a=3+s,l=e[n+0],v=e[n+1],c=t;c.length=s;for(var g=0;g<c.length;g++)c[g]=e[n+2+g];var b=u?u.vertexPosition:0,h=u?u.indexPosition:0,d=b/a;return o(i,b,l,v,0),c.length&&i.set(c,b+3),o(i,b+=a,l,v,1),c.length&&i.set(c,b+3),o(i,b+=a,l,v,2),c.length&&i.set(c,b+3),o(i,b+=a,l,v,3),c.length&&i.set(c,b+3),b+=a,f[h++]=d,f[h++]=d+1,f[h++]=d+3,f[h++]=d+1,f[h++]=d+2,f[h++]=d+3,r.vertexPosition=b,r.indexPosition=h,r}var f=self;f.onmessage=function(t){var r=t.data;if(r.type===n){for(var o=r.customAttributesCount,s=2+o,u=new Float32Array(r.renderInstructions),a=u.length/s,l=4*a*(o+3),v=new Uint32Array(6*a),c=new Float32Array(l),g=null,b=0;b<u.length;b+=s)g=i(u,b,c,v,o,g);var h=e({vertexBuffer:c.buffer,indexBuffer:v.buffer,renderInstructions:u.buffer},r);f.postMessage(h,[c.buffer,v.buffer,u.buffer])}};\";\n        const blob = new Blob([source], {type: 'application/javascript'});\n        const url = URL.createObjectURL(blob);\n        export function create() {\n          return new Worker(url);\n        }\n      \n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer, {\n  WebGLWorkerMessageType,\n  colorDecodeId,\n  colorEncodeId,\n} from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      className: options.className,\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    this.program_ = this.helper.getProgram(\n      options.fragmentShader,\n      options.vertexShader\n    );\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ =\n      options.hitFragmentShader && options.hitVertexShader ? true : false;\n\n    this.hitProgram_ =\n      this.hitDetectionEnabled_ &&\n      this.helper.getProgram(\n        options.hitFragmentShader,\n        options.hitVertexShader\n      );\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    /**\n     * A list of attributes used for hit detection.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.hitDetectionAttributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * These instructions are used for hit detection\n     * @type {Float32Array}\n     * @private\n     */\n    this.hitRenderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_ =\n      this.hitDetectionEnabled_ && new WebGLRenderTarget(this.helper);\n\n    this.worker_ = createWebGLWorker();\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       * @this {WebGLPointsLayerRenderer}\n       */\n      function (event) {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          if (received.hitDetection) {\n            this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.hitVerticesBuffer_);\n          } else {\n            this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.verticesBuffer_);\n          }\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          if (received.hitDetection) {\n            this.hitRenderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          } else {\n            this.renderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          }\n\n          this.getLayer().changed();\n        }\n      }.bind(this)\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature(\n      function (feature) {\n        this.featureCache_[getUid(feature)] = {\n          feature: feature,\n          properties: feature.getProperties(),\n          geometry: feature.getGeometry(),\n        };\n        this.featureCount_++;\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.preRender(frameState);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n    this.helper.finalizeDraw(frameState);\n    const canvas = this.helper.getCanvas();\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = String(opacity);\n    }\n\n    if (this.hitDetectionEnabled_) {\n      this.renderHitDetection(frameState);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    // apply the current projection transform with the invert of the one used to fill buffers\n    this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n    multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n\n    this.helper.useProgram(this.program_);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    // here we anticipate the amount of render instructions that we well generate\n    // this can be done since we know that for normal render we only have x, y as base instructions,\n    // and x, y, r, g, b, a and featureUid for hit render instructions\n    // and we also know the amount of custom attributes to append to these\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalInstructionsCount\n    ) {\n      this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n    }\n    if (this.hitDetectionEnabled_) {\n      const totalHitInstructionsCount =\n        (7 + this.customAttributes.length) * this.featureCount_;\n      if (\n        !this.hitRenderInstructions_ ||\n        this.hitRenderInstructions_.length !== totalHitInstructionsCount\n      ) {\n        this.hitRenderInstructions_ = new Float32Array(\n          totalHitInstructionsCount\n        );\n      }\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let renderIndex = 0;\n    let hitIndex = 0;\n    let hitColor;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (featureCache.geometry);\n      if (!geometry || geometry.getType() !== GeometryType.POINT) {\n        continue;\n      }\n\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n\n      this.renderInstructions_[renderIndex++] = tmpCoords[0];\n      this.renderInstructions_[renderIndex++] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n        this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      let value;\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[renderIndex++] = value;\n        if (this.hitDetectionEnabled_) {\n          this.hitRenderInstructions_[hitIndex++] = value;\n        }\n      }\n    }\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesCount: this.customAttributes.length,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    if (this.hitDetectionEnabled_) {\n      const hitMessage = {\n        type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n        renderInstructions: this.hitRenderInstructions_.buffer,\n        customAttributesCount: 5 + this.customAttributes.length,\n      };\n      hitMessage['projectionTransform'] = projectionTransform;\n      hitMessage['hitDetection'] = true;\n      this.worker_.postMessage(hitMessage, [\n        this.hitRenderInstructions_.buffer,\n      ]);\n      this.hitRenderInstructions_ = null;\n    }\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.hitRenderInstructions_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.hitRenderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the hit detection data to the corresponding render target\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState current frame state\n   */\n  renderHitDetection(frameState) {\n    // skip render entirely if vertex buffers not ready/generated yet\n    if (!this.hitVerticesBuffer_.getSize()) {\n      return;\n    }\n\n    this.hitRenderTarget_.setSize([\n      Math.floor(frameState.size[0] / 2),\n      Math.floor(frameState.size[1] / 2),\n    ]);\n\n    this.helper.useProgram(this.hitProgram_);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.hitRenderTarget_,\n      true\n    );\n\n    this.helper.bindBuffer(this.hitVerticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.hitDetectionAttributes);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","/**\n * @module ol/layer/Heatmap\n */\nimport VectorLayer from './Vector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getChangeEventType} from '../Object.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Heatmap extends VectorLayer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addEventListener(\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_\n    );\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {WebGLPointsLayerRenderer} A layer renderer.\n   */\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: function (feature) {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          }.bind(this),\n        },\n      ],\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }`,\n      hitVertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      hitFragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }`,\n      uniforms: {\n        u_size: function () {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        }.bind(this),\n        u_blurSlope: function () {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        }.bind(this),\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: function () {\n              return this.gradient_;\n            }.bind(this),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {createTransformString} from '../../render/canvas.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"5Yomh\", \"1SqcQ\")","import 'ol/ol.css';\nimport KML from 'ol/format/KML';\nimport Map from 'ol/Map';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport XYZ from 'ol/source/XYZ';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\nimport kml from 'url:./data/2012-02-10.kml';\n\nvar key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\nvar attributions =\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\n\nvar raster = new TileLayer({\n  source: new XYZ({\n    attributions: attributions,\n    url: 'https://api.maptiler.com/tiles/satellite/{z}/{x}/{y}.jpg?key=' + key,\n    maxZoom: 20,\n  }),\n});\n\nvar vector = new VectorLayer({\n  source: new VectorSource({\n    url: kml,\n    format: new KML(),\n  }),\n});\n\nvar map = new Map({\n  layers: [raster, vector],\n  target: document.getElementById('map'),\n  view: new View({\n    center: [838407.352187509, 5857024.132774355],\n    projection: 'EPSG:3857',\n    zoom: 14,\n  }),\n});\n\nvar displayFeatureInfo = function (pixel) {\n  var features = [];\n  map.forEachFeatureAtPixel(pixel, function (feature) {\n    features.push(feature);\n  });\n  if (features.length > 0) {\n    var info = [];\n    var i, ii;\n    for (i = 0, ii = features.length; i < ii; ++i) {\n      if (features[i].get('name')) {\n        info.push(features[i].get('name'));\n      }\n    }\n    document.getElementById('info').innerHTML = info.join(', ') || '(unknown)';\n    map.getTarget().style.cursor = 'pointer';\n  } else {\n    document.getElementById('info').innerHTML = '';\n    map.getTarget().style.cursor = '';\n  }\n};\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  var pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"names":["$7d806a7a603c235ec027b73d847f4d95$var$mapping","$7d806a7a603c235ec027b73d847f4d95$export$357eb1b4f03c1402","pairs","keys","Object","i","length","$7d806a7a603c235ec027b73d847f4d95$export$40339995e8a21591","id","resolved","Error","parcelRequire","register","JSON","parse","$003acff01e79c0a73122c747343d2e59$export$9099ad97b570f7c","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$bfcfd5d9960b75cc9cb78b58301ad8a4$export$9099ad97b570f7c","$f7bbc97715b7cef936b659025f276afb$export$9099ad97b570f7c","Disposable","disposed","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$8eda8fbd1364c8a1","a","b","$7c21d7646a0313abf7b847efa68bfceb$export$627ad4a8fadf1912","arr","obj","indexOf","$7c21d7646a0313abf7b847efa68bfceb$export$45934da9231b7323","direction","n","$7c21d7646a0313abf7b847efa68bfceb$export$1f4f991ce94838ce","begin","end","tmp","$7c21d7646a0313abf7b847efa68bfceb$export$46e35401bc090c62","data","extension","Array","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$bcc761834e33d339","arr1","arr2","len1","$8ff7925ef9afa7e69604ab9620edac22$export$ad8dd69aa6772cd0","$8ff7925ef9afa7e69604ab9620edac22$export$5c50afa32081505e","$8ff7925ef9afa7e69604ab9620edac22$export$3850addf0fb4e6a7","$e1ac967f910869e98e549bfd20a1853c$export$f3c88f5a058bec38","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$e1ac967f910869e98e549bfd20a1853c$export$97fff7491bd246bd","object","property","$e1ac967f910869e98e549bfd20a1853c$export$207c30846165e93a","values","push","$e1ac967f910869e98e549bfd20a1853c$export$988399e568471db1","$99fe3f3343ef18166bd431edc467d890$export$9099ad97b570f7c","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$99fe3f3343ef18166bd431edc467d890$var$__extends","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","index","splice","$c81aa09fb137106970dbc142b1e89ec3$export$9099ad97b570f7c","$7961378a294a4943979a10a4df4a3fcf$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$d2df825b2d8bc2ba","$7961378a294a4943979a10a4df4a3fcf$export$6dee5fd4fdf600ff","$02e80757fefec0a9636ae28d17c9fab2$export$21f63b82add5980c","$02e80757fefec0a9636ae28d17c9fab2$export$9099ad97b570f7c","Observable","revision_","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","changed","getRevision","on","len","once","ol_key","un","$99fe3f3343ef18166bd431edc467d890$exports","default","$cd365e7aabd14aaf6df378f6a61e84d7$export$18e1b4ff5b3c2297","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$604e9536b9e0488a","ol_uid","String","$cd365e7aabd14aaf6df378f6a61e84d7$export$f2eb173e8f6e4130","$a41f90da440d5a4a421775ee47a2c536$export$b902cfd711fa7f06","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$var$BaseObject","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$b958104f5d8e9527","set","opt_silent","applyProperties","unset","$02e80757fefec0a9636ae28d17c9fab2$exports","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$a41f90da440d5a4a421775ee47a2c536$export$9099ad97b570f7c","$fd652548d0f540d94aaff6aa830746d2$export$9099ad97b570f7c","AssertionError","code","message","split","name","$fd652548d0f540d94aaff6aa830746d2$var$__extends","$2ce41f61858dd350a0b2670bdab4e597$export$b8795f4f643ce74f","assertion","errorCode","$fd652548d0f540d94aaff6aa830746d2$exports","$fe05caf5f991aea82bd67c9bebabc467$export$7cf753b6a6534915","styles_1","getZIndex","$fe05caf5f991aea82bd67c9bebabc467$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","$a41f90da440d5a4a421775ee47a2c536$exports","getChangeEventType","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$fe05caf5f991aea82bd67c9bebabc467$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","$e1f9f7b0a69ff9a9f4c2bbbdfef410b1$export$9099ad97b570f7c","Fill","opt_options","options","color_","color","getColor","slice","setColor","$df0b68b08946bf3d8de6eeca4fba3a5f$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$df0b68b08946bf3d8de6eeca4fba3a5f$export$af68584dedf5e52c","Math","PI","$df0b68b08946bf3d8de6eeca4fba3a5f$export$9099ad97b570f7c","$af95442a94d1862a138c401177ef0c4b$var$tmp_","$af95442a94d1862a138c401177ef0c4b$export$6cfa4eec14fd8155","transform","$af95442a94d1862a138c401177ef0c4b$export$77f8d2fc923b14e3","$af95442a94d1862a138c401177ef0c4b$export$4739cf887d3ac19b","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","f","$af95442a94d1862a138c401177ef0c4b$export$6af9bbf310c9e4bf","coordinate","x","y","$af95442a94d1862a138c401177ef0c4b$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$af95442a94d1862a138c401177ef0c4b$export$6e6aac0f60e83c70","mat","det","$af95442a94d1862a138c401177ef0c4b$export$47bee913e0e80eb4","join","$8fe041eefe2f7aaeb97e4d98623d5d5e$export$9099ad97b570f7c","$8913dbc1b585601bf0ecb482246c0b4c$export$9099ad97b570f7c","$8ebfb36ef5532881c5652b708da2c120$export$a7ecbd362d65c1fe","coordinates","extent","$8ebfb36ef5532881c5652b708da2c120$export$dbb3d72606cdc11","$8ebfb36ef5532881c5652b708da2c120$export$2852acc8f8b94686","$8ebfb36ef5532881c5652b708da2c120$export$14e1765886db335a","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$d6a0542127b96c83","$8ebfb36ef5532881c5652b708da2c120$export$c7d6a927f416dd39","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$c422a9fcb5f1ee5c","$8ebfb36ef5532881c5652b708da2c120$export$cc70e7e516e4370f","$8ebfb36ef5532881c5652b708da2c120$export$4f55e2d709659e7b","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$ea8082d0226d35a5","$8ebfb36ef5532881c5652b708da2c120$export$80741250c74fd4fa","$8ebfb36ef5532881c5652b708da2c120$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$8ebfb36ef5532881c5652b708da2c120$export$4b116deb3079b147","$8ebfb36ef5532881c5652b708da2c120$export$bcc761834e33d339","$8ebfb36ef5532881c5652b708da2c120$export$46e35401bc090c62","$8ebfb36ef5532881c5652b708da2c120$export$bfc2e43ae5c3c00c","$8ebfb36ef5532881c5652b708da2c120$export$8696fee511ea7c7a","min","max","$8ebfb36ef5532881c5652b708da2c120$export$c26f7b9c5adc34b4","callback","val","$8ebfb36ef5532881c5652b708da2c120$export$3932426cd8118930","$8ebfb36ef5532881c5652b708da2c120$export$4e2fc25ce97f3583","$8ebfb36ef5532881c5652b708da2c120$export$35aedeaeee8be6cd","$8ebfb36ef5532881c5652b708da2c120$export$5100f0815ea32995","$8ebfb36ef5532881c5652b708da2c120$export$ab4e37d31d15614d","area","$8ebfb36ef5532881c5652b708da2c120$export$988399e568471db1","$8ebfb36ef5532881c5652b708da2c120$export$3dc3550566517965","$8ebfb36ef5532881c5652b708da2c120$export$e178c8044d3d0a05","$8ebfb36ef5532881c5652b708da2c120$export$339e303bf205caae","$8ebfb36ef5532881c5652b708da2c120$export$38622892ed79bdc7","corner","$8ebfb36ef5532881c5652b708da2c120$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$c491031eb9adcc3a","intersection","$8ebfb36ef5532881c5652b708da2c120$export$c3bd2c3b798b0350","$8ebfb36ef5532881c5652b708da2c120$export$76e02248c0889c3e","transformFn","opt_stops","width","height","xs","ys","l","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$1514cc7c23ad291d61b727f0ef5e4246$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$916dab65013919ad0345478f9a9f4e0f$export$4b8705656de00c72","$916dab65013919ad0345478f9a9f4e0f$export$4a376e0f60d976ee","cosh","exp","$916dab65013919ad0345478f9a9f4e0f$export$e08236045caaa3e1","log2","log","LOG2E","$916dab65013919ad0345478f9a9f4e0f$export$fd0b1e5ac4df516c","t","$916dab65013919ad0345478f9a9f4e0f$export$8b6706701cd75ea9","$916dab65013919ad0345478f9a9f4e0f$export$11468133b1231643","angleInRadians","$916dab65013919ad0345478f9a9f4e0f$export$4fc80c88d72f096","angleInDegrees","$916dab65013919ad0345478f9a9f4e0f$export$3334706ffb3dccb1","r","$916dab65013919ad0345478f9a9f4e0f$export$45ca8e7f50ccf2e0","$7d5079714e2786ec6bee07910f0d8a86$export$8c5f77743cd0e8b7","$7d5079714e2786ec6bee07910f0d8a86$export$bb1f4f75177e5528","$7d5079714e2786ec6bee07910f0d8a86$export$6fd015d56b8406c9","$7d5079714e2786ec6bee07910f0d8a86$export$64afaa717a0c4932","$7d5079714e2786ec6bee07910f0d8a86$export$2126dea64bc40b7b","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$850c9b527a5298aa","$7d5079714e2786ec6bee07910f0d8a86$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$f361696640082386","atan","$655738a66489cc3574c072262645bff6$export$6fd015d56b8406c9","$655738a66489cc3574c072262645bff6$export$af68584dedf5e52c","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$850c9b527a5298aa","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$568ed88074851180","destination","sourceCode","destinationCode","$29d4509fdec4b1b2fe8c71c42629ef39$export$9099ad97b570f7c","$525020a649871896a05d6fe288616b91$export$761de677acb0d085","$525020a649871896a05d6fe288616b91$export$aec7b6756585c081","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$525020a649871896a05d6fe288616b91$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$29884e9b826cd25109649ab0c360e769$export$bcc761834e33d339","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$d40e2456b1281660","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$5a0d9577a24f3c5b","projection","worldWidth","worldsAway","$29884e9b826cd25109649ab0c360e769$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$524e9c84a4c58bd58490804da4c772c6$export$3fbbaef54e2e9d28","$524e9c84a4c58bd58490804da4c772c6$export$678028d364072132","$524e9c84a4c58bd58490804da4c772c6$export$6308908a0016f099","$0ba2913765cbb83278246e730dbcdcdf$export$568ed88074851180","$524e9c84a4c58bd58490804da4c772c6$export$7eb84799c931fe91","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$524e9c84a4c58bd58490804da4c772c6$export$747af4f49bde2f53","vertices","$524e9c84a4c58bd58490804da4c772c6$export$a42db349809b0c24","projections","forEach","$524e9c84a4c58bd58490804da4c772c6$export$fd4cd3535c7ea97f","$524e9c84a4c58bd58490804da4c772c6$export$f704437a72056fb8","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$6cb154572a1cc3d19ea74b1e9a3a7861$export$7eb84799c931fe91","$524e9c84a4c58bd58490804da4c772c6$export$9336879ef6599bf5","$524e9c84a4c58bd58490804da4c772c6$export$4b169b49e1a4823b","$524e9c84a4c58bd58490804da4c772c6$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$352fd07bdd93dc1e","$524e9c84a4c58bd58490804da4c772c6$export$4a182a4d53d7595c","$524e9c84a4c58bd58490804da4c772c6$export$b5d00774755783fc","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$a7d473ff80a6a3b","$524e9c84a4c58bd58490804da4c772c6$export$f87215506b474b9e","$3f4f29b0a4be88d8241f933ff6121a33$export$92106241c01aa541","opt_dest","dest","j","$3f4f29b0a4be88d8241f933ff6121a33$export$d40e2456b1281660","anchor","anchorX","anchorY","deltaX","deltaY","k","$7d5079714e2786ec6bee07910f0d8a86$exports","PROJECTIONS","$655738a66489cc3574c072262645bff6$exports","fromEPSG4326","toEPSG4326","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$a17c336463d573a615343832f6e09aa8$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$8ebfb36ef5532881c5652b708da2c120$export$d1e01ccfd06bf8ee","rotate","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$8af1af76f23419d9d724a1b0182ffb00$var$cloneGeometries","geometries","clonedGeometries","$8af1af76f23419d9d724a1b0182ffb00$export$9099ad97b570f7c","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$8af1af76f23419d9d724a1b0182ffb00$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","isEmpty","$a17c336463d573a615343832f6e09aa8$exports","$01b4ee2590431d23f431f1e9785f436f$export$9099ad97b570f7c","$250247a34cdb6d9c26d2c6d3640e511f$export$9099ad97b570f7c","$c921d54e03c98d7c23acffcfb75264d3$export$9099ad97b570f7c","$ddbf871807cbdb80f3672c8008047cee$export$9099ad97b570f7c","$8556eff40cf4f1624cd78ff7ea054c5b$export$c563c2b7121f8771","$8556eff40cf4f1624cd78ff7ea054c5b$export$48d31d2725e4d98b","opt_size","$96f7f946d494434256fc7391bfca3d81$export$9099ad97b570f7c","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","getSize","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","load","unlistenImageChange","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$9fe004474d6f7f65","$ddc7f5de3664aab559d1c545c366e59d$export$47bee913e0e80eb4","$ddc7f5de3664aab559d1c545c366e59d$var$fromNamed","el","document","createElement","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$21528ce64591bf2","s","g","exec","hasAlpha","parseInt","substr","$ddc7f5de3664aab559d1c545c366e59d$export$2e33abec8aecd572","map","Number","$ddc7f5de3664aab559d1c545c366e59d$var$fromStringInternal_","$ddc7f5de3664aab559d1c545c366e59d$export$7266a24c0caa2a8","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$543c908bf17a24fb","$2016f251f21b02e27a5ca36c37510540$export$bccc8605349feea7","$2016f251f21b02e27a5ca36c37510540$export$f16ffc71033a7aaa","$2016f251f21b02e27a5ca36c37510540$export$1940d5d2b4cf824d","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$9544418e5c6fedfe","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$700ce540937d8c69","passive","defineProperty","window","error","$8b566ca8fd3b2d9c184057ba73cbf345$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$47503d53c08beb29","node","$80553d92e1fbcb82d752b6de833f9cf3$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","setSize","maxCacheSize","$80553d92e1fbcb82d752b6de833f9cf3$export$601b9e2be44c7cb2","$e65a38a3837120ad833711b5930f5912$export$9099ad97b570f7c","ImageBase","state","pixelRatio_","$e65a38a3837120ad833711b5930f5912$var$__extends","getResolution","getState","$2fc4e1887f4ffa14e16ea647fd21482c$export$469eb8ba3f45955e","image","loadHandler","errorHandler","img","promise","listening_1","then","catch","listenerKeys","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$e65a38a3837120ad833711b5930f5912$exports","$92a5ba3fab046f40ee35c464c4cf79b4$var$taintedTestContext","$92a5ba3fab046f40ee35c464c4cf79b4$var$IconImage","IconImage","imageState","hitDetectionImage_","canvas_","imageState_","size_","tainted_","$92a5ba3fab046f40ee35c464c4cf79b4$var$__extends","isTainted_","drawImage","getImageData","dispatchChangeEvent_","replaceColor_","context","fillRect","getSrc","$2fc4e1887f4ffa14e16ea647fd21482c$exports","listenImage","ceil","ctx","globalCompositeOperation","fillStyle","imgData","putImageData","$92a5ba3fab046f40ee35c464c4cf79b4$export$7eb84799c931fe91","$4de6336f82b6fd9bc7cf688bb41b8b96$export$9099ad97b570f7c","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$92a5ba3fab046f40ee35c464c4cf79b4$exports","offset_","offsetOrigin_","offsetOrigin","origin_","$4de6336f82b6fd9bc7cf688bb41b8b96$var$__extends","setAnchor","iconImageSize","$57ce72c0539154dec2abdc81ffcff6df$export$2a65008b73824080","layout","$57ce72c0539154dec2abdc81ffcff6df$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$57ce72c0539154dec2abdc81ffcff6df$export$9099ad97b570f7c","SimpleGeometry","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","$3f4f29b0a4be88d8241f933ff6121a33$export$8f869025bba9609b","$3f4f29b0a4be88d8241f933ff6121a33$export$41b0d7466cde8385","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$acf7548d1f0e8581","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$ba38095f6bb45df2","ends","$020a0553c73896bfe8e0cfb3e7ff136b$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$020a0553c73896bfe8e0cfb3e7ff136b$export$3dd3914e22f9012e","$e477329667689b6619ea04e4a51dbccc$export$e175f505890ac90f","$e477329667689b6619ea04e4a51dbccc$export$ab1a51db55485752","coordinatess","opt_ends","jj","$a357f0a07bdcadd773e93ca791a42f7b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$ade7859c9eb393ec","simplifiedEnds","$a357f0a07bdcadd773e93ca791a42f7b$export$383ea8a1f2974dfb","round","$a357f0a07bdcadd773e93ca791a42f7b$export$e29de4fdb2175738","$a357f0a07bdcadd773e93ca791a42f7b$export$1df19a1eb5514c2f","$419a691625de72e89acadcc033e1165f$export$40f3d9558cf6e846","ret","point1","point2","$c39683e7fcea5e9dae135d728d60cf52$export$92f32d891164b0ac","opt_coordinates","$c39683e7fcea5e9dae135d728d60cf52$export$d82a8a3167f968d","opt_coordinatess","$c39683e7fcea5e9dae135d728d60cf52$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$168654b72fccbd53f77518b62ff915e1$export$55be7a9e3fef4787","fraction","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$7c21d7646a0313abf7b847efa68bfceb$export$26b1c556c0e0f127","$168654b72fccbd53f77518b62ff915e1$export$1a804b04fa5a0253","m","extrapolate","lo","hi","m0","$7311a6a51d57e65f0d3a69bd7a380356$export$f7b55b637f92fd7","$7311a6a51d57e65f0d3a69bd7a380356$export$e2ed757909b25f63","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$51e46a3625992b91","$32ab876027ca0904f46063bee68b73aa$export$26f047a5bfac4b1a","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$8ebfb36ef5532881c5652b708da2c120$export$525a75abb91115e3","$32ab876027ca0904f46063bee68b73aa$export$717c2c7c46a5bf3d","$32ab876027ca0904f46063bee68b73aa$export$f14bd9270666b480","$c028848ec55b72b61f5eaf0ec6396be2$export$7326ac1b36a49776","$f3208b74dbadea817236410092d4ed69$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","$f3208b74dbadea817236410092d4ed69$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","$57ce72c0539154dec2abdc81ffcff6df$exports","$9cc45ed4bf6c6f99d7b74c7015645e2b$export$9099ad97b570f7c","MultiLineString","ends_","lineStrings","$9cc45ed4bf6c6f99d7b74c7015645e2b$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$168654b72fccbd53f77518b62ff915e1$export$8958f67b085a89b1","getEnds","getLineString","$f3208b74dbadea817236410092d4ed69$exports","getLineStrings","getFlatMidpoints","midpoints","$32ab876027ca0904f46063bee68b73aa$export$414b603e1c51ecd4","$acd1b863667085614d305475fd6c1d27$export$9099ad97b570f7c","Point","$acd1b863667085614d305475fd6c1d27$var$__extends","$e477329667689b6619ea04e4a51dbccc$export$a53e62528b652807","$0c87ec0f12a2b62262bf5859757b8a2b$export$9099ad97b570f7c","MultiPoint","$0c87ec0f12a2b62262bf5859757b8a2b$var$__extends","appendPoint","multiPoint","getPoint","$acd1b863667085614d305475fd6c1d27$exports","getPoints","points","$7641779008ab07f3e708dabdbbb046eb$export$9bf2059fd656d5e9","twiceArea","$7641779008ab07f3e708dabdbbb046eb$export$99cb92d00fd73c87","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$9099ad97b570f7c","LinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","getArea","$67787df47ebd352536b767ba5aa6ea83$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","$221ffa684d4ba252080508824e602b78$export$c77fe031a1447f2e","$52f5ef13e882c7db8132623a2b51ee49$export$add61ad31d0a68b4","edge","$52f5ef13e882c7db8132623a2b51ee49$export$586adaf930d9fdb6","opt_right","right","isClockwise","$52f5ef13e882c7db8132623a2b51ee49$export$325e57738fd8b321","$52f5ef13e882c7db8132623a2b51ee49$export$4efd43868de93336","$bffbcd35af658c4477627697774de1c2$var$Polygon","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$bffbcd35af658c4477627697774de1c2$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$exports","getLinearRings","linearRings","$bffbcd35af658c4477627697774de1c2$export$9099ad97b570f7c","$bffbcd35af658c4477627697774de1c2$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$bffbcd35af658c4477627697774de1c2$export$b50d271c6e9656cd","$bffbcd35af658c4477627697774de1c2$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$bffbcd35af658c4477627697774de1c2$export$5d1798f0e1df079","getRadius","startAngle","$3f89ce735a32ce0bc16220a89ae67b2f$export$9099ad97b570f7c","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$3f89ce735a32ce0bc16220a89ae67b2f$var$__extends","appendPolygon","newEndss","multiPolygon","$020a0553c73896bfe8e0cfb3e7ff136b$export$7bbfd5f5d0d7544b","$020a0553c73896bfe8e0cfb3e7ff136b$export$6564f135364e210c","$7311a6a51d57e65f0d3a69bd7a380356$export$664b9cb38de51b70","$7641779008ab07f3e708dabdbbb046eb$export$3ed76a8ff8a671c","getEndss","getFlatInteriorPoints","$8080d3a1460a7f67662c4a8e92d86a37$export$3ed76a8ff8a671c","interiorPoints","$67787df47ebd352536b767ba5aa6ea83$export$2bd6b2f516920f59","getInteriorPoints","$0c87ec0f12a2b62262bf5859757b8a2b$exports","$52f5ef13e882c7db8132623a2b51ee49$export$9ae9bd8fe57776c1","simplifiedEndss","$a357f0a07bdcadd773e93ca791a42f7b$export$503109e33f5b8344","getPolygon","prevEnds","$bffbcd35af658c4477627697774de1c2$exports","getPolygons","$32ab876027ca0904f46063bee68b73aa$export$eae4874c99627698","$e477329667689b6619ea04e4a51dbccc$export$abe2fb3e7ce9556","lastEnds","$4c58aec149e538982cbf4e874e866484$export$9099ad97b570f7c","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","getWidth","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$7eb24b24c1bb92b5f48477cc7ed0ef45$export$55029509b82b2e2b","$7ef0aa4943b3f1208e19af1336a3f8f6$export$4b206f1dd0085e9f","$7ef0aa4943b3f1208e19af1336a3f8f6$export$6cfb92f3ca39d412","$7ef0aa4943b3f1208e19af1336a3f8f6$export$a6463a3b3793c500","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$18c07a12203603b5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$55c06ab37ead2f5d","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ffc0c15ee0fd31b3","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6ad0413f8fea3c71","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4f3c27e569bdb39e","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$b679e5c5d4b15cf5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$d721e051424a5865","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6f57224ec3df03c9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$70c5a077e5d6beb9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$907cf5cff4a8acb1","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","measureElement","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$384c0f09c94ed6cc","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$a2bf16790cd8f004","metrics","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4b2ca35321179b27","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$c02f953f8e44cc0a","offsetX","offsetY","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$executeLabelInstructions","restore","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$createTransformStringCanvas","$9395bcf7fa5c622dff9d678b4abf4bba$export$9099ad97b570f7c","RegularShape","hitDetectionCanvas_","fill_","fill","points_","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","imageSize_","hitDetectionImageSize_","render","$9395bcf7fa5c622dff9d678b4abf4bba$var$__extends","getFill","getRadius2","getAngle","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","strokeStyle","strokeWidth","imageSize","angle0","radiusC","beginPath","arc","lineTo","lineWidth","closePath","drawHitDetectionCanvas_","$19d3c8bef588e205c4ab8014047de833$export$9099ad97b570f7c","CircleStyle","$19d3c8bef588e205c4ab8014047de833$var$__extends","setRadius","$9395bcf7fa5c622dff9d678b4abf4bba$exports","$b550892c9c7d6707a4415bf7976deb12$var$Style","Style","geometry_","geometryFunction_","$b550892c9c7d6707a4415bf7976deb12$var$defaultGeometryFunction","renderer_","renderer","text_","zIndex_","zIndex","getRenderer","getText","setRenderer","getGeometryFunction","setFill","setStroke","setText","feature","setZIndex","$b550892c9c7d6707a4415bf7976deb12$var$defaultStyles","$b550892c9c7d6707a4415bf7976deb12$export$33d0043adf82cc14","$19d3c8bef588e205c4ab8014047de833$exports","$b550892c9c7d6707a4415bf7976deb12$export$9099ad97b570f7c","$efe444a788e44e26b0fd0d03352a7cb8$export$9099ad97b570f7c","$a62309e79bc84bd3b6b5fbbfdb8ce983$export$9099ad97b570f7c","Text1","font_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$508255911b6472d9d16e9a97599ab01e$export$9099ad97b570f7c","FeatureFormat","dataProjection","defaultFeatureProjection","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","features","writeGeometry","$508255911b6472d9d16e9a97599ab01e$export$534b7b915a5ec453","write","transformed","decimals","power_1","pow","$e1f6506982452a68a8aaa230bb78068a$export$9099ad97b570f7c","$d51a9db7ffbc5351b0298bfe2864dc58$export$f6c9fc7378d5d6a6","$d51a9db7ffbc5351b0298bfe2864dc58$export$a5039740b67a9c","namespaceURI","qualifiedName","$d51a9db7ffbc5351b0298bfe2864dc58$export$46d2d1e7bcdd99a3","createElementNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$4131dc4da57aa0c8","normalizeWhitespace","$d51a9db7ffbc5351b0298bfe2864dc58$export$970c25ea2962a3d2","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","$d51a9db7ffbc5351b0298bfe2864dc58$export$77e37c6e8311f1ce","$d51a9db7ffbc5351b0298bfe2864dc58$export$a43e9d683f52ab7c","xml","DOMParser","parseFromString","$d51a9db7ffbc5351b0298bfe2864dc58$export$c9b84e3d2c8a2745","valueReader","objectStack","$d51a9db7ffbc5351b0298bfe2864dc58$export$5a6c4415b7f496d8","$d51a9db7ffbc5351b0298bfe2864dc58$export$a228533eec35683a","$d51a9db7ffbc5351b0298bfe2864dc58$export$73d853215f0c71e8","opt_property","localName","$d51a9db7ffbc5351b0298bfe2864dc58$export$2deb56b7ae029e3","nodeWriter","$d51a9db7ffbc5351b0298bfe2864dc58$export$8ebe38e76aa85d36","opt_nodeName","opt_namespaceURI","fixedNodeName","opt_nodeName1","nodeName","$d51a9db7ffbc5351b0298bfe2864dc58$export$81a68ea3ed99d298","$d51a9db7ffbc5351b0298bfe2864dc58$export$56f187f00ba8a12b","orderedKeys","sequence","$d51a9db7ffbc5351b0298bfe2864dc58$export$7567597de432f7e7","namespaceURIs","structure","opt_structureNS","structureNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$d2d9da5f39026f12","parsersNS","firstElementChild","nextElementSibling","parsers","parser","$d51a9db7ffbc5351b0298bfe2864dc58$export$606fcd4c4e16fe20","$d51a9db7ffbc5351b0298bfe2864dc58$export$2e67c97dae900dc9","serializersNS","nodeFactory","opt_keys","$d51a9db7ffbc5351b0298bfe2864dc58$export$cfa8ff2fe3336fdf","$d51a9db7ffbc5351b0298bfe2864dc58$var$xmlSerializer_","$d51a9db7ffbc5351b0298bfe2864dc58$var$document_","implementation","createDocument","$dec84ce654dad439cc55f11914ce0714$export$9099ad97b570f7c","XMLFeature","xmlSerializer_","XMLSerializer","$dec84ce654dad439cc55f11914ce0714$var$__extends","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","$90d80a364a39de433c7f5cd490d4f896$export$2d9b5243090e006a","$90d80a364a39de433c7f5cd490d4f896$export$39fa0db44f151f9d","parseFloat","$90d80a364a39de433c7f5cd490d4f896$export$286b7b22a1a791c7","trim","$90d80a364a39de433c7f5cd490d4f896$export$bbbe78f39d89b09c","bool","$90d80a364a39de433c7f5cd490d4f896$export$8546427d900bb9d0","$90d80a364a39de433c7f5cd490d4f896$export$3ff1a647d173b6de","decimal","string","toPrecision","createTextNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_COLOR","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_SIZE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_SRC","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_SCALE_MULTIPLIER","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_NAMESPACE_URIS","$23a4f6aded846ad8aacbf1f3eca76e14$var$NAMESPACE_URIS","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_ANCHOR_UNITS_MAP","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$extendedDataParser","$23a4f6aded846ad8aacbf1f3eca76e14$var$regionParser","$23a4f6aded846ad8aacbf1f3eca76e14$var$readMultiGeometry","$23a4f6aded846ad8aacbf1f3eca76e14$var$readLineString","$23a4f6aded846ad8aacbf1f3eca76e14$var$readLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$readPoint","$23a4f6aded846ad8aacbf1f3eca76e14$var$readPolygon","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyle","styleMapValue","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyleMapValue","placemarkObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyleURL","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_MULTITRACK_GEOMETRY_PARSERS","$9cc45ed4bf6c6f99d7b74c7015645e2b$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$readGxTrack","$23a4f6aded846ad8aacbf1f3eca76e14$var$NETWORK_LINK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readURI","$23a4f6aded846ad8aacbf1f3eca76e14$var$REGION_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LAT_LON_ALT_BOX_PARSERS","regionObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$LOD_PARSERS","lodObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DOCUMENT_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DOCUMENT_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePlacemark","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_FILL_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$e46f11a75191a508","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_NO_IMAGE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$5e32ef4fe86c9590","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_TEXT_STROKE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STROKE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$886aac8f642d518","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_TEXT_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$4f723e646af0caaf","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$2aa7b16944fbd366","$23a4f6aded846ad8aacbf1f3eca76e14$var$TEXTAREA","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STYLE_ARRAY","$23a4f6aded846ad8aacbf1f3eca76e14$export$e0735583683f1e35","$23a4f6aded846ad8aacbf1f3eca76e14$var$defaultIconUrlFunction","href","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML","KML","$4de6336f82b6fd9bc7cf688bb41b8b96$exports","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction_","iconUrlFunction","$23a4f6aded846ad8aacbf1f3eca76e14$var$__extends","readDocumentOrFolder_","readPlacemark_","readSharedStyle_","readSharedStyleMap_","$fe05caf5f991aea82bd67c9bebabc467$exports","getAttribute","styleFunction","styleUrl","sharedStyles","drawName","multiGeometryPoints","filter","geometry1","type1","search","featureStyle","$23a4f6aded846ad8aacbf1f3eca76e14$var$findStyle","nameStyle","foundStyle","textOffset","imageStyle","imageScale","textStyle","$23a4f6aded846ad8aacbf1f3eca76e14$var$createNameStyleFunction","$8af1af76f23419d9d724a1b0182ffb00$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$createFeatureStyleFunction","styleUri","baseURI","location","URL","fs","readName","readNameFromDocument","readNameFromNode","name_1","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","setAttributeNS","$dec84ce654dad439cc55f11914ce0714$exports","styleValue","$23a4f6aded846ad8aacbf1f3eca76e14$var$readColor","hexColor","$23a4f6aded846ad8aacbf1f3eca76e14$export$1744e74078e3fa10","re","z","$23a4f6aded846ad8aacbf1f3eca76e14$var$readScale","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_MAP_PARSERS","pairObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$PAIR_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_PARSERS","iconObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_PARSERS","origin","xunits","yunits","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$FLAT_LINEAR_RING_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readFlatLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_TRACK_PARSERS","whens","when","Date","gxTrackObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_FLAT_COORDINATES_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readFlatCoordinatesFromNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTRUDE_AND_ALTITUDE_MODE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","$23a4f6aded846ad8aacbf1f3eca76e14$var$setCommonGeometryProperties","$3f89ce735a32ce0bc16220a89ae67b2f$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$FLAT_LINEAR_RINGS_PARSERS","flatLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$INNER_BOUNDARY_IS_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_PARSERS","styleObject","IconObject","drawIcon","hotSpot","test","heading","outline","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","$23a4f6aded846ad8aacbf1f3eca76e14$var$DATA_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDED_DATA_PARSERS","featureObject","displayName","toString","$23a4f6aded846ad8aacbf1f3eca76e14$var$SCHEMA_DATA_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeColorTextNode","rgba","abgr","hex","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDEDDATA_NODE_SERIALIZERS","pair","setAttribute","createCDATASection","$90d80a364a39de433c7f5cd490d4f896$export$53afd9ae5847fbf6","$23a4f6aded846ad8aacbf1f3eca76e14$var$DATA_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_SERIALIZERS","icon","vec2","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeScaleTextNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_TYPE_TO_NODENAME","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$POINT_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STRING_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINEAR_RING_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLYGON_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$MULTI_GEOMETRY_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePrimitiveGeometry","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePolygon","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeMultiGeometry","factory","$23a4f6aded846ad8aacbf1f3eca76e14$var$BOUNDARY_IS_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeBoundaryIs","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_SERIALIZERS","namesAndValues","names","styles","pointStyles","lineStyles","polyStyles","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDEDDATA_NODE_FACTORY","v","styleArray","$23a4f6aded846ad8aacbf1f3eca76e14$var$PRIMITIVE_GEOMETRY_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$PRIMITIVE_GEOMETRY_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLYGON_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$INNER_BOUNDARY_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$OUTER_BOUNDARY_NODE_FACTORY","outerRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_SERIALIZERS","iconProperties","origin_1","$23a4f6aded846ad8aacbf1f3eca76e14$export$9099ad97b570f7c","$6e657bb9f80dab756c945a825e2a2cee$export$9099ad97b570f7c","$3a8294651627eb74246351f5b596cf68$export$9099ad97b570f7c","BaseLayer","visible","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$3a8294651627eb74246351f5b596cf68$var$__extends","getClassName","getLayerState","opt_managed","layer","managed","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","zindex","$939d3f0e5ddda81ef3d6b6e4c37a0795$export$9099ad97b570f7c","$88faaf1879d30d470a1b447dd4b5a77a$export$9099ad97b570f7c","$1935b85c22cfc539ea58e141ab0b37d6$export$16970faadcd3f29b","layerState","viewState","zoom","$1935b85c22cfc539ea58e141ab0b37d6$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","setMap","handleSourcePropertyChange_","setSource","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","array","states","getSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$3a8294651627eb74246351f5b596cf68$exports","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$52488a0195cf0e38344877f5a3896831$export$9099ad97b570f7c","MapRenderer","map_","$52488a0195cf0e38344877f5a3896831$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","$1935b85c22cfc539ea58e141ab0b37d6$exports","inView","getWrapX","callback_1","order","i1","distanceSq","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$2ae21f590be041e7827bf48426c0766a$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$7ef0aa4943b3f1208e19af1336a3f8f6$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","children_","renderedVisible_","$2ae21f590be041e7827bf48426c0766a$var$__extends","event_1","$1a95b8d63eeb9d5cd5e2742791ea7ab2$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$439ebc2b0f0ec9f4","getDataAtPixel","$52488a0195cf0e38344877f5a3896831$exports","$994e322493abe750f187f7e3835dca5c$export$9099ad97b570f7c","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$export$9099ad97b570f7c","Collection","unique_","unique","array_","assertUnique_","updateLength_","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$e6a59fbd122f687b33c2f382a3c7634b$exports","setLayers","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$f8e1a00fe597e09d283a3697649a8ad5$export$9099ad97b570f7c","MapEvent","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","getEventPixel","getCoordinateFromPixel","$f8e1a00fe597e09d283a3697649a8ad5$exports","$7aa259efacd921e7e7d327d1aea40a76$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$abba75ad998e5558d931e97019b1ab4c$export$9099ad97b570f7c","$75ed2fc91ec6cb8478583ef358a9dd4d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","emulateClick_","pointerEvent","newEvent","$5185059e8a82c1ae03c4e1ba7159b318$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$841b38a534c9217d8aceb4320d3d91b5$export$9099ad97b570f7c","$71b981cc74aab5981a718ea8e06b800b$export$9099ad97b570f7c","$eeb9190850355aed8fc5d92349a26bc6$export$55b8074a560bbdf4","$eeb9190850355aed8fc5d92349a26bc6$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$070765ef09fbcd82a0016eb3aec41934$export$9099ad97b570f7c","$6bfe069e85349c527971d875462feeac$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$6bfe069e85349c527971d875462feeac$var$__extends","added","getTilesLoading","tile","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","$6bfe069e85349c527971d875462feeac$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","$69bda6b48e87f8072533951cf5cd4b41$export$9099ad97b570f7c","$6fef8cd20559fa789cc7c5f681ed5561$export$9099ad97b570f7c","$61ba71c2b15c8b7e6577526180db0da5$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$61ba71c2b15c8b7e6577526180db0da5$export$eaafe0fae18e32b1","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$e97ec87d2336bd4e","$4c6a822b604dbfa9a10722399f7335d0$export$eaafe0fae18e32b1","$8717569d70d85bd7f28c8c1b2c37daee$export$9fbc3b1d6b2da9ec","$8717569d70d85bd7f28c8c1b2c37daee$export$673b9849e2bc032c","$8717569d70d85bd7f28c8c1b2c37daee$export$1b5c1277e30d397d","$8717569d70d85bd7f28c8c1b2c37daee$export$5523e35ab8ae283a","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","returnValue","$19fadbefe1b7e34cc76223b5c3e441cc$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$19fadbefe1b7e34cc76223b5c3e441cc$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","$75cf935c4655e9fc21b1ade56ed27175$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$75cf935c4655e9fc21b1ade56ed27175$export$7690ad4e930f454b","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","rotX","rotY","$19fadbefe1b7e34cc76223b5c3e441cc$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","rotationConstraint","constraints_","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","fromExtent","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$b198bbb8a7fca092de94dd3a772c1343$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$d66bdf9af75d90254b022f9a4b768a43$exports","view","$19fadbefe1b7e34cc76223b5c3e441cc$exports","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$6bfe069e85349c527971d875462feeac$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$75ed2fc91ec6cb8478583ef358a9dd4d$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","$8316c877d328ebfc4f4b917229eec057$export$9099ad97b570f7c","Control","target_","$8316c877d328ebfc4f4b917229eec057$var$__extends","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8316c877d328ebfc4f4b917229eec057$exports","$aef56543978371a8090d728a4f107ac0$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","$aef56543978371a8090d728a4f107ac0$var$__extends","resetNorth_","$9812beea87bdcda9027d52b89085c87c$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","$9812beea87bdcda9027d52b89085c87c$var$__extends","zoomByDelta_","currentZoom","newZoom","$c147d956996cb96e879ea56bdc9c5d5d$export$9099ad97b570f7c","$1ad0cf5090e3852174414bfc8cc27b9e$export$63568b31cb17dd4d","$1ad0cf5090e3852174414bfc8cc27b9e$export$d2c07614bfd6a817","$1ad0cf5090e3852174414bfc8cc27b9e$export$9099ad97b570f7c","Interaction","setActive","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","active","$4eeedd039b7e6d5b8277b175715f9541$export$9099ad97b570f7c","DoubleClickZoom","delta_","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","stopEvent","shiftKey","$1ad0cf5090e3852174414bfc8cc27b9e$exports","zoomByDelta","$0714aed143b912743afff175db44c1dc$export$e61edea4dfe4ed9b","$0714aed143b912743afff175db44c1dc$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$0714aed143b912743afff175db44c1dc$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","$054715504eaffdc825d0a6ada99ec596$export$8dbdea330bbd6b3c","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$584a07df7b145c47","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$363947888fb85da6","$054715504eaffdc825d0a6ada99ec596$export$a8612972eacfc116","$054715504eaffdc825d0a6ada99ec596$export$9f5e19851eeaf2c1","$054715504eaffdc825d0a6ada99ec596$export$1734dfcac3c09b2f","$054715504eaffdc825d0a6ada99ec596$export$59c8376875f673f8","$054715504eaffdc825d0a6ada99ec596$export$5bbcce8021828272","tagName","$054715504eaffdc825d0a6ada99ec596$export$d31d3f3aa38542a8","pointerType","$054715504eaffdc825d0a6ada99ec596$export$45cd27c0322d6513","isPrimary","$959ec1b544453a9fa4f0e9221c3bb0b0$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","centroid","$0714aed143b912743afff175db44c1dc$exports","update","getDistance","centerpx","$719e5208cd50905e41bacbcae2219883$export$9099ad97b570f7c","DragRotate","lastAngle_","$719e5208cd50905e41bacbcae2219883$var$__extends","$d0055a036577a61fd8306330947568c7$export$9099ad97b570f7c","RenderBox","startPixel_","endPixel_","$d0055a036577a61fd8306330947568c7$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$4d9b552836937ca2","DragBoxEvent","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$export$9099ad97b570f7c","DragBox","box_","$d0055a036577a61fd8306330947568c7$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$export$9099ad97b570f7c","DragZoom","out_","out","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","mapExtent","boxPixelExtent","$8ebfb36ef5532881c5652b708da2c120$export$9f54817615211741","$275b26378704892d776581791f32dc0e$exports","$8d5ac6bc9707ee873610cb367c0dab7f$export$9099ad97b570f7c","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$55ea853e77e2fe25fa1a8793cb31a3bf$export$9099ad97b570f7c","KeyboardZoom","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$f7a99b9e7b1a72242a3eb408b28d3563$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$9099ad97b570f7c","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$601b81cfcc535d77832cc96f04e942a1$var$__extends","scaleDelta","$976448907138da16f7612e32ecc55ac7$export$9099ad97b570f7c","Map1","$9812beea87bdcda9027d52b89085c87c$exports","zoomOptions","$aef56543978371a8090d728a4f107ac0$exports","rotateOptions","attribution","$194d017bd833b991c2c712fa2ff5b0e5$exports","attributionOptions","$c10299a05f898a09c43f788b5b6dfdbd$export$b403fbac94228e09","altShiftDragRotate","$719e5208cd50905e41bacbcae2219883$exports","doubleClickZoom","$4eeedd039b7e6d5b8277b175715f9541$exports","zoomDelta","zoomDuration","dragPan","$959ec1b544453a9fa4f0e9221c3bb0b0$exports","pinchRotate","$74b3a0ab43d5d3c47ed1a15cedc99f6a$exports","pinchZoom","$601b81cfcc535d77832cc96f04e942a1$exports","keyboard","$bcd9d2d6fd38b8643ae7b7b6fd22a911$exports","$55ea853e77e2fe25fa1a8793cb31a3bf$exports","mouseWheelZoom","$f7a99b9e7b1a72242a3eb408b28d3563$exports","shiftDragZoom","$b5cd6c68e27395a36aa4c8d3c5395250$exports","$ad51cb5d42c2f2a2874b19907e742966$export$b403fbac94228e09","$976448907138da16f7612e32ecc55ac7$var$__extends","$2ae21f590be041e7827bf48426c0766a$exports","$b198bbb8a7fca092de94dd3a772c1343$exports","$a51010926fccd7fa7fa549e12811b655$exports","t1","t2","r1","h1","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","all","_all","toBBox","o2","collides","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","_condense","compareMinX","compareMinY","toJSON","fromJSON","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","M","_allDistMargin","define","amd","RBush","$e311f93de68f58225dfc37d89d1dcffc$export$9099ad97b570f7c","opt_maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionLike","$6a9611a0560ac769e67fadc6cfef9a2c$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","getContextOptions","refresh","setAttributions","setState","$4b7d9e079415657c49d05e16783d2ed4$export$9099ad97b570f7c","$26b846260444bc742bddf88d96721338$export$8dbdea330bbd6b3c","$2ef5772bb5b0926a9ba82fc2a88f3163$var$withCredentials","$2ef5772bb5b0926a9ba82fc2a88f3163$export$52988233cf090939","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","response","onerror","send","$2ef5772bb5b0926a9ba82fc2a88f3163$export$4355fa6d12274ca5","addFeatures","$76e99b295c09c7c5e340e251e89879b1$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$76e99b295c09c7c5e340e251e89879b1$var$__extends","$76e99b295c09c7c5e340e251e89879b1$export$9099ad97b570f7c","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$6a9611a0560ac769e67fadc6cfef9a2c$exports","$6ea2e09c0ee686e4fcf344e90f929221$export$9099ad97b570f7c","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","$6ea2e09c0ee686e4fcf344e90f929221$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","$69031f3b45b1bb2d223c45e6bbe47b36$export$9099ad97b570f7c","ImageTile","tileLoadFunction","tileLoadFunction_","$69031f3b45b1bb2d223c45e6bbe47b36$var$__extends","naturalWidth","naturalHeight","$6ea2e09c0ee686e4fcf344e90f929221$exports","$7e4c33869bbc09ad771e58efcd7791e2$var$brokenDiagonalRendering_","$3a0ea260bd0161734cb5e603b9086c9d$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$dffde8f1acde674bc74a24601c2788a7$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$7e4c33869bbc09ad771e58efcd7791e2$var$drawTestTriangle","v1","v2","moveTo","clip","$7e4c33869bbc09ad771e58efcd7791e2$var$verifyBrokenDiagonalRendering","$7e4c33869bbc09ad771e58efcd7791e2$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$7e4c33869bbc09ad771e58efcd7791e2$export$792a797b69be0d58","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$916dab65013919ad0345478f9a9f4e0f$export$27dc5719ceda6735","$7e4c33869bbc09ad771e58efcd7791e2$var$isBrokenDiagonalRendering","ud","vd","step","steps","$97e37be8733b1927a1ed959b854a8d18$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$7e4c33869bbc09ad771e58efcd7791e2$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$97e37be8733b1927a1ed959b854a8d18$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$101ae72fedfe330e8897d118e958a8b6$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$c98d704946f2a3a0e1335bd43bccb465$export$ea8082d0226d35a5","opt_tileCoord","$c98d704946f2a3a0e1335bd43bccb465$export$1039fb0288fd71e3","$c98d704946f2a3a0e1335bd43bccb465$export$a0f0ccbe5bbc0789","$8328c42c04c9adada69111ec662476d9$export$9099ad97b570f7c","TileCache","$8328c42c04c9adada69111ec662476d9$var$__extends","expireCache","pruneExceptNewestZ","$c98d704946f2a3a0e1335bd43bccb465$export$5208a752d34424e5","$6fb7cf65abcfc8d879372ec2dca0d0b8$export$9099ad97b570f7c","$6a958d3d10a45fbc13d601def6cb4731$var$TileRange","TileRange","containsTileRange","tileRange","getHeight","$6a958d3d10a45fbc13d601def6cb4731$export$ea8082d0226d35a5","$6a958d3d10a45fbc13d601def6cb4731$export$9099ad97b570f7c","$0f9feaa19e1db86e91525f400c1bbfa1$var$tmpTileCoord","$0f9feaa19e1db86e91525f400c1bbfa1$export$9099ad97b570f7c","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","$0b7f50deff6bfc90c8b239d5ceca7010$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$0b7f50deff6bfc90c8b239d5ceca7010$var$resolutionsFromExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$57c49ef1657592d4","$0b7f50deff6bfc90c8b239d5ceca7010$export$9666e825b22d806d","$0b7f50deff6bfc90c8b239d5ceca7010$export$6dfef52f91d4f582","opt_maxResolution","half","$cde35ab3df9629f8ffd26ea2f187b41e$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$8328c42c04c9adada69111ec662476d9$exports","tmpSize","tileOptions","zDirection","$cde35ab3df9629f8ffd26ea2f187b41e$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","$0b7f50deff6bfc90c8b239d5ceca7010$export$5a0d9577a24f3c5b","$c98d704946f2a3a0e1335bd43bccb465$export$b46b80619528d4e5","updateCacheSize","tileCount","useTile","$cde35ab3df9629f8ffd26ea2f187b41e$export$8434c8db61edbf9d","TileSourceEvent","$cde35ab3df9629f8ffd26ea2f187b41e$export$9099ad97b570f7c","$f3b33fdefe65058178a4b532c7b3f14b$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$f3b33fdefe65058178a4b532c7b3f14b$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$c98d704946f2a3a0e1335bd43bccb465$export$4639c7f2947f4458","$f3b33fdefe65058178a4b532c7b3f14b$export$c6a04e0c49b28953","$671acdd0ca89710db49a7e8e41335e8e$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","$671acdd0ca89710db49a7e8e41335e8e$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","tileState","$cde35ab3df9629f8ffd26ea2f187b41e$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop_1","$f3b33fdefe65058178a4b532c7b3f14b$export$47abe479fba0e55d","$f1c529d0542d6a8d6fa77a64fa516101$var$defaultTileLoadFunction","imageTile","$f1c529d0542d6a8d6fa77a64fa516101$export$9099ad97b570f7c","TileImage","tileClass","$69031f3b45b1bb2d223c45e6bbe47b36$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$f1c529d0542d6a8d6fa77a64fa516101$var$__extends","usedTileCache","getGutter","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$97e37be8733b1927a1ed959b854a8d18$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$671acdd0ca89710db49a7e8e41335e8e$exports","$fd3ab3577c0c67d5f04f77f7494fe563$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$0b7f50deff6bfc90c8b239d5ceca7010$export$5731532c605ee56","$fd3ab3577c0c67d5f04f77f7494fe563$var$__extends","$f1c529d0542d6a8d6fa77a64fa516101$exports","$ceed79ad4f0d8f0ebaf810c3cca30983$var$Property","$ceed79ad4f0d8f0ebaf810c3cca30983$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$ceed79ad4f0d8f0ebaf810c3cca30983$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","$b550892c9c7d6707a4415bf7976deb12$export$4aaa4bacaec09e94","$75febe525c6e0d71892cea5e044a142c$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$75febe525c6e0d71892cea5e044a142c$export$c649c04369bd3370","$75febe525c6e0d71892cea5e044a142c$export$2513c58bc344fc5c","$75febe525c6e0d71892cea5e044a142c$export$84e3c67fd41b07f5","$75febe525c6e0d71892cea5e044a142c$export$6cd4b1e0c0e7240c","$75febe525c6e0d71892cea5e044a142c$export$9099ad97b570f7c","$98c4b84222a5e84ec508cd638c4e0b8c$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","opt_declutterImageWithText","setTextStyle","$ca67e4c506ae561bc3174e981b55d257$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$ca67e4c506ae561bc3174e981b55d257$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$072d5e6cee1f9ae87cd55eb588566cc6$export$9099ad97b570f7c","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$072d5e6cee1f9ae87cd55eb588566cc6$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$ca67e4c506ae561bc3174e981b55d257$exports","$28ceeb2640c662153e0cc1bb27e7eea9$export$9099ad97b570f7c","CanvasLineStringBuilder","$28ceeb2640c662153e0cc1bb27e7eea9$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$f5fec2e7653cdbd2c7958b8312f0d7d6$export$9099ad97b570f7c","CanvasPolygonBuilder","$f5fec2e7653cdbd2c7958b8312f0d7d6$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$f19e98a3c9584b88eb9c26a752a19276$export$e8c34bbbade92a3a","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$7e7051822986fcb02ea0e43ac0707b32$export$3964e67694391753","$7e7051822986fcb02ea0e43ac0707b32$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$7e7051822986fcb02ea0e43ac0707b32$var$__extends","fillState","strokeState","textState","geometryType","geometryWidths","beg_1","keep","saveTextStates_","p0","p2","p3","pixelRatio_1","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","$4f54cdaa0352e7689a6e30aa9d8207ec$var$BATCH_CONSTRUCTORS","$f5fec2e7653cdbd2c7958b8312f0d7d6$exports","$072d5e6cee1f9ae87cd55eb588566cc6$exports","$28ceeb2640c662153e0cc1bb27e7eea9$exports","$7e7051822986fcb02ea0e43ac0707b32$exports","$4f54cdaa0352e7689a6e30aa9d8207ec$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$ae15ed96a99c1303ea67938747c94fca$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$ae15ed96a99c1303ea67938747c94fca$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","$ac230d10056414a40eb774bd091234f1$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$ac230d10056414a40eb774bd091234f1$var$__extends","useContainer","layerClassName","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","err","Uint8Array","$ae15ed96a99c1303ea67938747c94fca$exports","$2a2c9e207ab3a32ae55e264c8b11e252$export$9099ad97b570f7c","$56c23dc34f9f14c7874ab5d8b63c5fb3$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$tmpExtent","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p1","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p2","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p3","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p4","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$rtlRegEx","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$horizontalTextAlign","align","TEXT_ALIGN","$6cf1557e9efeeb4d32c6b7acaeb9c268$export$9099ad97b570f7c","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$c6e46405591acfe99e5a94d22fbe8573$var$ORDER","$c6e46405591acfe99e5a94d22fbe8573$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$c6e46405591acfe99e5a94d22fbe8573$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$c6e46405591acfe99e5a94d22fbe8573$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$c6e46405591acfe99e5a94d22fbe8573$export$9099ad97b570f7c","$9f8df4495769241e9ec70201b90e0eaa$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9f8df4495769241e9ec70201b90e0eaa$var$__extends","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$9f8fd0aab32ac5c353b56f527e1d00a9$export$5d244421488756f8","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$65a5cfeed6fd0c33","feature1","feature2","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f0ea347488340e3d","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$522dfd100dd96ba1","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderGeometry","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderFeatureInternal","$c2243072b6513ba407326b2a30b1374a$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c2243072b6513ba407326b2a30b1374a$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$af95442a94d1862a138c401177ef0c4b$export$e7468c0ae08395df","clipped","transforms","$9f8df4495769241e9ec70201b90e0eaa$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","$9f8fd0aab32ac5c353b56f527e1d00a9$export$9fd146a6491490e3","resultFeatures","$9f8fd0aab32ac5c353b56f527e1d00a9$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","$8ebfb36ef5532881c5652b708da2c120$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f3b3f9822f340683","dirty","renderFeature","userExtent","replayGroupInstructions","$ac230d10056414a40eb774bd091234f1$exports","$2f5ed0ce65ecb2bfe439d05296b3d36a$export$9099ad97b570f7c","VectorLayer","$2f5ed0ce65ecb2bfe439d05296b3d36a$var$__extends","$c2243072b6513ba407326b2a30b1374a$exports","$ceed79ad4f0d8f0ebaf810c3cca30983$exports","$62b4010d0c10d05a6eb5fbcd9e877cb9$var$supportedExtensions","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$4fae3d8ec3d62e0a","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$1115845160c9bee9","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$909515d02f210383","$62b4010d0c10d05a6eb5fbcd9e877cb9$var$CONTEXT_IDS","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$1c9dfb92a34f1fcf","opt_attributes","$02cc97bf01bb3e29729e4a43136299b6$export$ad4b78097bf94d85","$02cc97bf01bb3e29729e4a43136299b6$export$2ced8f41c55fa306","Float32Array","Uint32Array","$02cc97bf01bb3e29729e4a43136299b6$export$9099ad97b570f7c","WebGLArrayBuffer","opt_usage","usage","ofSize","fromArray","from","fromArrayBuffer","buffer","getUsage","$501d706d50d79bf1747fa2e06c13b468$export$9099ad97b570f7c","$082906594eab2940979815ab9b245f21$export$9099ad97b570f7c","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","getGL","init","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","ImageData","texture","uniform3f","uniform4f","uniform1f","$b8f56a2658bfbbbe58c154ca943f14e7$export$e2085a48d9d846ba","mat4","$a213a3ce88096e82b8501ef33f381740$export$9fb8f3e6fc336132","$a213a3ce88096e82b8501ef33f381740$export$9aeec108beb7c801","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","TIME","ZOOM","RESOLUTION","$a213a3ce88096e82b8501ef33f381740$export$a267a1a615d1668f","UNSIGNED_SHORT","UNSIGNED_INT","$a213a3ce88096e82b8501ef33f381740$export$9f69b31ae6f7009b","attributes","attr","$a213a3ce88096e82b8501ef33f381740$var$getByteSizeFromType","BYTES_PER_ELEMENT","Uint16Array","$a213a3ce88096e82b8501ef33f381740$export$9099ad97b570f7c","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","bufferCache_","currentProgram_","getSupportedExtensions","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$8185dc2b04913cae","getExtension","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","postProcessPasses_","postProcesses","options1","shaderCompileErrors_","$a213a3ce88096e82b8501ef33f381740$var$__extends","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","prepareDraw","getCanvas","applyFrameState","prepareDrawToRenderTarget","renderTarget","opt_disableAlphaBlend","getFramebuffer","getTexture","ZERO","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","offsetScaleMatrix","offsetRotateMatrix","$af95442a94d1862a138c401177ef0c4b$export$d40e2456b1281660","setUniformMatrixValue","setUniformFloatValue","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","makeProjectionTransform","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","opt_data","opt_texture","$52492a5d5a5cf9f2155f89c2c989fa4d$export$f35e0f0520ed8c07","GENERATE_BUFFERS","$52492a5d5a5cf9f2155f89c2c989fa4d$var$WebGLLayerRenderer","WebGLLayerRenderer","helper","$a213a3ce88096e82b8501ef33f381740$exports","$52492a5d5a5cf9f2155f89c2c989fa4d$var$__extends","$52492a5d5a5cf9f2155f89c2c989fa4d$var$tmpArray_","$52492a5d5a5cf9f2155f89c2c989fa4d$var$bufferPositions_","vertexPosition","indexPosition","$52492a5d5a5cf9f2155f89c2c989fa4d$var$writePointVertex","$52492a5d5a5cf9f2155f89c2c989fa4d$export$402a9517d8d9fb90","elementIndex","vertexBuffer","indexBuffer","customAttributesCount","bufferPositions","customAttrs","vPos","iPos","baseIndex","$52492a5d5a5cf9f2155f89c2c989fa4d$export$d2530fde2918c51d","createImageData","$52492a5d5a5cf9f2155f89c2c989fa4d$export$89728eb3e9a820de","radix","divide","$52492a5d5a5cf9f2155f89c2c989fa4d$export$4a313f27a0e30974","mult","$52492a5d5a5cf9f2155f89c2c989fa4d$export$9099ad97b570f7c","$f64fa72ac4564efa0d58e5ad5fee1414$var$tmpArray4","$f64fa72ac4564efa0d58e5ad5fee1414$export$9099ad97b570f7c","WebGLRenderTarget","helper_","texture_","framebuffer_","data_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","$9d3e887f16ae055cd8da2de24c5566f6$var$blob","Blob","$9d3e887f16ae055cd8da2de24c5566f6$var$url","createObjectURL","$971f56de0b1cde93924292a879dc7bb9$export$9099ad97b570f7c","WebGLPointsLayerRenderer","projectionMatrixTransform","DefaultUniform","sourceRevision_","verticesBuffer_","hitVerticesBuffer_","indicesBuffer_","program_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitProgram_","customAttributes","attribute","AttributeType","hitDetectionAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","worker_","Worker","received","$52492a5d5a5cf9f2155f89c2c989fa4d$exports","WebGLWorkerMessageType","projectionTransform","hitDetection","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","$971f56de0b1cde93924292a879dc7bb9$var$__extends","renderCount","renderHitDetection","viewNotMoving","extentChanged","sourceChanged","rebuildBuffers_","featureCache","totalInstructionsCount","totalHitInstructionsCount","hitColor","tmpCoords","tmpColor","renderIndex","hitIndex","featureUid","colorEncodeId","postMessage","hitMessage","colorDecodeId","terminate","$4e846b5067287bfa27b20cce73a80019$var$Property","$4e846b5067287bfa27b20cce73a80019$var$DEFAULT_GRADIENT","$4e846b5067287bfa27b20cce73a80019$export$9099ad97b570f7c","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","$4e846b5067287bfa27b20cce73a80019$var$__extends","getBlur","getGradient","colors","createLinearGradient","addColorStop","$4e846b5067287bfa27b20cce73a80019$var$createGradient","$971f56de0b1cde93924292a879dc7bb9$exports","u_size","u_blurSlope","u_gradientTexture","$2f5ed0ce65ecb2bfe439d05296b3d36a$exports","$013ee184ddda363412ada1e10e95871e$export$9099ad97b570f7c","$ab70eb0a0a56b112261264db1ea7acab$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$ab70eb0a0a56b112261264db1ea7acab$var$__extends","getPreload","getUseInterimTilesOnError","$21101e8f6691f861098a74ca233ba3e1$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$21101e8f6691f861098a74ca233ba3e1$var$__extends","isDrawableTile","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","postRenderFunction","tileSource1","frameState1","opt_tileCallback","$21101e8f6691f861098a74ca233ba3e1$export$9099ad97b570f7c","$7f639b92eb9591e7aded56644548f656$export$9099ad97b570f7c","TileLayer","$7f639b92eb9591e7aded56644548f656$var$__extends","$21101e8f6691f861098a74ca233ba3e1$exports","$ab70eb0a0a56b112261264db1ea7acab$exports","$634f916bc30b7d6650877f3f4b6a8b3a$var$bundleURL","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBaseURL","$634f916bc30b7d6650877f3f4b6a8b3a$export$da289beea9c5b10d","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURL","$824bc590bf0a3702ac7bd27152cb0639$var$dirname","_filePath","filePath","slashIndex","$824bc590bf0a3702ac7bd27152cb0639$var$relative","to","fromParts","divergeIndex","toParts","module","exports","fromId","toId","$824bc590bf0a3702ac7bd27152cb0639$require$resolve","_dirname","_relative","$32261ce363b56909409281539a3cb948$exports","getBundleURL","$c86b75415f723d98f447db0a1194b2fb$var$raster","$7f639b92eb9591e7aded56644548f656$exports","$fd3ab3577c0c67d5f04f77f7494fe563$exports","$c86b75415f723d98f447db0a1194b2fb$var$vector","$76e99b295c09c7c5e340e251e89879b1$exports","$23a4f6aded846ad8aacbf1f3eca76e14$exports","$c86b75415f723d98f447db0a1194b2fb$var$map","$976448907138da16f7612e32ecc55ac7$exports","$c86b75415f723d98f447db0a1194b2fb$var$displayFeatureInfo","info","cursor"],"version":3,"file":"kml.1c436c48.js.map"}