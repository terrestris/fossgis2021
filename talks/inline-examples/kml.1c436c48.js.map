{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-b8f37ebddcf2871be1a5dbc86e6dcb1a.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Feature.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/transform.js","node_modules/ol/src/has.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/size.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/color.js","node_modules/ol/src/dom.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/css.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/style/Text.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/xml.js","node_modules/ol/src/format/XMLFeature.js","node_modules/ol/src/format/xsd.js","node_modules/ol/src/format/KML.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/webgl.js","node_modules/ol/src/webgl/Buffer.js","node_modules/ol/src/webgl/ContextEventType.js","node_modules/ol/src/webgl/PostProcessingPass.js","node_modules/ol/src/vec/mat4.js","node_modules/ol/src/webgl/Helper.js","node_modules/ol/src/renderer/webgl/Layer.js","node_modules/ol/src/webgl/RenderTarget.js","node_modules/ol/src/worker/webgl.js","node_modules/ol/src/renderer/webgl/PointsLayer.js","node_modules/ol/src/layer/Heatmap.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","node_modules/@parcel/runtime-js/lib/runtime-9b3c56133049118c4ff94bc66c93a360.js","src/kml.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"5Yomh\\\":\\\"kml.1c436c48.js\\\",\\\"1SqcQ\\\":\\\"2012-02-10.0c749803.kml\\\",\\\"43PvP\\\":\\\"basemap.fe5b33cb.css\\\"}\"));","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext(\n    '2d',\n    opt_Context2DSettings\n  ));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (objectStack[\n        objectStack.length - 1\n      ]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.XML;\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeatureFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, opt_options) {\n    const features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, opt_options) {\n    const node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    const node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, opt_options) {\n    const node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, opt_options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend, includes} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} yunits Units of Y.\n * @property {import(\"../style/IconOrigin.js\").default} origin Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [opt_options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    let imageSize = imageStyle.getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = (imageScale[0] * imageSize[0]) / 2;\n      textOffset[1] = (-imageScale[1] * imageSize[1]) / 2;\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return (\n                  type === GeometryType.POINT ||\n                  type === GeometryType.MULTI_POINT\n                );\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            drawName =\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && name.search(/&[^&]+;/) > -1) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(flatCoordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    ('fillStyle' in styleObject\n      ? styleObject['fillStyle']\n      : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    ('textStyle' in styleObject\n      ? styleObject['textStyle']\n      : DEFAULT_TEXT_STYLE);\n  const strokeStyle =\n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n      ? styleObject['strokeStyle']\n      : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type !== GeometryType.POLYGON &&\n                    type !== GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type !== GeometryType.POLYGON &&\n            type !== GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POLYGON ||\n                    type === GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type === GeometryType.POLYGON ||\n            type === GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: IconAnchorUnits.PIXELS,\n          y: size[1] - anchor[1],\n          yunits: IconAnchorUnits.PIXELS,\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === GeometryType.GEOMETRY_COLLECTION) {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === GeometryType.MULTI_POINT) {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === GeometryType.MULTI_LINE_STRING) {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === GeometryType.MULTI_POLYGON) {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === GeometryType.POINT ||\n          type === GeometryType.LINE_STRING ||\n          type === GeometryType.POLYGON\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POINT) {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_LINE_STRING) {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POLYGON) {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === GeometryType.GEOMETRY_COLLECTION) {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POINT ||\n                    type === GeometryType.MULTI_POINT\n                  );\n                }).length;\n            }\n            return (\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT\n            );\n          }\n        });\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.LINE_STRING ||\n                      type === GeometryType.MULTI_LINE_STRING\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.LINE_STRING ||\n                type === GeometryType.MULTI_LINE_STRING\n              );\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.POLYGON ||\n                      type === GeometryType.MULTI_POLYGON\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.POLYGON ||\n                type === GeometryType.MULTI_POLYGON\n              );\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} [opt_direction] If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(\n            tileCoordKey\n          ));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(\n          projection\n        );\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/webgl\n */\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [opt_attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER} from '../webgl.js';\nimport {DYNAMIC_DRAW, STATIC_DRAW, STREAM_DRAW} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [opt_usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, opt_usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {Array<number>} array Numerical array\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord);\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach(\n        function (name) {\n          this.uniforms_.push({\n            value: options.uniforms[name],\n            location: gl.getUniformLocation(this.renderTargetProgram_, name),\n          });\n        }.bind(this)\n      );\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @api\n   */\n  apply(frameState, nextPass) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    // render the frame buffer to the canvas\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    this.applyUniforms(frameState);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n  getSupportedExtensions,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\nimport {includes} from '../array.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray_} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n    const options = opt_options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ = this.handleWebGLContextRestored.bind(\n      this\n    );\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = document.createElement('canvas');\n    this.canvas_.style.position = 'absolute';\n    this.canvas_.style.left = '0';\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n    const gl = this.getGL();\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    assert(includes(getSupportedExtensions(), 'OES_element_index_uint'), 63);\n    gl.getExtension('OES_element_index_uint');\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n    this.uniformLocations_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.attribLocations_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      for (const name in options.uniforms) {\n        this.uniforms_.push({\n          name: name,\n          value: options.uniforms[name],\n        });\n      }\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(function (options) {\n          return new WebGLPostProcessingPass({\n            webGlContext: gl,\n            scaleRatio: options.scaleRatio,\n            vertexShader: options.vertexShader,\n            fragmentShader: options.fragmentShader,\n            uniforms: options.uniforms,\n          });\n        })\n      : [new WebGLPostProcessingPass({webGlContext: gl})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  bindBuffer(buffer) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  flushBufferData(buffer) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  prepareDraw(frameState) {\n    const gl = this.getGL();\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n\n    gl.useProgram(this.currentProgram_);\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, opt_disableAlphaBlend) {\n    const gl = this.getGL();\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(\n      gl.ONE,\n      opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA\n    );\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   * @api\n   */\n  drawElements(start, end) {\n    const gl = this.getGL();\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  finalizeDraw(frameState) {\n    // apply post processes using the next one as target\n    for (let i = 0; i < this.postProcessPasses_.length; i++) {\n      this.postProcessPasses_[i].apply(\n        frameState,\n        this.postProcessPasses_[i + 1] || null\n      );\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   * @api\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach(\n      function (uniform) {\n        value =\n          typeof uniform.value === 'function'\n            ? uniform.value(frameState)\n            : uniform.value;\n\n        // apply value based on type\n        if (\n          value instanceof HTMLCanvasElement ||\n          value instanceof HTMLImageElement ||\n          value instanceof ImageData\n        ) {\n          // create a texture & put data\n          if (!uniform.texture) {\n            uniform.prevValue = undefined;\n            uniform.texture = gl.createTexture();\n          }\n          gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n          gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n          const imageReady =\n            !(value instanceof HTMLImageElement) ||\n            /** @type {HTMLImageElement} */ (value).complete;\n          if (imageReady && uniform.prevValue !== value) {\n            uniform.prevValue = value;\n            gl.texImage2D(\n              gl.TEXTURE_2D,\n              0,\n              gl.RGBA,\n              gl.RGBA,\n              gl.UNSIGNED_BYTE,\n              value\n            );\n          }\n\n          // fill texture slots by increasing index\n          gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n        } else if (Array.isArray(value) && value.length === 6) {\n          this.setUniformMatrixValue(\n            uniform.name,\n            fromTransform(this.tmpMat4_, value)\n          );\n        } else if (Array.isArray(value) && value.length <= 4) {\n          switch (value.length) {\n            case 2:\n              gl.uniform2f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1]\n              );\n              return;\n            case 3:\n              gl.uniform3f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2]\n              );\n              return;\n            case 4:\n              gl.uniform4f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2],\n                value[3]\n              );\n              return;\n            default:\n              return;\n          }\n        } else if (typeof value === 'number') {\n          gl.uniform1f(this.getUniformLocation(uniform.name), value);\n        }\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  useProgram(program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      const gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      this.uniformLocations_ = {};\n      this.attribLocations_ = {};\n      return true;\n    }\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.getGL();\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   * @api\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.getGL();\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compliation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   * @api\n   */\n  getUniformLocation(name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.uniformLocations_[name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   * @api\n   */\n  getAttributeLocation(name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.attribLocations_[name];\n  }\n\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   * @api\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n\n    resetTransform(transform);\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   * @api\n   */\n  setUniformFloatValue(uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   * @api\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.getGL().uniformMatrix4fv(\n      this.getUniformLocation(uniform),\n      false,\n      value\n    );\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(\n      location,\n      size,\n      type,\n      false,\n      stride,\n      offset\n    );\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   * @api\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   * @api\n   */\n  createTexture(size, opt_data, opt_texture) {\n    const gl = this.getGL();\n    const texture = opt_texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (opt_data) {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        format,\n        type,\n        opt_data\n      );\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_BUFFERS: 'GENERATE_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Render instructions raw binary buffer.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {number} [customAttributesCount] Amount of custom attributes count in the render instructions.\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(layer, opt_options) {\n    super(layer);\n\n    const options = opt_options || {};\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper = new WebGLHelper({\n      postProcesses: options.postProcesses,\n      uniforms: options.uniforms,\n    });\n\n    if (options.className !== undefined) {\n      this.helper.getCanvas().className = options.className;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.helper.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      // RenderEvent does not get a context or an inversePixelTransform, because WebGL allows much less direct editing than Canvas2d does.\n      const event = new RenderEvent(type, null, frameState, null);\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, frameState);\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, frameState);\n  }\n}\n\nconst tmpArray_ = [];\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesCount,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesCount;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [opt_array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, opt_array) {\n  const array = opt_array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [opt_size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, opt_size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = opt_size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","\n        const source = \"var e=\\\"function\\\"==typeof Object.assign?Object.assign:function(e,n){if(null==e)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var t=Object(e),r=1,o=arguments.length;r<o;++r){var i=arguments[r];if(null!=i)for(var f in i)i.hasOwnProperty(f)&&(t[f]=i[f])}return t},n=\\\"GENERATE_BUFFERS\\\",t=[],r={vertexPosition:0,indexPosition:0};function o(e,n,t,r,o){e[n+0]=t,e[n+1]=r,e[n+2]=o}function i(e,n,i,f,s,u){var a=3+s,l=e[n+0],v=e[n+1],c=t;c.length=s;for(var g=0;g<c.length;g++)c[g]=e[n+2+g];var b=u?u.vertexPosition:0,h=u?u.indexPosition:0,d=b/a;return o(i,b,l,v,0),c.length&&i.set(c,b+3),o(i,b+=a,l,v,1),c.length&&i.set(c,b+3),o(i,b+=a,l,v,2),c.length&&i.set(c,b+3),o(i,b+=a,l,v,3),c.length&&i.set(c,b+3),b+=a,f[h++]=d,f[h++]=d+1,f[h++]=d+3,f[h++]=d+1,f[h++]=d+2,f[h++]=d+3,r.vertexPosition=b,r.indexPosition=h,r}var f=self;f.onmessage=function(t){var r=t.data;if(r.type===n){for(var o=r.customAttributesCount,s=2+o,u=new Float32Array(r.renderInstructions),a=u.length/s,l=4*a*(o+3),v=new Uint32Array(6*a),c=new Float32Array(l),g=null,b=0;b<u.length;b+=s)g=i(u,b,c,v,o,g);var h=e({vertexBuffer:c.buffer,indexBuffer:v.buffer,renderInstructions:u.buffer},r);f.postMessage(h,[c.buffer,v.buffer,u.buffer])}};\";\n        const blob = new Blob([source], {type: 'application/javascript'});\n        const url = URL.createObjectURL(blob);\n        export function create() {\n          return new Worker(url);\n        }\n      \n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer, {\n  WebGLWorkerMessageType,\n  colorDecodeId,\n  colorEncodeId,\n} from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      className: options.className,\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    this.program_ = this.helper.getProgram(\n      options.fragmentShader,\n      options.vertexShader\n    );\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ =\n      options.hitFragmentShader && options.hitVertexShader ? true : false;\n\n    this.hitProgram_ =\n      this.hitDetectionEnabled_ &&\n      this.helper.getProgram(\n        options.hitFragmentShader,\n        options.hitVertexShader\n      );\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    /**\n     * A list of attributes used for hit detection.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.hitDetectionAttributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * These instructions are used for hit detection\n     * @type {Float32Array}\n     * @private\n     */\n    this.hitRenderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_ =\n      this.hitDetectionEnabled_ && new WebGLRenderTarget(this.helper);\n\n    this.worker_ = createWebGLWorker();\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       * @this {WebGLPointsLayerRenderer}\n       */\n      function (event) {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          if (received.hitDetection) {\n            this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.hitVerticesBuffer_);\n          } else {\n            this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.verticesBuffer_);\n          }\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          if (received.hitDetection) {\n            this.hitRenderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          } else {\n            this.renderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          }\n\n          this.getLayer().changed();\n        }\n      }.bind(this)\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature(\n      function (feature) {\n        this.featureCache_[getUid(feature)] = {\n          feature: feature,\n          properties: feature.getProperties(),\n          geometry: feature.getGeometry(),\n        };\n        this.featureCount_++;\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.preRender(frameState);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n    this.helper.finalizeDraw(frameState);\n    const canvas = this.helper.getCanvas();\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = String(opacity);\n    }\n\n    if (this.hitDetectionEnabled_) {\n      this.renderHitDetection(frameState);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    // apply the current projection transform with the invert of the one used to fill buffers\n    this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n    multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n\n    this.helper.useProgram(this.program_);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    // here we anticipate the amount of render instructions that we well generate\n    // this can be done since we know that for normal render we only have x, y as base instructions,\n    // and x, y, r, g, b, a and featureUid for hit render instructions\n    // and we also know the amount of custom attributes to append to these\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalInstructionsCount\n    ) {\n      this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n    }\n    if (this.hitDetectionEnabled_) {\n      const totalHitInstructionsCount =\n        (7 + this.customAttributes.length) * this.featureCount_;\n      if (\n        !this.hitRenderInstructions_ ||\n        this.hitRenderInstructions_.length !== totalHitInstructionsCount\n      ) {\n        this.hitRenderInstructions_ = new Float32Array(\n          totalHitInstructionsCount\n        );\n      }\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let renderIndex = 0;\n    let hitIndex = 0;\n    let hitColor;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (featureCache.geometry);\n      if (!geometry || geometry.getType() !== GeometryType.POINT) {\n        continue;\n      }\n\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n\n      this.renderInstructions_[renderIndex++] = tmpCoords[0];\n      this.renderInstructions_[renderIndex++] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n        this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      let value;\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[renderIndex++] = value;\n        if (this.hitDetectionEnabled_) {\n          this.hitRenderInstructions_[hitIndex++] = value;\n        }\n      }\n    }\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesCount: this.customAttributes.length,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    if (this.hitDetectionEnabled_) {\n      const hitMessage = {\n        type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n        renderInstructions: this.hitRenderInstructions_.buffer,\n        customAttributesCount: 5 + this.customAttributes.length,\n      };\n      hitMessage['projectionTransform'] = projectionTransform;\n      hitMessage['hitDetection'] = true;\n      this.worker_.postMessage(hitMessage, [\n        this.hitRenderInstructions_.buffer,\n      ]);\n      this.hitRenderInstructions_ = null;\n    }\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.hitRenderInstructions_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.hitRenderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the hit detection data to the corresponding render target\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState current frame state\n   */\n  renderHitDetection(frameState) {\n    // skip render entirely if vertex buffers not ready/generated yet\n    if (!this.hitVerticesBuffer_.getSize()) {\n      return;\n    }\n\n    this.hitRenderTarget_.setSize([\n      Math.floor(frameState.size[0] / 2),\n      Math.floor(frameState.size[1] / 2),\n    ]);\n\n    this.helper.useProgram(this.hitProgram_);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.hitRenderTarget_,\n      true\n    );\n\n    this.helper.bindBuffer(this.hitVerticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.hitDetectionAttributes);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","/**\n * @module ol/layer/Heatmap\n */\nimport VectorLayer from './Vector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getChangeEventType} from '../Object.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Heatmap extends VectorLayer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addEventListener(\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_\n    );\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {WebGLPointsLayerRenderer} A layer renderer.\n   */\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: function (feature) {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          }.bind(this),\n        },\n      ],\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }`,\n      hitVertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      hitFragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }`,\n      uniforms: {\n        u_size: function () {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        }.bind(this),\n        u_blurSlope: function () {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        }.bind(this),\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: function () {\n              return this.gradient_;\n            }.bind(this),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"5Yomh\", \"1SqcQ\")","import 'ol/ol.css';\nimport KML from 'ol/format/KML';\nimport Map from 'ol/Map';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport XYZ from 'ol/source/XYZ';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\nimport kml from 'url:./data/2012-02-10.kml';\n\nvar key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\nvar attributions =\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\n\nvar raster = new TileLayer({\n  source: new XYZ({\n    attributions: attributions,\n    url: 'https://api.maptiler.com/tiles/satellite/{z}/{x}/{y}.jpg?key=' + key,\n    maxZoom: 20,\n  }),\n});\n\nvar vector = new VectorLayer({\n  source: new VectorSource({\n    url: kml,\n    format: new KML(),\n  }),\n});\n\nvar map = new Map({\n  layers: [raster, vector],\n  target: document.getElementById('map'),\n  view: new View({\n    center: [838407.352187509, 5857024.132774355],\n    projection: 'EPSG:3857',\n    zoom: 14,\n  }),\n});\n\nvar displayFeatureInfo = function (pixel) {\n  var features = [];\n  map.forEachFeatureAtPixel(pixel, function (feature) {\n    features.push(feature);\n  });\n  if (features.length > 0) {\n    var info = [];\n    var i, ii;\n    for (i = 0, ii = features.length; i < ii; ++i) {\n      if (features[i].get('name')) {\n        info.push(features[i].get('name'));\n      }\n    }\n    document.getElementById('info').innerHTML = info.join(', ') || '(unknown)';\n    map.getTarget().style.cursor = 'pointer';\n  } else {\n    document.getElementById('info').innerHTML = '';\n    map.getTarget().style.cursor = '';\n  }\n};\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  var pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"names":["$7d806a7a603c235ec027b73d847f4d95$var$mapping","$7d806a7a603c235ec027b73d847f4d95$export$357eb1b4f03c1402","pairs","keys","Object","i","length","$7d806a7a603c235ec027b73d847f4d95$export$40339995e8a21591","id","resolved","Error","parcelRequire","register","JSON","parse","$003acff01e79c0a73122c747343d2e59$export$9099ad97b570f7c","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$bfcfd5d9960b75cc9cb78b58301ad8a4$export$9099ad97b570f7c","$f7bbc97715b7cef936b659025f276afb$export$9099ad97b570f7c","Disposable","disposed","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$8eda8fbd1364c8a1","a","b","$7c21d7646a0313abf7b847efa68bfceb$export$627ad4a8fadf1912","arr","obj","indexOf","$7c21d7646a0313abf7b847efa68bfceb$export$45934da9231b7323","direction","n","$7c21d7646a0313abf7b847efa68bfceb$export$1f4f991ce94838ce","begin","end","tmp","$7c21d7646a0313abf7b847efa68bfceb$export$46e35401bc090c62","data","extension","Array","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$bcc761834e33d339","arr1","arr2","len1","$8ff7925ef9afa7e69604ab9620edac22$export$ad8dd69aa6772cd0","$8ff7925ef9afa7e69604ab9620edac22$export$5c50afa32081505e","$8ff7925ef9afa7e69604ab9620edac22$export$3850addf0fb4e6a7","$e1ac967f910869e98e549bfd20a1853c$export$f3c88f5a058bec38","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$e1ac967f910869e98e549bfd20a1853c$export$97fff7491bd246bd","object","property","$e1ac967f910869e98e549bfd20a1853c$export$207c30846165e93a","values","push","$e1ac967f910869e98e549bfd20a1853c$export$988399e568471db1","$99fe3f3343ef18166bd431edc467d890$export$9099ad97b570f7c","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$99fe3f3343ef18166bd431edc467d890$var$__extends","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","index","splice","$c81aa09fb137106970dbc142b1e89ec3$export$9099ad97b570f7c","$7961378a294a4943979a10a4df4a3fcf$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$d2df825b2d8bc2ba","$7961378a294a4943979a10a4df4a3fcf$export$6dee5fd4fdf600ff","$02e80757fefec0a9636ae28d17c9fab2$export$21f63b82add5980c","$02e80757fefec0a9636ae28d17c9fab2$export$9099ad97b570f7c","Observable","revision_","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","changed","getRevision","on","len","once","ol_key","un","$99fe3f3343ef18166bd431edc467d890$exports","default","$cd365e7aabd14aaf6df378f6a61e84d7$export$18e1b4ff5b3c2297","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$604e9536b9e0488a","ol_uid","String","$cd365e7aabd14aaf6df378f6a61e84d7$export$f2eb173e8f6e4130","$a41f90da440d5a4a421775ee47a2c536$export$b902cfd711fa7f06","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$var$BaseObject","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$b958104f5d8e9527","set","opt_silent","applyProperties","unset","$02e80757fefec0a9636ae28d17c9fab2$exports","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$a41f90da440d5a4a421775ee47a2c536$export$9099ad97b570f7c","$fd652548d0f540d94aaff6aa830746d2$export$9099ad97b570f7c","AssertionError","code","message","split","name","$fd652548d0f540d94aaff6aa830746d2$var$__extends","$2ce41f61858dd350a0b2670bdab4e597$export$b8795f4f643ce74f","assertion","errorCode","$fd652548d0f540d94aaff6aa830746d2$exports","$fe05caf5f991aea82bd67c9bebabc467$export$7cf753b6a6534915","styles_1","getZIndex","$fe05caf5f991aea82bd67c9bebabc467$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","$a41f90da440d5a4a421775ee47a2c536$exports","getChangeEventType","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$fe05caf5f991aea82bd67c9bebabc467$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","$e1f9f7b0a69ff9a9f4c2bbbdfef410b1$export$9099ad97b570f7c","Fill","opt_options","options","color_","color","getColor","slice","setColor","$df0b68b08946bf3d8de6eeca4fba3a5f$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$df0b68b08946bf3d8de6eeca4fba3a5f$export$af68584dedf5e52c","Math","PI","$af95442a94d1862a138c401177ef0c4b$var$transformStringDiv","$df0b68b08946bf3d8de6eeca4fba3a5f$export$9099ad97b570f7c","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$543c908bf17a24fb","$2016f251f21b02e27a5ca36c37510540$export$bccc8605349feea7","$2016f251f21b02e27a5ca36c37510540$export$f16ffc71033a7aaa","$2016f251f21b02e27a5ca36c37510540$export$1940d5d2b4cf824d","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$9544418e5c6fedfe","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$700ce540937d8c69","passive","defineProperty","window","error","$af95442a94d1862a138c401177ef0c4b$var$tmp_","$af95442a94d1862a138c401177ef0c4b$export$6cfa4eec14fd8155","transform","$af95442a94d1862a138c401177ef0c4b$export$77f8d2fc923b14e3","$af95442a94d1862a138c401177ef0c4b$export$4739cf887d3ac19b","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","f","$af95442a94d1862a138c401177ef0c4b$export$6af9bbf310c9e4bf","coordinate","x","y","$af95442a94d1862a138c401177ef0c4b$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$af95442a94d1862a138c401177ef0c4b$export$6e6aac0f60e83c70","mat","det","$af95442a94d1862a138c401177ef0c4b$export$47bee913e0e80eb4","transformString","join","node","document","createElement","$8fe041eefe2f7aaeb97e4d98623d5d5e$export$9099ad97b570f7c","$8913dbc1b585601bf0ecb482246c0b4c$export$9099ad97b570f7c","$8ebfb36ef5532881c5652b708da2c120$export$a7ecbd362d65c1fe","coordinates","extent","$8ebfb36ef5532881c5652b708da2c120$export$dbb3d72606cdc11","$8ebfb36ef5532881c5652b708da2c120$export$2852acc8f8b94686","$8ebfb36ef5532881c5652b708da2c120$export$14e1765886db335a","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$d6a0542127b96c83","$8ebfb36ef5532881c5652b708da2c120$export$c7d6a927f416dd39","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$c422a9fcb5f1ee5c","$8ebfb36ef5532881c5652b708da2c120$export$cc70e7e516e4370f","$8ebfb36ef5532881c5652b708da2c120$export$4f55e2d709659e7b","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$ea8082d0226d35a5","$8ebfb36ef5532881c5652b708da2c120$export$80741250c74fd4fa","$8ebfb36ef5532881c5652b708da2c120$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$8ebfb36ef5532881c5652b708da2c120$export$4b116deb3079b147","$8ebfb36ef5532881c5652b708da2c120$export$bcc761834e33d339","$8ebfb36ef5532881c5652b708da2c120$export$46e35401bc090c62","$8ebfb36ef5532881c5652b708da2c120$export$bfc2e43ae5c3c00c","$8ebfb36ef5532881c5652b708da2c120$export$8696fee511ea7c7a","min","max","$8ebfb36ef5532881c5652b708da2c120$export$c26f7b9c5adc34b4","callback","val","$8ebfb36ef5532881c5652b708da2c120$export$3932426cd8118930","$8ebfb36ef5532881c5652b708da2c120$export$4e2fc25ce97f3583","$8ebfb36ef5532881c5652b708da2c120$export$35aedeaeee8be6cd","$8ebfb36ef5532881c5652b708da2c120$export$5100f0815ea32995","$8ebfb36ef5532881c5652b708da2c120$export$ab4e37d31d15614d","area","$8ebfb36ef5532881c5652b708da2c120$export$988399e568471db1","$8ebfb36ef5532881c5652b708da2c120$export$3dc3550566517965","$8ebfb36ef5532881c5652b708da2c120$export$e178c8044d3d0a05","$8ebfb36ef5532881c5652b708da2c120$export$339e303bf205caae","$8ebfb36ef5532881c5652b708da2c120$export$38622892ed79bdc7","corner","$8ebfb36ef5532881c5652b708da2c120$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$c491031eb9adcc3a","intersection","$8ebfb36ef5532881c5652b708da2c120$export$c3bd2c3b798b0350","$8ebfb36ef5532881c5652b708da2c120$export$76e02248c0889c3e","transformFn","opt_stops","width","height","xs","ys","l","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$1514cc7c23ad291d61b727f0ef5e4246$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$916dab65013919ad0345478f9a9f4e0f$export$4b8705656de00c72","$916dab65013919ad0345478f9a9f4e0f$export$4a376e0f60d976ee","cosh","exp","$916dab65013919ad0345478f9a9f4e0f$export$e08236045caaa3e1","log2","log","LOG2E","$916dab65013919ad0345478f9a9f4e0f$export$fd0b1e5ac4df516c","t","$916dab65013919ad0345478f9a9f4e0f$export$8b6706701cd75ea9","$916dab65013919ad0345478f9a9f4e0f$export$11468133b1231643","angleInRadians","$916dab65013919ad0345478f9a9f4e0f$export$4fc80c88d72f096","angleInDegrees","$916dab65013919ad0345478f9a9f4e0f$export$3334706ffb3dccb1","r","$916dab65013919ad0345478f9a9f4e0f$export$45ca8e7f50ccf2e0","$7d5079714e2786ec6bee07910f0d8a86$export$8c5f77743cd0e8b7","$7d5079714e2786ec6bee07910f0d8a86$export$bb1f4f75177e5528","$7d5079714e2786ec6bee07910f0d8a86$export$6fd015d56b8406c9","$7d5079714e2786ec6bee07910f0d8a86$export$64afaa717a0c4932","$7d5079714e2786ec6bee07910f0d8a86$export$2126dea64bc40b7b","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$850c9b527a5298aa","$7d5079714e2786ec6bee07910f0d8a86$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$f361696640082386","atan","$655738a66489cc3574c072262645bff6$export$6fd015d56b8406c9","$655738a66489cc3574c072262645bff6$export$af68584dedf5e52c","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$850c9b527a5298aa","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$568ed88074851180","destination","sourceCode","destinationCode","$29d4509fdec4b1b2fe8c71c42629ef39$export$9099ad97b570f7c","$525020a649871896a05d6fe288616b91$export$761de677acb0d085","$525020a649871896a05d6fe288616b91$export$aec7b6756585c081","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$525020a649871896a05d6fe288616b91$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$29884e9b826cd25109649ab0c360e769$export$bcc761834e33d339","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$d40e2456b1281660","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$5a0d9577a24f3c5b","projection","worldWidth","worldsAway","$29884e9b826cd25109649ab0c360e769$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$524e9c84a4c58bd58490804da4c772c6$export$3fbbaef54e2e9d28","$524e9c84a4c58bd58490804da4c772c6$export$678028d364072132","$524e9c84a4c58bd58490804da4c772c6$export$6308908a0016f099","$0ba2913765cbb83278246e730dbcdcdf$export$568ed88074851180","$524e9c84a4c58bd58490804da4c772c6$export$7eb84799c931fe91","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$524e9c84a4c58bd58490804da4c772c6$export$747af4f49bde2f53","vertices","$524e9c84a4c58bd58490804da4c772c6$export$a42db349809b0c24","projections","forEach","$524e9c84a4c58bd58490804da4c772c6$export$fd4cd3535c7ea97f","$524e9c84a4c58bd58490804da4c772c6$export$f704437a72056fb8","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$6cb154572a1cc3d19ea74b1e9a3a7861$export$7eb84799c931fe91","$524e9c84a4c58bd58490804da4c772c6$export$9336879ef6599bf5","$524e9c84a4c58bd58490804da4c772c6$export$4b169b49e1a4823b","$524e9c84a4c58bd58490804da4c772c6$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$352fd07bdd93dc1e","$524e9c84a4c58bd58490804da4c772c6$export$4a182a4d53d7595c","$524e9c84a4c58bd58490804da4c772c6$export$b5d00774755783fc","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$a7d473ff80a6a3b","$524e9c84a4c58bd58490804da4c772c6$export$f87215506b474b9e","$3f4f29b0a4be88d8241f933ff6121a33$export$92106241c01aa541","opt_dest","dest","j","$3f4f29b0a4be88d8241f933ff6121a33$export$d40e2456b1281660","anchor","anchorX","anchorY","deltaX","deltaY","k","$7d5079714e2786ec6bee07910f0d8a86$exports","PROJECTIONS","$655738a66489cc3574c072262645bff6$exports","fromEPSG4326","toEPSG4326","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$a17c336463d573a615343832f6e09aa8$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$8ebfb36ef5532881c5652b708da2c120$export$d1e01ccfd06bf8ee","rotate","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$8af1af76f23419d9d724a1b0182ffb00$var$cloneGeometries","geometries","clonedGeometries","$8af1af76f23419d9d724a1b0182ffb00$export$9099ad97b570f7c","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$8af1af76f23419d9d724a1b0182ffb00$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","isEmpty","$a17c336463d573a615343832f6e09aa8$exports","$01b4ee2590431d23f431f1e9785f436f$export$9099ad97b570f7c","$250247a34cdb6d9c26d2c6d3640e511f$export$9099ad97b570f7c","$c921d54e03c98d7c23acffcfb75264d3$export$9099ad97b570f7c","$ddbf871807cbdb80f3672c8008047cee$export$9099ad97b570f7c","$8556eff40cf4f1624cd78ff7ea054c5b$export$c563c2b7121f8771","$8556eff40cf4f1624cd78ff7ea054c5b$export$48d31d2725e4d98b","opt_size","$96f7f946d494434256fc7391bfca3d81$export$9099ad97b570f7c","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","getSize","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","load","unlistenImageChange","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$9fe004474d6f7f65","$ddc7f5de3664aab559d1c545c366e59d$export$47bee913e0e80eb4","$ddc7f5de3664aab559d1c545c366e59d$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$21528ce64591bf2","s","g","exec","hasAlpha","parseInt","substr","$ddc7f5de3664aab559d1c545c366e59d$export$2e33abec8aecd572","map","Number","$ddc7f5de3664aab559d1c545c366e59d$var$fromStringInternal_","$ddc7f5de3664aab559d1c545c366e59d$export$7266a24c0caa2a8","$8b566ca8fd3b2d9c184057ba73cbf345$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$47503d53c08beb29","$80553d92e1fbcb82d752b6de833f9cf3$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","setSize","maxCacheSize","$80553d92e1fbcb82d752b6de833f9cf3$export$601b9e2be44c7cb2","$e65a38a3837120ad833711b5930f5912$export$9099ad97b570f7c","ImageBase","state","pixelRatio_","$e65a38a3837120ad833711b5930f5912$var$__extends","getResolution","getState","$2fc4e1887f4ffa14e16ea647fd21482c$export$469eb8ba3f45955e","image","loadHandler","errorHandler","img","promise","listening_1","then","catch","listenerKeys","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$e65a38a3837120ad833711b5930f5912$exports","$92a5ba3fab046f40ee35c464c4cf79b4$var$taintedTestContext","$92a5ba3fab046f40ee35c464c4cf79b4$var$IconImage","IconImage","imageState","hitDetectionImage_","canvas_","imageState_","size_","tainted_","$92a5ba3fab046f40ee35c464c4cf79b4$var$__extends","isTainted_","drawImage","getImageData","dispatchChangeEvent_","replaceColor_","context","fillRect","getSrc","$2fc4e1887f4ffa14e16ea647fd21482c$exports","listenImage","ceil","ctx","globalCompositeOperation","fillStyle","imgData","putImageData","$92a5ba3fab046f40ee35c464c4cf79b4$export$7eb84799c931fe91","$4de6336f82b6fd9bc7cf688bb41b8b96$export$9099ad97b570f7c","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$92a5ba3fab046f40ee35c464c4cf79b4$exports","offset_","offsetOrigin_","offsetOrigin","origin_","$4de6336f82b6fd9bc7cf688bb41b8b96$var$__extends","setAnchor","iconImageSize","$57ce72c0539154dec2abdc81ffcff6df$export$2a65008b73824080","layout","$57ce72c0539154dec2abdc81ffcff6df$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$57ce72c0539154dec2abdc81ffcff6df$export$9099ad97b570f7c","SimpleGeometry","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","$3f4f29b0a4be88d8241f933ff6121a33$export$8f869025bba9609b","$3f4f29b0a4be88d8241f933ff6121a33$export$41b0d7466cde8385","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$acf7548d1f0e8581","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$ba38095f6bb45df2","ends","$020a0553c73896bfe8e0cfb3e7ff136b$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$020a0553c73896bfe8e0cfb3e7ff136b$export$3dd3914e22f9012e","$e477329667689b6619ea04e4a51dbccc$export$e175f505890ac90f","$e477329667689b6619ea04e4a51dbccc$export$ab1a51db55485752","coordinatess","opt_ends","jj","$a357f0a07bdcadd773e93ca791a42f7b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$ade7859c9eb393ec","simplifiedEnds","$a357f0a07bdcadd773e93ca791a42f7b$export$383ea8a1f2974dfb","round","$a357f0a07bdcadd773e93ca791a42f7b$export$e29de4fdb2175738","$a357f0a07bdcadd773e93ca791a42f7b$export$1df19a1eb5514c2f","$419a691625de72e89acadcc033e1165f$export$40f3d9558cf6e846","ret","point1","point2","$c39683e7fcea5e9dae135d728d60cf52$export$92f32d891164b0ac","opt_coordinates","$c39683e7fcea5e9dae135d728d60cf52$export$d82a8a3167f968d","opt_coordinatess","$c39683e7fcea5e9dae135d728d60cf52$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$168654b72fccbd53f77518b62ff915e1$export$55be7a9e3fef4787","fraction","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$7c21d7646a0313abf7b847efa68bfceb$export$26b1c556c0e0f127","$168654b72fccbd53f77518b62ff915e1$export$1a804b04fa5a0253","m","extrapolate","lo","hi","m0","$7311a6a51d57e65f0d3a69bd7a380356$export$f7b55b637f92fd7","$7311a6a51d57e65f0d3a69bd7a380356$export$e2ed757909b25f63","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$51e46a3625992b91","$32ab876027ca0904f46063bee68b73aa$export$26f047a5bfac4b1a","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$8ebfb36ef5532881c5652b708da2c120$export$525a75abb91115e3","$32ab876027ca0904f46063bee68b73aa$export$717c2c7c46a5bf3d","$32ab876027ca0904f46063bee68b73aa$export$f14bd9270666b480","$c028848ec55b72b61f5eaf0ec6396be2$export$7326ac1b36a49776","$f3208b74dbadea817236410092d4ed69$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","$f3208b74dbadea817236410092d4ed69$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","$57ce72c0539154dec2abdc81ffcff6df$exports","$9cc45ed4bf6c6f99d7b74c7015645e2b$export$9099ad97b570f7c","MultiLineString","ends_","lineStrings","$9cc45ed4bf6c6f99d7b74c7015645e2b$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$168654b72fccbd53f77518b62ff915e1$export$8958f67b085a89b1","getEnds","getLineString","$f3208b74dbadea817236410092d4ed69$exports","getLineStrings","getFlatMidpoints","midpoints","$32ab876027ca0904f46063bee68b73aa$export$414b603e1c51ecd4","$acd1b863667085614d305475fd6c1d27$export$9099ad97b570f7c","Point","$acd1b863667085614d305475fd6c1d27$var$__extends","$e477329667689b6619ea04e4a51dbccc$export$a53e62528b652807","$0c87ec0f12a2b62262bf5859757b8a2b$export$9099ad97b570f7c","MultiPoint","$0c87ec0f12a2b62262bf5859757b8a2b$var$__extends","appendPoint","multiPoint","getPoint","$acd1b863667085614d305475fd6c1d27$exports","getPoints","points","$7641779008ab07f3e708dabdbbb046eb$export$9bf2059fd656d5e9","twiceArea","$7641779008ab07f3e708dabdbbb046eb$export$99cb92d00fd73c87","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$9099ad97b570f7c","LinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","getArea","$67787df47ebd352536b767ba5aa6ea83$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","$221ffa684d4ba252080508824e602b78$export$c77fe031a1447f2e","$52f5ef13e882c7db8132623a2b51ee49$export$add61ad31d0a68b4","edge","$52f5ef13e882c7db8132623a2b51ee49$export$586adaf930d9fdb6","opt_right","right","isClockwise","$52f5ef13e882c7db8132623a2b51ee49$export$325e57738fd8b321","$52f5ef13e882c7db8132623a2b51ee49$export$4efd43868de93336","$bffbcd35af658c4477627697774de1c2$var$Polygon","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$bffbcd35af658c4477627697774de1c2$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$exports","getLinearRings","linearRings","$bffbcd35af658c4477627697774de1c2$export$9099ad97b570f7c","$bffbcd35af658c4477627697774de1c2$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$bffbcd35af658c4477627697774de1c2$export$b50d271c6e9656cd","$bffbcd35af658c4477627697774de1c2$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$bffbcd35af658c4477627697774de1c2$export$5d1798f0e1df079","getRadius","startAngle","$3f89ce735a32ce0bc16220a89ae67b2f$export$9099ad97b570f7c","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$3f89ce735a32ce0bc16220a89ae67b2f$var$__extends","appendPolygon","newEndss","multiPolygon","$020a0553c73896bfe8e0cfb3e7ff136b$export$7bbfd5f5d0d7544b","$020a0553c73896bfe8e0cfb3e7ff136b$export$6564f135364e210c","$7311a6a51d57e65f0d3a69bd7a380356$export$664b9cb38de51b70","$7641779008ab07f3e708dabdbbb046eb$export$3ed76a8ff8a671c","getEndss","getFlatInteriorPoints","$8080d3a1460a7f67662c4a8e92d86a37$export$3ed76a8ff8a671c","interiorPoints","$67787df47ebd352536b767ba5aa6ea83$export$2bd6b2f516920f59","getInteriorPoints","$0c87ec0f12a2b62262bf5859757b8a2b$exports","$52f5ef13e882c7db8132623a2b51ee49$export$9ae9bd8fe57776c1","simplifiedEndss","$a357f0a07bdcadd773e93ca791a42f7b$export$503109e33f5b8344","getPolygon","prevEnds","$bffbcd35af658c4477627697774de1c2$exports","getPolygons","$32ab876027ca0904f46063bee68b73aa$export$eae4874c99627698","$e477329667689b6619ea04e4a51dbccc$export$abe2fb3e7ce9556","lastEnds","$4c58aec149e538982cbf4e874e866484$export$9099ad97b570f7c","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","getWidth","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$7eb24b24c1bb92b5f48477cc7ed0ef45$export$55029509b82b2e2b","$7ef0aa4943b3f1208e19af1336a3f8f6$export$4b206f1dd0085e9f","$7ef0aa4943b3f1208e19af1336a3f8f6$export$6cfb92f3ca39d412","$7ef0aa4943b3f1208e19af1336a3f8f6$export$a6463a3b3793c500","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$18c07a12203603b5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$55c06ab37ead2f5d","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ffc0c15ee0fd31b3","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6ad0413f8fea3c71","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4f3c27e569bdb39e","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$b679e5c5d4b15cf5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$d721e051424a5865","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6f57224ec3df03c9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$70c5a077e5d6beb9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$907cf5cff4a8acb1","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","measureElement","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$384c0f09c94ed6cc","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$a2bf16790cd8f004","metrics","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4b2ca35321179b27","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$c02f953f8e44cc0a","offsetX","offsetY","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$executeLabelInstructions","restore","$9395bcf7fa5c622dff9d678b4abf4bba$export$9099ad97b570f7c","RegularShape","hitDetectionCanvas_","fill_","fill","points_","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","imageSize_","hitDetectionImageSize_","render","$9395bcf7fa5c622dff9d678b4abf4bba$var$__extends","getFill","getRadius2","getAngle","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","strokeStyle","strokeWidth","imageSize","angle0","radiusC","beginPath","arc","lineTo","lineWidth","closePath","drawHitDetectionCanvas_","$19d3c8bef588e205c4ab8014047de833$export$9099ad97b570f7c","CircleStyle","$19d3c8bef588e205c4ab8014047de833$var$__extends","setRadius","$9395bcf7fa5c622dff9d678b4abf4bba$exports","$b550892c9c7d6707a4415bf7976deb12$var$Style","Style","geometry_","geometryFunction_","$b550892c9c7d6707a4415bf7976deb12$var$defaultGeometryFunction","renderer_","renderer","text_","zIndex_","zIndex","getRenderer","getText","setRenderer","getGeometryFunction","setFill","setStroke","setText","feature","setZIndex","$b550892c9c7d6707a4415bf7976deb12$var$defaultStyles","$b550892c9c7d6707a4415bf7976deb12$export$33d0043adf82cc14","$19d3c8bef588e205c4ab8014047de833$exports","$b550892c9c7d6707a4415bf7976deb12$export$9099ad97b570f7c","$efe444a788e44e26b0fd0d03352a7cb8$export$9099ad97b570f7c","$a62309e79bc84bd3b6b5fbbfdb8ce983$export$9099ad97b570f7c","Text1","font_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$508255911b6472d9d16e9a97599ab01e$export$9099ad97b570f7c","FeatureFormat","dataProjection","defaultFeatureProjection","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","features","writeGeometry","$508255911b6472d9d16e9a97599ab01e$export$534b7b915a5ec453","write","transformed","decimals","power_1","pow","$e1f6506982452a68a8aaa230bb78068a$export$9099ad97b570f7c","$d51a9db7ffbc5351b0298bfe2864dc58$export$f6c9fc7378d5d6a6","$d51a9db7ffbc5351b0298bfe2864dc58$export$a5039740b67a9c","namespaceURI","qualifiedName","$d51a9db7ffbc5351b0298bfe2864dc58$export$46d2d1e7bcdd99a3","createElementNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$4131dc4da57aa0c8","normalizeWhitespace","$d51a9db7ffbc5351b0298bfe2864dc58$export$970c25ea2962a3d2","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","$d51a9db7ffbc5351b0298bfe2864dc58$export$77e37c6e8311f1ce","$d51a9db7ffbc5351b0298bfe2864dc58$export$a43e9d683f52ab7c","xml","DOMParser","parseFromString","$d51a9db7ffbc5351b0298bfe2864dc58$export$c9b84e3d2c8a2745","valueReader","objectStack","$d51a9db7ffbc5351b0298bfe2864dc58$export$5a6c4415b7f496d8","$d51a9db7ffbc5351b0298bfe2864dc58$export$a228533eec35683a","$d51a9db7ffbc5351b0298bfe2864dc58$export$73d853215f0c71e8","opt_property","localName","$d51a9db7ffbc5351b0298bfe2864dc58$export$2deb56b7ae029e3","nodeWriter","$d51a9db7ffbc5351b0298bfe2864dc58$export$8ebe38e76aa85d36","opt_nodeName","opt_namespaceURI","fixedNodeName","opt_nodeName1","nodeName","$d51a9db7ffbc5351b0298bfe2864dc58$export$81a68ea3ed99d298","$d51a9db7ffbc5351b0298bfe2864dc58$export$56f187f00ba8a12b","orderedKeys","sequence","$d51a9db7ffbc5351b0298bfe2864dc58$export$7567597de432f7e7","namespaceURIs","structure","opt_structureNS","structureNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$d2d9da5f39026f12","parsersNS","firstElementChild","nextElementSibling","parsers","parser","$d51a9db7ffbc5351b0298bfe2864dc58$export$606fcd4c4e16fe20","$d51a9db7ffbc5351b0298bfe2864dc58$export$2e67c97dae900dc9","serializersNS","nodeFactory","opt_keys","$d51a9db7ffbc5351b0298bfe2864dc58$export$cfa8ff2fe3336fdf","$d51a9db7ffbc5351b0298bfe2864dc58$var$xmlSerializer_","$d51a9db7ffbc5351b0298bfe2864dc58$var$document_","implementation","createDocument","$dec84ce654dad439cc55f11914ce0714$export$9099ad97b570f7c","XMLFeature","xmlSerializer_","XMLSerializer","$dec84ce654dad439cc55f11914ce0714$var$__extends","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","$90d80a364a39de433c7f5cd490d4f896$export$2d9b5243090e006a","$90d80a364a39de433c7f5cd490d4f896$export$39fa0db44f151f9d","parseFloat","$90d80a364a39de433c7f5cd490d4f896$export$286b7b22a1a791c7","trim","$90d80a364a39de433c7f5cd490d4f896$export$bbbe78f39d89b09c","bool","$90d80a364a39de433c7f5cd490d4f896$export$8546427d900bb9d0","$90d80a364a39de433c7f5cd490d4f896$export$3ff1a647d173b6de","decimal","string","toPrecision","createTextNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_COLOR","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_SIZE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_SRC","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_SCALE_MULTIPLIER","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_NAMESPACE_URIS","$23a4f6aded846ad8aacbf1f3eca76e14$var$NAMESPACE_URIS","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_ANCHOR_UNITS_MAP","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$extendedDataParser","$23a4f6aded846ad8aacbf1f3eca76e14$var$regionParser","$23a4f6aded846ad8aacbf1f3eca76e14$var$readMultiGeometry","$23a4f6aded846ad8aacbf1f3eca76e14$var$readLineString","$23a4f6aded846ad8aacbf1f3eca76e14$var$readLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$readPoint","$23a4f6aded846ad8aacbf1f3eca76e14$var$readPolygon","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyle","styleMapValue","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyleMapValue","placemarkObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyleURL","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_MULTITRACK_GEOMETRY_PARSERS","$9cc45ed4bf6c6f99d7b74c7015645e2b$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$readGxTrack","$23a4f6aded846ad8aacbf1f3eca76e14$var$NETWORK_LINK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readURI","$23a4f6aded846ad8aacbf1f3eca76e14$var$REGION_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LAT_LON_ALT_BOX_PARSERS","regionObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$LOD_PARSERS","lodObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DOCUMENT_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DOCUMENT_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePlacemark","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_FILL_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$e46f11a75191a508","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_NO_IMAGE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$5e32ef4fe86c9590","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_TEXT_STROKE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STROKE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$886aac8f642d518","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_TEXT_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$4f723e646af0caaf","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$2aa7b16944fbd366","$23a4f6aded846ad8aacbf1f3eca76e14$var$TEXTAREA","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STYLE_ARRAY","$23a4f6aded846ad8aacbf1f3eca76e14$export$e0735583683f1e35","$23a4f6aded846ad8aacbf1f3eca76e14$var$defaultIconUrlFunction","href","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML","KML","$4de6336f82b6fd9bc7cf688bb41b8b96$exports","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction_","iconUrlFunction","$23a4f6aded846ad8aacbf1f3eca76e14$var$__extends","readDocumentOrFolder_","readPlacemark_","readSharedStyle_","readSharedStyleMap_","$fe05caf5f991aea82bd67c9bebabc467$exports","getAttribute","styleFunction","styleUrl","sharedStyles","drawName","multiGeometryPoints","filter","geometry1","type1","search","featureStyle","$23a4f6aded846ad8aacbf1f3eca76e14$var$findStyle","nameStyle","foundStyle","textOffset","imageStyle","imageScale","textStyle","$23a4f6aded846ad8aacbf1f3eca76e14$var$createNameStyleFunction","$8af1af76f23419d9d724a1b0182ffb00$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$createFeatureStyleFunction","styleUri","baseURI","location","URL","fs","readName","readNameFromDocument","readNameFromNode","name_1","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","setAttributeNS","$dec84ce654dad439cc55f11914ce0714$exports","styleValue","$23a4f6aded846ad8aacbf1f3eca76e14$var$readColor","hexColor","$23a4f6aded846ad8aacbf1f3eca76e14$export$1744e74078e3fa10","re","z","$23a4f6aded846ad8aacbf1f3eca76e14$var$readScale","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_MAP_PARSERS","pairObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$PAIR_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_PARSERS","iconObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_PARSERS","origin","xunits","yunits","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$FLAT_LINEAR_RING_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readFlatLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_TRACK_PARSERS","whens","when","Date","gxTrackObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_FLAT_COORDINATES_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readFlatCoordinatesFromNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTRUDE_AND_ALTITUDE_MODE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","$23a4f6aded846ad8aacbf1f3eca76e14$var$setCommonGeometryProperties","$3f89ce735a32ce0bc16220a89ae67b2f$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$FLAT_LINEAR_RINGS_PARSERS","flatLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$INNER_BOUNDARY_IS_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_PARSERS","styleObject","IconObject","drawIcon","hotSpot","test","heading","outline","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","$23a4f6aded846ad8aacbf1f3eca76e14$var$DATA_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDED_DATA_PARSERS","featureObject","displayName","toString","$23a4f6aded846ad8aacbf1f3eca76e14$var$SCHEMA_DATA_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeColorTextNode","rgba","abgr","hex","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDEDDATA_NODE_SERIALIZERS","pair","setAttribute","createCDATASection","$90d80a364a39de433c7f5cd490d4f896$export$53afd9ae5847fbf6","$23a4f6aded846ad8aacbf1f3eca76e14$var$DATA_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_SERIALIZERS","icon","vec2","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeScaleTextNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_TYPE_TO_NODENAME","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$POINT_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STRING_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINEAR_RING_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLYGON_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$MULTI_GEOMETRY_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePrimitiveGeometry","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePolygon","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeMultiGeometry","factory","$23a4f6aded846ad8aacbf1f3eca76e14$var$BOUNDARY_IS_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeBoundaryIs","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_SERIALIZERS","namesAndValues","names","styles","pointStyles","lineStyles","polyStyles","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDEDDATA_NODE_FACTORY","v","styleArray","$23a4f6aded846ad8aacbf1f3eca76e14$var$PRIMITIVE_GEOMETRY_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$PRIMITIVE_GEOMETRY_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLYGON_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$INNER_BOUNDARY_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$OUTER_BOUNDARY_NODE_FACTORY","outerRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_SERIALIZERS","iconProperties","origin_1","$23a4f6aded846ad8aacbf1f3eca76e14$export$9099ad97b570f7c","$6e657bb9f80dab756c945a825e2a2cee$export$9099ad97b570f7c","$3a8294651627eb74246351f5b596cf68$export$9099ad97b570f7c","BaseLayer","visible","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$3a8294651627eb74246351f5b596cf68$var$__extends","getClassName","getLayerState","opt_managed","layer","managed","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","zindex","$939d3f0e5ddda81ef3d6b6e4c37a0795$export$9099ad97b570f7c","$88faaf1879d30d470a1b447dd4b5a77a$export$9099ad97b570f7c","$1935b85c22cfc539ea58e141ab0b37d6$export$16970faadcd3f29b","layerState","viewState","zoom","$1935b85c22cfc539ea58e141ab0b37d6$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","setMap","handleSourcePropertyChange_","setSource","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","array","states","getSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$3a8294651627eb74246351f5b596cf68$exports","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$52488a0195cf0e38344877f5a3896831$export$9099ad97b570f7c","MapRenderer","map_","$52488a0195cf0e38344877f5a3896831$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","$1935b85c22cfc539ea58e141ab0b37d6$exports","inView","getWrapX","callback_1","order","i1","distanceSq","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$2ae21f590be041e7827bf48426c0766a$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$7ef0aa4943b3f1208e19af1336a3f8f6$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","children_","renderedVisible_","$2ae21f590be041e7827bf48426c0766a$var$__extends","event_1","$1a95b8d63eeb9d5cd5e2742791ea7ab2$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$439ebc2b0f0ec9f4","getDataAtPixel","$52488a0195cf0e38344877f5a3896831$exports","$994e322493abe750f187f7e3835dca5c$export$9099ad97b570f7c","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$export$9099ad97b570f7c","Collection","unique_","unique","array_","assertUnique_","updateLength_","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$e6a59fbd122f687b33c2f382a3c7634b$exports","setLayers","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$f8e1a00fe597e09d283a3697649a8ad5$export$9099ad97b570f7c","MapEvent","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","getEventPixel","getCoordinateFromPixel","$f8e1a00fe597e09d283a3697649a8ad5$exports","$7aa259efacd921e7e7d327d1aea40a76$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$abba75ad998e5558d931e97019b1ab4c$export$9099ad97b570f7c","$75ed2fc91ec6cb8478583ef358a9dd4d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","emulateClick_","pointerEvent","newEvent","$5185059e8a82c1ae03c4e1ba7159b318$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$841b38a534c9217d8aceb4320d3d91b5$export$9099ad97b570f7c","$71b981cc74aab5981a718ea8e06b800b$export$9099ad97b570f7c","$eeb9190850355aed8fc5d92349a26bc6$export$55b8074a560bbdf4","$eeb9190850355aed8fc5d92349a26bc6$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$070765ef09fbcd82a0016eb3aec41934$export$9099ad97b570f7c","$6bfe069e85349c527971d875462feeac$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$6bfe069e85349c527971d875462feeac$var$__extends","added","getTilesLoading","tile","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","$6bfe069e85349c527971d875462feeac$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","$69bda6b48e87f8072533951cf5cd4b41$export$9099ad97b570f7c","$6fef8cd20559fa789cc7c5f681ed5561$export$9099ad97b570f7c","$61ba71c2b15c8b7e6577526180db0da5$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$61ba71c2b15c8b7e6577526180db0da5$export$eaafe0fae18e32b1","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$e97ec87d2336bd4e","$4c6a822b604dbfa9a10722399f7335d0$export$eaafe0fae18e32b1","$8717569d70d85bd7f28c8c1b2c37daee$export$9fbc3b1d6b2da9ec","$8717569d70d85bd7f28c8c1b2c37daee$export$673b9849e2bc032c","$8717569d70d85bd7f28c8c1b2c37daee$export$1b5c1277e30d397d","$8717569d70d85bd7f28c8c1b2c37daee$export$5523e35ab8ae283a","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","returnValue","$19fadbefe1b7e34cc76223b5c3e441cc$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$19fadbefe1b7e34cc76223b5c3e441cc$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","$75cf935c4655e9fc21b1ade56ed27175$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$75cf935c4655e9fc21b1ade56ed27175$export$7690ad4e930f454b","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","rotX","rotY","$19fadbefe1b7e34cc76223b5c3e441cc$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","rotationConstraint","constraints_","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","fromExtent","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$b198bbb8a7fca092de94dd3a772c1343$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$d66bdf9af75d90254b022f9a4b768a43$exports","view","$19fadbefe1b7e34cc76223b5c3e441cc$exports","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$6bfe069e85349c527971d875462feeac$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$75ed2fc91ec6cb8478583ef358a9dd4d$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","$8316c877d328ebfc4f4b917229eec057$export$9099ad97b570f7c","Control","target_","$8316c877d328ebfc4f4b917229eec057$var$__extends","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","title","handleClick_","cssClasses","renderedAttributions_","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8316c877d328ebfc4f4b917229eec057$exports","$aef56543978371a8090d728a4f107ac0$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","$aef56543978371a8090d728a4f107ac0$var$__extends","resetNorth_","$9812beea87bdcda9027d52b89085c87c$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","$9812beea87bdcda9027d52b89085c87c$var$__extends","zoomByDelta_","currentZoom","newZoom","$c147d956996cb96e879ea56bdc9c5d5d$export$9099ad97b570f7c","$1ad0cf5090e3852174414bfc8cc27b9e$export$63568b31cb17dd4d","$1ad0cf5090e3852174414bfc8cc27b9e$export$d2c07614bfd6a817","$1ad0cf5090e3852174414bfc8cc27b9e$export$9099ad97b570f7c","Interaction","setActive","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","active","$4eeedd039b7e6d5b8277b175715f9541$export$9099ad97b570f7c","DoubleClickZoom","delta_","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","stopEvent","shiftKey","$1ad0cf5090e3852174414bfc8cc27b9e$exports","zoomByDelta","$0714aed143b912743afff175db44c1dc$export$e61edea4dfe4ed9b","$0714aed143b912743afff175db44c1dc$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$0714aed143b912743afff175db44c1dc$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","$054715504eaffdc825d0a6ada99ec596$export$8dbdea330bbd6b3c","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$584a07df7b145c47","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$363947888fb85da6","$054715504eaffdc825d0a6ada99ec596$export$a8612972eacfc116","$054715504eaffdc825d0a6ada99ec596$export$9f5e19851eeaf2c1","$054715504eaffdc825d0a6ada99ec596$export$1734dfcac3c09b2f","$054715504eaffdc825d0a6ada99ec596$export$59c8376875f673f8","$054715504eaffdc825d0a6ada99ec596$export$5bbcce8021828272","tagName","$054715504eaffdc825d0a6ada99ec596$export$d31d3f3aa38542a8","pointerType","$054715504eaffdc825d0a6ada99ec596$export$45cd27c0322d6513","isPrimary","$959ec1b544453a9fa4f0e9221c3bb0b0$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","centroid","$0714aed143b912743afff175db44c1dc$exports","update","getDistance","centerpx","$719e5208cd50905e41bacbcae2219883$export$9099ad97b570f7c","DragRotate","lastAngle_","$719e5208cd50905e41bacbcae2219883$var$__extends","$d0055a036577a61fd8306330947568c7$export$9099ad97b570f7c","RenderBox","startPixel_","endPixel_","$d0055a036577a61fd8306330947568c7$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$4d9b552836937ca2","DragBoxEvent","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$export$9099ad97b570f7c","DragBox","box_","$d0055a036577a61fd8306330947568c7$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$export$9099ad97b570f7c","DragZoom","out_","out","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","mapExtent","boxPixelExtent","$8ebfb36ef5532881c5652b708da2c120$export$9f54817615211741","$275b26378704892d776581791f32dc0e$exports","$8d5ac6bc9707ee873610cb367c0dab7f$export$9099ad97b570f7c","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$55ea853e77e2fe25fa1a8793cb31a3bf$export$9099ad97b570f7c","KeyboardZoom","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$f7a99b9e7b1a72242a3eb408b28d3563$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$9099ad97b570f7c","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$601b81cfcc535d77832cc96f04e942a1$var$__extends","scaleDelta","$976448907138da16f7612e32ecc55ac7$export$9099ad97b570f7c","Map1","$9812beea87bdcda9027d52b89085c87c$exports","zoomOptions","$aef56543978371a8090d728a4f107ac0$exports","rotateOptions","attribution","$194d017bd833b991c2c712fa2ff5b0e5$exports","attributionOptions","$c10299a05f898a09c43f788b5b6dfdbd$export$b403fbac94228e09","altShiftDragRotate","$719e5208cd50905e41bacbcae2219883$exports","doubleClickZoom","$4eeedd039b7e6d5b8277b175715f9541$exports","zoomDelta","zoomDuration","dragPan","$959ec1b544453a9fa4f0e9221c3bb0b0$exports","pinchRotate","$74b3a0ab43d5d3c47ed1a15cedc99f6a$exports","pinchZoom","$601b81cfcc535d77832cc96f04e942a1$exports","keyboard","$bcd9d2d6fd38b8643ae7b7b6fd22a911$exports","$55ea853e77e2fe25fa1a8793cb31a3bf$exports","mouseWheelZoom","$f7a99b9e7b1a72242a3eb408b28d3563$exports","shiftDragZoom","$b5cd6c68e27395a36aa4c8d3c5395250$exports","$ad51cb5d42c2f2a2874b19907e742966$export$b403fbac94228e09","$976448907138da16f7612e32ecc55ac7$var$__extends","$2ae21f590be041e7827bf48426c0766a$exports","$b198bbb8a7fca092de94dd3a772c1343$exports","$a51010926fccd7fa7fa549e12811b655$exports","t1","t2","r1","h1","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","all","_all","toBBox","o2","collides","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","_condense","compareMinX","compareMinY","toJSON","fromJSON","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","M","_allDistMargin","define","amd","RBush","$e311f93de68f58225dfc37d89d1dcffc$export$9099ad97b570f7c","opt_maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionLike","$6a9611a0560ac769e67fadc6cfef9a2c$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","getContextOptions","refresh","setAttributions","setState","$4b7d9e079415657c49d05e16783d2ed4$export$9099ad97b570f7c","$26b846260444bc742bddf88d96721338$export$8dbdea330bbd6b3c","$2ef5772bb5b0926a9ba82fc2a88f3163$var$withCredentials","$2ef5772bb5b0926a9ba82fc2a88f3163$export$52988233cf090939","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","response","onerror","send","$2ef5772bb5b0926a9ba82fc2a88f3163$export$4355fa6d12274ca5","addFeatures","$76e99b295c09c7c5e340e251e89879b1$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$76e99b295c09c7c5e340e251e89879b1$var$__extends","$76e99b295c09c7c5e340e251e89879b1$export$9099ad97b570f7c","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$6a9611a0560ac769e67fadc6cfef9a2c$exports","$6ea2e09c0ee686e4fcf344e90f929221$export$9099ad97b570f7c","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","$6ea2e09c0ee686e4fcf344e90f929221$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","$69031f3b45b1bb2d223c45e6bbe47b36$export$9099ad97b570f7c","ImageTile","tileLoadFunction","tileLoadFunction_","$69031f3b45b1bb2d223c45e6bbe47b36$var$__extends","naturalWidth","naturalHeight","$6ea2e09c0ee686e4fcf344e90f929221$exports","$7e4c33869bbc09ad771e58efcd7791e2$var$brokenDiagonalRendering_","$3a0ea260bd0161734cb5e603b9086c9d$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$dffde8f1acde674bc74a24601c2788a7$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$7e4c33869bbc09ad771e58efcd7791e2$var$drawTestTriangle","v1","v2","moveTo","clip","$7e4c33869bbc09ad771e58efcd7791e2$var$verifyBrokenDiagonalRendering","$7e4c33869bbc09ad771e58efcd7791e2$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$7e4c33869bbc09ad771e58efcd7791e2$export$792a797b69be0d58","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$916dab65013919ad0345478f9a9f4e0f$export$27dc5719ceda6735","$7e4c33869bbc09ad771e58efcd7791e2$var$isBrokenDiagonalRendering","ud","vd","step","steps","$97e37be8733b1927a1ed959b854a8d18$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$7e4c33869bbc09ad771e58efcd7791e2$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$97e37be8733b1927a1ed959b854a8d18$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$101ae72fedfe330e8897d118e958a8b6$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$c98d704946f2a3a0e1335bd43bccb465$export$ea8082d0226d35a5","opt_tileCoord","$c98d704946f2a3a0e1335bd43bccb465$export$1039fb0288fd71e3","$c98d704946f2a3a0e1335bd43bccb465$export$a0f0ccbe5bbc0789","$8328c42c04c9adada69111ec662476d9$export$9099ad97b570f7c","TileCache","$8328c42c04c9adada69111ec662476d9$var$__extends","expireCache","pruneExceptNewestZ","$c98d704946f2a3a0e1335bd43bccb465$export$5208a752d34424e5","$6fb7cf65abcfc8d879372ec2dca0d0b8$export$9099ad97b570f7c","$6a958d3d10a45fbc13d601def6cb4731$var$TileRange","TileRange","containsTileRange","tileRange","getHeight","$6a958d3d10a45fbc13d601def6cb4731$export$ea8082d0226d35a5","$6a958d3d10a45fbc13d601def6cb4731$export$9099ad97b570f7c","$0f9feaa19e1db86e91525f400c1bbfa1$var$tmpTileCoord","$0f9feaa19e1db86e91525f400c1bbfa1$export$9099ad97b570f7c","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","$0b7f50deff6bfc90c8b239d5ceca7010$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$0b7f50deff6bfc90c8b239d5ceca7010$var$resolutionsFromExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$57c49ef1657592d4","$0b7f50deff6bfc90c8b239d5ceca7010$export$9666e825b22d806d","$0b7f50deff6bfc90c8b239d5ceca7010$export$6dfef52f91d4f582","opt_maxResolution","half","$cde35ab3df9629f8ffd26ea2f187b41e$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$8328c42c04c9adada69111ec662476d9$exports","tmpSize","tileOptions","zDirection","$cde35ab3df9629f8ffd26ea2f187b41e$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","$0b7f50deff6bfc90c8b239d5ceca7010$export$5a0d9577a24f3c5b","$c98d704946f2a3a0e1335bd43bccb465$export$b46b80619528d4e5","updateCacheSize","tileCount","useTile","$cde35ab3df9629f8ffd26ea2f187b41e$export$8434c8db61edbf9d","TileSourceEvent","$cde35ab3df9629f8ffd26ea2f187b41e$export$9099ad97b570f7c","$f3b33fdefe65058178a4b532c7b3f14b$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$f3b33fdefe65058178a4b532c7b3f14b$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$c98d704946f2a3a0e1335bd43bccb465$export$4639c7f2947f4458","$f3b33fdefe65058178a4b532c7b3f14b$export$c6a04e0c49b28953","$671acdd0ca89710db49a7e8e41335e8e$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","$671acdd0ca89710db49a7e8e41335e8e$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","tileState","$cde35ab3df9629f8ffd26ea2f187b41e$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop_1","$f3b33fdefe65058178a4b532c7b3f14b$export$47abe479fba0e55d","$f1c529d0542d6a8d6fa77a64fa516101$var$defaultTileLoadFunction","imageTile","$f1c529d0542d6a8d6fa77a64fa516101$export$9099ad97b570f7c","TileImage","tileClass","$69031f3b45b1bb2d223c45e6bbe47b36$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$f1c529d0542d6a8d6fa77a64fa516101$var$__extends","usedTileCache","getGutter","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$97e37be8733b1927a1ed959b854a8d18$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$671acdd0ca89710db49a7e8e41335e8e$exports","$fd3ab3577c0c67d5f04f77f7494fe563$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$0b7f50deff6bfc90c8b239d5ceca7010$export$5731532c605ee56","$fd3ab3577c0c67d5f04f77f7494fe563$var$__extends","$f1c529d0542d6a8d6fa77a64fa516101$exports","$ceed79ad4f0d8f0ebaf810c3cca30983$var$Property","$ceed79ad4f0d8f0ebaf810c3cca30983$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$ceed79ad4f0d8f0ebaf810c3cca30983$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","$b550892c9c7d6707a4415bf7976deb12$export$4aaa4bacaec09e94","$75febe525c6e0d71892cea5e044a142c$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$75febe525c6e0d71892cea5e044a142c$export$c649c04369bd3370","$75febe525c6e0d71892cea5e044a142c$export$2513c58bc344fc5c","$75febe525c6e0d71892cea5e044a142c$export$84e3c67fd41b07f5","$75febe525c6e0d71892cea5e044a142c$export$6cd4b1e0c0e7240c","$75febe525c6e0d71892cea5e044a142c$export$9099ad97b570f7c","$98c4b84222a5e84ec508cd638c4e0b8c$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","opt_declutterImageWithText","setTextStyle","$ca67e4c506ae561bc3174e981b55d257$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$ca67e4c506ae561bc3174e981b55d257$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$072d5e6cee1f9ae87cd55eb588566cc6$export$9099ad97b570f7c","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$072d5e6cee1f9ae87cd55eb588566cc6$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$ca67e4c506ae561bc3174e981b55d257$exports","$28ceeb2640c662153e0cc1bb27e7eea9$export$9099ad97b570f7c","CanvasLineStringBuilder","$28ceeb2640c662153e0cc1bb27e7eea9$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$f5fec2e7653cdbd2c7958b8312f0d7d6$export$9099ad97b570f7c","CanvasPolygonBuilder","$f5fec2e7653cdbd2c7958b8312f0d7d6$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$f19e98a3c9584b88eb9c26a752a19276$export$e8c34bbbade92a3a","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$7e7051822986fcb02ea0e43ac0707b32$export$3964e67694391753","$7e7051822986fcb02ea0e43ac0707b32$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$7e7051822986fcb02ea0e43ac0707b32$var$__extends","fillState","strokeState","textState","geometryType","geometryWidths","beg_1","keep","saveTextStates_","p0","p2","p3","pixelRatio_1","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","$4f54cdaa0352e7689a6e30aa9d8207ec$var$BATCH_CONSTRUCTORS","$f5fec2e7653cdbd2c7958b8312f0d7d6$exports","$072d5e6cee1f9ae87cd55eb588566cc6$exports","$28ceeb2640c662153e0cc1bb27e7eea9$exports","$7e7051822986fcb02ea0e43ac0707b32$exports","$4f54cdaa0352e7689a6e30aa9d8207ec$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$ae15ed96a99c1303ea67938747c94fca$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$ae15ed96a99c1303ea67938747c94fca$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","$ac230d10056414a40eb774bd091234f1$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$ac230d10056414a40eb774bd091234f1$var$__extends","useContainer","layerClassName","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","err","Uint8Array","$ae15ed96a99c1303ea67938747c94fca$exports","$2a2c9e207ab3a32ae55e264c8b11e252$export$9099ad97b570f7c","$56c23dc34f9f14c7874ab5d8b63c5fb3$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$tmpExtent","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p1","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p2","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p3","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p4","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$rtlRegEx","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$horizontalTextAlign","align","TEXT_ALIGN","$6cf1557e9efeeb4d32c6b7acaeb9c268$export$9099ad97b570f7c","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$c6e46405591acfe99e5a94d22fbe8573$var$ORDER","$c6e46405591acfe99e5a94d22fbe8573$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$c6e46405591acfe99e5a94d22fbe8573$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$c6e46405591acfe99e5a94d22fbe8573$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$c6e46405591acfe99e5a94d22fbe8573$export$9099ad97b570f7c","$9f8df4495769241e9ec70201b90e0eaa$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9f8df4495769241e9ec70201b90e0eaa$var$__extends","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$9f8fd0aab32ac5c353b56f527e1d00a9$export$5d244421488756f8","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$65a5cfeed6fd0c33","feature1","feature2","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f0ea347488340e3d","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$522dfd100dd96ba1","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderGeometry","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderFeatureInternal","$c2243072b6513ba407326b2a30b1374a$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c2243072b6513ba407326b2a30b1374a$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$af95442a94d1862a138c401177ef0c4b$export$e7468c0ae08395df","clipped","transforms","$9f8df4495769241e9ec70201b90e0eaa$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","$9f8fd0aab32ac5c353b56f527e1d00a9$export$9fd146a6491490e3","resultFeatures","$9f8fd0aab32ac5c353b56f527e1d00a9$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","$8ebfb36ef5532881c5652b708da2c120$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f3b3f9822f340683","dirty","renderFeature","userExtent","replayGroupInstructions","$ac230d10056414a40eb774bd091234f1$exports","$2f5ed0ce65ecb2bfe439d05296b3d36a$export$9099ad97b570f7c","VectorLayer","$2f5ed0ce65ecb2bfe439d05296b3d36a$var$__extends","$c2243072b6513ba407326b2a30b1374a$exports","$ceed79ad4f0d8f0ebaf810c3cca30983$exports","$62b4010d0c10d05a6eb5fbcd9e877cb9$var$supportedExtensions","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$4fae3d8ec3d62e0a","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$1115845160c9bee9","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$909515d02f210383","$62b4010d0c10d05a6eb5fbcd9e877cb9$var$CONTEXT_IDS","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$1c9dfb92a34f1fcf","opt_attributes","$02cc97bf01bb3e29729e4a43136299b6$export$ad4b78097bf94d85","$02cc97bf01bb3e29729e4a43136299b6$export$2ced8f41c55fa306","Float32Array","Uint32Array","$02cc97bf01bb3e29729e4a43136299b6$export$9099ad97b570f7c","WebGLArrayBuffer","opt_usage","usage","ofSize","fromArray","from","fromArrayBuffer","buffer","getUsage","$501d706d50d79bf1747fa2e06c13b468$export$9099ad97b570f7c","$082906594eab2940979815ab9b245f21$export$9099ad97b570f7c","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","getGL","init","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","ImageData","texture","uniform3f","uniform4f","uniform1f","$b8f56a2658bfbbbe58c154ca943f14e7$export$e2085a48d9d846ba","mat4","$a213a3ce88096e82b8501ef33f381740$export$9fb8f3e6fc336132","$a213a3ce88096e82b8501ef33f381740$export$9aeec108beb7c801","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","TIME","ZOOM","RESOLUTION","$a213a3ce88096e82b8501ef33f381740$export$a267a1a615d1668f","UNSIGNED_SHORT","UNSIGNED_INT","$a213a3ce88096e82b8501ef33f381740$export$9f69b31ae6f7009b","attributes","attr","$a213a3ce88096e82b8501ef33f381740$var$getByteSizeFromType","BYTES_PER_ELEMENT","Uint16Array","$a213a3ce88096e82b8501ef33f381740$export$9099ad97b570f7c","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","bufferCache_","currentProgram_","getSupportedExtensions","$62b4010d0c10d05a6eb5fbcd9e877cb9$export$8185dc2b04913cae","getExtension","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","postProcessPasses_","postProcesses","options1","shaderCompileErrors_","$a213a3ce88096e82b8501ef33f381740$var$__extends","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","prepareDraw","getCanvas","applyFrameState","prepareDrawToRenderTarget","renderTarget","opt_disableAlphaBlend","getFramebuffer","getTexture","ZERO","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","offsetScaleMatrix","offsetRotateMatrix","$af95442a94d1862a138c401177ef0c4b$export$d40e2456b1281660","setUniformMatrixValue","setUniformFloatValue","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","makeProjectionTransform","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","opt_data","opt_texture","$52492a5d5a5cf9f2155f89c2c989fa4d$export$f35e0f0520ed8c07","GENERATE_BUFFERS","$52492a5d5a5cf9f2155f89c2c989fa4d$var$WebGLLayerRenderer","WebGLLayerRenderer","helper","$a213a3ce88096e82b8501ef33f381740$exports","$52492a5d5a5cf9f2155f89c2c989fa4d$var$__extends","$52492a5d5a5cf9f2155f89c2c989fa4d$var$tmpArray_","$52492a5d5a5cf9f2155f89c2c989fa4d$var$bufferPositions_","vertexPosition","indexPosition","$52492a5d5a5cf9f2155f89c2c989fa4d$var$writePointVertex","$52492a5d5a5cf9f2155f89c2c989fa4d$export$402a9517d8d9fb90","elementIndex","vertexBuffer","indexBuffer","customAttributesCount","bufferPositions","customAttrs","vPos","iPos","baseIndex","$52492a5d5a5cf9f2155f89c2c989fa4d$export$d2530fde2918c51d","createImageData","$52492a5d5a5cf9f2155f89c2c989fa4d$export$89728eb3e9a820de","radix","divide","$52492a5d5a5cf9f2155f89c2c989fa4d$export$4a313f27a0e30974","mult","$52492a5d5a5cf9f2155f89c2c989fa4d$export$9099ad97b570f7c","$f64fa72ac4564efa0d58e5ad5fee1414$var$tmpArray4","$f64fa72ac4564efa0d58e5ad5fee1414$export$9099ad97b570f7c","WebGLRenderTarget","helper_","texture_","framebuffer_","data_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","$9d3e887f16ae055cd8da2de24c5566f6$var$blob","Blob","$9d3e887f16ae055cd8da2de24c5566f6$var$url","createObjectURL","$971f56de0b1cde93924292a879dc7bb9$export$9099ad97b570f7c","WebGLPointsLayerRenderer","projectionMatrixTransform","DefaultUniform","sourceRevision_","verticesBuffer_","hitVerticesBuffer_","indicesBuffer_","program_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitProgram_","customAttributes","attribute","AttributeType","hitDetectionAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","worker_","Worker","received","$52492a5d5a5cf9f2155f89c2c989fa4d$exports","WebGLWorkerMessageType","projectionTransform","hitDetection","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","$971f56de0b1cde93924292a879dc7bb9$var$__extends","renderCount","renderHitDetection","viewNotMoving","extentChanged","sourceChanged","rebuildBuffers_","featureCache","totalInstructionsCount","totalHitInstructionsCount","hitColor","tmpCoords","tmpColor","renderIndex","hitIndex","featureUid","colorEncodeId","postMessage","hitMessage","colorDecodeId","terminate","$4e846b5067287bfa27b20cce73a80019$var$Property","$4e846b5067287bfa27b20cce73a80019$var$DEFAULT_GRADIENT","$4e846b5067287bfa27b20cce73a80019$export$9099ad97b570f7c","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","$4e846b5067287bfa27b20cce73a80019$var$__extends","getBlur","getGradient","colors","createLinearGradient","addColorStop","$4e846b5067287bfa27b20cce73a80019$var$createGradient","$971f56de0b1cde93924292a879dc7bb9$exports","u_size","u_blurSlope","u_gradientTexture","$2f5ed0ce65ecb2bfe439d05296b3d36a$exports","$013ee184ddda363412ada1e10e95871e$export$9099ad97b570f7c","$ab70eb0a0a56b112261264db1ea7acab$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$ab70eb0a0a56b112261264db1ea7acab$var$__extends","getPreload","getUseInterimTilesOnError","$21101e8f6691f861098a74ca233ba3e1$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$21101e8f6691f861098a74ca233ba3e1$var$__extends","isDrawableTile","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","postRenderFunction","tileSource1","frameState1","opt_tileCallback","$21101e8f6691f861098a74ca233ba3e1$export$9099ad97b570f7c","$7f639b92eb9591e7aded56644548f656$export$9099ad97b570f7c","TileLayer","$7f639b92eb9591e7aded56644548f656$var$__extends","$21101e8f6691f861098a74ca233ba3e1$exports","$ab70eb0a0a56b112261264db1ea7acab$exports","$634f916bc30b7d6650877f3f4b6a8b3a$var$bundleURL","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBaseURL","$634f916bc30b7d6650877f3f4b6a8b3a$export$da289beea9c5b10d","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURL","$824bc590bf0a3702ac7bd27152cb0639$var$dirname","_filePath","filePath","slashIndex","$824bc590bf0a3702ac7bd27152cb0639$var$relative","to","fromParts","divergeIndex","toParts","module","exports","fromId","toId","$824bc590bf0a3702ac7bd27152cb0639$require$resolve","_dirname","_relative","$32261ce363b56909409281539a3cb948$exports","getBundleURL","$c86b75415f723d98f447db0a1194b2fb$var$raster","$7f639b92eb9591e7aded56644548f656$exports","$fd3ab3577c0c67d5f04f77f7494fe563$exports","$c86b75415f723d98f447db0a1194b2fb$var$vector","$76e99b295c09c7c5e340e251e89879b1$exports","$23a4f6aded846ad8aacbf1f3eca76e14$exports","$c86b75415f723d98f447db0a1194b2fb$var$map","$976448907138da16f7612e32ecc55ac7$exports","$c86b75415f723d98f447db0a1194b2fb$var$displayFeatureInfo","info","cursor"],"version":3,"file":"kml.1c436c48.js.map"}