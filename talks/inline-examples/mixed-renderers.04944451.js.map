{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-f0873e87382c8dbf82927fa8b1c459c7.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/format/KML.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/style/Text.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","node_modules/@parcel/runtime-js/lib/runtime-ca6564fba06c1415ad08fd3e11f518ce.js","node_modules/@parcel/runtime-js/lib/runtime-57da72cb66bfba510e50504e4714a779.js","src/mixed-renderers.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"3Wo4N\\\":\\\"mixed-renderers.04944451.js\\\",\\\"oaxmK\\\":\\\"world.843a5534.svg\\\",\\\"6la4e\\\":\\\"2012_Earthquakes_Mag5.c58e23ec.kml\\\",\\\"0acRd\\\":\\\"extent-constrained.7620afdc.css\\\",\\\"3s7cU\\\":\\\"extent-constrained.55f9f859.js\\\",\\\"39l4W\\\":\\\"mixed-renderers.88cf3e0b.js\\\",\\\"6reRQ\\\":\\\"extent-constrained.af3f9307.js\\\"}\"));","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend, includes} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} yunits Units of Y.\n * @property {import(\"../style/IconOrigin.js\").default} origin Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [opt_options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    let imageSize = imageStyle.getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = (imageScale[0] * imageSize[0]) / 2;\n      textOffset[1] = (-imageScale[1] * imageSize[1]) / 2;\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return (\n                  type === GeometryType.POINT ||\n                  type === GeometryType.MULTI_POINT\n                );\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            drawName =\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && name.search(/&[^&]+;/) > -1) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(flatCoordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    ('fillStyle' in styleObject\n      ? styleObject['fillStyle']\n      : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    ('textStyle' in styleObject\n      ? styleObject['textStyle']\n      : DEFAULT_TEXT_STYLE);\n  const strokeStyle =\n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n      ? styleObject['strokeStyle']\n      : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type !== GeometryType.POLYGON &&\n                    type !== GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type !== GeometryType.POLYGON &&\n            type !== GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POLYGON ||\n                    type === GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type === GeometryType.POLYGON ||\n            type === GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: IconAnchorUnits.PIXELS,\n          y: size[1] - anchor[1],\n          yunits: IconAnchorUnits.PIXELS,\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === GeometryType.GEOMETRY_COLLECTION) {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === GeometryType.MULTI_POINT) {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === GeometryType.MULTI_LINE_STRING) {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === GeometryType.MULTI_POLYGON) {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === GeometryType.POINT ||\n          type === GeometryType.LINE_STRING ||\n          type === GeometryType.POLYGON\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POINT) {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_LINE_STRING) {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POLYGON) {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === GeometryType.GEOMETRY_COLLECTION) {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POINT ||\n                    type === GeometryType.MULTI_POINT\n                  );\n                }).length;\n            }\n            return (\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT\n            );\n          }\n        });\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.LINE_STRING ||\n                      type === GeometryType.MULTI_LINE_STRING\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.LINE_STRING ||\n                type === GeometryType.MULTI_LINE_STRING\n              );\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.POLYGON ||\n                      type === GeometryType.MULTI_POLYGON\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.POLYGON ||\n                type === GeometryType.MULTI_POLYGON\n              );\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"3Wo4N\", \"oaxmK\")","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"3Wo4N\", \"6la4e\")","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport {Layer, Heatmap} from 'ol/layer';\nimport {composeCssTransform} from 'ol/transform';\nimport VectorSource from 'ol/source/Vector';\nimport {KML} from 'ol/format';\n\n// @ts-ignore\nimport svg from 'url:./data/world.svg';\n// @ts-ignore\nimport earthquakes from 'url:./data/2012_Earthquakes_Mag5.kml';\n\nvar map = new Map({\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    extent: [-180, -90, 180, 90],\n    projection: 'EPSG:4326',\n    zoom: 2\n  })\n});\n\nconst heatmapLayer = new Heatmap({\n  source: new VectorSource({\n    url: earthquakes,\n    format: new KML({\n      extractStyles: false\n    })\n  })\n});\n\nmap.addLayer(heatmapLayer);\n\nvar svgContainer = document.createElement('div');\nvar xhr = new XMLHttpRequest();\nconsole.log(svg)\nxhr.open('GET', svg);\nxhr.addEventListener('load', function() {\n  var svg = xhr.responseXML.documentElement;\n  svgContainer.ownerDocument.importNode(svg, false);\n  svgContainer.appendChild(svg);\n});\nxhr.send();\n\nvar width = 2560;\nvar height = 1280;\nvar svgResolution = 360 / width;\nsvgContainer.style.width = width + 'px';\nsvgContainer.style.height = height + 'px';\nsvgContainer.style.transformOrigin = 'top left';\nsvgContainer.style.position = 'absolute';\nsvgContainer.className = 'svg-layer';\n\nconst svgLayer = new Layer({\n  /**\n   * @param {import(\"ol/PluggableMap\").FrameState} frameState \n   */\n  render: function(frameState) {\n    var scale = svgResolution / frameState.viewState.resolution;\n    var center = frameState.viewState.center;\n    var size = frameState.size;\n    var cssTransform = composeCssTransform(\n      size[0] / 2, size[1] / 2,\n      scale, scale,\n      frameState.viewState.rotation,\n      -center[0] / svgResolution - width / 2, center[1] / svgResolution - height / 2);\n    svgContainer.style.transform = cssTransform;\n    svgContainer.style.opacity = String(svgLayer.getOpacity());\n    return svgContainer;\n  }\n});\n\nmap.addLayer(svgLayer);"],"names":["$7d806a7a603c235ec027b73d847f4d95$var$mapping","$7d806a7a603c235ec027b73d847f4d95$export$357eb1b4f03c1402","pairs","keys","Object","i","length","$7d806a7a603c235ec027b73d847f4d95$export$40339995e8a21591","id","resolved","Error","parcelRequire","register","JSON","parse","$0c87ec0f12a2b62262bf5859757b8a2b$export$9099ad97b570f7c","_super","MultiPoint","coordinates","opt_layout","_this","call","this","Array","isArray","setFlatCoordinates","setCoordinates","$0c87ec0f12a2b62262bf5859757b8a2b$var$__extends","prototype","appendPoint","point","flatCoordinates","$3MevS","extend","getFlatCoordinates","slice","changed","clone","multiPoint","layout","applyProperties","closestPointXY","x","y","closestPoint","minSquaredDistance","$4lmw7","closestSquaredDistanceXY","getExtent","stride","ii","squaredDistance","$4qq0p","j","getCoordinates","$5X4hW","inflateCoordinates","getPoint","index","n","$5g6wp","default","getPoints","points","push","getType","$1gVIf","MULTI_POINT","intersectsExtent","extent","containsXY","setLayout","$6X6IT","deflateCoordinates","$2FGG8","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_COLOR","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_SIZE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE_SRC","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_SCALE_MULTIPLIER","$3f89ce735a32ce0bc16220a89ae67b2f$export$9099ad97b570f7c","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","maxDelta_","maxDeltaRevision_","orientedRevision_","orientedFlatCoordinates_","getLayout","polygons","endss","polygon","offset","ends","getEnds","jj","undefined","$3f89ce735a32ce0bc16220a89ae67b2f$var$__extends","appendPolygon","len","newEndss","multiPolygon","getRevision","Math","sqrt","$3QyYH","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","getOrientedFlatCoordinates","$3v8bp","linearRingssContainsXY","getArea","$3B90O","linearRingss","opt_right","$2wxLi","orientLinearRingsArray","inflateMultiCoordinatesArray","getEndss","getFlatInteriorPoints","flatCenters","createEmpty","createOrUpdateFromFlatCoordinates","$8080d3a1460a7f67662c4a8e92d86a37$export$3ed76a8ff8a671c","$39fh1","getInteriorPointsOfMultiArray","getInteriorPoints","$0c87ec0f12a2b62262bf5859757b8a2b$exports","$3dG11","XYM","linearRingssAreOriented","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEndss","$4YdW9","quantizeMultiArray","XY","getPolygon","prevEnds","end","$5QgBH","getPolygons","MULTI_POLYGON","$1xC0k","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","$a62309e79bc84bd3b6b5fbbfdb8ce983$export$9099ad97b570f7c","Text1","opt_options","options","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","scale","scaleArray_","$43BI1","toSize","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","$6Spvy","color","maxAngle_","maxAngle","PI","placement_","placement","$7iFu4","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getScale","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","getScaleArray","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRotateWithView","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_NAMESPACE_URIS","$23a4f6aded846ad8aacbf1f3eca76e14$var$NAMESPACE_URIS","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_ANCHOR_UNITS_MAP","$17PKZ","FRACTION","PIXELS","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_PARSERS","$6u7wO","makeStructureNS","$23a4f6aded846ad8aacbf1f3eca76e14$var$extendedDataParser","$23a4f6aded846ad8aacbf1f3eca76e14$var$regionParser","makeObjectPropertySetter","$23a4f6aded846ad8aacbf1f3eca76e14$var$readMultiGeometry","$23a4f6aded846ad8aacbf1f3eca76e14$var$readLineString","$23a4f6aded846ad8aacbf1f3eca76e14$var$readLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$readPoint","$23a4f6aded846ad8aacbf1f3eca76e14$var$readPolygon","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyle","node","objectStack","styleMapValue","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyleMapValue","placemarkObject","$1mHUI","assert","$4pjCM","readString","readBoolean","$23a4f6aded846ad8aacbf1f3eca76e14$var$readStyleURL","lineStrings","pushParseAndPop","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_MULTITRACK_GEOMETRY_PARSERS","$4LOxL","$23a4f6aded846ad8aacbf1f3eca76e14$var$readGxTrack","$23a4f6aded846ad8aacbf1f3eca76e14$var$NETWORK_LINK_PARSERS","parseNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINK_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readURI","$23a4f6aded846ad8aacbf1f3eca76e14$var$REGION_PARSERS","object","$23a4f6aded846ad8aacbf1f3eca76e14$var$LAT_LON_ALT_BOX_PARSERS","regionObject","parseFloat","$23a4f6aded846ad8aacbf1f3eca76e14$var$LOD_PARSERS","lodObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML_SERIALIZERS","makeChildAppender","features","context","pushSerializeAndPop","$23a4f6aded846ad8aacbf1f3eca76e14$var$DOCUMENT_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$DOCUMENT_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePlacemark","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_FILL_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$e46f11a75191a508","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_NO_IMAGE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_IMAGE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$5e32ef4fe86c9590","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_TEXT_STROKE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STROKE_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$886aac8f642d518","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_TEXT_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$4f723e646af0caaf","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STYLE","$23a4f6aded846ad8aacbf1f3eca76e14$export$2aa7b16944fbd366","$23a4f6aded846ad8aacbf1f3eca76e14$var$TEXTAREA","$23a4f6aded846ad8aacbf1f3eca76e14$var$DEFAULT_STYLE_ARRAY","$23a4f6aded846ad8aacbf1f3eca76e14$export$e0735583683f1e35","$23a4f6aded846ad8aacbf1f3eca76e14$var$defaultIconUrlFunction","href","$23a4f6aded846ad8aacbf1f3eca76e14$var$KML","KML","$2mZBT","anchor","anchorOrigin","$67wV0","BOTTOM_LEFT","anchorXUnits","anchorYUnits","crossOrigin","size","src","$2k3WA","width","$5w8pN","image","zIndex","dataProjection","$2vjin","get","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","crossOrigin_","iconUrlFunction_","iconUrlFunction","$23a4f6aded846ad8aacbf1f3eca76e14$var$__extends","readDocumentOrFolder_","parsersNS","makeArrayExtender","makeArrayPusher","readPlacemark_","readSharedStyle_","bind","readSharedStyleMap_","feature","$7JkHi","getAttribute","setId","geometry","$2rUWQ","transformGeometryWithOptions","setGeometry","styleFunction","style","styleUrl","sharedStyles","resolution","drawName","name","multiGeometryPoints","getGeometry","type","GEOMETRY_COLLECTION","getGeometriesArrayRecursive","filter","geometry1","type1","search","document","createElement","innerHTML","value","featureStyle","$23a4f6aded846ad8aacbf1f3eca76e14$var$findStyle","nameStyle","foundStyle","textOffset","imageStyle","getImage","imageSize","getImageSize","imageScale","textStyle","$23a4f6aded846ad8aacbf1f3eca76e14$var$createNameStyleFunction","$4eboh","concat","$23a4f6aded846ad8aacbf1f3eca76e14$var$createFeatureStyleFunction","setStyle","setProperties","styleUri","baseURI","window","location","URL","readFeatureFromNode","includes","namespaceURI","getReadOptions","readFeaturesFromNode","localName","firstElementChild","nextElementSibling","fs","readName","source","doc","readNameFromDocument","isDocument","readNameFromNode","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","name_1","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeFeaturesNode","adaptOptions","kml","createElementNS","xmlnsUri","setAttributeNS","XML_SCHEMA_INSTANCE_URI","properties","orderedKeys","values","makeSequence","OBJECT_PROPERTY_NODE_FACTORY","$6MnPI","styleValue","$23a4f6aded846ad8aacbf1f3eca76e14$var$readColor","s","getAllTextContent","m","exec","hexColor","parseInt","substr","$23a4f6aded846ad8aacbf1f3eca76e14$export$1744e74078e3fa10","replace","re","z","trim","$23a4f6aded846ad8aacbf1f3eca76e14$var$readScale","readDecimal","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_MAP_PARSERS","pairObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$PAIR_PARSERS","key","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_PARSERS","iconObject","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_PARSERS","origin","xunits","yunits","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$FLAT_LINEAR_RING_PARSERS","makeReplacer","$23a4f6aded846ad8aacbf1f3eca76e14$var$readFlatLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_TRACK_PARSERS","whens","when","Date","isNaN","gxTrackObject","min","$7oM0w","XYZM","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_FLAT_COORDINATES_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$readFlatCoordinatesFromNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTRUDE_AND_ALTITUDE_MODE_PARSERS","lineString","XYZ","$23a4f6aded846ad8aacbf1f3eca76e14$var$MULTI_GEOMETRY_PARSERS","multiGeometry","geometries","homogeneous","$23a4f6aded846ad8aacbf1f3eca76e14$var$setCommonGeometryProperties","LINE_STRING","POLYGON","$3f89ce735a32ce0bc16220a89ae67b2f$exports","$23a4f6aded846ad8aacbf1f3eca76e14$var$FLAT_LINEAR_RINGS_PARSERS","flatLinearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$INNER_BOUNDARY_IS_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_PARSERS","styleObject","IconObject","drawIcon","hotSpot","test","w","h","heading","toRadians","offsetOrigin","strokeStyle","fillStyle","outline","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","set","$23a4f6aded846ad8aacbf1f3eca76e14$var$DATA_PARSERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDED_DATA_PARSERS","featureObject","displayName","toString","$23a4f6aded846ad8aacbf1f3eca76e14$var$SCHEMA_DATA_PARSERS","data","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeColorTextNode","rgba","$6KuGy","asArray","abgr","hex","floor","writeStringTextNode","join","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDEDDATA_NODE_SERIALIZERS","pair","setAttribute","writeCDATASection","opt_nodeName","parentNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$DATA_NODE_FACTORY","makeSimpleNodeFactory","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_SERIALIZERS","writeDecimalTextNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$GX_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$ICON_STYLE_SERIALIZERS","icon","vec2","String","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeScaleTextNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$LABEL_STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STYLE_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_TYPE_TO_NODENAME","$23a4f6aded846ad8aacbf1f3eca76e14$var$GEOMETRY_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$POINT_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINE_STRING_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$LINEAR_RING_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLYGON_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$MULTI_GEOMETRY_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePrimitiveGeometry","$23a4f6aded846ad8aacbf1f3eca76e14$var$writePolygon","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeMultiGeometry","factory","forEach","MULTI_LINE_STRING","getLineStrings","$23a4f6aded846ad8aacbf1f3eca76e14$var$BOUNDARY_IS_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$writeBoundaryIs","linearRing","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_SERIALIZERS","namesAndValues","names","styles","pointStyles","getSrc","lineStyles","polyStyles","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$STYLE_SERIALIZERS","writeBooleanTextNode","$23a4f6aded846ad8aacbf1f3eca76e14$var$PLACEMARK_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$EXTENDEDDATA_NODE_FACTORY","getId","getProperties","getGeometryName","sort","v","getStyleFunction","styleArray","getGeometryFunction","$23a4f6aded846ad8aacbf1f3eca76e14$var$PRIMITIVE_GEOMETRY_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$PRIMITIVE_GEOMETRY_SERIALIZERS","dimension","d","getStride","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_SEQUENCE","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLYGON_SERIALIZERS","$23a4f6aded846ad8aacbf1f3eca76e14$var$INNER_BOUNDARY_NODE_FACTORY","$23a4f6aded846ad8aacbf1f3eca76e14$var$OUTER_BOUNDARY_NODE_FACTORY","linearRings","getLinearRings","outerRing","shift","$23a4f6aded846ad8aacbf1f3eca76e14$var$POLY_STYLE_SERIALIZERS","round","getSize","iconImageSize","iconProperties","getAnchor","origin_1","getOrigin","getColor","Number","getWidth","$23a4f6aded846ad8aacbf1f3eca76e14$export$9099ad97b570f7c","$634f916bc30b7d6650877f3f4b6a8b3a$var$bundleURL","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBaseURL","url","$634f916bc30b7d6650877f3f4b6a8b3a$export$da289beea9c5b10d","err","matches","stack","match","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURL","resolve","$824bc590bf0a3702ac7bd27152cb0639$var$dirname","_filePath","filePath","slashIndex","lastIndexOf","$824bc590bf0a3702ac7bd27152cb0639$var$relative","from","to","fromParts","split","divergeIndex","toParts","parts","apply","module","exports","fromId","toId","$824bc590bf0a3702ac7bd27152cb0639$require$resolve","_dirname","_relative","$a6fae0d1f95d1013d47a2666e4cc73f5$exports","getBundleURL","$8b0a2675c277baedbee1394c1e452c41$exports","$5e53b1d105b5ca139e315a45c8d64a63$var$map","$4BFFB","target","view","$N1rY5","center","projection","zoom","$5e53b1d105b5ca139e315a45c8d64a63$var$heatmapLayer","$AHHSL","Heatmap","$3CnQS","$parcel$interopDefault","format","$23a4f6aded846ad8aacbf1f3eca76e14$exports","addLayer","$5e53b1d105b5ca139e315a45c8d64a63$var$svgContainer","$5e53b1d105b5ca139e315a45c8d64a63$var$xhr","XMLHttpRequest","console","log","open","addEventListener","svg","responseXML","documentElement","ownerDocument","importNode","appendChild","send","$5e53b1d105b5ca139e315a45c8d64a63$var$svgResolution","$5e53b1d105b5ca139e315a45c8d64a63$var$width","height","$5e53b1d105b5ca139e315a45c8d64a63$var$height","transformOrigin","position","className","$5e53b1d105b5ca139e315a45c8d64a63$var$svgLayer","Layer","render","frameState","viewState","cssTransform","$5ljS4","composeCssTransform","transform","opacity","getOpacity"],"version":3,"file":"mixed-renderers.04944451.js.map"}